导出版本: PyTorch 2.8.0+cpu

=== ultra_simple_add_model_v2.8.0.pt ===
描述: 最简单的加法模型，将两个输入相加
输入格式: 一维FloatTensor，包含两个元素，形状为(2,)
输出格式: 单个浮点数
示例: input = torch::tensor({2.0, 3.0}); output = model.forward(input).toTensor();

=== two_input_add_model_v2.8.0.pt ===
描述: 接收两个单独输入的加法模型
输入格式: 两个一维FloatTensor，每个包含一个元素
输出格式: 单个浮点数
示例: auto a = torch::tensor({2.0}); auto b = torch::tensor({3.0}); output = model.forward({a, b}).toTensor();

=== complex_model_v2.8.0.pt ===
描述: 包含两层线性层和ReLU激活函数的稍微复杂模型
输入格式: 一维FloatTensor，包含两个元素，形状为(2,)
输出格式: 单个浮点数
示例: input = torch::tensor({2.0, 3.0}); output = model.forward(input).toTensor();

C++项目使用建议:
1. 确保使用的LibTorch版本与PyTorch {torch.__version__}兼容
2. 加载模型时，如果遇到兼容性问题，可以尝试不同的模型
3. 最简单的模型最有可能成功加载
