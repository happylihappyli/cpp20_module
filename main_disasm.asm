; Disassembly-based converted assembly from EXE
; Generated by reverse engineering the machine code

.model flat, stdcall
.stack 4096

extern GetStdHandle@4: proc
extern WriteConsoleA@20: proc
extern ExitProcess@4: proc
extern lstrlenA@4: proc

STD_OUTPUT_HANDLE equ -11

.data
    str_14001e330 db " === C++20 Test v1.1 ==== ", 0
    str_14001e350 db "Basic math operation test:", 0
    str_14001e370 db "10 + 5 = ", 0
    str_14001e380 db "10 - 5 = ", 0
    str_14001e390 db "10 * 5 = ", 0
    str_14001e3a0 db "10 / 5 = ", 0
    str_14001e3b0 db "Caught exception: ", 0
    str_14001e3c8 db "Advanced math function test:", 0
    str_14001e3e8 db "5! = ", 0
    str_14001e3f0 db "Caught exception: ", 0
    str_14001e408 db " is prime", 0
    str_14001e418 db " is not prime", 0
    str_14001e428 db ">> Program execution completed!", 0
    str_14001e448 db "Program exception: ", 0
    str_14001e478 db "Unknown exception", 0
    str_14001e490 db "string too long", 0
    str_14001e4a0 db "invalid string position", 0
    str_14001e4e8 db "bad array new length", 0
    str_14001e50e db "$@Division by zero", 0
    str_14001e528 db "Factorial argument must be non-negative", 0
    str_14001e598 db "bad allocation", 0
    str_14001e788 db "bad exception", 0
    str_14001eeb0 db "__based(", 0
    str_14001eec0 db "__cdecl", 0
    str_14001eec8 db "__pascal", 0
    str_14001eed8 db "__stdcall", 0
    str_14001eee8 db "__thiscall", 0
    str_14001eef8 db "__fastcall", 0
    str_14001ef08 db "__vectorcall", 0
    str_14001ef18 db "__clrcall", 0
    str_14001ef24 db "__eabi", 0
    str_14001ef30 db "__swift_1", 0
    str_14001ef40 db "__swift_2", 0
    str_14001ef50 db "__swift_3", 0
    str_14001ef60 db "__ptr64", 0
    str_14001ef68 db "__restrict", 0
    str_14001ef78 db "__unaligned", 0
    str_14001ef88 db "restrict(", 0
    str_14001ef94 db " new", 0
    str_14001efa0 db " delete", 0
    str_14001efc8 db "operator", 0
    str_14001f050 db "`vftable'", 0
    str_14001f060 db "`vbtable'", 0
    str_14001f070 db "`vcall'", 0
    str_14001f078 db "`typeof'", 0
    str_14001f088 db "`local static guard'", 0
    str_14001f0a0 db "`string'", 0
    str_14001f0b0 db "`vbase destructor'", 0
    str_14001f0c8 db "`vector deleting destructor'", 0
    str_14001f0e8 db "`default constructor closure'", 0
    str_14001f108 db "`scalar deleting destructor'", 0
    str_14001f128 db "`vector constructor iterator'", 0
    str_14001f148 db "`vector destructor iterator'", 0
    str_14001f168 db "`vector vbase constructor iterator'", 0
    str_14001f190 db "`virtual displacement map'", 0
    str_14001f1b0 db "`eh vector constructor iterator'", 0
    str_14001f1d8 db "`eh vector destructor iterator'", 0
    str_14001f1f8 db "`eh vector vbase constructor iterator'", 0
    str_14001f220 db "`copy constructor closure'", 0
    str_14001f240 db "`udt returning'", 0
    str_14001f254 db "`RTTI", 0
    str_14001f260 db "`local vftable'", 0
    str_14001f270 db "`local vftable constructor closure'", 0
    str_14001f294 db " new[]", 0
    str_14001f2a0 db " delete[]", 0
    str_14001f2b0 db "`omni callsig'", 0
    str_14001f2c0 db "`placement delete closure'", 0
    str_14001f2e0 db "`placement delete[] closure'", 0
    str_14001f300 db "`managed vector constructor iterator'", 0
    str_14001f328 db "`managed vector destructor iterator'", 0
    str_14001f350 db "`eh vector copy constructor iterator'", 0
    str_14001f378 db "`eh vector vbase copy constructor iterator'", 0
    str_14001f3a8 db "`dynamic initializer for '", 0
    str_14001f3c8 db "`dynamic atexit destructor for '", 0
    str_14001f3f0 db "`vector copy constructor iterator'", 0
    str_14001f418 db "`vector vbase copy constructor iterator'", 0
    str_14001f448 db "`managed vector copy constructor iterator'", 0
    str_14001f478 db "`local static thread guard'", 0
    str_14001f498 db "operator "" ", 0
    str_14001f4a8 db "operator co_await", 0
    str_14001f4c0 db "operator<=>", 0
    str_14001f4d0 db " Type Descriptor'", 0
    str_14001f4e8 db " Base Class Descriptor at (", 0
    str_14001f508 db " Base Class Array'", 0
    str_14001f520 db " Class Hierarchy Descriptor'", 0
    str_14001f540 db " Complete Object Locator'", 0
    str_14001f560 db "`anonymous namespace'", 0
    str_14001f640 db "FlsAlloc", 0
    str_14001f658 db "FlsFree", 0
    str_14001f668 db "FlsGetValue", 0
    str_14001f680 db "FlsSetValue", 0
    str_14001f698 db "InitializeCriticalSectionEx", 0
    str_14001f8d0 db "(null)", 0
    str_14001fa48 db "CorExitProcess", 0
    str_14001fe5c db "Sunday", 0
    str_14001fe64 db "Monday", 0
    str_14001fe70 db "Tuesday", 0
    str_14001fe78 db "Wednesday", 0
    str_14001fe88 db "Thursday", 0
    str_14001fe94 db "Friday", 0
    str_14001fea0 db "Saturday", 0
    str_14001fee0 db "January", 0
    str_14001fee8 db "February", 0
    str_14001fef4 db "March", 0
    str_14001fefc db "April", 0
    str_14001ff04 db "June", 0
    str_14001ff0c db "July", 0
    str_14001ff14 db "August", 0
    str_14001ff20 db "September", 0
    str_14001ff30 db "October", 0
    str_14001ff38 db "November", 0
    str_14001ff48 db "December", 0
    str_14001ff60 db "MM/dd/yy", 0
    str_14001ff70 db "dddd, MMMM dd, yyyy", 0
    str_14001ff88 db "HH:mm:ss", 0
    str_1400208d0 db "AreFileApisANSI", 0
    str_1400208e8 db "CompareStringEx", 0
    str_140020908 db "LCMapStringEx", 0
    str_140020920 db "LocaleNameToLCID", 0
    str_140020938 db "AppPolicyGetProcessTerminationMethod", 0
    str_1400209f0 db "NAN(SNAN)", 0
    str_140020a00 db "nan(snan)", 0
    str_140020a10 db "NAN(IND)", 0
    str_140020a20 db "nan(ind)", 0
    str_140020a2c db "e+000", 0
    str_140020e40 db " !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 0
    str_140020fc0 db " !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~", 0
    str_1400244f0 db "d8L2", 0
    str_14002451c db "[aOni*{", 0
    str_140024546 db "@2&@", 0
    str_14002457a db ""RP(", 0
    str_1400245f3 db "eLK(w", 0
    str_140024660 db "FEMh", 0
    str_14002466e db "h0'D", 0
    str_1400246c0 db "owM&", 0
    str_1400246fd db "~ $s%r", 0
    str_14002470c db "@b;zO]", 0
    str_14002474b db "$qE}", 0
    str_140024789 db ";*xh", 0
    str_1400247f3 db "["93", 0
    str_140024824 db "iu+-,", 0
    str_14002488a db "\\lo}", 0
    str_140024895 db "obwQ4", 0
    str_1400248af db "&Sgw", 0
    str_140024947 db "?nz(", 0
    str_1400249fa db "=87M", 0
    str_140024ae7 db "v2!L.2", 0
    str_140024b69 db "X/4B", 0
    str_140024c07 db "k=yI", 0
    str_140024c6a db "^<V7w", 0
    str_140024cbd db "W&|.", 0
    str_140024da0 db "1#INF", 0
    str_140024da8 db "1#QNAN", 0
    str_140024db0 db "1#SNAN", 0
    str_140024db8 db "1#IND", 0
    str_140024f00 db "UUUUUU", 0
    str_140024f30 db "UUUUUU", 0
    str_140024fb1 db "TUUUU", 0
    str_140024fd4 db "#Ib?", 0
    str_14002584f db "=imb;D", 0
    str_140025857 db "=W>6", 0
    str_14002593f db ">[^j", 0
    str_140025947 db ">Kb|", 0
    str_140025986 db "+>De", 0
    str_1400259f9 db "11Y@", 0
    str_1400259fe db "/>58d%", 0
    str_140025a14 db "MJ$>", 0
    str_140025a2f db ">cQ6", 0
    str_140025a36 db "!>6'Y", 0
    str_140025a47 db ">jtm}S", 0
    str_140025a7f db ">77:", 0
    str_140025a9e db ")>6{1n", 0
    str_140025aac db "Vr.>T", 0
    str_140025abc db "+f)>0'", 0
    str_140025b0b db "Lj[;>", 0
    str_140025b2e db "3>fvw", 0
    str_140025b3c db ";H9>&X", 0
    str_140025b62 db "*StO9>T", 0
    str_140025b8e db ".>Tu", 0
    str_140025b94 db ".(!>", 0
    str_140025bac db "n03>Pu", 0
    str_140025c2d db "S9>H", 0
    str_140025c74 db "x.&>", 0
    str_140025c82 db "K~Je#>!", 0
    str_140025c94 db "-/!>", 0
    str_140025ca6 db "(>aI", 0
    str_140025caf db "=cQ6", 0
    str_140025cbb db "+M<7>", 0
    str_140025cce db "*>f[", 0
    str_140025cdc db "o ->", 0
    str_140025cfc db "l(>>", 0
    str_140025d05 db "c(>\\,", 0
    str_140025d14 db "ET5>", 0
    str_140025d1e db ";>9l", 0
    str_140025d34 db "mG4>", 0
    str_140025d5b db "bp(=>?g", 0
    str_140025d6c db "36,>", 0
    str_140025dbd db "37>k", 0
    str_140025dec db "~X3>", 0
    str_140025dfe db "6>J`", 0
    str_140025e06 db "?>!T", 0
    str_140025e1c db "BC?>6t9^", 0
    str_140025e3d db "8'>0", 0
    str_140025e61 db "'._M", 0
    str_140025e6f db "=4<,", 0
    str_140025e75 db "BF>^G", 0
    str_140025e85 db "K&>.yC", 0
    str_140025e94 db " 'L>[", 0
    str_140025e9c db ".xJ>Hf", 0
    str_140025ea3 db "y\\PD>!", 0
    str_140025eb2 db "|b=})>", 0
    str_140025ec3 db "c [1>H'", 0
    str_140025ed4 db "dL?>", 0
    str_140025f02 db "uzKs@>", 0
    str_140025f1e db "3>N;kU", 0
    str_140025f4d db "kE>fvw", 0
    str_140025f65 db "eF>t", 0
    str_140025f76 db "L>ev", 0
    str_140025f8e db "A>pP&", 0
    str_140025f94 db "V6E>`"(5", 0
    str_140025fdd db ",=>B", 0
    str_140025fe6 db "">}t", 0
    str_14002600c db "0iN>/", 0
    str_14002601c db "+h->|", 0
    str_14002602e db "@>%>b", 0
    str_14002606f db "?qBJ", 0
    str_1400261b2 db "l@6 ", 0
    str_140026227 db "?-hk", 0
    str_1400262f9 db "OZQ%", 0
    str_1400263e9 db "-)4d", 0
    str_14002642f db "?:kP<", 0
    str_14002643f db "?UUUUUU", 0
    str_1400264c7 db "?f`Y4", 0
    str_1400264f7 db "?QY^&", 0
    str_140026537 db "?U)#", 0
    str_1400266ef db "?ysB", 0
    str_140026717 db "?$G4", 0
    str_14002672f db "?30]", 0
    str_140026827 db "?7zQ6$", 0
    str_140026850 db "log10", 0
    str_1400272fc db ".text$mn", 0
    str_140027310 db ".text$mn$00", 0
    str_140027324 db ".text$mn$21", 0
    str_140027338 db ".text$x", 0
    str_140027348 db ".idata$5", 0
    str_14002735c db ".00cfg", 0
    str_14002736c db ".CRT$XCA", 0
    str_140027380 db ".CRT$XCAA", 0
    str_140027394 db ".CRT$XCZ", 0
    str_1400273a8 db ".CRT$XIA", 0
    str_1400273bc db ".CRT$XIAA", 0
    str_1400273d0 db ".CRT$XIAC", 0
    str_1400273e4 db ".CRT$XIC", 0
    str_1400273f8 db ".CRT$XIZ", 0
    str_14002740c db ".CRT$XPA", 0
    str_140027420 db ".CRT$XPX", 0
    str_140027434 db ".CRT$XPXA", 0
    str_140027448 db ".CRT$XPZ", 0
    str_14002745c db ".CRT$XTA", 0
    str_140027470 db ".CRT$XTZ", 0
    str_140027484 db ".rdata", 0
    str_140027494 db ".rdata$00", 0
    str_1400274a8 db ".rdata$r", 0
    str_1400274bc db ".rdata$voltmd", 0
    str_1400274d4 db ".rdata$zzzdbg", 0
    str_1400274ec db ".rtc$IAA", 0
    str_140027500 db ".rtc$IZZ", 0
    str_140027514 db ".rtc$TAA", 0
    str_140027528 db ".rtc$TZZ", 0
    str_14002753c db ".xdata", 0
    str_14002754c db ".xdata$x", 0
    str_140027560 db ".idata$2", 0
    str_140027574 db ".idata$3", 0
    str_140027588 db ".idata$4", 0
    str_14002759c db ".idata$6", 0
    str_1400275b0 db ".data", 0
    str_1400275c0 db ".data$r", 0
    str_1400275d0 db ".data$rs", 0
    str_1400275e4 db ".bss", 0
    str_1400275f4 db ".pdata", 0
    str_140027604 db "_RDATA", 0
    str_1400291ca db "SetConsoleOutputCP", 0
    str_1400291e0 db "RtlCaptureContext", 0
    str_1400291f4 db "RtlLookupFunctionEntry", 0
    str_14002920e db "RtlVirtualUnwind", 0
    str_140029222 db "UnhandledExceptionFilter", 0
    str_14002923e db "SetUnhandledExceptionFilter", 0
    str_14002925c db "GetCurrentProcess", 0
    str_140029270 db "TerminateProcess", 0
    str_140029284 db "IsProcessorFeaturePresent", 0
    str_1400292a0 db "QueryPerformanceCounter", 0
    str_1400292ba db "GetCurrentProcessId", 0
    str_1400292d0 db "GetCurrentThreadId", 0
    str_1400292e6 db "GetSystemTimeAsFileTime", 0
    str_140029300 db "InitializeSListHead", 0
    str_140029316 db "IsDebuggerPresent", 0
    str_14002932a db "GetStartupInfoW", 0
    str_14002933c db "GetModuleHandleW", 0
    str_14002934e db "KERNEL32.dll", 0
    str_14002935e db "RtlPcToFileHeader", 0
    str_140029372 db "RaiseException", 0
    str_140029384 db "RtlUnwindEx", 0
    str_140029392 db "GetLastError", 0
    str_1400293a2 db "SetLastError", 0
    str_1400293b2 db "EncodePointer", 0
    str_1400293c2 db "EnterCriticalSection", 0
    str_1400293da db "LeaveCriticalSection", 0
    str_1400293f2 db "DeleteCriticalSection", 0
    str_14002940a db "InitializeCriticalSectionAndSpinCount", 0
    str_140029432 db "TlsAlloc", 0
    str_14002943e db "TlsGetValue", 0
    str_14002944c db "TlsSetValue", 0
    str_14002945a db "TlsFree", 0
    str_140029464 db "FreeLibrary", 0
    str_140029472 db "GetProcAddress", 0
    str_140029484 db "LoadLibraryExW", 0
    str_140029496 db "GetStdHandle", 0
    str_1400294a6 db "WriteFile", 0
    str_1400294b2 db "GetModuleFileNameW", 0
    str_1400294c8 db "ExitProcess", 0
    str_1400294d6 db "GetModuleHandleExW", 0
    str_1400294ec db "GetCommandLineA", 0
    str_1400294fe db "GetCommandLineW", 0
    str_140029510 db "HeapAlloc", 0
    str_14002951c db "HeapFree", 0
    str_140029528 db "FlsAlloc", 0
    str_140029534 db "FlsGetValue", 0
    str_140029542 db "FlsSetValue", 0
    str_140029550 db "FlsFree", 0
    str_14002955a db "CompareStringW", 0
    str_14002956c db "LCMapStringW", 0
    str_14002957c db "GetFileType", 0
    str_14002958a db "FindClose", 0
    str_140029596 db "FindFirstFileExW", 0
    str_1400295aa db "FindNextFileW", 0
    str_1400295ba db "IsValidCodePage", 0
    str_1400295cc db "GetACP", 0
    str_1400295d6 db "GetOEMCP", 0
    str_1400295e2 db "GetCPInfo", 0
    str_1400295ee db "MultiByteToWideChar", 0
    str_140029604 db "WideCharToMultiByte", 0
    str_14002961a db "GetEnvironmentStringsW", 0
    str_140029634 db "FreeEnvironmentStringsW", 0
    str_14002964e db "SetEnvironmentVariableW", 0
    str_140029668 db "SetStdHandle", 0
    str_140029678 db "GetStringTypeW", 0
    str_14002968a db "GetProcessHeap", 0
    str_14002969c db "FlushFileBuffers", 0
    str_1400296b0 db "GetConsoleOutputCP", 0
    str_1400296c6 db "GetConsoleMode", 0
    str_1400296d8 db "GetFileSizeEx", 0
    str_1400296e8 db "SetFilePointerEx", 0
    str_1400296fc db "HeapSize", 0
    str_140029708 db "HeapReAlloc", 0
    str_140029716 db "CloseHandle", 0
    str_140029724 db "CreateFileW", 0
    str_140029732 db "WriteConsoleW", 0
    str_14002a3ea db "                          ", 0
    str_14002a4ca db "abcdefghijklmnopqrstuvwxyz", 0
    str_14002a4ea db "ABCDEFGHIJKLMNOPQRSTUVWXYZ", 0
    str_14002a602 db "                          ", 0
    str_14002a6f1 db "abcdefghijklmnopqrstuvwxyz", 0
    str_14002a711 db "ABCDEFGHIJKLMNOPQRSTUVWXYZ", 0
    str_14002aa90 db ".?AVMyException@funny@@", 0
    str_14002aab8 db ".?AVbad_array_new_length@std@@", 0
    str_14002aae8 db ".?AVbad_alloc@std@@", 0
    str_14002ab10 db ".?AVexception@std@@", 0
    str_14002ab38 db ".?AVinvalid_argument@std@@", 0
    str_14002ab68 db ".?AVlogic_error@std@@", 0
    str_14002ab90 db ".?AVlength_error@std@@", 0
    str_14002abb8 db ".?AVout_of_range@std@@", 0
    str_14002abe0 db ".?AVbad_exception@std@@", 0
    str_14002ac08 db ".?AVtype_info@@", 0
    newline db 13, 10, 0
    bytes_written dd ?

.code
print_string proc
    push ebp
    mov ebp, esp
    push ebx
    push ecx
    push edx
    
    ; Get stdout handle
    push STD_OUTPUT_HANDLE
    call GetStdHandle@4
    mov ebx, eax
    
    ; Get string length
    push dword ptr [ebp+8]
    call lstrlenA@4
    mov ecx, eax
    
    ; Write string
    push 0
    push offset bytes_written
    push ecx
    push dword ptr [ebp+8]
    push ebx
    call WriteConsoleA@20
    
    ; Write newline
    push 0
    push offset bytes_written
    push 2
    push offset newline
    push ebx
    call WriteConsoleA@20
    
    pop edx
    pop ecx
    pop ebx
    pop ebp
    ret 4
print_string endp

start:
    ; Disassembled machine code from original EXE
    sub rsp, 0x28
    call 0x1400052a8
    add rsp, 0x28
    jmp 0x140004bfc
    int3 
    int3 
    sub rsp, 0x48
    lea rcx, [rsp + 0x20]
    call 0x1400047ac
    lea rdx, [rip + 0x24037]
    lea rcx, [rsp + 0x20]
    call 0x1400058d0
    int3 
    sub rsp, 0x48
    lea rcx, [rsp + 0x20]
    call 0x140002190
    lea rdx, [rip + 0x23ecf]
    lea rcx, [rsp + 0x20]
    call 0x1400058d0
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    xor ecx, ecx
    call qword ptr [rip + 0x1924b]
    mov rcx, rbx
    call qword ptr [rip + 0x1923a]
    call qword ptr [rip + 0x19244]
    mov rcx, rax
    mov edx, 0xc0000409
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x19238]
    mov qword ptr [rsp + 8], rcx
    sub rsp, 0x38
    mov ecx, 0x17
    call qword ptr [rip + 0x1922c]
    test eax, eax
    je 0x140004e1f
    mov ecx, 2
    int 0x29
    lea rcx, [rip + 0x25eaa]
    call 0x140004ff4
    mov rax, qword ptr [rsp + 0x38]
    mov qword ptr [rip + 0x25f91], rax
    lea rax, [rsp + 0x38]
    add rax, 8
    mov qword ptr [rip + 0x25f21], rax
    mov rax, qword ptr [rip + 0x25f7a]
    mov qword ptr [rip + 0x25deb], rax
    mov rax, qword ptr [rsp + 0x40]
    mov qword ptr [rip + 0x25eef], rax
    mov dword ptr [rip + 0x25dc5], 0xc0000409
    mov dword ptr [rip + 0x25dbf], 1
    mov dword ptr [rip + 0x25dc9], 1
    mov eax, 8
    imul rax, rax, 0
    lea rcx, [rip + 0x25dc1]
    mov qword ptr [rcx + rax], 2
    mov eax, 8
    imul rax, rax, 0
    mov rcx, qword ptr [rip + 0x25159]
    mov qword ptr [rsp + rax + 0x20], rcx
    mov eax, 8
    imul rax, rax, 1
    mov rcx, qword ptr [rip + 0x25184]
    mov qword ptr [rsp + rax + 0x20], rcx
    lea rcx, [rip + 0x19720]
    call 0x140004dcc
    add rsp, 0x38
    ret
    int3 
    int3 
    sub rsp, 0x28
    mov ecx, 8
    call 0x140004ee8
    add rsp, 0x28
    ret
    int3 
    mov dword ptr [rsp + 8], ecx
    sub rsp, 0x28
    mov ecx, 0x17
    call qword ptr [rip + 0x19145]
    test eax, eax
    je 0x140004f07
    mov eax, dword ptr [rsp + 0x30]
    mov ecx, eax
    int 0x29
    lea rcx, [rip + 0x25dc2]
    call 0x140004f84
    mov rax, qword ptr [rsp + 0x28]
    mov qword ptr [rip + 0x25ea9], rax
    lea rax, [rsp + 0x28]
    add rax, 8
    mov qword ptr [rip + 0x25e39], rax
    mov rax, qword ptr [rip + 0x25e92]
    mov qword ptr [rip + 0x25d03], rax
    mov dword ptr [rip + 0x25ce9], 0xc0000409
    mov dword ptr [rip + 0x25ce3], 1
    mov dword ptr [rip + 0x25ced], 1
    mov eax, 8
    imul rax, rax, 0
    lea rcx, [rip + 0x25ce5]
    mov edx, dword ptr [rsp + 0x30]
    mov qword ptr [rcx + rax], rdx
    lea rcx, [rip + 0x1966e]
    call 0x140004dcc
    add rsp, 0x28
    ret
    mov qword ptr [rsp + 0x20], rbx
    push rdi
    sub rsp, 0x40
    mov rbx, rcx
    call qword ptr [rip + 0x19071]
    mov rdi, qword ptr [rbx + 0xf8]
    lea rdx, [rsp + 0x50]
    mov rcx, rdi
    xor r8d, r8d
    call qword ptr [rip + 0x19061]
    test rax, rax
    je 0x140004fe6
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rsp + 0x58]
    mov rdx, qword ptr [rsp + 0x50]
    mov r9, rax
    mov qword ptr [rsp + 0x30], rcx
    mov r8, rdi
    lea rcx, [rsp + 0x60]
    mov qword ptr [rsp + 0x28], rcx
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rbx
    call qword ptr [rip + 0x19032]
    mov rbx, qword ptr [rsp + 0x68]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    int3 
    int3 
    push rbx
    push rsi
    push rdi
    sub rsp, 0x40
    mov rbx, rcx
    call qword ptr [rip + 0x19003]
    mov rsi, qword ptr [rbx + 0xf8]
    xor edi, edi
    xor r8d, r8d
    lea rdx, [rsp + 0x60]
    mov rcx, rsi
    call qword ptr [rip + 0x18ff1]
    test rax, rax
    je 0x14000505d
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rsp + 0x68]
    mov rdx, qword ptr [rsp + 0x60]
    mov r9, rax
    mov qword ptr [rsp + 0x30], rcx
    mov r8, rsi
    lea rcx, [rsp + 0x70]
    mov qword ptr [rsp + 0x28], rcx
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rbx
    call qword ptr [rip + 0x18fc2]
    inc edi
    cmp edi, 2
    jl 0x14000500e
    add rsp, 0x40
    pop rdi
    pop rsi
    pop rbx
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call 0x1400057fc
    test eax, eax
    je 0x140005096
    mov rax, qword ptr gs:[0x30]
    mov rcx, qword ptr [rax + 8]
    jmp 0x140005089
    cmp rcx, rax
    je 0x14000509d
    xor eax, eax
    lock cmpxchg qword ptr [rip + 0x26114], rcx
    jne 0x140005084
    xor al, al
    add rsp, 0x28
    ret
    mov al, 1
    jmp 0x140005098
    int3 
    int3 
    int3 
    sub rsp, 0x28
    test ecx, ecx
    jne 0x1400050b3
    mov byte ptr [rip + 0x260fd], 1
    call 0x140005650
    call 0x140006848
    test al, al
    jne 0x1400050c5
    xor al, al
    jmp 0x1400050d9
    call 0x14000ff68
    test al, al
    jne 0x1400050d7
    xor ecx, ecx
    call 0x140006870
    jmp 0x1400050c1
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    cmp byte ptr [rip + 0x260c4], 0
    mov ebx, ecx
    jne 0x140005158
    cmp ecx, 1
    ja 0x140005160
    call 0x1400057fc
    test eax, eax
    je 0x140005127
    test ebx, ebx
    jne 0x140005127
    lea rcx, [rip + 0x260ae]
    call 0x14000fdcc
    test eax, eax
    jne 0x140005123
    lea rcx, [rip + 0x260b6]
    call 0x14000fdcc
    test eax, eax
    je 0x140005151
    xor al, al
    jmp 0x14000515a
    movdqa xmm0, xmmword ptr [rip + 0x194d1]
    or rax, 0xffffffffffffffff
    movdqu xmmword ptr [rip + 0x2607d], xmm0
    mov qword ptr [rip + 0x26086], rax
    movdqu xmmword ptr [rip + 0x26086], xmm0
    mov qword ptr [rip + 0x2608f], rax
    mov byte ptr [rip + 0x26059], 1
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    mov ecx, 5
    call 0x1400053c8
    int3 
    int3 
    sub rsp, 0x18
    mov r8, rcx
    mov eax, 0x5a4d
    cmp word ptr [rip - 0x517f], ax
    jne 0x1400051f9
    movsxd rcx, dword ptr [rip - 0x514c]
    lea rdx, [rip - 0x518f]
    add rcx, rdx
    cmp dword ptr [rcx], 0x4550
    jne 0x1400051f9
    mov eax, 0x20b
    cmp word ptr [rcx + 0x18], ax
    jne 0x1400051f9
    sub r8, rdx
    movzx edx, word ptr [rcx + 0x14]
    add rdx, 0x18
    add rdx, rcx
    movzx eax, word ptr [rcx + 6]
    lea rcx, [rax + rax*4]
    lea r9, [rdx + rcx*8]
    mov qword ptr [rsp], rdx
    cmp rdx, r9
    je 0x1400051e0
    mov ecx, dword ptr [rdx + 0xc]
    cmp r8, rcx
    jb 0x1400051da
    mov eax, dword ptr [rdx + 8]
    add eax, ecx
    cmp r8, rax
    jb 0x1400051e2
    add rdx, 0x28
    jmp 0x1400051bf
    xor edx, edx
    test rdx, rdx
    jne 0x1400051eb
    xor al, al
    jmp 0x1400051ff
    cmp dword ptr [rdx + 0x24], 0
    jge 0x1400051f5
    xor al, al
    jmp 0x1400051ff
    mov al, 1
    jmp 0x1400051ff
    xor al, al
    jmp 0x1400051ff
    xor al, al
    add rsp, 0x18
    ret
    push rbx
    sub rsp, 0x20
    mov bl, cl
    call 0x1400057fc
    xor edx, edx
    test eax, eax
    je 0x140005222
    test bl, bl
    jne 0x140005222
    xchg qword ptr [rip + 0x25f86], rdx
    add rsp, 0x20
    pop rbx
    ret
    push rbx
    sub rsp, 0x20
    cmp byte ptr [rip + 0x25f7b], 0
    mov bl, cl
    je 0x14000523d
    test dl, dl
    jne 0x140005249
    call 0x14000ff7c
    mov cl, bl
    call 0x140006870
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    cmp qword ptr [rip + 0x25f56], -1
    mov rbx, rcx
    jne 0x14000526e
    call 0x14000fd78
    jmp 0x14000527d
    mov rdx, rbx
    lea rcx, [rip + 0x25f40]
    call 0x14000fdf4
    xor edx, edx
    test eax, eax
    cmove rdx, rbx
    mov rax, rdx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x140005254
    neg rax
    sbb eax, eax
    neg eax
    dec eax
    add rsp, 0x28
    ret
    int3 
    mov qword ptr [rsp + 0x18], rbx
    push rbp
    mov rbp, rsp
    sub rsp, 0x30
    mov rax, qword ptr [rip + 0x24d44]
    movabs rbx, 0x2b992ddfa232
    cmp rax, rbx
    jne 0x14000533f
    and qword ptr [rbp + 0x10], 0
    lea rcx, [rbp + 0x10]
    call qword ptr [rip + 0x18d86]
    mov rax, qword ptr [rbp + 0x10]
    mov qword ptr [rbp - 0x10], rax
    call qword ptr [rip + 0x18d70]
    mov eax, eax
    xor qword ptr [rbp - 0x10], rax
    call qword ptr [rip + 0x18d5c]
    mov eax, eax
    lea rcx, [rbp + 0x18]
    xor qword ptr [rbp - 0x10], rax
    call qword ptr [rip + 0x18d44]
    mov eax, dword ptr [rbp + 0x18]
    lea rcx, [rbp - 0x10]
    shl rax, 0x20
    xor rax, qword ptr [rbp + 0x18]
    xor rax, qword ptr [rbp - 0x10]
    xor rax, rcx
    movabs rcx, 0xffffffffffff
    and rax, rcx
    movabs rcx, 0x2b992ddfa233
    cmp rax, rbx
    cmove rax, rcx
    mov qword ptr [rip + 0x24cc1], rax
    mov rbx, qword ptr [rsp + 0x50]
    not rax
    mov qword ptr [rip + 0x24cf2], rax
    add rsp, 0x30
    pop rbp
    ret
    xor eax, eax
    ret
    int3 
    mov eax, 1
    ret
    int3 
    int3 
    mov eax, 0x4000
    ret
    int3 
    int3 
    lea rcx, [rip + 0x25e81]
    jmp qword ptr [rip + 0x18cf2]
    int3 
    int3 
    mov al, 1
    ret
    int3 
    ret
    int3 
    lea rax, [rip + 0x25e79]
    ret
    sub rsp, 0x28
    call 0x140004550
    or qword ptr [rax], 0x24
    call 0x140005380
    or qword ptr [rax], 2
    add rsp, 0x28
    ret
    int3 
    xor eax, eax
    cmp dword ptr [rip + 0x24ca4], eax
    sete al
    ret
    lea rax, [rip + 0x26a59]
    ret
    lea rax, [rip + 0x26a49]
    ret
    and dword ptr [rip + 0x25e41], 0
    ret
    mov qword ptr [rsp + 8], rbx
    push rbp
    lea rbp, [rsp - 0x4c0]
    sub rsp, 0x5c0
    mov ebx, ecx
    mov ecx, 0x17
    call qword ptr [rip + 0x18c56]
    test eax, eax
    je 0x1400053f2
    mov ecx, ebx
    int 0x29
    mov ecx, 3
    call 0x1400053c0
    xor edx, edx
    lea rcx, [rbp - 0x10]
    mov r8d, 0x4d0
    call 0x14001cd80
    lea rcx, [rbp - 0x10]
    call qword ptr [rip + 0x18bf1]
    mov rbx, qword ptr [rbp + 0xe8]
    lea rdx, [rbp + 0x4d8]
    mov rcx, rbx
    xor r8d, r8d
    call qword ptr [rip + 0x18bdf]
    test rax, rax
    je 0x140005472
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rbp + 0x4e0]
    mov rdx, qword ptr [rbp + 0x4d8]
    mov r9, rax
    mov qword ptr [rsp + 0x30], rcx
    mov r8, rbx
    lea rcx, [rbp + 0x4e8]
    mov qword ptr [rsp + 0x28], rcx
    lea rcx, [rbp - 0x10]
    mov qword ptr [rsp + 0x20], rcx
    xor ecx, ecx
    call qword ptr [rip + 0x18ba6]
    mov rax, qword ptr [rbp + 0x4c8]
    lea rcx, [rsp + 0x50]
    mov qword ptr [rbp + 0xe8], rax
    xor edx, edx
    lea rax, [rbp + 0x4c8]
    mov r8d, 0x98
    add rax, 8
    mov qword ptr [rbp + 0x88], rax
    call 0x14001cd80
    mov rax, qword ptr [rbp + 0x4c8]
    mov qword ptr [rsp + 0x60], rax
    mov dword ptr [rsp + 0x50], 0x40000015
    mov dword ptr [rsp + 0x54], 1
    call qword ptr [rip + 0x18baa]
    mov ebx, eax
    xor ecx, ecx
    lea rax, [rsp + 0x50]
    mov qword ptr [rsp + 0x40], rax
    lea rax, [rbp - 0x10]
    mov qword ptr [rsp + 0x48], rax
    call qword ptr [rip + 0x18b45]
    lea rcx, [rsp + 0x40]
    call qword ptr [rip + 0x18b32]
    test eax, eax
    jne 0x1400054ff
    cmp ebx, 1
    je 0x1400054ff
    lea ecx, [rax + 3]
    call 0x1400053c0
    mov rbx, qword ptr [rsp + 0x5d0]
    add rsp, 0x5c0
    pop rbp
    ret
    jmp 0x140005354
    int3 
    int3 
    int3 
    sub rsp, 0x28
    xor ecx, ecx
    call qword ptr [rip + 0x18b5c]
    test rax, rax
    je 0x140005562
    mov ecx, 0x5a4d
    cmp word ptr [rax], cx
    jne 0x140005562
    movsxd rcx, dword ptr [rax + 0x3c]
    add rcx, rax
    cmp dword ptr [rcx], 0x4550
    jne 0x140005562
    mov eax, 0x20b
    cmp word ptr [rcx + 0x18], ax
    jne 0x140005562
    cmp dword ptr [rcx + 0x84], 0xe
    jbe 0x140005562
    cmp dword ptr [rcx + 0xf8], 0
    setne al
    jmp 0x140005564
    xor al, al
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    lea rcx, [rip + 9]
    jmp qword ptr [rip + 0x18aae]
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, qword ptr [rcx]
    mov rdi, rcx
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x1400055b0
    cmp dword ptr [rbx + 0x18], 4
    jne 0x1400055b0
    mov edx, dword ptr [rbx + 0x20]
    lea eax, [rdx - 0x19930520]
    cmp eax, 2
    jbe 0x1400055bd
    cmp edx, 0x1994000
    je 0x1400055bd
    mov rbx, qword ptr [rsp + 0x30]
    xor eax, eax
    add rsp, 0x20
    pop rdi
    ret
    call 0x1400069e4
    mov qword ptr [rax], rbx
    mov rbx, qword ptr [rdi + 8]
    call 0x1400069f8
    mov qword ptr [rax], rbx
    call 0x14000ffb4
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    lea rbx, [rip + 0x22057]
    lea rdi, [rip + 0x22050]
    jmp 0x140005604
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x140005600
    call qword ptr [rip + 0x18c70]
    add rbx, 8
    cmp rbx, rdi
    jb 0x1400055f2
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    lea rbx, [rip + 0x2202b]
    lea rdi, [rip + 0x22024]
    jmp 0x140005640
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x14000563c
    call qword ptr [rip + 0x18c34]
    add rbx, 8
    cmp rbx, rdi
    jb 0x14000562e
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x10
    xor eax, eax
    xor ecx, ecx
    cpuid 
    mov r8d, ecx
    xor r11d, r11d
    mov r10d, edx
    xor r8d, 0x6c65746e
    xor r10d, 0x49656e69
    mov r9d, ebx
    mov esi, eax
    xor ecx, ecx
    lea eax, [r11 + 1]
    or r10d, r8d
    cpuid 
    xor r9d, 0x756e6547
    mov dword ptr [rsp], eax
    or r10d, r9d
    mov dword ptr [rsp + 4], ebx
    mov edi, ecx
    mov dword ptr [rsp + 8], ecx
    mov dword ptr [rsp + 0xc], edx
    jne 0x140005704
    or qword ptr [rip + 0x249b7], 0xffffffffffffffff
    and eax, 0xfff3ff0
    mov qword ptr [rip + 0x2499f], 0x8000
    cmp eax, 0x106c0
    je 0x1400056f0
    cmp eax, 0x20660
    je 0x1400056f0
    cmp eax, 0x20670
    je 0x1400056f0
    add eax, 0xfffcf9b0
    cmp eax, 0x20
    ja 0x140005704
    movabs rcx, 0x100010001
    bt rcx, rax
    jae 0x140005704
    mov r8d, dword ptr [rip + 0x25b15]
    or r8d, 1
    mov dword ptr [rip + 0x25b0a], r8d
    jmp 0x14000570b
    mov r8d, dword ptr [rip + 0x25b01]
    mov eax, 7
    lea r9d, [rax - 5]
    cmp esi, eax
    jl 0x14000573e
    xor ecx, ecx
    cpuid 
    mov dword ptr [rsp], eax
    mov r11d, ebx
    mov dword ptr [rsp + 4], ebx
    mov dword ptr [rsp + 8], ecx
    mov dword ptr [rsp + 0xc], edx
    bt ebx, 9
    jae 0x14000573e
    or r8d, r9d
    mov dword ptr [rip + 0x25ace], r8d
    mov dword ptr [rip + 0x24910], 1
    mov dword ptr [rip + 0x2490d], r9d
    bt edi, 0x14
    jae 0x1400057ea
    mov dword ptr [rip + 0x248f8], r9d
    mov ebx, 6
    mov dword ptr [rip + 0x248f1], ebx
    bt edi, 0x1b
    jae 0x1400057ea
    bt edi, 0x1c
    jae 0x1400057ea
    xor ecx, ecx
    xgetbv 
    shl rdx, 0x20
    or rdx, rax
    mov qword ptr [rsp + 0x20], rdx
    mov rax, qword ptr [rsp + 0x20]
    and al, bl
    cmp al, bl
    jne 0x1400057ea
    mov eax, dword ptr [rip + 0x248c3]
    or eax, 8
    mov dword ptr [rip + 0x248b2], 3
    mov dword ptr [rip + 0x248b0], eax
    test r11b, 0x20
    je 0x1400057ea
    or eax, 0x20
    mov dword ptr [rip + 0x24899], 5
    mov dword ptr [rip + 0x24897], eax
    mov eax, 0xd0030000
    and r11d, eax
    cmp r11d, eax
    jne 0x1400057ea
    mov rax, qword ptr [rsp + 0x20]
    and al, 0xe0
    cmp al, 0xe0
    jne 0x1400057ea
    or dword ptr [rip + 0x24878], 0x40
    mov dword ptr [rip + 0x2486e], ebx
    mov rbx, qword ptr [rsp + 0x28]
    xor eax, eax
    mov rsi, qword ptr [rsp + 0x30]
    add rsp, 0x10
    pop rdi
    ret
    xor eax, eax
    cmp dword ptr [rip + 0x265fc], eax
    setne al
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x20
    cmp byte ptr [rcx + 8], 0
    mov r14, rdx
    mov rsi, rcx
    je 0x14000587d
    mov rax, qword ptr [rcx]
    test rax, rax
    je 0x14000587d
    or rdi, 0xffffffffffffffff
    inc rdi
    cmp byte ptr [rax + rdi], 0
    jne 0x14000583d
    lea rcx, [rdi + 1]
    call 0x14000eb20
    mov rbx, rax
    test rax, rax
    je 0x140005873
    mov r8, qword ptr [rsi]
    lea rdx, [rdi + 1]
    mov rcx, rax
    call 0x14000ffe0
    mov rax, rbx
    mov byte ptr [r14 + 8], 1
    mov qword ptr [r14], rax
    xor ebx, ebx
    mov rcx, rbx
    call 0x14000eb28
    jmp 0x140005887
    mov rax, qword ptr [rcx]
    mov qword ptr [rdx], rax
    mov byte ptr [rdx + 8], 0
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    mov rdi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop r14
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    cmp byte ptr [rcx + 8], 0
    mov rbx, rcx
    je 0x1400058b7
    mov rcx, qword ptr [rcx]
    call 0x14000eb28
    and qword ptr [rbx], 0
    mov byte ptr [rbx + 8], 0
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x18], rbx
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    sub rsp, 0x50
    mov rbx, rdx
    mov rsi, rcx
    mov edi, 0x19930520
    test rdx, rdx
    je 0x14000590c
    test byte ptr [rdx], 0x10
    je 0x14000590c
    mov rcx, qword ptr [rcx]
    sub rcx, 8
    mov rax, qword ptr [rcx]
    mov rbx, qword ptr [rax + 0x30]
    mov rax, qword ptr [rax + 0x40]
    call qword ptr [rip + 0x18964]
    xor eax, eax
    mov qword ptr [rsp + 0x20], rax
    test rbx, rbx
    je 0x14000593a
    lea rdx, [rsp + 0x20]
    mov rcx, rbx
    call qword ptr [rip + 0x1876a]
    mov qword ptr [rsp + 0x20], rax
    test byte ptr [rbx], 8
    jne 0x140005935
    test rax, rax
    jne 0x14000593a
    mov edi, 0x1994000
    mov edx, 1
    mov qword ptr [rsp + 0x28], rdi
    lea r9, [rsp + 0x28]
    mov qword ptr [rsp + 0x30], rsi
    mov ecx, 0xe06d7363
    mov qword ptr [rsp + 0x38], rbx
    mov qword ptr [rsp + 0x40], rax
    lea r8d, [rdx + 3]
    call qword ptr [rip + 0x18731]
    mov rbx, qword ptr [rsp + 0x70]
    mov rsi, qword ptr [rsp + 0x78]
    add rsp, 0x50
    pop rdi
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x20], r9
    mov qword ptr [rax + 0x18], r8
    mov qword ptr [rax + 0x10], rdx
    mov qword ptr [rax + 8], rcx
    push rbx
    sub rsp, 0x70
    mov rbx, rcx
    and dword ptr [rax - 0x38], 0
    mov qword ptr [rax - 0x20], rcx
    mov qword ptr [rax - 0x18], r8
    call 0x140006a38
    lea rdx, [rsp + 0x58]
    mov ecx, dword ptr [rbx]
    mov rax, qword ptr [rax + 0x10]
    call qword ptr [rip + 0x188bb]
    mov dword ptr [rsp + 0x40], 0
    jmp 0x1400059bf
    mov eax, dword ptr [rsp + 0x40]
    add rsp, 0x70
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x20], r9
    mov qword ptr [rax + 0x18], r8
    mov qword ptr [rax + 0x10], rdx
    mov qword ptr [rax + 8], rcx
    push rbx
    sub rsp, 0x70
    mov rbx, rcx
    and dword ptr [rax - 0x38], 0
    mov qword ptr [rax - 0x20], rcx
    mov qword ptr [rax - 0x18], r8
    call 0x140006a38
    lea rdx, [rsp + 0x58]
    mov ecx, dword ptr [rbx]
    mov rax, qword ptr [rax + 0x10]
    call qword ptr [rip + 0x18867]
    mov dword ptr [rsp + 0x40], 0
    jmp 0x140005a13
    mov eax, dword ptr [rsp + 0x40]
    add rsp, 0x70
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov edi, dword ptr [rcx + 0xc]
    mov esi, edx
    mov rbp, rcx
    test edi, edi
    je 0x140005a6b
    lea ebx, [rdi - 1]
    mov edi, ebx
    call 0x140006a38
    lea rdx, [rbx + rbx*4]
    mov rax, qword ptr [rax + 0x60]
    lea rcx, [rax + rdx*4]
    movsxd rax, dword ptr [rbp + 0x10]
    add rax, rcx
    cmp esi, dword ptr [rax + 4]
    jle 0x140005a67
    cmp esi, dword ptr [rax + 8]
    jle 0x140005a6d
    test ebx, ebx
    jne 0x140005a40
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    mov bl, byte ptr [rcx]
    lea r10, [rcx + 1]
    mov byte ptr [rdx], bl
    mov esi, r9d
    lea r14, [rip - 0x5aab]
    mov rbp, r8
    mov r11, rdx
    mov rdi, rcx
    test bl, 4
    je 0x140005add
    movzx ecx, byte ptr [r10]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1e610]
    mov cl, byte ptr [rcx + r14 + 0x1e620]
    sub r10, rax
    mov eax, dword ptr [r10 - 4]
    shr eax, cl
    mov dword ptr [rdx + 4], eax
    test bl, 8
    je 0x140005aec
    mov eax, dword ptr [r10]
    add r10, 4
    mov dword ptr [rdx + 8], eax
    test bl, 0x10
    je 0x140005afb
    mov eax, dword ptr [r10]
    add r10, 4
    mov dword ptr [rdx + 0xc], eax
    xor r9d, r9d
    lea r8, [r10 + 4]
    cmp byte ptr [rsp + 0x30], r9b
    jne 0x140005b69
    test bl, 2
    je 0x140005b69
    mov dword ptr [rdx + 0x10], r9d
    cmp dword ptr [r10], r9d
    je 0x140005b60
    movsxd rdx, dword ptr [r10]
    add rdx, rbp
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1e610]
    mov cl, byte ptr [rcx + r14 + 0x1e620]
    sub rdx, rax
    mov r10d, dword ptr [rdx - 4]
    shr r10d, cl
    test r10d, r10d
    je 0x140005b6f
    mov eax, dword ptr [rdx]
    mov ecx, dword ptr [rdx + 4]
    lea rdx, [rdx + 8]
    cmp eax, esi
    je 0x140005b5a
    inc r9d
    cmp r9d, r10d
    jb 0x140005b43
    jmp 0x140005b6f
    mov dword ptr [r11 + 0x10], ecx
    jmp 0x140005b6f
    mov ecx, 7
    int 0x29
    jmp 0x140005b6f
    mov eax, dword ptr [r10]
    mov dword ptr [rdx + 0x10], eax
    test bl, 1
    je 0x140005b99
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rdx, byte ptr [rcx + r14 + 0x1e610]
    mov cl, byte ptr [rcx + r14 + 0x1e620]
    sub r8, rdx
    mov edx, dword ptr [r8 - 4]
    shr edx, cl
    mov dword ptr [r11 + 0x14], edx
    mov rbx, qword ptr [rsp + 0x10]
    sub r8, rdi
    mov rbp, qword ptr [rsp + 0x18]
    mov rax, r8
    mov rsi, qword ptr [rsp + 0x20]
    mov rdi, qword ptr [rsp + 0x28]
    pop r14
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rdx
    mov rdx, rcx
    mov rcx, rbx
    call 0x140006c1c
    mov edx, eax
    mov rcx, rbx
    call 0x140005a20
    test rax, rax
    setne al
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    mov al, byte ptr [rdx]
    and al, 1
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    lea r9, [rsp + 0x48]
    mov rbx, r8
    mov rdi, rdx
    call 0x140005c84
    mov rdx, rdi
    mov rcx, rbx
    mov rsi, rax
    call 0x140006c1c
    mov edx, eax
    mov rcx, rbx
    call 0x140005a20
    test rax, rax
    jne 0x140005c2e
    or r9d, 0xffffffff
    jmp 0x140005c32
    mov r9d, dword ptr [rax + 4]
    mov r8, rbx
    mov rdx, rdi
    mov rcx, rsi
    call 0x1400093e0
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    sub rsp, 0x28
    test byte ptr [r8], 1
    mov rcx, qword ptr [rcx]
    mov qword ptr [rsp + 0x30], rcx
    je 0x140005c6f
    mov eax, dword ptr [r8 + 0x14]
    mov rcx, qword ptr [rax + rcx]
    mov qword ptr [rsp + 0x30], rcx
    or r9d, 0xffffffff
    lea rcx, [rsp + 0x30]
    call 0x14000956c
    add rsp, 0x28
    ret
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rsi
    push rdi
    push r12
    push r14
    push r15
    sub rsp, 0x20
    mov esi, dword ptr [r8 + 0xc]
    mov r12, rcx
    mov rcx, r8
    mov rdi, r9
    mov r14, r8
    mov r15, rdx
    call 0x140006c1c
    mov r10, qword ptr [r12]
    mov ebp, eax
    mov qword ptr [rdi], r10
    jmp 0x140005d20
    movsxd rax, dword ptr [r14 + 0x10]
    lea ecx, [rsi - 1]
    mov esi, ecx
    lea rcx, [rcx + rcx*4]
    lea rbx, [rax + rcx*4]
    add rbx, qword ptr [r15 + 8]
    cmp ebp, dword ptr [rbx + 4]
    jle 0x140005d20
    cmp ebp, dword ptr [rbx + 8]
    jg 0x140005d20
    mov rcx, qword ptr [r15]
    lea rdx, [rsp + 0x50]
    xor r8d, r8d
    call qword ptr [rip + 0x18323]
    movsxd r8, dword ptr [rbx + 0x10]
    xor ecx, ecx
    add r8, qword ptr [rsp + 0x50]
    mov r9d, dword ptr [rbx + 0xc]
    mov r10d, dword ptr [rax]
    test r9d, r9d
    je 0x140005d1b
    lea rdx, [r8 + 0xc]
    movsxd rax, dword ptr [rdx]
    cmp rax, r10
    je 0x140005d1b
    inc ecx
    add rdx, 0x14
    cmp ecx, r9d
    jb 0x140005d08
    cmp ecx, r9d
    jb 0x140005d26
    test esi, esi
    jne 0x140005cbd
    jmp 0x140005d3a
    mov rax, qword ptr [r12]
    lea rcx, [rcx + rcx*4]
    movsxd rcx, dword ptr [r8 + rcx*4 + 0x10]
    mov rcx, qword ptr [rcx + rax]
    mov qword ptr [rdi], rcx
    mov rbx, qword ptr [rsp + 0x58]
    mov rax, rdi
    mov rbp, qword ptr [rsp + 0x60]
    add rsp, 0x20
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    ret
    mov rax, qword ptr [rcx]
    mov rdx, rcx
    mov qword ptr [r9], rax
    test byte ptr [r8], 1
    je 0x140005d71
    mov ecx, dword ptr [r8 + 0x14]
    mov rax, qword ptr [rdx]
    mov rcx, qword ptr [rcx + rax]
    mov qword ptr [r9], rcx
    mov rax, r9
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x40
    mov rbx, qword ptr [rsp + 0x90]
    mov r15, rdx
    mov rsi, rcx
    mov rdx, r9
    mov rcx, rbx
    mov rdi, r9
    mov r14d, r8d
    mov ebp, dword ptr [rbx + 0xc]
    call 0x140006c1c
    xor r10d, r10d
    mov r9d, eax
    test ebp, ebp
    je 0x140005ea3
    mov r11, qword ptr [rdi + 8]
    or r12d, 0xffffffff
    movsxd rbx, dword ptr [rbx + 0x10]
    mov r8d, r12d
    mov r13d, r12d
    mov edx, ebp
    lea edi, [rdx - 1]
    lea rcx, [rdi + rdi*4]
    lea rax, [r11 + rcx*4]
    cmp r9d, dword ptr [rax + rbx + 4]
    jle 0x140005df1
    cmp r9d, dword ptr [rax + rbx + 8]
    jle 0x140005df7
    mov edx, edi
    test edi, edi
    jne 0x140005dd8
    test edx, edx
    je 0x140005e0b
    lea eax, [rdx - 1]
    lea rax, [rax + rax*4]
    lea r9, [r11 + rax*4]
    add r9, rbx
    jmp 0x140005e0e
    mov r9, r10
    mov edx, r10d
    lea rcx, [r11 + rbx]
    test r9, r9
    je 0x140005e2b
    mov eax, dword ptr [r9 + 4]
    cmp dword ptr [rcx], eax
    jle 0x140005e40
    mov eax, dword ptr [r9 + 8]
    cmp dword ptr [rcx + 4], eax
    jg 0x140005e40
    cmp r14d, dword ptr [rcx]
    jl 0x140005e40
    cmp r14d, dword ptr [rcx + 4]
    jg 0x140005e40
    cmp r8d, r12d
    mov r13d, edx
    cmove r8d, edx
    inc edx
    add rcx, 0x14
    cmp edx, ebp
    jb 0x140005e15
    mov eax, r10d
    mov qword ptr [rsp + 0x20], r15
    lea r11, [rsp + 0x40]
    mov qword ptr [rsp + 0x30], r15
    mov rbx, qword ptr [r11 + 0x30]
    cmp r8d, r12d
    mov rbp, qword ptr [r11 + 0x38]
    cmovne eax, r8d
    mov dword ptr [rsp + 0x28], eax
    lea eax, [r13 + 1]
    movups xmm0, xmmword ptr [rsp + 0x20]
    cmovne r10d, eax
    mov rax, rsi
    mov dword ptr [rsp + 0x38], r10d
    movups xmm1, xmmword ptr [rsp + 0x30]
    movdqu xmmword ptr [rsi], xmm0
    movdqu xmmword ptr [rsi + 0x10], xmm1
    mov rsi, qword ptr [r11 + 0x40]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    call 0x140010040
    int3 
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x60
    mov qword ptr [rsp + 0x20], rdx
    mov rdi, rdx
    movaps xmmword ptr [rax - 0x18], xmm6
    mov rbp, rcx
    mov qword ptr [rsp + 0x30], rdx
    xor ebx, ebx
    mov dword ptr [rsp + 0x28], ebx
    lea rdx, [rax - 0x28]
    movaps xmm6, xmmword ptr [rsp + 0x20]
    mov rcx, rdi
    movdqa xmmword ptr [rax - 0x28], xmm6
    mov r14d, r8d
    xor esi, esi
    call 0x14000623c
    mov r9d, dword ptr [rdi]
    xor edx, edx
    test r9d, r9d
    je 0x140005fca
    mov r8, qword ptr [rdi + 8]
    lea r10, [rip - 0x5f13]
    mov rax, qword ptr [rdi + 0x18]
    mov ecx, ebx
    cmp r14d, eax
    jl 0x140005f39
    shr rax, 0x20
    cmp r14d, eax
    jg 0x140005f39
    test ecx, ecx
    mov ebx, edx
    mov esi, edx
    cmove ebx, ecx
    mov dword ptr [rsp + 0x28], ebx
    movaps xmm6, xmmword ptr [rsp + 0x20]
    movzx ecx, byte ptr [r8]
    inc edx
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r10 + 0x1e610]
    mov cl, byte ptr [rcx + r10 + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [rdi + 8], r8
    mov dword ptr [rdi + 0x18], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r10 + 0x1e610]
    mov cl, byte ptr [rcx + r10 + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [rdi + 8], r8
    mov dword ptr [rdi + 0x1c], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r10 + 0x1e610]
    mov cl, byte ptr [rcx + r10 + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [rdi + 8], r8
    mov dword ptr [rdi + 0x20], eax
    mov eax, dword ptr [r8]
    add r8, 4
    mov qword ptr [rdi + 8], r8
    mov dword ptr [rdi + 0x24], eax
    cmp edx, r9d
    jne 0x140005f13
    inc esi
    movdqa xmmword ptr [rsp + 0x40], xmm6
    lea rdx, [rsp + 0x40]
    mov dword ptr [rsp + 0x38], esi
    mov rcx, rdi
    call 0x14000623c
    movups xmm0, xmmword ptr [rsp + 0x30]
    lea r11, [rsp + 0x60]
    mov rax, rbp
    mov rbx, qword ptr [r11 + 0x10]
    mov rsi, qword ptr [r11 + 0x20]
    mov rdi, qword ptr [r11 + 0x28]
    movdqu xmmword ptr [rbp], xmm6
    movaps xmm6, xmmword ptr [rsp + 0x50]
    movdqu xmmword ptr [rbp + 0x10], xmm0
    mov rbp, qword ptr [r11 + 0x18]
    mov rsp, r11
    pop r14
    ret
    int3 
    int3 
    int3 
    push rbp
    lea rbp, [rsp - 0x1f]
    sub rsp, 0xe0
    mov rax, qword ptr [rip + 0x23fd3]
    xor rax, rsp
    mov qword ptr [rbp + 0xf], rax
    mov r10, qword ptr [rbp + 0x77]
    lea rax, [rip + 0x18691]
    movups xmm0, xmmword ptr [rax]
    mov r11, rcx
    lea rcx, [rsp + 0x30]
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx], xmm0
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm1, xmmword ptr [rax + 0x80]
    movups xmmword ptr [rcx + 0x60], xmm0
    movups xmm0, xmmword ptr [rax + 0x70]
    mov rax, qword ptr [rax + 0x90]
    movups xmmword ptr [rcx + 0x70], xmm0
    movups xmmword ptr [rcx + 0x80], xmm1
    mov qword ptr [rcx + 0x90], rax
    lea rax, [rip + 0x2cb4]
    mov rcx, qword ptr [r11]
    mov qword ptr [rbp - 0x71], rax
    mov rax, qword ptr [rbp + 0x4f]
    mov qword ptr [rbp - 0x61], rax
    movsxd rax, dword ptr [rbp + 0x5f]
    mov qword ptr [rbp - 0x59], rax
    mov rax, qword ptr [rbp + 0x57]
    mov qword ptr [rbp - 0x49], rax
    movzx eax, byte ptr [rbp + 0x7f]
    mov qword ptr [rbp - 0x39], rax
    mov rax, qword ptr [r10 + 0x40]
    mov qword ptr [rsp + 0x28], rax
    mov rax, qword ptr [r10 + 0x28]
    mov qword ptr [rbp - 0x69], r9
    xor r9d, r9d
    mov qword ptr [rbp - 0x51], r8
    lea r8, [rsp + 0x30]
    mov qword ptr [rbp - 0x41], rdx
    mov rdx, qword ptr [r10]
    mov qword ptr [rsp + 0x20], rax
    mov qword ptr [rbp - 0x31], 0x19930520
    call qword ptr [rip + 0x17f9a]
    mov rcx, qword ptr [rbp + 0xf]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0xe0
    pop rbp
    ret
    int3 
    push rbp
    lea rbp, [rsp - 0x1f]
    sub rsp, 0xe0
    mov rax, qword ptr [rip + 0x23ecf]
    xor rax, rsp
    mov qword ptr [rbp + 0xf], rax
    mov r10, qword ptr [rbp + 0x77]
    lea rax, [rip + 0x184ed]
    movups xmm0, xmmword ptr [rax]
    mov r11, rcx
    lea rcx, [rsp + 0x30]
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx], xmm0
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm1, xmmword ptr [rax + 0x80]
    movups xmmword ptr [rcx + 0x60], xmm0
    movups xmm0, xmmword ptr [rax + 0x70]
    mov rax, qword ptr [rax + 0x90]
    movups xmmword ptr [rcx + 0x70], xmm0
    movups xmmword ptr [rcx + 0x80], xmm1
    mov qword ptr [rcx + 0x90], rax
    lea rax, [rip + 0x2d9c]
    mov qword ptr [rbp - 0x71], rax
    mov rax, qword ptr [rbp + 0x4f]
    mov qword ptr [rbp - 0x61], rax
    movsxd rax, dword ptr [rbp + 0x5f]
    mov qword ptr [rbp - 0x51], r8
    mov r8, qword ptr [rbp + 0x6f]
    mov qword ptr [rbp - 0x59], rax
    movzx eax, byte ptr [rbp + 0x7f]
    mov qword ptr [rbp - 0x39], rax
    mov rcx, qword ptr [r8 + 0x18]
    mov r8, qword ptr [r8 + 0x20]
    add rcx, qword ptr [r10 + 8]
    add r8, qword ptr [r10 + 8]
    movsxd rax, dword ptr [rbp + 0x67]
    mov qword ptr [rbp - 0x19], rax
    mov rax, qword ptr [r10 + 0x40]
    mov qword ptr [rsp + 0x28], rax
    mov rax, qword ptr [r10 + 0x28]
    mov qword ptr [rbp - 0x69], r9
    xor r9d, r9d
    mov qword ptr [rbp - 0x49], rcx
    mov rcx, qword ptr [r11]
    mov qword ptr [rbp - 0x41], rdx
    mov rdx, qword ptr [r10]
    mov qword ptr [rbp - 0x29], r8
    lea r8, [rsp + 0x30]
    mov qword ptr [rsp + 0x20], rax
    mov qword ptr [rbp - 0x31], 0x19930520
    call qword ptr [rip + 0x17e7a]
    mov rcx, qword ptr [rbp + 0xf]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0xe0
    pop rbp
    ret
    int3 
    mov r8, qword ptr [rcx + 0x10]
    lea r11, [rip - 0x6247]
    mov qword ptr [rcx + 8], r8
    mov r9, rcx
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], r8
    mov dword ptr [r9 + 0x18], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x1c], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [r11 + rcx + 0x1e610]
    mov cl, byte ptr [r11 + rcx + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x20], eax
    mov eax, dword ptr [r8]
    add r8, 4
    cmp dword ptr [rdx + 8], 0
    mov qword ptr [r9 + 8], r8
    mov dword ptr [r9 + 0x24], eax
    je 0x1400063fd
    mov r10d, dword ptr [rdx + 8]
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x18], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x1c], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    lea rdx, [r8 + 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x20], eax
    mov eax, dword ptr [r8]
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x24], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x18], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x1c], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    lea r8, [rdx + 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x20], eax
    mov eax, dword ptr [rdx]
    mov qword ptr [r9 + 8], r8
    mov dword ptr [r9 + 0x24], eax
    sub r10, 1
    jne 0x1400062e6
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov qword ptr [rcx], rdx
    call 0x140006a38
    cmp rbx, qword ptr [rax + 0x58]
    jae 0x140006422
    call 0x140006a38
    mov rcx, qword ptr [rax + 0x58]
    jmp 0x140006424
    xor ecx, ecx
    mov qword ptr [rbx + 8], rcx
    call 0x140006a38
    mov qword ptr [rax + 0x58], rbx
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rcx
    call 0x140006a38
    cmp rdi, qword ptr [rax + 0x58]
    jne 0x140006489
    call 0x140006a38
    mov rdx, qword ptr [rax + 0x58]
    test rdx, rdx
    je 0x140006489
    mov rbx, qword ptr [rdx + 8]
    cmp rdi, rdx
    je 0x140006475
    mov rdx, rbx
    test rbx, rbx
    je 0x140006489
    jmp 0x140006462
    call 0x140006a38
    mov qword ptr [rax + 0x58], rbx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    call 0x140010040
    int3 
    int3 
    sub rsp, 0x28
    call 0x140006a38
    mov rax, qword ptr [rax + 0x60]
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x140006a38
    mov rax, qword ptr [rax + 0x68]
    add rsp, 0x28
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    call 0x140006a38
    mov qword ptr [rax + 0x60], rbx
    add rsp, 0x20
    pop rbx
    ret
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    call 0x140006a38
    mov qword ptr [rax + 0x68], rbx
    add rsp, 0x20
    pop rbx
    ret
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 0x18], rbp
    mov qword ptr [rax + 0x20], rsi
    push rdi
    sub rsp, 0x40
    mov rbx, qword ptr [r9 + 8]
    mov rdi, r9
    mov rsi, r8
    mov qword ptr [rax + 8], rdx
    mov rbp, rcx
    call 0x140006a38
    mov qword ptr [rax + 0x60], rbx
    mov rbx, qword ptr [rbp + 0x38]
    call 0x140006a38
    mov qword ptr [rax + 0x68], rbx
    call 0x140006a38
    mov rcx, qword ptr [rdi + 0x38]
    mov r9, rdi
    mov r8, rsi
    mov edx, dword ptr [rcx]
    mov rcx, rbp
    add rdx, qword ptr [rax + 0x60]
    xor eax, eax
    mov byte ptr [rsp + 0x38], al
    mov qword ptr [rsp + 0x30], rax
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], rdx
    lea rdx, [rsp + 0x50]
    call 0x140008b44
    mov rbx, qword ptr [rsp + 0x58]
    mov rbp, qword ptr [rsp + 0x60]
    mov rsi, qword ptr [rsp + 0x68]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 0x18], rbp
    mov qword ptr [rax + 0x20], rsi
    push rdi
    sub rsp, 0x60
    and dword ptr [rax - 0x24], 0
    mov rdi, r9
    and dword ptr [rax - 0x20], 0
    mov rsi, r8
    and dword ptr [rax - 0x1c], 0
    mov rbp, rcx
    and dword ptr [rax - 0x18], 0
    and dword ptr [rax - 0x14], 0
    mov rbx, qword ptr [r9 + 8]
    mov byte ptr [rax - 0x28], 0
    mov qword ptr [rax + 8], rdx
    call 0x140006a38
    mov qword ptr [rax + 0x60], rbx
    mov rbx, qword ptr [rbp + 0x38]
    call 0x140006a38
    mov qword ptr [rax + 0x68], rbx
    call 0x140006a38
    mov rcx, qword ptr [rdi + 0x38]
    lea rdx, [rsp + 0x40]
    mov r9, qword ptr [rdi + 0x10]
    mov r8, qword ptr [rdi + 8]
    mov byte ptr [rsp + 0x20], 0
    mov ecx, dword ptr [rcx]
    add rcx, qword ptr [rax + 0x60]
    mov r9d, dword ptr [r9]
    call 0x140005a84
    mov byte ptr [rsp + 0x38], 0
    lea rax, [rsp + 0x40]
    and qword ptr [rsp + 0x30], 0
    lea rdx, [rsp + 0x70]
    and dword ptr [rsp + 0x28], 0
    mov r9, rdi
    mov r8, rsi
    mov qword ptr [rsp + 0x20], rax
    mov rcx, rbp
    call 0x140008b4c
    lea r11, [rsp + 0x60]
    mov rbx, qword ptr [r11 + 0x18]
    mov rbp, qword ptr [r11 + 0x20]
    mov rsi, qword ptr [r11 + 0x28]
    mov rsp, r11
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x40
    mov rsi, rcx
    mov r15, r9
    mov rcx, r8
    mov rbp, r8
    mov r13, rdx
    call 0x140009d24
    mov r12, qword ptr [r15 + 8]
    mov r14, qword ptr [r15]
    mov rbx, qword ptr [r15 + 0x38]
    sub r14, r12
    test byte ptr [rsi + 4], 0x66
    mov edi, dword ptr [r15 + 0x48]
    jne 0x14000676d
    mov qword ptr [rsp + 0x30], rsi
    mov qword ptr [rsp + 0x38], rbp
    jmp 0x140006759
    mov ecx, edi
    add rcx, rcx
    mov ebp, edi
    mov eax, dword ptr [rbx + rcx*8 + 4]
    cmp r14, rax
    jb 0x140006757
    mov eax, dword ptr [rbx + rcx*8 + 8]
    cmp r14, rax
    jae 0x140006757
    cmp dword ptr [rbx + rcx*8 + 0x10], 0
    je 0x140006757
    cmp dword ptr [rbx + rcx*8 + 0xc], 1
    je 0x1400066d9
    mov eax, dword ptr [rbx + rcx*8 + 0xc]
    mov rdx, r13
    add rax, r12
    lea rcx, [rsp + 0x30]
    call rax
    test eax, eax
    js 0x140006766
    jle 0x140006757
    cmp dword ptr [rsi], 0xe06d7363
    jne 0x140006709
    cmp qword ptr [rip + 0x1807f], 0
    je 0x140006709
    lea rcx, [rip + 0x18076]
    call 0x14001c270
    test eax, eax
    je 0x140006709
    mov edx, 1
    mov rcx, rsi
    call qword ptr [rip + 0x1805f]
    lea rax, [rbp + 1]
    mov r8d, 1
    add rax, rax
    mov rdx, r13
    mov ecx, dword ptr [rbx + rax*8]
    add rcx, r12
    call 0x140009cf0
    mov r9d, dword ptr [rsi]
    lea rax, [rbp + 1]
    add rax, rax
    mov r8, rsi
    mov rcx, r13
    mov edx, dword ptr [rbx + rax*8]
    mov rax, qword ptr [r15 + 0x40]
    add rdx, r12
    mov qword ptr [rsp + 0x28], rax
    mov rax, qword ptr [r15 + 0x28]
    mov qword ptr [rsp + 0x20], rax
    call qword ptr [rip + 0x1794e]
    call 0x140009d20
    inc edi
    cmp edi, dword ptr [rbx]
    jb 0x14000668b
    jmp 0x140006824
    xor eax, eax
    jmp 0x140006829
    mov rbp, qword ptr [r15 + 0x20]
    sub rbp, r12
    jmp 0x140006818
    mov r9d, edi
    add r9, r9
    mov eax, dword ptr [rbx + r9*8 + 4]
    cmp r14, rax
    jb 0x140006816
    mov eax, dword ptr [rbx + r9*8 + 8]
    cmp r14, rax
    jae 0x140006816
    test byte ptr [rsi + 4], 0x20
    je 0x1400067dc
    xor edx, edx
    test r8d, r8d
    je 0x1400067d8
    mov ecx, edx
    add rcx, rcx
    mov eax, dword ptr [rbx + rcx*8 + 4]
    cmp rbp, rax
    jb 0x1400067d1
    mov eax, dword ptr [rbx + rcx*8 + 8]
    cmp rbp, rax
    jae 0x1400067d1
    mov eax, dword ptr [rbx + r9*8 + 0x10]
    cmp dword ptr [rbx + rcx*8 + 0x10], eax
    jne 0x1400067d1
    mov eax, dword ptr [rbx + r9*8 + 0xc]
    cmp dword ptr [rbx + rcx*8 + 0xc], eax
    je 0x1400067d8
    inc edx
    cmp edx, r8d
    jb 0x1400067a4
    cmp edx, dword ptr [rbx]
    jne 0x140006824
    mov eax, edi
    inc rax
    mov ecx, edi
    add rax, rax
    add rcx, rcx
    cmp dword ptr [rbx + rax*8], 0
    je 0x1400067ff
    mov eax, dword ptr [rbx + rax*8]
    cmp rbp, rax
    jne 0x140006816
    test byte ptr [rsi + 4], 0x20
    jne 0x140006824
    jmp 0x140006816
    lea eax, [rdi + 1]
    mov rdx, r13
    mov dword ptr [r15 + 0x48], eax
    mov r8d, dword ptr [rbx + rcx*8 + 0xc]
    mov cl, 1
    add r8, r12
    call r8
    inc edi
    mov r8d, dword ptr [rbx]
    cmp edi, r8d
    jb 0x140006779
    mov eax, 1
    lea r11, [rsp + 0x40]
    mov rbx, qword ptr [r11 + 0x30]
    mov rbp, qword ptr [r11 + 0x38]
    mov rsi, qword ptr [r11 + 0x40]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    sub rsp, 0x28
    call 0x140009d5c
    test al, al
    jne 0x140006859
    xor al, al
    jmp 0x14000686b
    call 0x140006b14
    test al, al
    jne 0x140006869
    call 0x140009da4
    jmp 0x140006855
    mov al, 1
    add rsp, 0x28
    ret
    sub rsp, 0x28
    test cl, cl
    jne 0x140006882
    call 0x140006b5c
    call 0x140009da4
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    cmp rcx, rdx
    je 0x1400068aa
    add rdx, 9
    lea rax, [rcx + 9]
    sub rdx, rax
    mov cl, byte ptr [rax]
    cmp cl, byte ptr [rax + rdx]
    jne 0x1400068ad
    inc rax
    test cl, cl
    jne 0x14000689c
    xor eax, eax
    ret
    sbb eax, eax
    or eax, 1
    ret
    int3 
    test rcx, rcx
    je 0x140006920
    mov byte ptr [rsp + 0x10], dl
    sub rsp, 0x48
    cmp dword ptr [rcx], 0xe06d7363
    jne 0x14000691c
    cmp dword ptr [rcx + 0x18], 4
    jne 0x14000691c
    mov eax, dword ptr [rcx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x14000691c
    mov rax, qword ptr [rcx + 0x30]
    test rax, rax
    je 0x14000691c
    movsxd rdx, dword ptr [rax + 4]
    test edx, edx
    je 0x1400068fe
    add rdx, qword ptr [rcx + 0x38]
    mov rcx, qword ptr [rcx + 0x28]
    call 0x140006924
    jmp 0x14000691c
    jmp 0x14000691c
    test byte ptr [rax], 0x10
    je 0x14000691c
    mov rax, qword ptr [rcx + 0x28]
    mov rcx, qword ptr [rax]
    test rcx, rcx
    je 0x14000691c
    mov rax, qword ptr [rcx]
    mov rax, qword ptr [rax + 0x10]
    call qword ptr [rip + 0x17954]
    add rsp, 0x48
    ret
    int3 
    int3 
    int3 
    jmp rdx
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    call 0x140006a38
    mov rdx, qword ptr [rax + 0x58]
    jmp 0x140006945
    cmp qword ptr [rdx], rbx
    je 0x140006953
    mov rdx, qword ptr [rdx + 8]
    test rdx, rdx
    jne 0x14000693c
    lea eax, [rdx + 1]
    add rsp, 0x20
    pop rbx
    ret
    xor eax, eax
    jmp 0x14000694d
    int3 
    movsxd rax, dword ptr [rdx]
    add rax, rcx
    cmp dword ptr [rdx + 4], 0
    jl 0x14000697a
    movsxd r9, dword ptr [rdx + 4]
    movsxd rdx, dword ptr [rdx + 8]
    mov rcx, qword ptr [r9 + rcx]
    movsxd r8, dword ptr [rdx + rcx]
    add r8, r9
    add rax, r8
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, qword ptr [rcx]
    mov rbx, rcx
    cmp dword ptr [rdi], 0xe0434352
    je 0x1400069a6
    cmp dword ptr [rdi], 0xe0434f4d
    je 0x1400069a6
    cmp dword ptr [rdi], 0xe06d7363
    je 0x1400069c6
    jmp 0x1400069b9
    call 0x140006a38
    cmp dword ptr [rax + 0x30], 0
    jle 0x1400069b9
    call 0x140006a38
    dec dword ptr [rax + 0x30]
    mov rbx, qword ptr [rsp + 0x30]
    xor eax, eax
    add rsp, 0x20
    pop rdi
    ret
    call 0x140006a38
    mov qword ptr [rax + 0x20], rdi
    mov rbx, qword ptr [rbx + 8]
    call 0x140006a38
    mov qword ptr [rax + 0x28], rbx
    call 0x14000ffb4
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call 0x140006a38
    add rax, 0x20
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x140006a38
    add rax, 0x28
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x14000ffb4
    int3 
    int3 
    int3 
    sub rsp, 0x28
    test rcx, rcx
    je 0x140006a32
    lea rax, [rip + 0x247f8]
    cmp rcx, rax
    je 0x140006a32
    call 0x14000eb28
    add rsp, 0x28
    ret
    int3 
    sub rsp, 0x28
    call 0x140006a54
    test rax, rax
    je 0x140006a4b
    add rsp, 0x28
    ret
    call 0x140010040
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    cmp dword ptr [rip + 0x23606], -1
    jne 0x140006a73
    xor eax, eax
    jmp 0x140006b03
    call qword ptr [rip + 0x1762f]
    mov ecx, dword ptr [rip + 0x235f1]
    mov edi, eax
    call 0x14000ad78
    or rdx, 0xffffffffffffffff
    xor esi, esi
    cmp rax, rdx
    je 0x140006af8
    test rax, rax
    je 0x140006a9b
    mov rsi, rax
    jmp 0x140006af8
    mov ecx, dword ptr [rip + 0x235cf]
    call 0x14000adc0
    test eax, eax
    je 0x140006af8
    mov edx, 0x80
    lea ecx, [rdx - 0x7f]
    call 0x140010098
    mov ecx, dword ptr [rip + 0x235b3]
    mov rbx, rax
    test rax, rax
    je 0x140006ae9
    mov rdx, rax
    call 0x14000adc0
    test eax, eax
    je 0x140006ae3
    mov rax, rbx
    mov dword ptr [rbx + 0x78], 0xfffffffe
    mov rbx, rsi
    mov rsi, rax
    jmp 0x140006af0
    mov ecx, dword ptr [rip + 0x23587]
    xor edx, edx
    call 0x14000adc0
    mov rcx, rbx
    call 0x14000eb28
    mov ecx, edi
    call qword ptr [rip + 0x175b0]
    mov rax, rsi
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    sub rsp, 0x28
    lea rcx, [rip - 0x107]
    call 0x14000ace8
    mov dword ptr [rip + 0x23546], eax
    cmp eax, -1
    je 0x140006b54
    lea rdx, [rip + 0x246ea]
    mov ecx, eax
    call 0x14000adc0
    test eax, eax
    je 0x140006b4f
    mov dword ptr [rip + 0x2474d], 0xfffffffe
    mov al, 1
    jmp 0x140006b56
    call 0x140006b5c
    xor al, al
    add rsp, 0x28
    ret
    int3 
    sub rsp, 0x28
    mov ecx, dword ptr [rip + 0x2350a]
    cmp ecx, -1
    je 0x140006b77
    call 0x14000ad30
    or dword ptr [rip + 0x234f9], 0xffffffff
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    movsxd r9, dword ptr [r8 + 0x1c]
    mov r10, r8
    mov rax, qword ptr [rcx]
    mov eax, dword ptr [r9 + rax]
    cmp eax, -2
    jne 0x140006ba2
    mov r8, qword ptr [rdx]
    mov rcx, r10
    call 0x140006c2c
    add rsp, 0x28
    ret
    int3 
    push rbx
    sub rsp, 0x20
    lea r9, [rsp + 0x40]
    mov rbx, r8
    call 0x140005c84
    mov rcx, qword ptr [rax]
    movsxd rax, dword ptr [rbx + 0x1c]
    mov qword ptr [rsp + 0x40], rcx
    mov eax, dword ptr [rax + rcx + 4]
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    movsxd rdx, dword ptr [rdx + 0x1c]
    mov rax, qword ptr [rcx]
    mov dword ptr [rdx + rax], r8d
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov edi, r9d
    mov rbx, r8
    lea r9, [rsp + 0x40]
    call 0x140005c84
    mov rcx, qword ptr [rax]
    movsxd rax, dword ptr [rbx + 0x1c]
    mov qword ptr [rsp + 0x40], rcx
    cmp edi, dword ptr [rax + rcx + 4]
    jle 0x140006c10
    mov dword ptr [rax + rcx + 4], edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov r8, qword ptr [rdx]
    jmp 0x140006c2c
    mov r8, qword ptr [rdx]
    jmp 0x140006c94
    push rbx
    sub rsp, 0x20
    mov rbx, r8
    test rcx, rcx
    je 0x140006c8c
    movsxd r11, dword ptr [rcx + 0x18]
    mov r10, qword ptr [rdx + 8]
    lea rax, [r10 + r11]
    test rax, rax
    je 0x140006c8c
    mov r8d, dword ptr [rcx + 0x14]
    xor r9d, r9d
    test r8d, r8d
    je 0x140006c87
    lea rcx, [r11 + r9*8]
    movsxd rdx, dword ptr [rcx + r10]
    add rdx, r10
    cmp rbx, rdx
    jb 0x140006c6f
    inc r9d
    cmp r9d, r8d
    jb 0x140006c57
    test r9d, r9d
    je 0x140006c87
    lea ecx, [r9 - 1]
    lea rax, [r10 + rcx*8]
    mov eax, dword ptr [rax + r11 + 4]
    add rsp, 0x20
    pop rbx
    ret
    or eax, 0xffffffff
    jmp 0x140006c81
    call 0x140010040
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    or ebp, 0xffffffff
    mov rbx, r8
    cmp dword ptr [rcx + 0x10], 0
    mov r10, rdx
    je 0x140006d68
    movsxd r9, dword ptr [rcx + 0x10]
    lea r14, [rip - 0x6cc7]
    mov rdi, qword ptr [rdx + 8]
    xor esi, esi
    add r9, rdi
    xor r8d, r8d
    mov edx, ebp
    movzx ecx, byte ptr [r9]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1e610]
    mov cl, byte ptr [rcx + r14 + 0x1e620]
    sub r9, rax
    mov r11d, dword ptr [r9 - 4]
    shr r11d, cl
    test r11d, r11d
    je 0x140006d68
    mov rax, qword ptr [r10 + 0x10]
    mov r10d, dword ptr [rax]
    movzx ecx, byte ptr [r9]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1e610]
    mov cl, byte ptr [rcx + r14 + 0x1e620]
    sub r9, rax
    mov eax, dword ptr [r9 - 4]
    shr eax, cl
    add esi, eax
    mov eax, esi
    add rax, r10
    add rax, rdi
    cmp rbx, rax
    jb 0x140006d5e
    movzx ecx, byte ptr [r9]
    inc r8d
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1e610]
    mov cl, byte ptr [rcx + r14 + 0x1e620]
    sub r9, rax
    mov edx, dword ptr [r9 - 4]
    shr edx, cl
    dec edx
    cmp r8d, r11d
    jb 0x140006d03
    test r8d, r8d
    cmove edx, ebp
    mov eax, edx
    jmp 0x140006d6a
    mov eax, ebp
    mov rbx, qword ptr [rsp + 0x10]
    mov rbp, qword ptr [rsp + 0x18]
    mov rsi, qword ptr [rsp + 0x20]
    mov rdi, qword ptr [rsp + 0x28]
    pop r14
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov r14, r9
    mov rbx, r8
    mov rsi, rdx
    mov r13, rcx
    xor edi, edi
    cmp dword ptr [r8 + 4], edi
    je 0x140006dc0
    movsxd r15, dword ptr [r8 + 4]
    call 0x140006490
    lea rdx, [r15 + rax]
    jmp 0x140006dc6
    mov rdx, rdi
    mov r15d, edi
    test rdx, rdx
    je 0x140006f46
    test r15d, r15d
    je 0x140006de5
    call 0x140006490
    mov rcx, rax
    movsxd rax, dword ptr [rbx + 4]
    add rcx, rax
    jmp 0x140006de8
    mov rcx, rdi
    cmp byte ptr [rcx + 0x10], dil
    je 0x140006f46
    cmp dword ptr [rbx + 8], edi
    jne 0x140006dff
    cmp dword ptr [rbx], edi
    jge 0x140006f46
    cmp dword ptr [rbx], edi
    jl 0x140006e0d
    movsxd rax, dword ptr [rbx + 8]
    add rax, qword ptr [rsi]
    mov rsi, rax
    test byte ptr [rbx], 0x80
    je 0x140006e44
    test byte ptr [r14], 0x10
    je 0x140006e44
    mov rax, qword ptr [rip + 0x243f1]
    test rax, rax
    je 0x140006e44
    call qword ptr [rip + 0x17446]
    test rax, rax
    je 0x140006f62
    test rsi, rsi
    je 0x140006f62
    mov qword ptr [rsi], rax
    mov rcx, rax
    jmp 0x140006ea3
    test byte ptr [rbx], 8
    je 0x140006e64
    mov rcx, qword ptr [r13 + 0x28]
    test rcx, rcx
    je 0x140006f67
    test rsi, rsi
    je 0x140006f67
    mov qword ptr [rsi], rcx
    jmp 0x140006ea3
    test byte ptr [r14], 1
    je 0x140006eb4
    mov rdx, qword ptr [r13 + 0x28]
    test rdx, rdx
    je 0x140006f6c
    test rsi, rsi
    je 0x140006f6c
    movsxd r8, dword ptr [r14 + 0x14]
    mov rcx, rsi
    call 0x14001c6e0
    cmp dword ptr [r14 + 0x14], 8
    jne 0x140006f42
    cmp qword ptr [rsi], rdi
    je 0x140006f42
    mov rcx, qword ptr [rsi]
    lea rdx, [r14 + 8]
    call 0x140006958
    mov qword ptr [rsi], rax
    jmp 0x140006f42
    cmp dword ptr [r14 + 0x18], edi
    je 0x140006ec9
    movsxd rbx, dword ptr [r14 + 0x18]
    call 0x1400064a4
    lea rcx, [rbx + rax]
    jmp 0x140006ece
    mov rcx, rdi
    mov ebx, edi
    test rcx, rcx
    jne 0x140006f07
    cmp qword ptr [r13 + 0x28], rdi
    je 0x140006f71
    test rsi, rsi
    je 0x140006f71
    movsxd rbx, dword ptr [r14 + 0x14]
    lea rdx, [r14 + 8]
    mov rcx, qword ptr [r13 + 0x28]
    call 0x140006958
    mov rdx, rax
    mov r8, rbx
    mov rcx, rsi
    call 0x14001c6e0
    jmp 0x140006f42
    cmp qword ptr [r13 + 0x28], rdi
    je 0x140006f76
    test rsi, rsi
    je 0x140006f76
    test ebx, ebx
    je 0x140006f27
    call 0x1400064a4
    mov rcx, rax
    movsxd rax, dword ptr [r14 + 0x18]
    add rcx, rax
    jmp 0x140006f2a
    mov rcx, rdi
    test rcx, rcx
    je 0x140006f76
    mov al, byte ptr [r14]
    and al, 4
    neg al
    sbb ecx, ecx
    neg ecx
    inc ecx
    mov edi, ecx
    mov dword ptr [rsp + 0x20], ecx
    mov eax, edi
    jmp 0x140006f48
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rsi, qword ptr [rsp + 0x58]
    mov rdi, qword ptr [rsp + 0x60]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    ret
    call 0x140010040
    call 0x140010040
    call 0x140010040
    call 0x140010040
    call 0x140010040
    nop 
    call 0x140010040
    nop 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov r14, r9
    mov rbx, r8
    mov rsi, rdx
    mov r13, rcx
    xor edi, edi
    cmp dword ptr [r8 + 8], edi
    je 0x140006fc0
    movsxd r15, dword ptr [r8 + 8]
    call 0x140006490
    lea rdx, [r15 + rax]
    jmp 0x140006fc6
    mov rdx, rdi
    mov r15d, edi
    test rdx, rdx
    je 0x140007149
    test r15d, r15d
    je 0x140006fe5
    call 0x140006490
    mov rcx, rax
    movsxd rax, dword ptr [rbx + 8]
    add rcx, rax
    jmp 0x140006fe8
    mov rcx, rdi
    cmp byte ptr [rcx + 0x10], dil
    je 0x140007149
    cmp dword ptr [rbx + 0xc], edi
    jne 0x140007000
    cmp dword ptr [rbx + 4], edi
    jge 0x140007149
    cmp dword ptr [rbx + 4], edi
    jl 0x14000700e
    mov eax, dword ptr [rbx + 0xc]
    add rax, qword ptr [rsi]
    mov rsi, rax
    test byte ptr [rbx + 4], 0x80
    je 0x140007046
    test byte ptr [r14], 0x10
    je 0x140007046
    mov rax, qword ptr [rip + 0x241ef]
    test rax, rax
    je 0x140007046
    call qword ptr [rip + 0x17244]
    test rax, rax
    je 0x140007165
    test rsi, rsi
    je 0x140007165
    mov qword ptr [rsi], rax
    mov rcx, rax
    jmp 0x1400070a6
    test byte ptr [rbx + 4], 8
    je 0x140007067
    mov rcx, qword ptr [r13 + 0x28]
    test rcx, rcx
    je 0x14000716a
    test rsi, rsi
    je 0x14000716a
    mov qword ptr [rsi], rcx
    jmp 0x1400070a6
    test byte ptr [r14], 1
    je 0x1400070b7
    mov rdx, qword ptr [r13 + 0x28]
    test rdx, rdx
    je 0x14000716f
    test rsi, rsi
    je 0x14000716f
    movsxd r8, dword ptr [r14 + 0x14]
    mov rcx, rsi
    call 0x14001c6e0
    cmp dword ptr [r14 + 0x14], 8
    jne 0x140007145
    cmp qword ptr [rsi], rdi
    je 0x140007145
    mov rcx, qword ptr [rsi]
    lea rdx, [r14 + 8]
    call 0x140006958
    mov qword ptr [rsi], rax
    jmp 0x140007145
    cmp dword ptr [r14 + 0x18], edi
    je 0x1400070cc
    movsxd rbx, dword ptr [r14 + 0x18]
    call 0x1400064a4
    lea rcx, [rbx + rax]
    jmp 0x1400070d1
    mov rcx, rdi
    mov ebx, edi
    test rcx, rcx
    jne 0x14000710a
    cmp qword ptr [r13 + 0x28], rdi
    je 0x140007174
    test rsi, rsi
    je 0x140007174
    movsxd rbx, dword ptr [r14 + 0x14]
    lea rdx, [r14 + 8]
    mov rcx, qword ptr [r13 + 0x28]
    call 0x140006958
    mov rdx, rax
    mov r8, rbx
    mov rcx, rsi
    call 0x14001c6e0
    jmp 0x140007145
    cmp qword ptr [r13 + 0x28], rdi
    je 0x140007179
    test rsi, rsi
    je 0x140007179
    test ebx, ebx
    je 0x14000712a
    call 0x1400064a4
    mov rcx, rax
    movsxd rax, dword ptr [r14 + 0x18]
    add rcx, rax
    jmp 0x14000712d
    mov rcx, rdi
    test rcx, rcx
    je 0x140007179
    mov al, byte ptr [r14]
    and al, 4
    neg al
    sbb ecx, ecx
    neg ecx
    inc ecx
    mov edi, ecx
    mov dword ptr [rsp + 0x20], ecx
    mov eax, edi
    jmp 0x14000714b
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rsi, qword ptr [rsp + 0x58]
    mov rdi, qword ptr [rsp + 0x60]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    ret
    call 0x140010040
    call 0x140010040
    call 0x140010040
    call 0x140010040
    call 0x140010040
    nop 
    call 0x140010040
    nop 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x20
    mov rdi, r9
    mov r14, rcx
    xor ebx, ebx
    cmp dword ptr [r8], ebx
    jge 0x1400071af
    mov rsi, rdx
    jmp 0x1400071b6
    movsxd rsi, dword ptr [r8 + 8]
    add rsi, qword ptr [rdx]
    call 0x140006d84
    sub eax, 1
    je 0x1400071fc
    cmp eax, 1
    jne 0x14000722c
    lea rdx, [rdi + 8]
    mov rcx, qword ptr [r14 + 0x28]
    call 0x140006958
    mov r14, rax
    cmp dword ptr [rdi + 0x18], ebx
    je 0x1400071e6
    call 0x1400064a4
    movsxd rbx, dword ptr [rdi + 0x18]
    add rbx, rax
    mov r9d, 1
    mov r8, r14
    mov rdx, rbx
    mov rcx, rsi
    call 0x140009b2c
    jmp 0x14000722c
    lea rdx, [rdi + 8]
    mov rcx, qword ptr [r14 + 0x28]
    call 0x140006958
    mov r14, rax
    cmp dword ptr [rdi + 0x18], ebx
    je 0x14000721d
    call 0x1400064a4
    movsxd rbx, dword ptr [rdi + 0x18]
    add rbx, rax
    mov r8, r14
    mov rdx, rbx
    mov rcx, rsi
    call 0x140009b20
    nop 
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    mov rdi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop r14
    ret
    call 0x140010040
    nop 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x20
    mov rdi, r9
    mov r14, rcx
    xor ebx, ebx
    cmp dword ptr [r8 + 4], ebx
    jge 0x140007270
    mov rsi, rdx
    jmp 0x140007277
    mov esi, dword ptr [r8 + 0xc]
    add rsi, qword ptr [rdx]
    call 0x140006f84
    sub eax, 1
    je 0x1400072bd
    cmp eax, 1
    jne 0x1400072ed
    lea rdx, [rdi + 8]
    mov rcx, qword ptr [r14 + 0x28]
    call 0x140006958
    mov r14, rax
    cmp dword ptr [rdi + 0x18], ebx
    je 0x1400072a7
    call 0x1400064a4
    movsxd rbx, dword ptr [rdi + 0x18]
    add rbx, rax
    mov r9d, 1
    mov r8, r14
    mov rdx, rbx
    mov rcx, rsi
    call 0x140009b2c
    jmp 0x1400072ed
    lea rdx, [rdi + 8]
    mov rcx, qword ptr [r14 + 0x28]
    call 0x140006958
    mov r14, rax
    cmp dword ptr [rdi + 0x18], ebx
    je 0x1400072de
    call 0x1400064a4
    movsxd rbx, dword ptr [rdi + 0x18]
    add rbx, rax
    mov r8, r14
    mov rdx, rbx
    mov rcx, rsi
    call 0x140009b20
    nop 
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    mov rdi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop r14
    ret
    call 0x140010040
    nop 
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x18], r8
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x60
    mov r13, qword ptr [rsp + 0xc0]
    mov r15, r9
    mov r12, rdx
    lea r9, [rax + 0x10]
    mov rbp, rcx
    mov r8, r13
    mov rdx, r15
    mov rcx, r12
    call 0x140005c84
    mov r9, qword ptr [rsp + 0xd0]
    mov r14, rax
    mov rsi, qword ptr [rsp + 0xc8]
    test r9, r9
    je 0x14000736f
    mov r8, rsi
    mov rdx, rax
    mov rcx, rbp
    call 0x140007188
    mov rcx, qword ptr [rsp + 0xd8]
    mov ebx, dword ptr [rcx + 8]
    mov edi, dword ptr [rcx]
    call 0x140006490
    movsxd rcx, dword ptr [rsi + 0xc]
    mov r9, r14
    mov r8, qword ptr [rsp + 0xb0]
    add rax, rcx
    mov cl, byte ptr [rsp + 0xf8]
    mov rdx, rbp
    mov byte ptr [rsp + 0x50], cl
    mov rcx, r12
    mov qword ptr [rsp + 0x48], r15
    mov qword ptr [rsp + 0x40], rsi
    mov dword ptr [rsp + 0x38], ebx
    mov dword ptr [rsp + 0x30], edi
    mov qword ptr [rsp + 0x28], r13
    mov qword ptr [rsp + 0x20], rax
    call 0x140006018
    mov rbx, qword ptr [rsp + 0xa0]
    add rsp, 0x60
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x18], r8
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x60
    mov r13, qword ptr [rsp + 0xc0]
    mov r15, r9
    mov r12, rdx
    lea r9, [rax + 0x10]
    mov rbp, rcx
    mov r8, r13
    mov rdx, r15
    mov rcx, r12
    call 0x140005d54
    mov r9, qword ptr [rsp + 0xd0]
    mov r14, rax
    mov rsi, qword ptr [rsp + 0xc8]
    test r9, r9
    je 0x140007443
    mov r8, rsi
    mov rdx, rax
    mov rcx, rbp
    call 0x140007248
    mov rcx, qword ptr [rsp + 0xd8]
    mov ebx, dword ptr [rcx + 8]
    mov edi, dword ptr [rcx]
    call 0x140006490
    movsxd rcx, dword ptr [rsi + 0x10]
    mov r9, r14
    mov r8, qword ptr [rsp + 0xb0]
    add rax, rcx
    mov cl, byte ptr [rsp + 0xf8]
    mov rdx, rbp
    mov byte ptr [rsp + 0x50], cl
    mov rcx, r12
    mov qword ptr [rsp + 0x48], r15
    mov qword ptr [rsp + 0x40], rsi
    mov dword ptr [rsp + 0x38], ebx
    mov dword ptr [rsp + 0x30], edi
    mov qword ptr [rsp + 0x28], r13
    mov qword ptr [rsp + 0x20], rax
    call 0x14000611c
    mov rbx, qword ptr [rsp + 0xa0]
    add rsp, 0x60
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    lea rbp, [rsp - 0x28]
    sub rsp, 0x128
    mov rax, qword ptr [rip + 0x22b2c]
    xor rax, rsp
    mov qword ptr [rbp + 0x10], rax
    mov rdi, qword ptr [rbp + 0x90]
    mov r12, rdx
    mov r13, qword ptr [rbp + 0xa8]
    mov r15, r8
    mov qword ptr [rsp + 0x68], r8
    mov rbx, rcx
    mov qword ptr [rbp - 0x80], rdx
    mov r8, rdi
    mov rcx, r12
    mov qword ptr [rbp - 0x68], r13
    mov rdx, r9
    mov byte ptr [rsp + 0x60], 0
    mov rsi, r9
    call 0x140009874
    mov r14d, eax
    cmp eax, -1
    jl 0x14000797c
    cmp eax, dword ptr [rdi + 4]
    jge 0x14000797c
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x1400075ff
    cmp dword ptr [rbx + 0x18], 4
    jne 0x1400075ff
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x1400075ff
    cmp qword ptr [rbx + 0x30], 0
    jne 0x1400075ff
    call 0x140006a38
    cmp qword ptr [rax + 0x20], 0
    je 0x140007915
    call 0x140006a38
    mov rbx, qword ptr [rax + 0x20]
    call 0x140006a38
    mov rcx, qword ptr [rbx + 0x38]
    mov byte ptr [rsp + 0x60], 1
    mov r15, qword ptr [rax + 0x28]
    mov qword ptr [rsp + 0x68], r15
    call 0x1400064d0
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x1400075b7
    cmp dword ptr [rbx + 0x18], 4
    jne 0x1400075b7
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x1400075b7
    cmp qword ptr [rbx + 0x30], 0
    je 0x14000797c
    call 0x140006a38
    cmp qword ptr [rax + 0x38], 0
    je 0x1400075ff
    call 0x140006a38
    mov r15, qword ptr [rax + 0x38]
    call 0x140006a38
    mov rdx, r15
    mov rcx, rbx
    and qword ptr [rax + 0x38], 0
    call 0x14000990c
    test al, al
    jne 0x1400075fa
    mov rcx, r15
    call 0x1400099fc
    test al, al
    je 0x140007959
    jmp 0x140007935
    mov r15, qword ptr [rsp + 0x68]
    mov rax, qword ptr [rsi + 8]
    mov qword ptr [rbp - 0x40], rax
    mov qword ptr [rbp - 0x48], rdi
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x1400078cc
    cmp dword ptr [rbx + 0x18], 4
    jne 0x1400078cc
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x1400078cc
    xor r15d, r15d
    cmp dword ptr [rdi + 0xc], r15d
    jbe 0x1400077fd
    mov eax, dword ptr [rbp + 0xa0]
    lea rdx, [rbp - 0x48]
    mov dword ptr [rsp + 0x28], eax
    lea rcx, [rbp - 0x28]
    mov r9, rsi
    mov qword ptr [rsp + 0x20], rdi
    mov r8d, r14d
    call 0x140005d78
    movups xmm1, xmmword ptr [rbp - 0x28]
    movdqa xmm0, xmm1
    psrldq xmm0, 8
    movd eax, xmm0
    movdqu xmmword ptr [rbp - 0x38], xmm1
    cmp eax, dword ptr [rbp - 0x10]
    jae 0x1400077fd
    mov r12d, dword ptr [rbp - 0x30]
    movq r9, xmm1
    mov qword ptr [rsp + 0x78], r9
    mov rax, qword ptr [rbp - 0x38]
    mov rax, qword ptr [rax]
    movsxd rdx, dword ptr [rax + 0x10]
    mov eax, r12d
    lea rcx, [rax + rax*4]
    mov rax, qword ptr [r9 + 8]
    lea r8, [rdx + rcx*4]
    movups xmm0, xmmword ptr [r8 + rax]
    movsxd rcx, dword ptr [r8 + rax + 0x10]
    mov dword ptr [rbp - 0x50], ecx
    movd eax, xmm0
    movups xmmword ptr [rbp - 0x60], xmm0
    cmp eax, r14d
    jg 0x1400077ec
    movq rax, xmm0
    shr rax, 0x20
    cmp r14d, eax
    jg 0x1400077ec
    add rcx, qword ptr [rsi + 8]
    psrldq xmm0, 8
    movq r13, xmm0
    mov qword ptr [rbp - 0x70], rcx
    shr r13, 0x20
    test r13d, r13d
    je 0x1400077e9
    mov eax, r15d
    lea rax, [rax + rax*4]
    movups xmm0, xmmword ptr [rcx + rax*4]
    movups xmmword ptr [rbp - 8], xmm0
    mov eax, dword ptr [rcx + rax*4 + 0x10]
    mov dword ptr [rbp + 8], eax
    call 0x1400064a4
    mov rcx, qword ptr [rbx + 0x30]
    add rax, 4
    movsxd rdx, dword ptr [rcx + 0xc]
    add rax, rdx
    mov qword ptr [rsp + 0x70], rax
    call 0x1400064a4
    mov rcx, qword ptr [rbx + 0x30]
    movsxd rdx, dword ptr [rcx + 0xc]
    mov ecx, dword ptr [rax + rdx]
    mov dword ptr [rsp + 0x64], ecx
    test ecx, ecx
    jle 0x14000777a
    call 0x1400064a4
    mov rcx, qword ptr [rsp + 0x70]
    mov r8, qword ptr [rbx + 0x30]
    movsxd rcx, dword ptr [rcx]
    add rax, rcx
    lea rcx, [rbp - 8]
    mov rdx, rax
    mov qword ptr [rbp - 0x78], rax
    call 0x1400083ec
    test eax, eax
    jne 0x14000778b
    mov eax, dword ptr [rsp + 0x64]
    add qword ptr [rsp + 0x70], 4
    dec eax
    mov dword ptr [rsp + 0x64], eax
    test eax, eax
    jg 0x14000773e
    inc r15d
    cmp r15d, r13d
    je 0x1400077e4
    mov rcx, qword ptr [rbp - 0x70]
    jmp 0x1400076f7
    mov al, byte ptr [rbp + 0x98]
    mov r9, rsi
    mov r8, qword ptr [rsp + 0x68]
    mov rcx, rbx
    mov rdx, qword ptr [rbp - 0x80]
    mov byte ptr [rsp + 0x58], al
    mov al, byte ptr [rsp + 0x60]
    mov byte ptr [rsp + 0x50], al
    mov rax, qword ptr [rbp - 0x68]
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rbp + 0xa0]
    mov dword ptr [rsp + 0x40], eax
    lea rax, [rbp - 0x60]
    mov qword ptr [rsp + 0x38], rax
    mov rax, qword ptr [rbp - 0x78]
    mov qword ptr [rsp + 0x30], rax
    lea rax, [rbp - 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rdi
    call 0x14000730c
    mov r9, qword ptr [rsp + 0x78]
    xor r15d, r15d
    inc r12d
    cmp r12d, dword ptr [rbp - 0x10]
    jb 0x14000768e
    mov r12, qword ptr [rbp - 0x80]
    mov eax, dword ptr [rdi]
    and eax, 0x1fffffff
    cmp eax, 0x19930521
    jb 0x140007909
    cmp dword ptr [rdi + 0x20], r15d
    je 0x140007823
    call 0x140006490
    movsxd rcx, dword ptr [rdi + 0x20]
    add rax, rcx
    jne 0x140007844
    mov eax, dword ptr [rdi + 0x24]
    shr eax, 2
    test al, 1
    je 0x140007909
    mov rdx, rdi
    mov rcx, rsi
    call 0x140005bb8
    test al, al
    jne 0x140007909
    mov eax, dword ptr [rdi + 0x24]
    shr eax, 2
    test al, 1
    jne 0x14000795f
    cmp dword ptr [rdi + 0x20], r15d
    je 0x140007869
    call 0x140006490
    mov rdx, rax
    movsxd rax, dword ptr [rdi + 0x20]
    add rdx, rax
    jmp 0x14000786c
    mov rdx, r15
    mov rcx, rbx
    call 0x14000990c
    test al, al
    jne 0x140007909
    lea r9, [rbp - 0x78]
    mov r8, rdi
    mov rdx, rsi
    mov rcx, r12
    call 0x140005c84
    mov cl, byte ptr [rbp + 0x98]
    mov r9, rax
    mov r8, qword ptr [rsp + 0x68]
    mov rdx, rbx
    mov byte ptr [rsp + 0x50], cl
    or ecx, 0xffffffff
    mov qword ptr [rsp + 0x48], rsi
    mov qword ptr [rsp + 0x40], r15
    mov dword ptr [rsp + 0x38], ecx
    mov dword ptr [rsp + 0x30], ecx
    mov rcx, r12
    mov qword ptr [rsp + 0x28], rdi
    mov qword ptr [rsp + 0x20], r15
    call 0x140006018
    jmp 0x140007909
    cmp dword ptr [rdi + 0xc], 0
    jbe 0x140007909
    cmp byte ptr [rbp + 0x98], 0
    jne 0x14000797c
    mov eax, dword ptr [rbp + 0xa0]
    mov r9, rsi
    mov qword ptr [rsp + 0x38], r13
    mov r8, r15
    mov dword ptr [rsp + 0x30], eax
    mov rdx, r12
    mov dword ptr [rsp + 0x28], r14d
    mov rcx, rbx
    mov qword ptr [rsp + 0x20], rdi
    call 0x140007e88
    call 0x140006a38
    cmp qword ptr [rax + 0x38], 0
    jne 0x14000797c
    mov rcx, qword ptr [rbp + 0x10]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0x128
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    mov dl, 1
    mov rcx, rbx
    call 0x1400068b4
    lea rcx, [rbp - 0x60]
    call 0x140008d3c
    lea rdx, [rip + 0x21591]
    lea rcx, [rbp - 0x60]
    call 0x1400058d0
    int3 
    call 0x14000ffb4
    int3 
    call 0x140006a38
    mov qword ptr [rax + 0x20], rbx
    call 0x140006a38
    mov rcx, qword ptr [rsp + 0x68]
    mov qword ptr [rax + 0x28], rcx
    call 0x14000ffb4
    int3 
    call 0x140010040
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    lea rbp, [rsp - 0x88]
    sub rsp, 0x188
    mov rax, qword ptr [rip + 0x22659]
    xor rax, rsp
    mov qword ptr [rbp + 0x70], rax
    mov r14, qword ptr [rbp + 0xf0]
    mov r15, rdx
    mov r12, qword ptr [rbp + 0x108]
    mov rbx, rcx
    mov qword ptr [rsp + 0x78], rdx
    mov rcx, r14
    mov rdx, r9
    mov qword ptr [rbp - 0x60], r12
    mov rsi, r9
    mov byte ptr [rsp + 0x60], 0
    mov r13, r8
    call 0x140006c24
    cmp dword ptr [rsi + 0x48], 0
    mov edi, eax
    je 0x140007a00
    call 0x140006a38
    cmp dword ptr [rax + 0x78], -2
    jne 0x140007e7f
    mov edi, dword ptr [rsi + 0x48]
    sub edi, 2
    jmp 0x140007a1f
    call 0x140006a38
    cmp dword ptr [rax + 0x78], -2
    je 0x140007a1f
    call 0x140006a38
    mov edi, dword ptr [rax + 0x78]
    call 0x140006a38
    mov dword ptr [rax + 0x78], 0xfffffffe
    cmp edi, -1
    jl 0x140007e7f
    cmp dword ptr [r14 + 8], 0
    lea r8, [rip - 0x7a34]
    je 0x140007a5f
    movsxd rdx, dword ptr [r14 + 8]
    add rdx, qword ptr [rsi + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1e610]
    mov cl, byte ptr [rcx + r8 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    jmp 0x140007a61
    xor eax, eax
    cmp edi, eax
    jge 0x140007e7f
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x140007b39
    cmp dword ptr [rbx + 0x18], 4
    jne 0x140007b39
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x140007b39
    cmp qword ptr [rbx + 0x30], 0
    jne 0x140007b39
    call 0x140006a38
    cmp qword ptr [rax + 0x20], 0
    je 0x140007e1d
    call 0x140006a38
    mov rbx, qword ptr [rax + 0x20]
    call 0x140006a38
    mov rcx, qword ptr [rbx + 0x38]
    mov byte ptr [rsp + 0x60], 1
    mov r13, qword ptr [rax + 0x28]
    call 0x1400064d0
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x140007af1
    cmp dword ptr [rbx + 0x18], 4
    jne 0x140007af1
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x140007af1
    cmp qword ptr [rbx + 0x30], 0
    je 0x140007e7f
    call 0x140006a38
    cmp qword ptr [rax + 0x38], 0
    je 0x140007b39
    call 0x140006a38
    mov r15, qword ptr [rax + 0x38]
    call 0x140006a38
    mov rdx, r15
    mov rcx, rbx
    and qword ptr [rax + 0x38], 0
    call 0x14000990c
    test al, al
    jne 0x140007b34
    mov rcx, r15
    call 0x1400099fc
    test al, al
    je 0x140007e61
    jmp 0x140007e3d
    mov r15, qword ptr [rsp + 0x78]
    mov r8, qword ptr [rsi + 8]
    lea rcx, [rbp - 0x10]
    mov rdx, r14
    call 0x140008c1c
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x140007dd5
    cmp dword ptr [rbx + 0x18], 4
    jne 0x140007dd5
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x140007dd5
    cmp dword ptr [rbp - 0x10], 0
    jbe 0x140007dba
    mov eax, dword ptr [rbp + 0x100]
    lea rdx, [rbp - 0x10]
    mov dword ptr [rsp + 0x28], eax
    lea rcx, [rbp - 0x58]
    mov r9, rsi
    mov qword ptr [rsp + 0x20], r14
    mov r8d, edi
    call 0x140005eac
    movups xmm1, xmmword ptr [rbp - 0x58]
    movdqa xmm0, xmm1
    psrldq xmm0, 8
    movd eax, xmm0
    movdqu xmmword ptr [rbp - 0x78], xmm1
    cmp eax, dword ptr [rbp - 0x40]
    jae 0x140007dba
    mov eax, dword ptr [rbp - 0x70]
    movq r15, xmm1
    mov qword ptr [rbp - 0x80], r15
    mov dword ptr [rsp + 0x68], eax
    movups xmm0, xmmword ptr [r15 + 0x18]
    movq rax, xmm0
    movups xmmword ptr [rbp - 0x78], xmm0
    cmp eax, edi
    jg 0x140007d15
    shr rax, 0x20
    cmp edi, eax
    jg 0x140007d15
    mov r9, qword ptr [rsi + 0x10]
    lea rdx, [rbp - 0x78]
    mov r8, qword ptr [rsi + 8]
    lea rcx, [rbp + 0x20]
    mov r9d, dword ptr [r9]
    call 0x140008b98
    mov eax, dword ptr [rbp + 0x20]
    xor r12d, r12d
    mov dword ptr [rsp + 0x64], r12d
    mov dword ptr [rsp + 0x6c], eax
    test eax, eax
    je 0x140007d15
    movups xmm0, xmmword ptr [rbp + 0x38]
    movups xmm1, xmmword ptr [rbp + 0x48]
    movups xmmword ptr [rbp - 0x38], xmm0
    movsd xmm0, qword ptr [rbp + 0x58]
    movsd qword ptr [rbp - 0x18], xmm0
    movups xmmword ptr [rbp - 0x28], xmm1
    call 0x1400064a4
    mov rcx, qword ptr [rbx + 0x30]
    add rax, 4
    movsxd rdx, dword ptr [rcx + 0xc]
    add rax, rdx
    mov qword ptr [rsp + 0x70], rax
    call 0x1400064a4
    mov rcx, qword ptr [rbx + 0x30]
    movsxd rdx, dword ptr [rcx + 0xc]
    mov r15d, dword ptr [rax + rdx]
    test r15d, r15d
    jle 0x140007c9f
    call 0x1400064a4
    mov r8, qword ptr [rbx + 0x30]
    mov r12, rax
    mov rax, qword ptr [rsp + 0x70]
    movsxd rcx, dword ptr [rax]
    add r12, rcx
    lea rcx, [rbp - 0x38]
    mov rdx, r12
    call 0x14000852c
    test eax, eax
    jne 0x140007cbd
    add qword ptr [rsp + 0x70], 4
    dec r15d
    test r15d, r15d
    jg 0x140007c65
    mov r12d, dword ptr [rsp + 0x64]
    lea rcx, [rbp + 0x20]
    call 0x140009198
    inc r12d
    mov dword ptr [rsp + 0x64], r12d
    cmp r12d, dword ptr [rsp + 0x6c]
    jne 0x140007c1c
    jmp 0x140007d11
    mov al, byte ptr [rbp + 0xf8]
    mov r9, rsi
    mov rdx, qword ptr [rsp + 0x78]
    mov r8, r13
    mov byte ptr [rsp + 0x58], al
    mov rcx, rbx
    mov al, byte ptr [rsp + 0x60]
    mov byte ptr [rsp + 0x50], al
    mov rax, qword ptr [rbp - 0x60]
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rbp + 0x100]
    mov dword ptr [rsp + 0x40], eax
    lea rax, [rbp - 0x78]
    mov qword ptr [rsp + 0x38], rax
    lea rax, [rbp - 0x38]
    mov qword ptr [rsp + 0x30], r12
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], r14
    call 0x1400073e0
    mov r15, qword ptr [rbp - 0x80]
    mov r8, qword ptr [r15 + 8]
    lea rdx, [rip - 0x7d20]
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + rdx + 0x1e610]
    mov cl, byte ptr [rcx + rdx + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [r15 + 8], r8
    mov dword ptr [r15 + 0x18], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + rdx + 0x1e610]
    mov cl, byte ptr [rcx + rdx + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [r15 + 8], r8
    mov dword ptr [r15 + 0x1c], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + rdx + 0x1e610]
    mov cl, byte ptr [rcx + rdx + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov ecx, dword ptr [rsp + 0x68]
    mov dword ptr [r15 + 0x20], eax
    inc ecx
    mov qword ptr [r15 + 8], r8
    lea rax, [r8 + 4]
    mov edx, dword ptr [r8]
    mov qword ptr [r15 + 8], rax
    mov dword ptr [r15 + 0x24], edx
    mov dword ptr [rsp + 0x68], ecx
    cmp ecx, dword ptr [rbp - 0x40]
    jb 0x140007bcb
    test byte ptr [r14], 0x40
    je 0x140007e11
    mov rdx, r14
    mov rcx, rsi
    call 0x140005be4
    test al, al
    je 0x140007e67
    jmp 0x140007e11
    cmp dword ptr [rbp - 0x10], 0
    jbe 0x140007e11
    cmp byte ptr [rbp + 0xf8], 0
    jne 0x140007e7f
    mov eax, dword ptr [rbp + 0x100]
    mov r9, rsi
    mov qword ptr [rsp + 0x38], r12
    mov r8, r13
    mov dword ptr [rsp + 0x30], eax
    mov rdx, r15
    mov dword ptr [rsp + 0x28], edi
    mov rcx, rbx
    mov qword ptr [rsp + 0x20], r14
    call 0x1400080f8
    call 0x140006a38
    cmp qword ptr [rax + 0x38], 0
    jne 0x140007e7f
    mov rcx, qword ptr [rbp + 0x70]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0x188
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    mov dl, 1
    mov rcx, rbx
    call 0x1400068b4
    lea rcx, [rbp - 0x78]
    call 0x140008d3c
    lea rdx, [rip + 0x21089]
    lea rcx, [rbp - 0x78]
    call 0x1400058d0
    int3 
    call 0x14000ffb4
    int3 
    call 0x140006a38
    mov qword ptr [rax + 0x20], rbx
    call 0x140006a38
    mov qword ptr [rax + 0x28], r13
    call 0x14000ffb4
    int3 
    call 0x140010040
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x20], rbx
    mov qword ptr [rsp + 0x18], r8
    mov qword ptr [rsp + 0x10], rdx
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0xc0
    cmp dword ptr [rcx], 0x80000003
    mov rbp, r9
    mov r12, r8
    mov r14, rdx
    mov rsi, rcx
    je 0x1400080d4
    call 0x140006a38
    mov r13d, dword ptr [rsp + 0x130]
    mov r15d, dword ptr [rsp + 0x128]
    mov rdi, qword ptr [rsp + 0x120]
    cmp qword ptr [rax + 0x10], 0
    je 0x140007f40
    xor ecx, ecx
    call qword ptr [rip + 0x161cb]
    mov rbx, rax
    call 0x140006a38
    cmp qword ptr [rax + 0x10], rbx
    je 0x140007f40
    cmp dword ptr [rsi], 0xe0434f4d
    je 0x140007f40
    cmp dword ptr [rsi], 0xe0434352
    je 0x140007f40
    mov rax, qword ptr [rsp + 0x138]
    mov r9, rbp
    mov dword ptr [rsp + 0x38], r15d
    mov r8, r12
    mov qword ptr [rsp + 0x30], rax
    mov rdx, r14
    mov dword ptr [rsp + 0x28], r13d
    mov rcx, rsi
    mov qword ptr [rsp + 0x20], rdi
    call 0x140005978
    test eax, eax
    jne 0x1400080d4
    mov rax, qword ptr [rbp + 8]
    mov qword ptr [rsp + 0x68], rax
    mov qword ptr [rsp + 0x60], rdi
    cmp dword ptr [rdi + 0xc], 0
    jbe 0x1400080ef
    mov dword ptr [rsp + 0x28], r13d
    lea rdx, [rsp + 0x60]
    mov r9, rbp
    mov qword ptr [rsp + 0x20], rdi
    mov r8d, r15d
    lea rcx, [rsp + 0x98]
    call 0x140005d78
    movups xmm1, xmmword ptr [rsp + 0x98]
    movdqa xmm0, xmm1
    psrldq xmm0, 8
    movd eax, xmm0
    movdqu xmmword ptr [rsp + 0x70], xmm1
    cmp eax, dword ptr [rsp + 0xb0]
    jae 0x1400080d4
    mov r14d, dword ptr [rsp + 0x78]
    movq r9, xmm1
    mov qword ptr [rsp + 0x100], r9
    mov rax, qword ptr [rsp + 0x70]
    mov rax, qword ptr [rax]
    movsxd rdx, dword ptr [rax + 0x10]
    mov eax, r14d
    lea rcx, [rax + rax*4]
    mov rax, qword ptr [r9 + 8]
    lea r8, [rdx + rcx*4]
    movups xmm0, xmmword ptr [r8 + rax]
    movsxd rdx, dword ptr [r8 + rax + 0x10]
    mov dword ptr [rsp + 0x90], edx
    movd eax, xmm0
    movups xmmword ptr [rsp + 0x80], xmm0
    cmp eax, r15d
    jg 0x1400080b3
    movq rax, xmm0
    shr rax, 0x20
    cmp r15d, eax
    jg 0x1400080b3
    mov rbx, qword ptr [rbp + 8]
    add rbx, -0x14
    psrldq xmm0, 8
    movq rax, xmm0
    shr rax, 0x20
    lea rcx, [rax + rax*4]
    lea rdx, [rdx + rcx*4]
    add rbx, rdx
    cmp dword ptr [rbx + 4], 0
    je 0x14000805f
    movsxd r12, dword ptr [rbx + 4]
    call 0x140006490
    add rax, r12
    je 0x140008057
    test r12d, r12d
    je 0x14000804f
    call 0x140006490
    movsxd rcx, dword ptr [rbx + 4]
    add rax, rcx
    jmp 0x140008051
    xor eax, eax
    cmp byte ptr [rax + 0x10], 0
    jne 0x1400080b3
    mov r12, qword ptr [rsp + 0x110]
    test byte ptr [rbx], 0x40
    jne 0x1400080b3
    mov rax, qword ptr [rsp + 0x138]
    mov r9, rbp
    mov rdx, qword ptr [rsp + 0x108]
    mov r8, r12
    mov byte ptr [rsp + 0x58], 0
    mov rcx, rsi
    mov byte ptr [rsp + 0x50], 1
    mov qword ptr [rsp + 0x48], rax
    lea rax, [rsp + 0x80]
    mov dword ptr [rsp + 0x40], r13d
    mov qword ptr [rsp + 0x38], rax
    and qword ptr [rsp + 0x30], 0
    mov qword ptr [rsp + 0x28], rbx
    mov qword ptr [rsp + 0x20], rdi
    call 0x14000730c
    mov r12, qword ptr [rsp + 0x110]
    inc r14d
    mov r9, qword ptr [rsp + 0x100]
    cmp r14d, dword ptr [rsp + 0xb0]
    jb 0x140007fb4
    mov rbx, qword ptr [rsp + 0x118]
    add rsp, 0xc0
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    call 0x140010040
    int3 
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    lea rbp, [rsp - 0x38]
    sub rsp, 0x138
    mov rax, qword ptr [rip + 0x21ee8]
    xor rax, rsp
    mov qword ptr [rbp + 0x28], rax
    cmp dword ptr [rcx], 0x80000003
    mov rdi, r9
    mov rax, qword ptr [rbp + 0xb8]
    mov r13, rdx
    mov r14, qword ptr [rbp + 0xa0]
    mov rsi, rcx
    mov qword ptr [rsp + 0x70], rax
    mov qword ptr [rsp + 0x78], r8
    je 0x1400083c6
    call 0x140006a38
    mov r12d, dword ptr [rbp + 0xb0]
    mov r15d, dword ptr [rbp + 0xa8]
    cmp qword ptr [rax + 0x10], 0
    je 0x1400081c0
    xor ecx, ecx
    call qword ptr [rip + 0x15f4a]
    mov rbx, rax
    call 0x140006a38
    cmp qword ptr [rax + 0x10], rbx
    je 0x1400081c0
    cmp dword ptr [rsi], 0xe0434f4d
    je 0x1400081c0
    cmp dword ptr [rsi], 0xe0434352
    je 0x1400081c0
    mov rax, qword ptr [rsp + 0x70]
    mov r9, rdi
    mov r8, qword ptr [rsp + 0x78]
    mov rdx, r13
    mov dword ptr [rsp + 0x38], r15d
    mov rcx, rsi
    mov qword ptr [rsp + 0x30], rax
    mov dword ptr [rsp + 0x28], r12d
    mov qword ptr [rsp + 0x20], r14
    call 0x1400059cc
    test eax, eax
    jne 0x1400083c6
    mov r8, qword ptr [rdi + 8]
    lea rcx, [rbp]
    mov rdx, r14
    call 0x140008c1c
    cmp dword ptr [rbp], 0
    jbe 0x1400083e6
    mov dword ptr [rsp + 0x28], r12d
    lea rdx, [rbp]
    mov r9, rdi
    mov qword ptr [rsp + 0x20], r14
    mov r8d, r15d
    lea rcx, [rbp - 0x70]
    call 0x140005eac
    movups xmm1, xmmword ptr [rbp - 0x70]
    movdqa xmm0, xmm1
    psrldq xmm0, 8
    movd eax, xmm0
    movdqu xmmword ptr [rbp - 0x80], xmm1
    cmp eax, dword ptr [rbp - 0x58]
    jae 0x1400083c6
    mov eax, dword ptr [rbp - 0x78]
    lea r9, [rip - 0x8220]
    movq r8, xmm1
    mov dword ptr [rsp + 0x60], eax
    mov qword ptr [rsp + 0x68], r8
    movups xmm0, xmmword ptr [r8 + 0x18]
    movq rax, xmm0
    movups xmmword ptr [rbp - 0x80], xmm0
    cmp eax, r15d
    jg 0x14000832c
    shr rax, 0x20
    cmp r15d, eax
    jg 0x14000832c
    mov r9, qword ptr [rdi + 0x10]
    lea rdx, [rbp - 0x80]
    mov r8, qword ptr [rdi + 8]
    lea rcx, [rbp - 0x50]
    mov r9d, dword ptr [r9]
    call 0x140008b98
    mov rax, qword ptr [rbp - 0x40]
    lea rcx, [rbp - 0x50]
    mov qword ptr [rbp - 0x48], rax
    call 0x140009198
    mov rax, qword ptr [rbp - 0x40]
    lea rcx, [rbp - 0x50]
    mov ebx, dword ptr [rbp - 0x50]
    mov qword ptr [rbp - 0x48], rax
    call 0x140009198
    sub ebx, 1
    je 0x1400082a3
    lea rcx, [rbp - 0x50]
    call 0x140009198
    sub rbx, 1
    jne 0x140008294
    cmp dword ptr [rbp - 0x30], 0
    je 0x1400082d1
    call 0x140006490
    movsxd rdx, dword ptr [rbp - 0x30]
    add rax, rdx
    je 0x1400082d1
    test edx, edx
    je 0x1400082c9
    call 0x140006490
    movsxd rcx, dword ptr [rbp - 0x30]
    add rax, rcx
    jmp 0x1400082cb
    xor eax, eax
    cmp byte ptr [rax + 0x10], 0
    jne 0x140008320
    test byte ptr [rbp - 0x34], 0x40
    jne 0x140008320
    mov rax, qword ptr [rsp + 0x70]
    mov r9, rdi
    mov r8, qword ptr [rsp + 0x78]
    mov rdx, r13
    mov byte ptr [rsp + 0x58], 0
    mov rcx, rsi
    mov byte ptr [rsp + 0x50], 1
    mov qword ptr [rsp + 0x48], rax
    lea rax, [rbp - 0x80]
    mov dword ptr [rsp + 0x40], r12d
    mov qword ptr [rsp + 0x38], rax
    lea rax, [rbp - 0x38]
    and qword ptr [rsp + 0x30], 0
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], r14
    call 0x1400073e0
    mov r8, qword ptr [rsp + 0x68]
    lea r9, [rip - 0x832c]
    mov rdx, qword ptr [r8 + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r9 + 0x1e610]
    mov cl, byte ptr [rcx + r9 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r8 + 8], rdx
    mov dword ptr [r8 + 0x18], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r9 + 0x1e610]
    mov cl, byte ptr [rcx + r9 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r8 + 8], rdx
    mov dword ptr [r8 + 0x1c], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r9 + 0x1e610]
    mov cl, byte ptr [rcx + r9 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [r8 + 0x20], eax
    lea rax, [rdx + 4]
    mov qword ptr [r8 + 8], rdx
    mov ecx, dword ptr [rdx]
    mov dword ptr [r8 + 0x24], ecx
    mov ecx, dword ptr [rsp + 0x60]
    inc ecx
    mov qword ptr [r8 + 8], rax
    mov dword ptr [rsp + 0x60], ecx
    cmp ecx, dword ptr [rbp - 0x58]
    jb 0x14000822e
    mov rcx, qword ptr [rbp + 0x28]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0x138
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    call 0x140010040
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x20
    xor ebx, ebx
    mov r14, r8
    mov rbp, rdx
    mov rdi, rcx
    cmp dword ptr [rcx + 4], ebx
    je 0x140008509
    movsxd rsi, dword ptr [rcx + 4]
    call 0x140006490
    mov r9, rax
    add r9, rsi
    je 0x140008509
    test esi, esi
    je 0x140008441
    movsxd rsi, dword ptr [rdi + 4]
    call 0x140006490
    lea rcx, [rsi + rax]
    jmp 0x140008446
    mov rcx, rbx
    mov esi, ebx
    cmp byte ptr [rcx + 0x10], bl
    je 0x140008509
    test byte ptr [rdi], 0x80
    je 0x14000845e
    test byte ptr [rbp], 0x10
    jne 0x140008509
    test esi, esi
    je 0x140008473
    call 0x140006490
    mov rsi, rax
    movsxd rax, dword ptr [rdi + 4]
    add rsi, rax
    jmp 0x140008476
    mov rsi, rbx
    call 0x1400064a4
    mov rcx, rax
    movsxd rax, dword ptr [rbp + 4]
    add rcx, rax
    cmp rsi, rcx
    je 0x1400084d5
    cmp dword ptr [rdi + 4], ebx
    je 0x1400084a0
    call 0x140006490
    mov rsi, rax
    movsxd rax, dword ptr [rdi + 4]
    add rsi, rax
    jmp 0x1400084a3
    mov rsi, rbx
    call 0x1400064a4
    movsxd r8, dword ptr [rbp + 4]
    add r8, 0x10
    add r8, rax
    lea rax, [rsi + 0x10]
    sub r8, rax
    movzx ecx, byte ptr [rax]
    movzx edx, byte ptr [rax + r8]
    sub ecx, edx
    jne 0x1400084cd
    inc rax
    test edx, edx
    jne 0x1400084ba
    test ecx, ecx
    je 0x1400084d5
    xor eax, eax
    jmp 0x14000850e
    mov al, 2
    test byte ptr [rbp], al
    je 0x1400084e1
    test byte ptr [rdi], 8
    je 0x140008505
    test byte ptr [r14], 1
    je 0x1400084ec
    test byte ptr [rdi], 1
    je 0x140008505
    test byte ptr [r14], 4
    je 0x1400084f7
    test byte ptr [rdi], 4
    je 0x140008505
    test byte ptr [r14], al
    je 0x140008500
    test byte ptr [rdi], al
    je 0x140008505
    mov ebx, 1
    mov eax, ebx
    jmp 0x14000850e
    mov eax, 1
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop r14
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    xor ebx, ebx
    mov r15, r8
    mov r14, rdx
    mov rdi, rcx
    cmp dword ptr [rcx + 8], ebx
    je 0x140008659
    movsxd rsi, dword ptr [rcx + 8]
    call 0x140006490
    mov r8, rax
    add r8, rsi
    je 0x140008659
    test esi, esi
    je 0x140008580
    movsxd rbp, dword ptr [rdi + 8]
    call 0x140006490
    lea rcx, [rax + rbp]
    jmp 0x140008585
    mov rcx, rbx
    mov ebp, ebx
    cmp byte ptr [rcx + 0x10], bl
    je 0x140008659
    lea rsi, [rdi + 4]
    test byte ptr [rsi], 0x80
    je 0x1400085a1
    test byte ptr [r14], 0x10
    jne 0x140008659
    test ebp, ebp
    je 0x1400085b6
    call 0x140006490
    mov rbp, rax
    movsxd rax, dword ptr [rdi + 8]
    add rbp, rax
    jmp 0x1400085b9
    mov rbp, rbx
    call 0x1400064a4
    mov rcx, rax
    movsxd rax, dword ptr [r14 + 4]
    add rcx, rax
    cmp rbp, rcx
    je 0x14000861c
    cmp dword ptr [rdi + 8], ebx
    je 0x1400085e3
    call 0x140006490
    mov rsi, rax
    movsxd rax, dword ptr [rdi + 8]
    add rsi, rax
    jmp 0x1400085e6
    mov rsi, rbx
    call 0x1400064a4
    movsxd r8, dword ptr [r14 + 4]
    add r8, 0x10
    add r8, rax
    lea rax, [rsi + 0x10]
    sub r8, rax
    movzx ecx, byte ptr [rax]
    movzx edx, byte ptr [rax + r8]
    sub ecx, edx
    jne 0x140008610
    inc rax
    test edx, edx
    jne 0x1400085fd
    test ecx, ecx
    je 0x140008618
    xor eax, eax
    jmp 0x14000865e
    lea rsi, [rdi + 4]
    mov al, 2
    test byte ptr [r14], al
    je 0x14000862e
    test byte ptr [rsi], 8
    je 0x140008655
    add rdi, 4
    jmp 0x140008631
    mov rdi, rsi
    test byte ptr [r15], 1
    je 0x14000863c
    test byte ptr [rsi], 1
    je 0x140008655
    test byte ptr [r15], 4
    je 0x140008647
    test byte ptr [rsi], 4
    je 0x140008655
    test byte ptr [r15], al
    je 0x140008650
    test byte ptr [rdi], al
    je 0x140008655
    mov ebx, 1
    mov eax, ebx
    jmp 0x14000865e
    mov eax, 1
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x50
    mov rdi, rcx
    mov rsi, r9
    mov rcx, r8
    mov r14, r8
    mov rbp, rdx
    call 0x140009d24
    call 0x140006a38
    mov rbx, qword ptr [rsp + 0x80]
    mov ecx, 0x80000029
    mov edx, 0x80000026
    cmp dword ptr [rax + 0x40], 0
    jne 0x1400086fa
    cmp dword ptr [rdi], 0xe06d7363
    je 0x1400086fa
    cmp dword ptr [rdi], ecx
    jne 0x1400086de
    cmp dword ptr [rdi + 0x18], 0xf
    jne 0x1400086e2
    cmp qword ptr [rdi + 0x60], 0x19930520
    je 0x1400086fa
    cmp dword ptr [rdi], edx
    je 0x1400086fa
    mov eax, dword ptr [rbx]
    and eax, 0x1fffffff
    cmp eax, 0x19930522
    jb 0x1400086fa
    test byte ptr [rbx + 0x24], 1
    jne 0x140008889
    test byte ptr [rdi + 4], 0x66
    je 0x140008792
    cmp dword ptr [rbx + 4], 0
    je 0x140008889
    cmp dword ptr [rsp + 0x88], 0
    jne 0x140008889
    test byte ptr [rdi + 4], 0x20
    je 0x14000877f
    cmp dword ptr [rdi], edx
    jne 0x14000875d
    mov r8, qword ptr [rsi + 0x20]
    mov rdx, rsi
    mov rcx, rbx
    call 0x140006c2c
    cmp eax, -1
    jl 0x1400088a9
    cmp eax, dword ptr [rbx + 4]
    jge 0x1400088a9
    mov r9d, eax
    mov rcx, rbp
    mov rdx, rsi
    mov r8, rbx
    call 0x1400093e0
    jmp 0x140008889
    cmp dword ptr [rdi], ecx
    jne 0x14000877f
    mov r9d, dword ptr [rdi + 0x38]
    cmp r9d, -1
    jl 0x1400088a9
    cmp r9d, dword ptr [rbx + 4]
    jge 0x1400088a9
    mov rcx, qword ptr [rdi + 0x28]
    jmp 0x14000874d
    mov r8, rbx
    mov rdx, rsi
    mov rcx, rbp
    call 0x140005bec
    jmp 0x140008889
    cmp dword ptr [rbx + 0xc], 0
    jne 0x1400087da
    mov eax, dword ptr [rbx]
    and eax, 0x1fffffff
    cmp eax, 0x19930521
    jb 0x1400087ba
    cmp dword ptr [rbx + 0x20], 0
    je 0x1400087ba
    call 0x140006490
    movsxd rcx, dword ptr [rbx + 0x20]
    add rax, rcx
    jne 0x1400087da
    mov eax, dword ptr [rbx]
    and eax, 0x1fffffff
    cmp eax, 0x19930522
    jb 0x140008889
    mov eax, dword ptr [rbx + 0x24]
    shr eax, 2
    test al, 1
    je 0x140008889
    cmp dword ptr [rdi], 0xe06d7363
    jne 0x140008850
    cmp dword ptr [rdi + 0x18], 3
    jb 0x140008850
    cmp dword ptr [rdi + 0x20], 0x19930522
    jbe 0x140008850
    mov rax, qword ptr [rdi + 0x30]
    cmp dword ptr [rax + 8], 0
    je 0x140008850
    call 0x1400064a4
    mov rcx, qword ptr [rdi + 0x30]
    mov r10, rax
    movsxd rdx, dword ptr [rcx + 8]
    add r10, rdx
    je 0x140008850
    movzx ecx, byte ptr [rsp + 0x98]
    mov r9, rsi
    mov eax, dword ptr [rsp + 0x88]
    mov r8, r14
    mov dword ptr [rsp + 0x38], ecx
    mov rdx, rbp
    mov rcx, qword ptr [rsp + 0x90]
    mov qword ptr [rsp + 0x30], rcx
    mov rcx, rdi
    mov dword ptr [rsp + 0x28], eax
    mov rax, r10
    mov qword ptr [rsp + 0x20], rbx
    call qword ptr [rip + 0x15a22]
    jmp 0x14000888e
    mov rax, qword ptr [rsp + 0x90]
    mov r9, rsi
    mov qword ptr [rsp + 0x38], rax
    mov r8, r14
    mov eax, dword ptr [rsp + 0x88]
    mov rdx, rbp
    mov dword ptr [rsp + 0x30], eax
    mov rcx, rdi
    mov al, byte ptr [rsp + 0x98]
    mov byte ptr [rsp + 0x28], al
    mov qword ptr [rsp + 0x20], rbx
    call 0x1400074b4
    mov eax, 1
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    mov rdi, qword ptr [rsp + 0x78]
    add rsp, 0x50
    pop r14
    ret
    call 0x140010040
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x80
    mov rbx, rcx
    mov rbp, r9
    mov rcx, r8
    mov r15, r8
    mov r14, rdx
    call 0x140009d24
    call 0x140006a38
    mov rdi, qword ptr [rsp + 0xc0]
    xor esi, esi
    mov r8d, 0x80000029
    mov r9d, 0x80000026
    cmp dword ptr [rax + 0x40], esi
    jne 0x14000892a
    cmp dword ptr [rbx], 0xe06d7363
    je 0x14000892a
    cmp dword ptr [rbx], r8d
    jne 0x14000891c
    cmp dword ptr [rbx + 0x18], 0xf
    jne 0x140008921
    cmp qword ptr [rbx + 0x60], 0x19930520
    je 0x14000892a
    cmp dword ptr [rbx], r9d
    je 0x14000892a
    test byte ptr [rdi], 0x20
    jne 0x140008b1c
    test byte ptr [rbx + 4], 0x66
    je 0x140008a4e
    cmp dword ptr [rdi + 8], esi
    je 0x140008b1c
    movsxd rdx, dword ptr [rdi + 8]
    lea r15, [rip - 0x8948]
    add rdx, qword ptr [rbp + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r15 + 0x1e610]
    mov cl, byte ptr [rcx + r15 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    test eax, eax
    je 0x140008b1c
    cmp dword ptr [rsp + 0xc8], esi
    jne 0x140008b1c
    test byte ptr [rbx + 4], 0x20
    je 0x140008a3b
    cmp dword ptr [rbx], r9d
    jne 0x1400089f2
    mov r8, qword ptr [rbp + 0x20]
    mov rdx, rbp
    mov rcx, rdi
    call 0x140006c94
    mov r9d, eax
    cmp eax, -1
    jl 0x140008b3e
    cmp dword ptr [rdi + 8], esi
    je 0x1400089d6
    movsxd rdx, dword ptr [rdi + 8]
    add rdx, qword ptr [rbp + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r15 + 0x1e610]
    mov cl, byte ptr [rcx + r15 + 0x1e620]
    sub rdx, rax
    mov esi, dword ptr [rdx - 4]
    shr esi, cl
    cmp r9d, esi
    jge 0x140008b3e
    mov rcx, r14
    mov rdx, rbp
    mov r8, rdi
    call 0x14000956c
    jmp 0x140008b1c
    cmp dword ptr [rbx], r8d
    jne 0x140008a3b
    mov r9d, dword ptr [rbx + 0x38]
    cmp r9d, -1
    jl 0x140008b3e
    movsxd rdx, dword ptr [rdi + 8]
    add rdx, qword ptr [rbp + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r15 + 0x1e610]
    mov cl, byte ptr [rcx + r15 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    cmp r9d, eax
    jge 0x140008b3e
    mov rcx, qword ptr [rbx + 0x28]
    jmp 0x1400089e2
    mov r8, rdi
    mov rdx, rbp
    mov rcx, r14
    call 0x140005c50
    jmp 0x140008b1c
    mov r8, qword ptr [rbp + 8]
    lea rcx, [rsp + 0x50]
    mov rdx, rdi
    call 0x140008c1c
    cmp dword ptr [rsp + 0x50], esi
    jne 0x140008a6e
    test byte ptr [rdi], 0x40
    je 0x140008b1c
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x140008ae3
    cmp dword ptr [rbx + 0x18], 3
    jb 0x140008ae3
    cmp dword ptr [rbx + 0x20], 0x19930522
    jbe 0x140008ae3
    mov rax, qword ptr [rbx + 0x30]
    cmp dword ptr [rax + 8], esi
    je 0x140008ae3
    call 0x1400064a4
    mov rcx, qword ptr [rbx + 0x30]
    mov r10, rax
    movsxd rdx, dword ptr [rcx + 8]
    add r10, rdx
    je 0x140008ae3
    movzx ecx, byte ptr [rsp + 0xd8]
    mov r9, rbp
    mov eax, dword ptr [rsp + 0xc8]
    mov r8, r15
    mov dword ptr [rsp + 0x38], ecx
    mov rdx, r14
    mov rcx, qword ptr [rsp + 0xd0]
    mov qword ptr [rsp + 0x30], rcx
    mov rcx, rbx
    mov dword ptr [rsp + 0x28], eax
    mov rax, r10
    mov qword ptr [rsp + 0x20], rdi
    call qword ptr [rip + 0x1578f]
    jmp 0x140008b21
    mov rax, qword ptr [rsp + 0xd0]
    mov r9, rbp
    mov qword ptr [rsp + 0x38], rax
    mov r8, r15
    mov eax, dword ptr [rsp + 0xc8]
    mov rdx, r14
    mov dword ptr [rsp + 0x30], eax
    mov rcx, rbx
    mov al, byte ptr [rsp + 0xd8]
    mov byte ptr [rsp + 0x28], al
    mov qword ptr [rsp + 0x20], rdi
    call 0x140007984
    mov eax, 1
    lea r11, [rsp + 0x80]
    mov rbx, qword ptr [r11 + 0x20]
    mov rbp, qword ptr [r11 + 0x28]
    mov rsi, qword ptr [r11 + 0x30]
    mov rsp, r11
    pop r15
    pop r14
    pop rdi
    ret
    call 0x140010040
    int3 
    jmp 0x140008678
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x40
    mov al, byte ptr [rsp + 0x88]
    mov byte ptr [rsp + 0x38], al
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x30], rax
    mov eax, dword ptr [rsp + 0x78]
    mov dword ptr [rsp + 0x28], eax
    mov rax, qword ptr [rsp + 0x70]
    mov qword ptr [rsp + 0x20], rax
    call 0x1400088b0
    mov ebx, eax
    call 0x140006a38
    mov dword ptr [rax + 0x78], 0xfffffffe
    mov eax, ebx
    add rsp, 0x40
    pop rbx
    ret
    int3 
    push rbx
    sub rsp, 0x20
    xor eax, eax
    xorps xmm0, xmm0
    mov qword ptr [rcx + 8], rax
    mov rbx, rcx
    mov qword ptr [rcx + 0x10], rax
    mov byte ptr [rcx + 0x18], al
    mov qword ptr [rcx + 0x1c], rax
    mov qword ptr [rcx + 0x24], rax
    movups xmmword ptr [rcx + 0x30], xmm0
    mov qword ptr [rcx + 0x40], r8
    mov dword ptr [rcx + 0x48], r9d
    cmp dword ptr [rdx + 0xc], eax
    je 0x140008c0f
    movsxd rdx, dword ptr [rdx + 0xc]
    add rdx, r8
    lea r8, [rip - 0x8bd8]
    mov qword ptr [rcx + 8], rdx
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1e610]
    mov cl, byte ptr [rcx + r8 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov rcx, rbx
    mov dword ptr [rbx], eax
    mov qword ptr [rbx + 8], rdx
    mov qword ptr [rbx + 0x10], rdx
    call 0x140009198
    jmp 0x140008c11
    mov dword ptr [rcx], eax
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    xor eax, eax
    xorps xmm0, xmm0
    mov qword ptr [rcx + 8], rax
    mov r9, rcx
    mov qword ptr [rcx + 0x10], rax
    movups xmmword ptr [rcx + 0x18], xmm0
    cmp dword ptr [rdx + 0xc], eax
    je 0x140008cfa
    movsxd rdx, dword ptr [rdx + 0xc]
    add rdx, r8
    lea r8, [rip - 0x8c47]
    mov qword ptr [rcx + 8], rdx
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1e610]
    mov cl, byte ptr [rcx + r8 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9], eax
    mov qword ptr [r9 + 0x10], rdx
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1e610]
    mov cl, byte ptr [rcx + r8 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x18], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1e610]
    mov cl, byte ptr [rcx + r8 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x1c], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1e610]
    mov cl, byte ptr [rcx + r8 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [r9 + 0x20], eax
    lea rax, [rdx + 4]
    mov qword ptr [r9 + 8], rdx
    mov ecx, dword ptr [rdx]
    mov qword ptr [r9 + 8], rax
    mov dword ptr [r9 + 0x24], ecx
    jmp 0x140008cfc
    mov dword ptr [rcx], eax
    mov rax, r9
    ret
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov rax, rdx
    lea rcx, [rip + 0x15755]
    xorps xmm0, xmm0
    mov qword ptr [rbx], rcx
    lea rdx, [rbx + 8]
    lea rcx, [rax + 8]
    movups xmmword ptr [rdx], xmm0
    call 0x140005810
    lea rax, [rip + 0x15a48]
    mov qword ptr [rbx], rax
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    and qword ptr [rcx + 0x10], 0
    lea rax, [rip + 0x15a40]
    mov qword ptr [rcx + 8], rax
    lea rax, [rip + 0x15a25]
    mov qword ptr [rcx], rax
    mov rax, rcx
    ret
    int3 
    int3 
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x70
    mov rdi, rcx
    xor r15d, r15d
    mov dword ptr [rsp + 0x20], r15d
    and dword ptr [rsp + 0xb0], r15d
    and qword ptr [rsp + 0x28], r15
    and qword ptr [rsp + 0xc8], r15
    call 0x140006a38
    mov r13, qword ptr [rax + 0x28]
    mov qword ptr [rsp + 0x40], r13
    call 0x140006a38
    mov rax, qword ptr [rax + 0x20]
    mov qword ptr [rsp + 0xc0], rax
    mov rsi, qword ptr [rdi + 0x50]
    mov qword ptr [rsp + 0xb8], rsi
    mov rax, qword ptr [rdi + 0x48]
    mov qword ptr [rsp + 0x30], rax
    mov rbx, qword ptr [rdi + 0x40]
    mov rax, qword ptr [rdi + 0x30]
    mov qword ptr [rsp + 0x48], rax
    mov r14, qword ptr [rdi + 0x28]
    mov qword ptr [rsp + 0x50], r14
    mov rcx, rbx
    call 0x140009d24
    call 0x140006a38
    mov qword ptr [rax + 0x20], rsi
    call 0x140006a38
    mov qword ptr [rax + 0x28], rbx
    call 0x140006a38
    mov rdx, qword ptr [rax + 0x20]
    mov rdx, qword ptr [rdx + 0x28]
    lea rcx, [rsp + 0x60]
    call 0x140006400
    mov r12, rax
    mov qword ptr [rsp + 0x38], rax
    cmp qword ptr [rdi + 0x58], r15
    je 0x140008e31
    mov dword ptr [rsp + 0xb0], 1
    call 0x140006a38
    mov rcx, qword ptr [rax + 0x70]
    mov qword ptr [rsp + 0xc8], rcx
    mov r8d, 0x100
    mov rdx, r14
    mov rcx, qword ptr [rsp + 0x48]
    call 0x14000aec0
    mov rbx, rax
    mov qword ptr [rsp + 0x28], rax
    mov rdi, qword ptr [rsp + 0xc0]
    jmp 0x140008ece
    mov dword ptr [rsp + 0x20], 1
    call 0x140006a38
    and dword ptr [rax + 0x40], 0
    mov rsi, qword ptr [rsp + 0xb8]
    cmp dword ptr [rsp + 0xb0], 0
    je 0x140008e9a
    mov dl, 1
    mov rcx, rsi
    call 0x1400068b4
    mov rcx, qword ptr [rsp + 0xc8]
    lea r9, [rcx + 0x20]
    mov r8d, dword ptr [rcx + 0x18]
    mov edx, dword ptr [rcx + 4]
    mov ecx, dword ptr [rcx]
    jmp 0x140008ea7
    lea r9, [rsi + 0x20]
    mov r8d, dword ptr [rsi + 0x18]
    mov edx, dword ptr [rsi + 4]
    mov ecx, dword ptr [rsi]
    call qword ptr [rip + 0x151eb]
    mov r15d, dword ptr [rsp + 0x20]
    mov rbx, qword ptr [rsp + 0x28]
    mov r13, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0xc0]
    mov r14, qword ptr [rsp + 0x50]
    mov r12, qword ptr [rsp + 0x38]
    mov rcx, r12
    call 0x14000643c
    test r15d, r15d
    jne 0x140008f0d
    cmp dword ptr [rsi], 0xe06d7363
    jne 0x140008f0d
    cmp dword ptr [rsi + 0x18], 4
    jne 0x140008f0d
    mov eax, dword ptr [rsi + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x140008f0d
    mov rcx, qword ptr [rsi + 0x28]
    call 0x140006928
    test eax, eax
    je 0x140008f0d
    mov dl, 1
    mov rcx, rsi
    call 0x1400068b4
    call 0x140006a38
    mov qword ptr [rax + 0x20], rdi
    call 0x140006a38
    mov qword ptr [rax + 0x28], r13
    mov rax, qword ptr [rsp + 0x30]
    movsxd rcx, dword ptr [rax + 0x1c]
    mov rax, qword ptr [r14]
    mov qword ptr [rcx + rax], 0xfffffffffffffffe
    mov rax, rbx
    add rsp, 0x70
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    ret
    int3 
    int3 
    mov rax, rsp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r15
    sub rsp, 0xa8
    mov rdi, rcx
    xor r12d, r12d
    mov dword ptr [rsp + 0x20], r12d
    and dword ptr [rsp + 0xf0], r12d
    and qword ptr [rsp + 0x28], r12
    and qword ptr [rsp + 0x40], r12
    mov byte ptr [rax - 0x80], r12b
    and dword ptr [rax - 0x7c], r12d
    and dword ptr [rax - 0x78], r12d
    and dword ptr [rax - 0x74], r12d
    and dword ptr [rax - 0x70], r12d
    and dword ptr [rax - 0x6c], r12d
    call 0x140006a38
    mov rax, qword ptr [rax + 0x28]
    mov qword ptr [rsp + 0x38], rax
    call 0x140006a38
    mov rax, qword ptr [rax + 0x20]
    mov qword ptr [rsp + 0x30], rax
    mov rsi, qword ptr [rdi + 0x50]
    mov qword ptr [rsp + 0xf8], rsi
    mov rbx, qword ptr [rdi + 0x40]
    mov rax, qword ptr [rdi + 0x30]
    mov qword ptr [rsp + 0x50], rax
    mov r15, qword ptr [rdi + 0x28]
    mov rax, qword ptr [rdi + 0x48]
    mov qword ptr [rsp + 0x70], rax
    mov rax, qword ptr [rdi + 0x68]
    mov qword ptr [rsp + 0x78], rax
    mov eax, dword ptr [rdi + 0x78]
    mov dword ptr [rsp + 0xe8], eax
    mov eax, dword ptr [rdi + 0x38]
    mov dword ptr [rsp + 0xe0], eax
    mov rcx, rbx
    call 0x140009d24
    call 0x140006a38
    mov qword ptr [rax + 0x20], rsi
    call 0x140006a38
    mov qword ptr [rax + 0x28], rbx
    call 0x140006a38
    mov rdx, qword ptr [rax + 0x20]
    mov rdx, qword ptr [rdx + 0x28]
    lea rcx, [rsp + 0x88]
    call 0x140006400
    mov r13, rax
    mov qword ptr [rsp + 0x48], rax
    cmp qword ptr [rdi + 0x58], r12
    je 0x14000904a
    mov dword ptr [rsp + 0xf0], 1
    call 0x140006a38
    mov rcx, qword ptr [rax + 0x70]
    mov qword ptr [rsp + 0x40], rcx
    mov r8d, 0x100
    mov rdx, r15
    mov rcx, qword ptr [rsp + 0x50]
    call 0x14000af00
    mov rbx, rax
    mov qword ptr [rsp + 0x28], rax
    cmp rax, 2
    jge 0x14000907e
    mov rbx, qword ptr [rsp + rax*8 + 0x70]
    test rbx, rbx
    je 0x140009191
    mov qword ptr [rsp + 0x28], rbx
    mov rdx, r15
    mov rcx, rbx
    call 0x14000af30
    mov rdi, qword ptr [rsp + 0x38]
    mov r15, qword ptr [rsp + 0x30]
    jmp 0x140009111
    mov dword ptr [rsp + 0x20], 1
    call 0x140006a38
    and dword ptr [rax + 0x40], 0
    call 0x140006a38
    mov ecx, dword ptr [rsp + 0xe8]
    mov dword ptr [rax + 0x78], ecx
    mov rsi, qword ptr [rsp + 0xf8]
    cmp dword ptr [rsp + 0xf0], 0
    je 0x1400090e5
    mov dl, 1
    mov rcx, rsi
    call 0x1400068b4
    mov rcx, qword ptr [rsp + 0x40]
    lea r9, [rcx + 0x20]
    mov r8d, dword ptr [rcx + 0x18]
    mov edx, dword ptr [rcx + 4]
    mov ecx, dword ptr [rcx]
    jmp 0x1400090f2
    lea r9, [rsi + 0x20]
    mov r8d, dword ptr [rsi + 0x18]
    mov edx, dword ptr [rsi + 4]
    mov ecx, dword ptr [rsi]
    call qword ptr [rip + 0x14fa0]
    mov r12d, dword ptr [rsp + 0x20]
    mov rbx, qword ptr [rsp + 0x28]
    mov rdi, qword ptr [rsp + 0x38]
    mov r15, qword ptr [rsp + 0x30]
    mov r13, qword ptr [rsp + 0x48]
    mov rcx, r13
    call 0x14000643c
    test r12d, r12d
    jne 0x140009150
    cmp dword ptr [rsi], 0xe06d7363
    jne 0x140009150
    cmp dword ptr [rsi + 0x18], 4
    jne 0x140009150
    mov eax, dword ptr [rsi + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x140009150
    mov rcx, qword ptr [rsi + 0x28]
    call 0x140006928
    test eax, eax
    je 0x140009150
    mov dl, 1
    mov rcx, rsi
    call 0x1400068b4
    call 0x140006a38
    mov qword ptr [rax + 0x20], r15
    call 0x140006a38
    mov qword ptr [rax + 0x28], rdi
    call 0x140006a38
    mov ecx, dword ptr [rsp + 0xe0]
    mov dword ptr [rax + 0x78], ecx
    call 0x140006a38
    mov dword ptr [rax + 0x78], 0xfffffffe
    mov rax, rbx
    add rsp, 0xa8
    pop r15
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    ret
    call 0x140010040
    nop 
    int3 
    xor eax, eax
    lea r11, [rip - 0x91a1]
    mov byte ptr [rcx + 0x18], al
    xorps xmm0, xmm0
    mov qword ptr [rcx + 0x1c], rax
    mov r8, rcx
    mov qword ptr [rcx + 0x24], rax
    movups xmmword ptr [rcx + 0x30], xmm0
    mov rax, qword ptr [rcx + 8]
    mov r9b, byte ptr [rax]
    lea rdx, [rax + 1]
    mov byte ptr [rcx + 0x18], r9b
    mov qword ptr [rcx + 8], rdx
    test r9b, 1
    je 0x1400091f6
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [r8 + 0x1c], eax
    mov qword ptr [r8 + 8], rdx
    test r9b, 2
    je 0x14000920a
    mov eax, dword ptr [rdx]
    add rdx, 4
    mov qword ptr [r8 + 8], rdx
    mov dword ptr [r8 + 0x20], eax
    test r9b, 4
    je 0x140009237
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [r8 + 0x24], eax
    mov qword ptr [r8 + 8], rdx
    mov eax, dword ptr [rdx]
    lea r10, [rdx + 4]
    mov dword ptr [r8 + 0x28], eax
    mov cl, 0x30
    mov al, r9b
    mov qword ptr [r8 + 8], r10
    and al, cl
    test r9b, 8
    je 0x140009292
    cmp al, 0x10
    jne 0x140009266
    movsxd rcx, dword ptr [r10]
    lea rax, [r10 + 4]
    mov qword ptr [r8 + 8], rax
    mov qword ptr [r8 + 0x30], rcx
    ret
    and r9b, cl
    cmp r9b, 0x20
    jne 0x14000932b
    movsxd rax, dword ptr [r10]
    lea rdx, [r10 + 4]
    mov qword ptr [r8 + 8], rdx
    mov qword ptr [r8 + 0x30], rax
    lea rax, [rdx + 4]
    movsxd rcx, dword ptr [rdx]
    mov qword ptr [r8 + 8], rax
    jmp 0x140009327
    cmp al, 0x10
    jne 0x1400092c6
    movzx ecx, byte ptr [r10]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub r10, rax
    mov eax, dword ptr [r8 + 0x48]
    mov edx, dword ptr [r10 - 4]
    shr edx, cl
    add eax, edx
    mov qword ptr [r8 + 8], r10
    mov qword ptr [r8 + 0x30], rax
    ret
    and r9b, cl
    cmp r9b, 0x20
    jne 0x14000932b
    movzx ecx, byte ptr [r10]
    mov edx, dword ptr [r8 + 0x48]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub r10, rax
    mov eax, dword ptr [r10 - 4]
    shr eax, cl
    mov qword ptr [r8 + 8], r10
    lea ecx, [rdx + rax]
    mov qword ptr [r8 + 0x30], rcx
    movzx ecx, byte ptr [r10]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub r10, rax
    mov eax, dword ptr [r10 - 4]
    shr eax, cl
    mov qword ptr [r8 + 8], r10
    lea ecx, [rdx + rax]
    mov qword ptr [r8 + 0x38], rcx
    ret
    push rbx
    sub rsp, 0x20
    mov r9, qword ptr [rcx]
    mov rbx, r8
    and dword ptr [r8], 0
    mov ecx, 0xe06d7363
    cmp dword ptr [r9], ecx
    jne 0x1400093a7
    cmp dword ptr [r9 + 0x18], 4
    mov r8d, 0x19930520
    jne 0x14000936f
    mov eax, dword ptr [r9 + 0x20]
    sub eax, r8d
    cmp eax, 2
    ja 0x14000936f
    mov rax, qword ptr [rdx + 0x28]
    cmp qword ptr [r9 + 0x28], rax
    jne 0x14000936f
    mov dword ptr [rbx], 1
    cmp dword ptr [r9], ecx
    jne 0x1400093a7
    cmp dword ptr [r9 + 0x18], 4
    jne 0x1400093a7
    mov ecx, dword ptr [r9 + 0x20]
    sub ecx, r8d
    cmp ecx, 2
    ja 0x1400093a7
    cmp qword ptr [r9 + 0x30], 0
    jne 0x1400093a7
    call 0x140006a38
    mov dword ptr [rax + 0x40], 1
    mov eax, 1
    mov dword ptr [rbx], 1
    jmp 0x1400093a9
    xor eax, eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov edi, r8d
    mov r8, r9
    call 0x14000932c
    mov ebx, eax
    test eax, eax
    jne 0x1400093d3
    call 0x140006a38
    mov dword ptr [rax + 0x78], edi
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov dword ptr [rsp + 0x20], r9d
    mov qword ptr [rsp + 0x18], r8
    mov qword ptr [rsp + 8], rcx
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov r12d, r9d
    mov rsi, r8
    mov rbx, rdx
    mov r15, rcx
    call 0x140006490
    mov r13, rax
    mov qword ptr [rsp + 0x28], rax
    mov r8, rsi
    mov rdx, rbx
    mov rcx, r15
    call 0x140006b80
    mov edi, eax
    call 0x140006a38
    inc dword ptr [rax + 0x30]
    cmp edi, -1
    je 0x140009523
    cmp edi, r12d
    jle 0x140009523
    cmp edi, -1
    jle 0x14000955e
    cmp edi, dword ptr [rsi + 4]
    jge 0x14000955e
    movsxd r14, edi
    call 0x140006490
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    mov edi, dword ptr [rcx + rax]
    mov dword ptr [rsp + 0x20], edi
    call 0x140006490
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    cmp dword ptr [rcx + rax + 4], 0
    je 0x14000949a
    call 0x140006490
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    movsxd rbx, dword ptr [rcx + rax + 4]
    call 0x140006490
    add rax, rbx
    jmp 0x14000949c
    xor eax, eax
    test rax, rax
    je 0x1400094fa
    mov r8d, edi
    mov rdx, rsi
    mov rcx, r15
    call 0x140006bd4
    call 0x140006490
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    cmp dword ptr [rcx + rax + 4], 0
    je 0x1400094df
    call 0x140006490
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    movsxd rbx, dword ptr [rcx + rax + 4]
    call 0x140006490
    add rax, rbx
    jmp 0x1400094e1
    xor eax, eax
    mov r8d, 0x103
    mov rdx, r15
    mov rcx, rax
    call 0x14000aec0
    mov rcx, r13
    call 0x1400064b8
    jmp 0x14000951a
    mov r12d, dword ptr [rsp + 0x88]
    mov rsi, qword ptr [rsp + 0x80]
    mov r15, qword ptr [rsp + 0x70]
    mov r13, qword ptr [rsp + 0x28]
    mov edi, dword ptr [rsp + 0x20]
    mov dword ptr [rsp + 0x24], edi
    jmp 0x14000942f
    call 0x140006a38
    cmp dword ptr [rax + 0x30], 0
    jle 0x140009536
    call 0x140006a38
    dec dword ptr [rax + 0x30]
    cmp edi, -1
    je 0x140009540
    cmp edi, r12d
    jg 0x140009564
    mov r8d, edi
    mov rdx, rsi
    mov rcx, r15
    call 0x140006bd4
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    ret
    call 0x140010040
    nop 
    call 0x140010040
    nop 
    int3 
    int3 
    mov rax, rsp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x100
    movaps xmmword ptr [rax - 0x48], xmm6
    mov rax, qword ptr [rip + 0x20a74]
    xor rax, rsp
    mov qword ptr [rsp + 0xe0], rax
    mov r13d, r9d
    mov rbx, r8
    mov rsi, rdx
    mov r12, rcx
    mov qword ptr [rsp + 0x70], rcx
    mov qword ptr [rsp + 0x60], rcx
    mov dword ptr [rsp + 0x48], r9d
    call 0x140006490
    mov qword ptr [rsp + 0x68], rax
    mov rdx, rsi
    mov rcx, rbx
    call 0x140006c24
    mov edi, eax
    lea r14, [rsi + 0x48]
    mov qword ptr [rsp + 0x78], r14
    cmp dword ptr [r14], 0
    je 0x1400095ef
    call 0x140006a38
    cmp dword ptr [rax + 0x78], -2
    jne 0x14000986d
    mov edi, dword ptr [r14]
    sub edi, 2
    jmp 0x14000960e
    call 0x140006a38
    cmp dword ptr [rax + 0x78], -2
    je 0x14000960e
    call 0x140006a38
    mov edi, dword ptr [rax + 0x78]
    call 0x140006a38
    mov dword ptr [rax + 0x78], 0xfffffffe
    call 0x140006a38
    inc dword ptr [rax + 0x30]
    add rsi, 8
    mov qword ptr [rsp + 0x80], rsi
    xor edx, edx
    mov qword ptr [rsp + 0xc8], rdx
    xorps xmm0, xmm0
    movups xmmword ptr [rsp + 0xd0], xmm0
    cmp dword ptr [rbx + 8], edx
    je 0x14000967b
    movsxd rdx, dword ptr [rbx + 8]
    add rdx, qword ptr [rsi]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    lea r8, [rip - 0x9650]
    movsx rax, byte ptr [rcx + r8 + 0x1e610]
    movzx ecx, byte ptr [rcx + r8 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [rsp + 0xc0], eax
    mov qword ptr [rsp + 0xc8], rdx
    jmp 0x140009682
    and dword ptr [rsp + 0xc0], edx
    lea rax, [rsp + 0xc0]
    mov qword ptr [rsp + 0x30], rax
    mov qword ptr [rsp + 0x38], rdx
    lea rax, [rsp + 0xc0]
    mov qword ptr [rsp + 0x50], rax
    mov qword ptr [rsp + 0x58], rdx
    lea rax, [rsp + 0x50]
    mov qword ptr [rsp + 0x20], rax
    lea r9, [rsp + 0x30]
    mov r8d, r13d
    mov edx, edi
    lea rcx, [rsp + 0xc0]
    call 0x140009b3c
    nop 
    lea rax, [rsp + 0xc0]
    mov qword ptr [rsp + 0x88], rax
    mov rax, qword ptr [rsp + 0xc8]
    mov qword ptr [rsp + 0x90], rax
    mov r15, qword ptr [rsp + 0x38]
    cmp r15, rax
    jb 0x14000982f
    cmp r15, qword ptr [rsp + 0x58]
    jbe 0x14000982f
    lea rdx, [rsp + 0x38]
    mov rcx, qword ptr [rsp + 0x30]
    call 0x140009a84
    mov qword ptr [rsp + 0x38], r15
    mov rbx, qword ptr [rsp + 0x30]
    movups xmm6, xmmword ptr [rbx + 0x10]
    movups xmmword ptr [rsp + 0xb0], xmm6
    movaps xmm0, xmmword ptr [rsp + 0x30]
    movdqa xmmword ptr [rsp + 0xa0], xmm0
    lea rdx, [rsp + 0x38]
    mov rcx, rbx
    call 0x140009a84
    mov eax, dword ptr [rbx + 0x10]
    sub r15, rax
    mov qword ptr [rsp + 0x38], r15
    lea rax, [rsp + 0x30]
    mov qword ptr [rsp + 0x20], rax
    mov r9d, edi
    lea r8, [rsp + 0xa0]
    mov edx, r13d
    lea rcx, [rsp + 0x50]
    call 0x140009c0c
    mov edi, eax
    mov dword ptr [rsp + 0x44], eax
    and dword ptr [rsp + 0x40], 0
    xor r9d, r9d
    movdqa xmm0, xmm6
    psrldq xmm0, 8
    movd eax, xmm0
    movdqa xmm1, xmm6
    psrldq xmm1, 4
    movd ecx, xmm1
    test ecx, ecx
    cmovne r9d, eax
    mov dword ptr [rsp + 0x40], r9d
    test r9d, r9d
    je 0x14000982a
    lea eax, [rdi + 2]
    mov dword ptr [r14], eax
    lea eax, [rcx - 1]
    cmp eax, 1
    jbe 0x1400097ce
    movsxd rcx, r9d
    add rcx, qword ptr [rsi]
    mov r8d, 0x103
    mov rdx, r12
    call 0x14000aec0
    jmp 0x140009803
    mov rax, qword ptr [rsp + 0x60]
    mov rdx, qword ptr [rax]
    psrldq xmm6, 0xc
    cmp ecx, 2
    jne 0x1400097ea
    movd eax, xmm6
    mov r8, qword ptr [rax + rdx]
    jmp 0x1400097f2
    movd r8d, xmm6
    add r8, rdx
    movsxd rcx, r9d
    add rcx, qword ptr [rsi]
    mov r9d, 0x103
    call 0x14000af60
    mov rcx, qword ptr [rsp + 0x68]
    call 0x1400064b8
    jmp 0x14000982a
    mov edi, dword ptr [rsp + 0x44]
    mov r12, qword ptr [rsp + 0x70]
    mov r14, qword ptr [rsp + 0x78]
    mov rsi, qword ptr [rsp + 0x80]
    mov r13d, dword ptr [rsp + 0x48]
    jmp 0x1400096c8
    call 0x140006a38
    cmp dword ptr [rax + 0x30], 0
    jle 0x140009842
    call 0x140006a38
    dec dword ptr [rax + 0x30]
    mov rcx, qword ptr [rsp + 0xe0]
    xor rcx, rsp
    call 0x140004a50
    movaps xmm6, xmmword ptr [rsp + 0xf0]
    add rsp, 0x100
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    ret
    call 0x140010040
    nop 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rbp, rcx
    mov rdi, r8
    mov rcx, r8
    mov rsi, rdx
    call 0x140006c1c
    lea r9, [rsp + 0x48]
    mov r8, rdi
    mov rdx, rsi
    mov rcx, rbp
    mov ebx, eax
    call 0x140005c84
    mov r8, rdi
    mov rdx, rsi
    mov rcx, rbp
    call 0x140006ba8
    cmp ebx, eax
    jle 0x1400098e3
    mov r8d, ebx
    lea rcx, [rsp + 0x48]
    mov rdx, rdi
    call 0x140006bd4
    mov r9d, ebx
    mov r8, rdi
    mov rdx, rsi
    mov rcx, rbp
    call 0x140006be0
    jmp 0x1400098f3
    mov r8, rdi
    mov rdx, rsi
    mov rcx, rbp
    call 0x140006ba8
    mov ebx, eax
    mov rbp, qword ptr [rsp + 0x38]
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov rbp, rdx
    mov r13, rcx
    test rdx, rdx
    je 0x1400099f3
    xor r15b, r15b
    xor esi, esi
    cmp dword ptr [rdx], esi
    jle 0x1400099d3
    call 0x1400064a4
    mov rdx, rax
    mov rax, qword ptr [r13 + 0x30]
    movsxd r12, dword ptr [rax + 0xc]
    add r12, 4
    add r12, rdx
    call 0x1400064a4
    mov rdx, rax
    mov rax, qword ptr [r13 + 0x30]
    movsxd rcx, dword ptr [rax + 0xc]
    mov r14d, dword ptr [rdx + rcx]
    test r14d, r14d
    jle 0x1400099c8
    movsxd rax, esi
    lea rax, [rax + rax*4]
    mov qword ptr [rsp + 0x58], rax
    call 0x1400064a4
    mov rbx, qword ptr [r13 + 0x30]
    mov rdi, rax
    movsxd rax, dword ptr [r12]
    add rdi, rax
    call 0x140006490
    mov rdx, qword ptr [rsp + 0x58]
    mov r8, rbx
    movsxd rcx, dword ptr [rbp + 4]
    lea rax, [rax + rdx*4]
    mov rdx, rdi
    add rcx, rax
    call 0x1400083ec
    test eax, eax
    jne 0x1400099c5
    dec r14d
    add r12, 4
    test r14d, r14d
    jg 0x140009980
    jmp 0x1400099c8
    mov r15b, 1
    inc esi
    cmp esi, dword ptr [rbp]
    jl 0x140009944
    mov rbx, qword ptr [rsp + 0x50]
    mov al, r15b
    mov rbp, qword ptr [rsp + 0x60]
    mov rsi, qword ptr [rsp + 0x68]
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    call 0x140010040
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    xor ebp, ebp
    mov rdi, rcx
    cmp dword ptr [rcx], ebp
    jle 0x140009a69
    xor esi, esi
    call 0x140006490
    movsxd rcx, dword ptr [rdi + 4]
    add rax, rsi
    cmp dword ptr [rcx + rax + 4], 0
    je 0x140009a49
    call 0x140006490
    movsxd rcx, dword ptr [rdi + 4]
    add rax, rsi
    movsxd rbx, dword ptr [rcx + rax + 4]
    call 0x140006490
    add rax, rbx
    jmp 0x140009a4b
    xor eax, eax
    lea rcx, [rax + 8]
    lea rdx, [rip + 0x21182]
    call 0x14000688c
    test eax, eax
    je 0x140009a80
    inc ebp
    add rsi, 0x14
    cmp ebp, dword ptr [rdi]
    jl 0x140009a1b
    xor al, al
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    mov al, 1
    jmp 0x140009a6b
    mov r8, qword ptr [rdx]
    lea r11, [rip - 0x9a8e]
    mov r10, rcx
    mov r9, rdx
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov ecx, eax
    mov qword ptr [rdx], r8
    and ecx, 3
    shr eax, 2
    mov dword ptr [r10 + 0x10], eax
    mov dword ptr [r10 + 0x14], ecx
    lea eax, [rcx - 1]
    cmp eax, 1
    jbe 0x140009ae6
    cmp ecx, 3
    jne 0x140009b1f
    mov rax, qword ptr [rdx]
    mov ecx, dword ptr [rax]
    add rax, 4
    mov qword ptr [rdx], rax
    mov dword ptr [r10 + 0x18], ecx
    ret
    mov rax, qword ptr [rdx]
    mov ecx, dword ptr [rax]
    add rax, 4
    mov qword ptr [rdx], rax
    mov dword ptr [r10 + 0x18], ecx
    mov rdx, qword ptr [rdx]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1e610]
    mov cl, byte ptr [rcx + r11 + 0x1e620]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9], rdx
    mov dword ptr [r10 + 0x1c], eax
    ret
    mov rax, rdx
    mov rdx, r8
    jmp rax
    int3 
    int3 
    int3 
    mov rax, r8
    mov r10, rdx
    mov rdx, rax
    mov r8d, r9d
    jmp r10
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 0x18], rbx
    mov qword ptr [r11 + 0x20], r9
    mov dword ptr [rsp + 0x10], edx
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov rax, qword ptr [rcx + 8]
    xor bpl, bpl
    xor r14b, r14b
    mov qword ptr [r11 + 8], rax
    xor edi, edi
    mov r12, r9
    mov r13d, r8d
    mov rbx, rcx
    lea rsi, [rax - 1]
    mov r15, rsi
    cmp dword ptr [rcx], edi
    jle 0x140009bc1
    mov r12d, dword ptr [r11 + 0x10]
    cmp edi, r12d
    jne 0x140009b8d
    mov rsi, rax
    mov bpl, 1
    cmp edi, r13d
    jne 0x140009b98
    mov r15, rax
    mov r14b, 1
    test bpl, bpl
    je 0x140009ba2
    test r14b, r14b
    jne 0x140009bbc
    lea rdx, [rsp + 0x60]
    mov rcx, rbx
    call 0x140009a84
    inc edi
    cmp edi, dword ptr [rbx]
    jge 0x140009bbc
    mov rax, qword ptr [rsp + 0x60]
    jmp 0x140009b82
    mov r12, qword ptr [rsp + 0x78]
    mov rax, qword ptr [r12]
    mov qword ptr [r12 + 8], rsi
    movups xmm0, xmmword ptr [rbx]
    movups xmmword ptr [rax], xmm0
    movups xmm1, xmmword ptr [rbx + 0x10]
    movups xmmword ptr [rax + 0x10], xmm1
    mov rax, qword ptr [rsp + 0x80]
    mov rcx, qword ptr [rax]
    mov qword ptr [rax + 8], r15
    movups xmm0, xmmword ptr [rbx]
    movups xmmword ptr [rcx], xmm0
    movups xmm1, xmmword ptr [rbx + 0x10]
    mov rbx, qword ptr [rsp + 0x70]
    movups xmmword ptr [rcx + 0x10], xmm1
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x30
    mov rdi, qword ptr [rsp + 0x60]
    mov ebx, edx
    mov rsi, r8
    mov r10, rcx
    mov rdx, qword ptr [rdi + 8]
    cmp rdx, qword ptr [r8 + 8]
    ja 0x140009ca9
    cmp qword ptr [rcx + 8], rdx
    ja 0x140009ca9
    mov rax, qword ptr [r8 + 8]
    mov rcx, rdx
    sub rcx, qword ptr [r10 + 8]
    sub rax, rdx
    cmp rcx, rax
    jge 0x140009c78
    movups xmm0, xmmword ptr [r10]
    movups xmmword ptr [rsp + 0x20], xmm0
    cmp rdx, qword ptr [r10 + 8]
    jbe 0x140009ca5
    mov rcx, qword ptr [rsp + 0x20]
    lea rdx, [rsp + 0x28]
    call 0x140009a84
    mov rax, qword ptr [rsp + 0x28]
    inc ebx
    cmp qword ptr [rdi + 8], rax
    ja 0x140009c5a
    jmp 0x140009ca5
    mov ebx, r9d
    movups xmm0, xmmword ptr [rdi]
    movups xmmword ptr [rsp + 0x20], xmm0
    cmp qword ptr [r8 + 8], rdx
    jbe 0x140009ca5
    mov rcx, qword ptr [rsp + 0x20]
    lea rdx, [rsp + 0x28]
    call 0x140009a84
    mov rcx, qword ptr [rsp + 0x28]
    dec ebx
    cmp qword ptr [rsi + 8], rcx
    ja 0x140009c89
    mov eax, ebx
    jmp 0x140009cac
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov qword ptr [rsp + 8], rcx
    mov qword ptr [rsp + 0x18], rdx
    mov dword ptr [rsp + 0x10], r8d
    mov r9, 0x19930520
    jmp 0x140009d10
    int3 
    int3 
    int3 
    int3 
    int3 
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    ret
    int3 
    int3 
    int3 
    mov rax, qword ptr [rip + 0x14535]
    lea rdx, [rip - 0x49b6]
    cmp rax, rdx
    je 0x140009d5a
    mov rax, qword ptr gs:[0x30]
    mov rcx, qword ptr [rcx + 0x98]
    cmp rcx, qword ptr [rax + 0x10]
    jb 0x140009d53
    cmp rcx, qword ptr [rax + 8]
    jbe 0x140009d5a
    mov ecx, 0xd
    int 0x29
    ret
    int3 
    push rbx
    sub rsp, 0x20
    xor ebx, ebx
    lea rdx, [rip + 0x21535]
    xor r8d, r8d
    lea rcx, [rbx + rbx*4]
    lea rcx, [rdx + rcx*8]
    mov edx, 0xfa0
    call 0x14000ae14
    test eax, eax
    je 0x140009d95
    inc dword ptr [rip + 0x2153e]
    inc ebx
    cmp ebx, 1
    jb 0x140009d64
    mov al, 1
    jmp 0x140009d9c
    call 0x140009da4
    xor al, al
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, dword ptr [rip + 0x21518]
    jmp 0x140009dcf
    lea rax, [rip + 0x214e7]
    dec ebx
    lea rcx, [rbx + rbx*4]
    lea rcx, [rax + rcx*8]
    call qword ptr [rip + 0x14307]
    dec dword ptr [rip + 0x214f9]
    test ebx, ebx
    jne 0x140009db2
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov rax, rcx
    lea r10, [rip - 0x9dfa]
    cmp r8, 0xf
    ja 0x140009f10
    nop word ptr [rax + rax]
    mov r9d, dword ptr [r10 + r8*4 + 0x2e000]
    add r9, r10
    jmp r9
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    movzx r10d, byte ptr [rdx + 0xe]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    mov byte ptr [rax + 0xe], r10b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xa]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    mov byte ptr [rax + 0xa], r9b
    ret
    movzx ecx, word ptr [rdx]
    mov word ptr [rax], cx
    ret
    nop 
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    movzx r9d, byte ptr [rdx + 6]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    mov byte ptr [rax + 6], r9b
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    ret
    movzx ecx, word ptr [rdx]
    movzx r8d, byte ptr [rdx + 2]
    mov word ptr [rax], cx
    mov byte ptr [rax + 2], r8b
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov byte ptr [rax + 0xc], r9b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, byte ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov byte ptr [rax + 8], cl
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, byte ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov byte ptr [rax + 4], r8b
    ret
    mov rcx, qword ptr [rdx]
    mov qword ptr [rax], rcx
    ret
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rax], cl
    ret
    mov ecx, dword ptr [rdx]
    mov dword ptr [rax], ecx
    ret
    nop 
    cmp r8, 0x20
    ja 0x140009f2d
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + r8 - 0x10]
    movdqu xmmword ptr [rcx], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm2
    ret
    lea r9, [rdx + r8]
    cmp rcx, rdx
    cmovbe r9, rcx
    cmp rcx, r9
    jb 0x14000afe0
    cmp r8, 0x180000
    jae 0x140009f57
    cmp r8, 0x2000
    jae 0x14000afc0
    vmovdqu ymm0, ymmword ptr [rdx]
    vmovdqu ymm5, ymmword ptr [rdx + r8 - 0x20]
    cmp r8, 0x100
    jbe 0x14000a028
    mov r9, rcx
    and r9, 0x1f
    sub r9, 0x20
    sub rcx, r9
    sub rdx, r9
    add r8, r9
    cmp r8, 0x100
    jbe 0x14000a028
    cmp r8, 0x180000
    ja 0x14000a0d0
    nop dword ptr [rax]
    vmovdqu ymm1, ymmword ptr [rdx]
    vmovdqu ymm2, ymmword ptr [rdx + 0x20]
    vmovdqu ymm3, ymmword ptr [rdx + 0x40]
    vmovdqu ymm4, ymmword ptr [rdx + 0x60]
    vmovdqa ymmword ptr [rcx], ymm1
    vmovdqa ymmword ptr [rcx + 0x20], ymm2
    vmovdqa ymmword ptr [rcx + 0x40], ymm3
    vmovdqa ymmword ptr [rcx + 0x60], ymm4
    vmovdqu ymm1, ymmword ptr [rdx + 0x80]
    vmovdqu ymm2, ymmword ptr [rdx + 0xa0]
    vmovdqu ymm3, ymmword ptr [rdx + 0xc0]
    vmovdqu ymm4, ymmword ptr [rdx + 0xe0]
    vmovdqa ymmword ptr [rcx + 0x80], ymm1
    vmovdqa ymmword ptr [rcx + 0xa0], ymm2
    vmovdqa ymmword ptr [rcx + 0xc0], ymm3
    vmovdqa ymmword ptr [rcx + 0xe0], ymm4
    add rcx, 0x100
    add rdx, 0x100
    sub r8, 0x100
    cmp r8, 0x100
    jae 0x140009fa0
    lea r9, [r8 + 0x1f]
    and r9, 0xffffffffffffffe0
    mov r11, r9
    shr r11, 5
    mov r11d, dword ptr [r10 + r11*4 + 0x2e040]
    add r11, r10
    jmp r11
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x100]
    vmovdqu ymmword ptr [rcx + r9 - 0x100], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xe0]
    vmovdqu ymmword ptr [rcx + r9 - 0xe0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xc0]
    vmovdqu ymmword ptr [rcx + r9 - 0xc0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xa0]
    vmovdqu ymmword ptr [rcx + r9 - 0xa0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x80]
    vmovdqu ymmword ptr [rcx + r9 - 0x80], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x60]
    vmovdqu ymmword ptr [rcx + r9 - 0x60], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x40]
    vmovdqu ymmword ptr [rcx + r9 - 0x40], ymm1
    vmovdqu ymmword ptr [rcx + r8 - 0x20], ymm5
    vmovdqu ymmword ptr [rax], ymm0
    vzeroupper 
    ret
    nop 
    vmovdqu ymm1, ymmword ptr [rdx]
    vmovdqu ymm2, ymmword ptr [rdx + 0x20]
    vmovdqu ymm3, ymmword ptr [rdx + 0x40]
    vmovdqu ymm4, ymmword ptr [rdx + 0x60]
    vmovntdq ymmword ptr [rcx], ymm1
    vmovntdq ymmword ptr [rcx + 0x20], ymm2
    vmovntdq ymmword ptr [rcx + 0x40], ymm3
    vmovntdq ymmword ptr [rcx + 0x60], ymm4
    vmovdqu ymm1, ymmword ptr [rdx + 0x80]
    vmovdqu ymm2, ymmword ptr [rdx + 0xa0]
    vmovdqu ymm3, ymmword ptr [rdx + 0xc0]
    vmovdqu ymm4, ymmword ptr [rdx + 0xe0]
    vmovntdq ymmword ptr [rcx + 0x80], ymm1
    vmovntdq ymmword ptr [rcx + 0xa0], ymm2
    vmovntdq ymmword ptr [rcx + 0xc0], ymm3
    vmovntdq ymmword ptr [rcx + 0xe0], ymm4
    add rcx, 0x100
    add rdx, 0x100
    sub r8, 0x100
    cmp r8, 0x100
    jae 0x14000a0d0
    lea r9, [r8 + 0x1f]
    and r9, 0xffffffffffffffe0
    mov r11, r9
    shr r11, 5
    mov r11d, dword ptr [r10 + r11*4 + 0x2e064]
    add r11, r10
    jmp r11
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x100]
    vmovntdq ymmword ptr [rcx + r9 - 0x100], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xe0]
    vmovntdq ymmword ptr [rcx + r9 - 0xe0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xc0]
    vmovntdq ymmword ptr [rcx + r9 - 0xc0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xa0]
    vmovntdq ymmword ptr [rcx + r9 - 0xa0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x80]
    vmovntdq ymmword ptr [rcx + r9 - 0x80], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x60]
    vmovntdq ymmword ptr [rcx + r9 - 0x60], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x40]
    vmovntdq ymmword ptr [rcx + r9 - 0x40], ymm1
    vmovdqu ymmword ptr [rcx + r8 - 0x20], ymm5
    vmovdqu ymmword ptr [rax], ymm0
    sfence 
    vzeroupper 
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov rax, rcx
    lea r10, [rip - 0xa22a]
    cmp r8, 0xf
    ja 0x14000a340
    nop word ptr [rax + rax]
    mov r9d, dword ptr [r10 + r8*4 + 0x2e090]
    add r9, r10
    jmp r9
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    movzx r10d, byte ptr [rdx + 0xe]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    mov byte ptr [rax + 0xe], r10b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xa]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    mov byte ptr [rax + 0xa], r9b
    ret
    movzx ecx, word ptr [rdx]
    mov word ptr [rax], cx
    ret
    nop 
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    movzx r9d, byte ptr [rdx + 6]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    mov byte ptr [rax + 6], r9b
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    ret
    movzx ecx, word ptr [rdx]
    movzx r8d, byte ptr [rdx + 2]
    mov word ptr [rax], cx
    mov byte ptr [rax + 2], r8b
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov byte ptr [rax + 0xc], r9b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, byte ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov byte ptr [rax + 8], cl
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, byte ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov byte ptr [rax + 4], r8b
    ret
    mov rcx, qword ptr [rdx]
    mov qword ptr [rax], rcx
    ret
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rax], cl
    ret
    mov ecx, dword ptr [rdx]
    mov dword ptr [rax], ecx
    ret
    nop 
    cmp r8, 0x20
    ja 0x14000a35d
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + r8 - 0x10]
    movdqu xmmword ptr [rcx], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm2
    ret
    lea r9, [rdx + r8]
    cmp rcx, rdx
    cmovbe r9, rcx
    cmp rcx, r9
    jb 0x14000b0f0
    cmp r8, 0x180000
    jae 0x14000a387
    cmp r8, 0x2000
    jae 0x14000b0d0
    vmovdqu ymm0, ymmword ptr [rdx]
    vmovdqu ymm5, ymmword ptr [rdx + r8 - 0x20]
    cmp r8, 0x100
    jbe 0x14000a458
    mov r9, rcx
    and r9, 0x1f
    sub r9, 0x20
    sub rcx, r9
    sub rdx, r9
    add r8, r9
    cmp r8, 0x100
    jbe 0x14000a458
    cmp r8, 0x180000
    ja 0x14000a500
    nop dword ptr [rax]
    vmovdqu ymm1, ymmword ptr [rdx]
    vmovdqu ymm2, ymmword ptr [rdx + 0x20]
    vmovdqu ymm3, ymmword ptr [rdx + 0x40]
    vmovdqu ymm4, ymmword ptr [rdx + 0x60]
    vmovdqa ymmword ptr [rcx], ymm1
    vmovdqa ymmword ptr [rcx + 0x20], ymm2
    vmovdqa ymmword ptr [rcx + 0x40], ymm3
    vmovdqa ymmword ptr [rcx + 0x60], ymm4
    vmovdqu ymm1, ymmword ptr [rdx + 0x80]
    vmovdqu ymm2, ymmword ptr [rdx + 0xa0]
    vmovdqu ymm3, ymmword ptr [rdx + 0xc0]
    vmovdqu ymm4, ymmword ptr [rdx + 0xe0]
    vmovdqa ymmword ptr [rcx + 0x80], ymm1
    vmovdqa ymmword ptr [rcx + 0xa0], ymm2
    vmovdqa ymmword ptr [rcx + 0xc0], ymm3
    vmovdqa ymmword ptr [rcx + 0xe0], ymm4
    add rcx, 0x100
    add rdx, 0x100
    sub r8, 0x100
    cmp r8, 0x100
    jae 0x14000a3d0
    lea r9, [r8 + 0x1f]
    and r9, 0xffffffffffffffe0
    mov r11, r9
    shr r11, 5
    mov r11d, dword ptr [r10 + r11*4 + 0x2e0d0]
    add r11, r10
    jmp r11
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x100]
    vmovdqu ymmword ptr [rcx + r9 - 0x100], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xe0]
    vmovdqu ymmword ptr [rcx + r9 - 0xe0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xc0]
    vmovdqu ymmword ptr [rcx + r9 - 0xc0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xa0]
    vmovdqu ymmword ptr [rcx + r9 - 0xa0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x80]
    vmovdqu ymmword ptr [rcx + r9 - 0x80], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x60]
    vmovdqu ymmword ptr [rcx + r9 - 0x60], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x40]
    vmovdqu ymmword ptr [rcx + r9 - 0x40], ymm1
    vmovdqu ymmword ptr [rcx + r8 - 0x20], ymm5
    vmovdqu ymmword ptr [rax], ymm0
    vzeroupper 
    ret
    nop 
    vmovdqu ymm1, ymmword ptr [rdx]
    vmovdqu ymm2, ymmword ptr [rdx + 0x20]
    vmovdqu ymm3, ymmword ptr [rdx + 0x40]
    vmovdqu ymm4, ymmword ptr [rdx + 0x60]
    vmovntdq ymmword ptr [rcx], ymm1
    vmovntdq ymmword ptr [rcx + 0x20], ymm2
    vmovntdq ymmword ptr [rcx + 0x40], ymm3
    vmovntdq ymmword ptr [rcx + 0x60], ymm4
    vmovdqu ymm1, ymmword ptr [rdx + 0x80]
    vmovdqu ymm2, ymmword ptr [rdx + 0xa0]
    vmovdqu ymm3, ymmword ptr [rdx + 0xc0]
    vmovdqu ymm4, ymmword ptr [rdx + 0xe0]
    vmovntdq ymmword ptr [rcx + 0x80], ymm1
    vmovntdq ymmword ptr [rcx + 0xa0], ymm2
    vmovntdq ymmword ptr [rcx + 0xc0], ymm3
    vmovntdq ymmword ptr [rcx + 0xe0], ymm4
    add rcx, 0x100
    add rdx, 0x100
    sub r8, 0x100
    cmp r8, 0x100
    jae 0x14000a500
    lea r9, [r8 + 0x1f]
    and r9, 0xffffffffffffffe0
    mov r11, r9
    shr r11, 5
    mov r11d, dword ptr [r10 + r11*4 + 0x2e0f4]
    add r11, r10
    jmp r11
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x100]
    vmovntdq ymmword ptr [rcx + r9 - 0x100], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xe0]
    vmovntdq ymmword ptr [rcx + r9 - 0xe0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xc0]
    vmovntdq ymmword ptr [rcx + r9 - 0xc0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xa0]
    vmovntdq ymmword ptr [rcx + r9 - 0xa0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x80]
    vmovntdq ymmword ptr [rcx + r9 - 0x80], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x60]
    vmovntdq ymmword ptr [rcx + r9 - 0x60], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x40]
    vmovntdq ymmword ptr [rcx + r9 - 0x40], ymm1
    vmovdqu ymmword ptr [rcx + r8 - 0x20], ymm5
    vmovdqu ymmword ptr [rax], ymm0
    sfence 
    vzeroupper 
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov rax, rcx
    lea r10, [rip - 0xa65a]
    cmp r8, 0xf
    ja 0x14000a770
    nop word ptr [rax + rax]
    mov r9d, dword ptr [r10 + r8*4 + 0x2e120]
    add r9, r10
    jmp r9
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    movzx r10d, byte ptr [rdx + 0xe]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    mov byte ptr [rax + 0xe], r10b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xa]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    mov byte ptr [rax + 0xa], r9b
    ret
    movzx ecx, word ptr [rdx]
    mov word ptr [rax], cx
    ret
    nop 
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    movzx r9d, byte ptr [rdx + 6]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    mov byte ptr [rax + 6], r9b
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    ret
    movzx ecx, word ptr [rdx]
    movzx r8d, byte ptr [rdx + 2]
    mov word ptr [rax], cx
    mov byte ptr [rax + 2], r8b
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov byte ptr [rax + 0xc], r9b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, byte ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov byte ptr [rax + 8], cl
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, byte ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov byte ptr [rax + 4], r8b
    ret
    mov rcx, qword ptr [rdx]
    mov qword ptr [rax], rcx
    ret
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rax], cl
    ret
    mov ecx, dword ptr [rdx]
    mov dword ptr [rax], ecx
    ret
    nop 
    cmp r8, 0x20
    ja 0x14000a78d
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + r8 - 0x10]
    movdqu xmmword ptr [rcx], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm2
    ret
    lea r9, [rdx + r8]
    cmp rcx, rdx
    cmovbe r9, rcx
    cmp rcx, r9
    jb 0x14000afe0
    cmp r8, 0x800
    jae 0x14000afc0
    movdqu xmm0, xmmword ptr [rdx]
    movdqu xmm5, xmmword ptr [rdx + r8 - 0x10]
    cmp r8, 0x80
    jbe 0x14000a85c
    mov r9, rcx
    and r9, 0xf
    sub r9, 0x10
    sub rcx, r9
    sub rdx, r9
    add r8, r9
    cmp r8, 0x80
    jbe 0x14000a85c
    nop word ptr [rax + rax]
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + 0x10]
    movdqu xmm3, xmmword ptr [rdx + 0x20]
    movdqu xmm4, xmmword ptr [rdx + 0x30]
    movdqa xmmword ptr [rcx], xmm1
    movdqa xmmword ptr [rcx + 0x10], xmm2
    movdqa xmmword ptr [rcx + 0x20], xmm3
    movdqa xmmword ptr [rcx + 0x30], xmm4
    movdqu xmm1, xmmword ptr [rdx + 0x40]
    movdqu xmm2, xmmword ptr [rdx + 0x50]
    movdqu xmm3, xmmword ptr [rdx + 0x60]
    movdqu xmm4, xmmword ptr [rdx + 0x70]
    movdqa xmmword ptr [rcx + 0x40], xmm1
    movdqa xmmword ptr [rcx + 0x50], xmm2
    movdqa xmmword ptr [rcx + 0x60], xmm3
    movdqa xmmword ptr [rcx + 0x70], xmm4
    add rcx, 0x80
    add rdx, 0x80
    sub r8, 0x80
    cmp r8, 0x80
    jae 0x14000a7f0
    lea r9, [r8 + 0xf]
    and r9, 0xfffffffffffffff0
    mov r11, r9
    shr r11, 4
    mov r11d, dword ptr [r10 + r11*4 + 0x2e160]
    add r11, r10
    jmp r11
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x80]
    movdqu xmmword ptr [rcx + r9 - 0x80], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x70]
    movdqu xmmword ptr [rcx + r9 - 0x70], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x60]
    movdqu xmmword ptr [rcx + r9 - 0x60], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x50]
    movdqu xmmword ptr [rcx + r9 - 0x50], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x40]
    movdqu xmmword ptr [rcx + r9 - 0x40], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x30]
    movdqu xmmword ptr [rcx + r9 - 0x30], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x20]
    movdqu xmmword ptr [rcx + r9 - 0x20], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm5
    movdqu xmmword ptr [rax], xmm0
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov rax, rcx
    lea r10, [rip - 0xa90a]
    cmp r8, 0xf
    ja 0x14000aa20
    nop word ptr [rax + rax]
    mov r9d, dword ptr [r10 + r8*4 + 0x2e190]
    add r9, r10
    jmp r9
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    movzx r10d, byte ptr [rdx + 0xe]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    mov byte ptr [rax + 0xe], r10b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xa]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    mov byte ptr [rax + 0xa], r9b
    ret
    movzx ecx, word ptr [rdx]
    mov word ptr [rax], cx
    ret
    nop 
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    movzx r9d, byte ptr [rdx + 6]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    mov byte ptr [rax + 6], r9b
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    ret
    movzx ecx, word ptr [rdx]
    movzx r8d, byte ptr [rdx + 2]
    mov word ptr [rax], cx
    mov byte ptr [rax + 2], r8b
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov byte ptr [rax + 0xc], r9b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, byte ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov byte ptr [rax + 8], cl
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, byte ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov byte ptr [rax + 4], r8b
    ret
    mov rcx, qword ptr [rdx]
    mov qword ptr [rax], rcx
    ret
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rax], cl
    ret
    mov ecx, dword ptr [rdx]
    mov dword ptr [rax], ecx
    ret
    nop 
    cmp r8, 0x20
    ja 0x14000aa3d
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + r8 - 0x10]
    movdqu xmmword ptr [rcx], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm2
    ret
    lea r9, [rdx + r8]
    cmp rcx, rdx
    cmovbe r9, rcx
    cmp rcx, r9
    jb 0x14000b0f0
    cmp r8, 0x800
    jae 0x14000b0d0
    movdqu xmm0, xmmword ptr [rdx]
    movdqu xmm5, xmmword ptr [rdx + r8 - 0x10]
    cmp r8, 0x80
    jbe 0x14000ab0c
    mov r9, rcx
    and r9, 0xf
    sub r9, 0x10
    sub rcx, r9
    sub rdx, r9
    add r8, r9
    cmp r8, 0x80
    jbe 0x14000ab0c
    nop word ptr [rax + rax]
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + 0x10]
    movdqu xmm3, xmmword ptr [rdx + 0x20]
    movdqu xmm4, xmmword ptr [rdx + 0x30]
    movdqa xmmword ptr [rcx], xmm1
    movdqa xmmword ptr [rcx + 0x10], xmm2
    movdqa xmmword ptr [rcx + 0x20], xmm3
    movdqa xmmword ptr [rcx + 0x30], xmm4
    movdqu xmm1, xmmword ptr [rdx + 0x40]
    movdqu xmm2, xmmword ptr [rdx + 0x50]
    movdqu xmm3, xmmword ptr [rdx + 0x60]
    movdqu xmm4, xmmword ptr [rdx + 0x70]
    movdqa xmmword ptr [rcx + 0x40], xmm1
    movdqa xmmword ptr [rcx + 0x50], xmm2
    movdqa xmmword ptr [rcx + 0x60], xmm3
    movdqa xmmword ptr [rcx + 0x70], xmm4
    add rcx, 0x80
    add rdx, 0x80
    sub r8, 0x80
    cmp r8, 0x80
    jae 0x14000aaa0
    lea r9, [r8 + 0xf]
    and r9, 0xfffffffffffffff0
    mov r11, r9
    shr r11, 4
    mov r11d, dword ptr [r10 + r11*4 + 0x2e1d0]
    add r11, r10
    jmp r11
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x80]
    movdqu xmmword ptr [rcx + r9 - 0x80], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x70]
    movdqu xmmword ptr [rcx + r9 - 0x70], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x60]
    movdqu xmmword ptr [rcx + r9 - 0x60], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x50]
    movdqu xmmword ptr [rcx + r9 - 0x50], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x40]
    movdqu xmmword ptr [rcx + r9 - 0x40], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x30]
    movdqu xmmword ptr [rcx + r9 - 0x30], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x20]
    movdqu xmmword ptr [rcx + r9 - 0x20], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm5
    movdqu xmmword ptr [rax], xmm0
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov edi, ecx
    lea r15, [rip - 0xabbd]
    or r14, 0xffffffffffffffff
    mov r12, r9
    mov rbp, r8
    mov r13, rdx
    mov rax, qword ptr [r15 + rdi*8 + 0x2b350]
    nop 
    cmp rax, r14
    je 0x14000ac8a
    test rax, rax
    jne 0x14000ac8c
    cmp r8, r9
    je 0x14000ac82
    mov esi, dword ptr [rbp]
    mov rbx, qword ptr [r15 + rsi*8 + 0x2b338]
    nop 
    test rbx, rbx
    je 0x14000ac0a
    cmp rbx, r14
    jne 0x14000acc9
    jmp 0x14000ac75
    mov r15, qword ptr [r15 + rsi*8 + 0x1f578]
    xor edx, edx
    mov rcx, r15
    mov r8d, 0x800
    call qword ptr [rip + 0x134ed]
    mov rbx, rax
    test rax, rax
    jne 0x14000aca9
    call qword ptr [rip + 0x13477]
    cmp eax, 0x57
    jne 0x14000ac63
    lea r8d, [rbx + 7]
    mov rcx, r15
    lea rdx, [rip + 0x149e4]
    call 0x140010130
    test eax, eax
    je 0x14000ac63
    xor r8d, r8d
    xor edx, edx
    mov rcx, r15
    call qword ptr [rip + 0x134b5]
    mov rbx, rax
    test rax, rax
    jne 0x14000aca9
    mov rax, r14
    lea r15, [rip - 0xac6d]
    xchg qword ptr [r15 + rsi*8 + 0x2b338], rax
    add rbp, 4
    cmp rbp, r12
    jne 0x14000abee
    xchg qword ptr [r15 + rdi*8 + 0x2b350], r14
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    mov rax, rbx
    lea r15, [rip - 0xacb3]
    xchg qword ptr [r15 + rsi*8 + 0x2b338], rax
    test rax, rax
    je 0x14000acc9
    mov rcx, rbx
    call qword ptr [rip + 0x13437]
    mov rdx, r13
    mov rcx, rbx
    call qword ptr [rip + 0x13433]
    test rax, rax
    je 0x14000ac82
    mov rcx, rax
    xchg qword ptr [r15 + rdi*8 + 0x2b350], rcx
    jmp 0x14000ac8c
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    lea r9, [rip + 0x14948]
    xor ecx, ecx
    lea r8, [rip + 0x14937]
    lea rdx, [rip + 0x14938]
    call 0x14000ab98
    test rax, rax
    je 0x14000ad21
    mov rcx, rbx
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x1354f]
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x133b3]
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    lea r9, [rip + 0x14919]
    mov ecx, 1
    lea r8, [rip + 0x14905]
    lea rdx, [rip + 0x14906]
    call 0x14000ab98
    mov ecx, ebx
    test rax, rax
    je 0x14000ad6a
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x13506]
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x13382]
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    lea r9, [rip + 0x148e1]
    mov ecx, 2
    lea r8, [rip + 0x148cd]
    lea rdx, [rip + 0x148ce]
    call 0x14000ab98
    mov ecx, ebx
    test rax, rax
    je 0x14000adb2
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x134be]
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x1332a]
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, rdx
    lea r9, [rip + 0x148ac]
    mov edi, ecx
    lea rdx, [rip + 0x148a3]
    mov ecx, 3
    lea r8, [rip + 0x1488f]
    call 0x14000ab98
    mov rdx, rbx
    mov ecx, edi
    test rax, rax
    je 0x14000ae00
    call qword ptr [rip + 0x13472]
    jmp 0x14000ae06
    call qword ptr [rip + 0x132ea]
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov esi, r8d
    lea r9, [rip + 0x1486b]
    mov ebx, edx
    lea r8, [rip + 0x1485a]
    mov rdi, rcx
    lea rdx, [rip + 0x14858]
    mov ecx, 4
    call 0x14000ab98
    mov edx, ebx
    mov rcx, rdi
    test rax, rax
    je 0x14000ae5f
    mov r8d, esi
    call qword ptr [rip + 0x13413]
    jmp 0x14000ae65
    call qword ptr [rip + 0x13273]
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    sub rsp, 0x28
    mov qword ptr [rsp + 0x30], rcx
    mov qword ptr [rsp + 0x38], rdx
    mov dword ptr [rsp + 0x40], r8d
    mov rdx, qword ptr [rdx]
    mov rax, rcx
    call 0x140009cf0
    call rax
    call 0x140009d20
    mov rcx, rax
    mov rdx, qword ptr [rsp + 0x38]
    mov rdx, qword ptr [rdx]
    mov r8d, 2
    call 0x140009cf0
    add rsp, 0x28
    ret
    sub rsp, 0x28
    mov qword ptr [rsp + 0x30], rcx
    mov qword ptr [rsp + 0x38], rdx
    mov dword ptr [rsp + 0x40], r8d
    mov rdx, qword ptr [rdx]
    mov rax, rcx
    call 0x140009cf0
    call rax
    call 0x140009d20
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    sub rsp, 0x28
    mov qword ptr [rsp + 0x30], rcx
    mov qword ptr [rsp + 0x38], rdx
    mov rdx, qword ptr [rsp + 0x38]
    mov rdx, qword ptr [rdx]
    mov r8d, 2
    call 0x140009cf0
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    sub rsp, 0x28
    mov qword ptr [rsp + 0x30], rcx
    mov qword ptr [rsp + 0x38], rdx
    mov qword ptr [rsp + 0x40], r8
    mov dword ptr [rsp + 0x48], r9d
    mov r8d, r9d
    mov rax, rcx
    call 0x140009cf0
    mov rcx, qword ptr [rsp + 0x40]
    call rax
    call 0x140009d20
    mov rcx, rax
    mov rdx, qword ptr [rsp + 0x38]
    mov r8d, 2
    call 0x140009cf0
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    push rdi
    push rsi
    mov rdi, rcx
    mov rsi, rdx
    mov rcx, r8
    rep movsb byte ptr [rdi], byte ptr [rsi]
    pop rsi
    pop rdi
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    movups xmm2, xmmword ptr [rdx]
    sub rdx, rcx
    add rcx, r8
    movups xmm0, xmmword ptr [rcx + rdx - 0x10]
    sub rcx, 0x10
    sub r8, 0x10
    test cl, 0xf
    je 0x14000b013
    mov r9, rcx
    and rcx, 0xfffffffffffffff0
    movups xmm1, xmm0
    movups xmm0, xmmword ptr [rcx + rdx]
    movups xmmword ptr [r9], xmm1
    mov r8, rcx
    sub r8, rax
    mov r9, r8
    shr r9, 7
    je 0x14000b08d
    movaps xmmword ptr [rcx], xmm0
    jmp 0x14000b037
    nop word ptr [rax + rax]
    movaps xmmword ptr [rcx + 0x10], xmm0
    movaps xmmword ptr [rcx], xmm1
    movups xmm0, xmmword ptr [rcx + rdx - 0x10]
    movups xmm1, xmmword ptr [rcx + rdx - 0x20]
    sub rcx, 0x80
    movaps xmmword ptr [rcx + 0x70], xmm0
    movaps xmmword ptr [rcx + 0x60], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x50]
    movups xmm1, xmmword ptr [rcx + rdx + 0x40]
    dec r9
    movaps xmmword ptr [rcx + 0x50], xmm0
    movaps xmmword ptr [rcx + 0x40], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x30]
    movups xmm1, xmmword ptr [rcx + rdx + 0x20]
    movaps xmmword ptr [rcx + 0x30], xmm0
    movaps xmmword ptr [rcx + 0x20], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x10]
    movups xmm1, xmmword ptr [rcx + rdx]
    jne 0x14000b030
    movaps xmmword ptr [rcx + 0x10], xmm0
    and r8, 0x7f
    movaps xmm0, xmm1
    mov r9, r8
    shr r9, 4
    je 0x14000b0b0
    nop word ptr [rax + rax]
    movups xmmword ptr [rcx], xmm0
    sub rcx, 0x10
    movups xmm0, xmmword ptr [rcx + rdx]
    dec r9
    jne 0x14000b0a0
    and r8, 0xf
    je 0x14000b0b9
    movups xmmword ptr [rax], xmm2
    movups xmmword ptr [rcx], xmm0
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    push rdi
    push rsi
    mov rdi, rcx
    mov rsi, rdx
    mov rcx, r8
    rep movsb byte ptr [rdi], byte ptr [rsi]
    pop rsi
    pop rdi
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    movups xmm2, xmmword ptr [rdx]
    sub rdx, rcx
    add rcx, r8
    movups xmm0, xmmword ptr [rcx + rdx - 0x10]
    sub rcx, 0x10
    sub r8, 0x10
    test cl, 0xf
    je 0x14000b123
    mov r9, rcx
    and rcx, 0xfffffffffffffff0
    movups xmm1, xmm0
    movups xmm0, xmmword ptr [rcx + rdx]
    movups xmmword ptr [r9], xmm1
    mov r8, rcx
    sub r8, rax
    mov r9, r8
    shr r9, 7
    je 0x14000b19d
    movaps xmmword ptr [rcx], xmm0
    jmp 0x14000b147
    nop word ptr [rax + rax]
    movaps xmmword ptr [rcx + 0x10], xmm0
    movaps xmmword ptr [rcx], xmm1
    movups xmm0, xmmword ptr [rcx + rdx - 0x10]
    movups xmm1, xmmword ptr [rcx + rdx - 0x20]
    sub rcx, 0x80
    movaps xmmword ptr [rcx + 0x70], xmm0
    movaps xmmword ptr [rcx + 0x60], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x50]
    movups xmm1, xmmword ptr [rcx + rdx + 0x40]
    dec r9
    movaps xmmword ptr [rcx + 0x50], xmm0
    movaps xmmword ptr [rcx + 0x40], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x30]
    movups xmm1, xmmword ptr [rcx + rdx + 0x20]
    movaps xmmword ptr [rcx + 0x30], xmm0
    movaps xmmword ptr [rcx + 0x20], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x10]
    movups xmm1, xmmword ptr [rcx + rdx]
    jne 0x14000b140
    movaps xmmword ptr [rcx + 0x10], xmm0
    and r8, 0x7f
    movaps xmm0, xmm1
    mov r9, r8
    shr r9, 4
    je 0x14000b1c0
    nop word ptr [rax + rax]
    movups xmmword ptr [rcx], xmm0
    sub rcx, 0x10
    movups xmm0, xmmword ptr [rcx + rdx]
    dec r9
    jne 0x14000b1b0
    and r8, 0xf
    je 0x14000b1c9
    movups xmmword ptr [rax], xmm2
    movups xmmword ptr [rcx], xmm0
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    push rdi
    sub rsp, 0x20
    cmp qword ptr [rcx], 0
    mov rdi, rcx
    jne 0x14000b223
    call qword ptr [rip + 0x12ebf]
    cmp byte ptr [rdi + 0x10], 0
    mov dword ptr [rsp + 0x30], eax
    jne 0x14000b200
    and qword ptr [rdi + 8], 0
    xor edx, edx
    mov byte ptr [rdi + 0x10], 1
    jmp 0x14000b204
    mov rdx, qword ptr [rdi + 8]
    lea rcx, [rsp + 0x30]
    call 0x140010714
    mov ecx, dword ptr [rsp + 0x30]
    mov rbx, rax
    mov qword ptr [rdi], rax
    call qword ptr [rip + 0x12e92]
    test rbx, rbx
    je 0x14000b231
    mov rax, qword ptr [rdi]
    mov rbx, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    call 0x140010040
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rsi, qword ptr [rcx]
    xor edi, edi
    mov rbx, rcx
    test rsi, rsi
    jne 0x14000b28f
    call qword ptr [rip + 0x12e4e]
    mov dword ptr [rsp + 0x30], eax
    cmp byte ptr [rbx + 0x10], dil
    jne 0x14000b26e
    mov qword ptr [rbx + 8], rdi
    mov byte ptr [rbx + 0x10], 1
    jmp 0x14000b272
    mov rdi, qword ptr [rbx + 8]
    mov rdx, rdi
    lea rcx, [rsp + 0x30]
    call 0x140010714
    mov ecx, dword ptr [rsp + 0x30]
    mov rsi, rax
    mov qword ptr [rbx], rax
    call qword ptr [rip + 0x12e21]
    mov rbx, qword ptr [rsp + 0x38]
    mov rax, rsi
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    xor ebx, ebx
    mov rdi, rdx
    mov rsi, rcx
    cmp byte ptr [rdx + 0x10], bl
    jne 0x14000b2d8
    call qword ptr [rip + 0x12de2]
    mov ecx, eax
    mov qword ptr [rdi + 8], rbx
    mov byte ptr [rdi + 0x10], 1
    call qword ptr [rip + 0x12dda]
    jmp 0x14000b2dc
    mov rbx, qword ptr [rdx + 8]
    lea rax, [rsi + rbx*8]
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rbp
    push rdi
    push r14
    lea rbp, [rsp - 0x4f0]
    sub rsp, 0x5f0
    mov rax, qword ptr [rip + 0x1ecec]
    xor rax, rsp
    mov qword ptr [rbp + 0x4e0], rax
    mov edi, r8d
    mov esi, edx
    mov ebx, ecx
    cmp ecx, -1
    je 0x14000b32f
    call 0x1400053c0
    xor edx, edx
    lea rcx, [rsp + 0x70]
    mov r8d, 0x98
    call 0x14001cd80
    xor edx, edx
    lea rcx, [rbp + 0x10]
    mov r8d, 0x4d0
    call 0x14001cd80
    lea rax, [rsp + 0x70]
    mov qword ptr [rsp + 0x48], rax
    lea rcx, [rbp + 0x10]
    lea rax, [rbp + 0x10]
    mov qword ptr [rsp + 0x50], rax
    call qword ptr [rip + 0x12c99]
    mov r14, qword ptr [rbp + 0x108]
    lea rdx, [rsp + 0x40]
    mov rcx, r14
    xor r8d, r8d
    call qword ptr [rip + 0x12c89]
    test rax, rax
    je 0x14000b3c2
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rsp + 0x58]
    mov rdx, qword ptr [rsp + 0x40]
    mov r9, rax
    mov qword ptr [rsp + 0x30], rcx
    mov r8, r14
    lea rcx, [rsp + 0x60]
    mov qword ptr [rsp + 0x28], rcx
    lea rcx, [rbp + 0x10]
    mov qword ptr [rsp + 0x20], rcx
    xor ecx, ecx
    call qword ptr [rip + 0x12c56]
    mov rax, qword ptr [rbp + 0x508]
    mov qword ptr [rbp + 0x108], rax
    lea rax, [rbp + 0x508]
    add rax, 8
    mov dword ptr [rsp + 0x70], esi
    mov qword ptr [rbp + 0xa8], rax
    mov rax, qword ptr [rbp + 0x508]
    mov qword ptr [rbp - 0x80], rax
    mov dword ptr [rsp + 0x74], edi
    call qword ptr [rip + 0x12c75]
    xor ecx, ecx
    mov edi, eax
    call qword ptr [rip + 0x12c23]
    lea rcx, [rsp + 0x48]
    call qword ptr [rip + 0x12c10]
    test eax, eax
    jne 0x14000b424
    test edi, edi
    jne 0x14000b424
    cmp ebx, -1
    je 0x14000b424
    mov ecx, ebx
    call 0x1400053c0
    mov rcx, qword ptr [rbp + 0x4e0]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x5f0]
    mov rbx, qword ptr [r11 + 0x28]
    mov rsi, qword ptr [r11 + 0x30]
    mov rsp, r11
    pop r14
    pop rdi
    pop rbp
    ret
    int3 
    mov qword ptr [rip + 0x1ff2d], rcx
    ret
    mov qword ptr [rsp + 8], rbx
    push rbp
    mov rbp, rsp
    sub rsp, 0x70
    and qword ptr [rbp - 0x40], 0
    cmp dword ptr [rip + 0x200c3], 0
    mov byte ptr [rbp - 0x30], 0
    mov byte ptr [rbp - 0x18], 0
    mov byte ptr [rbp - 0x10], 0
    mov byte ptr [rbp - 8], 0
    jne 0x14000b48f
    movups xmm0, xmmword ptr [rip + 0x1ee72]
    mov byte ptr [rbp - 0x18], 1
    movdqu xmmword ptr [rbp - 0x28], xmm0
    lea rax, [rbp - 0x40]
    mov qword ptr [rsp + 0x28], rax
    mov rax, qword ptr [rbp + 0x30]
    mov qword ptr [rsp + 0x20], rax
    call 0x14000b4f0
    cmp byte ptr [rbp - 0x18], 2
    jne 0x14000b4b7
    mov rax, qword ptr [rbp - 0x40]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x10], 0
    je 0x14000b4cc
    mov ebx, dword ptr [rbp - 0x14]
    lea rcx, [rbp - 0x40]
    call 0x14000b1d0
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 8], 0
    je 0x14000b4e1
    mov ebx, dword ptr [rbp - 0xc]
    lea rcx, [rbp - 0x40]
    call 0x14000b1d0
    mov dword ptr [rax + 0x24], ebx
    mov rbx, qword ptr [rsp + 0x80]
    add rsp, 0x70
    pop rbp
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x30
    mov rbp, rcx
    mov ebx, r9d
    mov rcx, qword ptr [rsp + 0x68]
    mov rdi, r8
    mov rsi, rdx
    call 0x14000b238
    test rax, rax
    je 0x14000b566
    mov rax, qword ptr [rax + 0x3b8]
    test rax, rax
    je 0x14000b566
    movabs r10, 0xd6bc1f4834572a70
    mov rcx, qword ptr [rsp + 0x60]
    mov rdx, rsi
    mov qword ptr [rsp + 0x20], rcx
    mov r8, rdi
    mov rcx, rbp
    mov r9d, ebx
    call qword ptr [rip + 0x12d27]
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop rdi
    ret
    mov rdx, qword ptr [rsp + 0x68]
    lea rcx, [rip + 0x1fe0e]
    call 0x14000b2a4
    mov r11, qword ptr [rax]
    mov rax, qword ptr [rip + 0x1ea7f]
    xor r11, rax
    mov ecx, eax
    and ecx, 0x3f
    ror r11, cl
    test r11, r11
    je 0x14000b5a0
    movabs r10, 0xd6bc1f4834572a70
    mov rax, r11
    jmp 0x14000b535
    mov rax, qword ptr [rsp + 0x60]
    mov r9d, ebx
    mov r8, rdi
    mov qword ptr [rsp + 0x20], rax
    mov rdx, rsi
    mov rcx, rbp
    call 0x14000b60c
    int3 
    sub rsp, 0x38
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b454
    add rsp, 0x38
    ret
    int3 
    int3 
    sub rsp, 0x38
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b454
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b60c
    int3 
    int3 
    sub rsp, 0x28
    mov ecx, 0x17
    call qword ptr [rip + 0x12a25]
    test eax, eax
    je 0x14000b626
    mov ecx, 5
    int 0x29
    mov r8d, 1
    mov edx, 0xc0000417
    lea ecx, [r8 + 1]
    call 0x14000b2f0
    call qword ptr [rip + 0x129f0]
    mov rcx, rax
    mov edx, 0xc0000417
    add rsp, 0x28
    jmp qword ptr [rip + 0x129e5]
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x20
    mov eax, dword ptr [rip + 0x1fd15]
    xor ebx, ebx
    mov edi, 3
    test eax, eax
    jne 0x14000b685
    mov eax, 0x200
    jmp 0x14000b68a
    cmp eax, edi
    cmovl eax, edi
    movsxd rcx, eax
    mov edx, 8
    mov dword ptr [rip + 0x1fcf0], eax
    call 0x140010928
    xor ecx, ecx
    mov qword ptr [rip + 0x1fcea], rax
    call 0x1400109a0
    cmp qword ptr [rip + 0x1fcde], rbx
    jne 0x14000b6e3
    mov edx, 8
    mov dword ptr [rip + 0x1fcc9], edi
    mov rcx, rdi
    call 0x140010928
    xor ecx, ecx
    mov qword ptr [rip + 0x1fcc0], rax
    call 0x1400109a0
    cmp qword ptr [rip + 0x1fcb4], rbx
    jne 0x14000b6e3
    or eax, 0xffffffff
    jmp 0x14000b758
    mov rbp, rbx
    lea rsi, [rip + 0x1e9ab]
    lea r14, [rip + 0x1e98c]
    lea rcx, [r14 + 0x30]
    xor r8d, r8d
    mov edx, 0xfa0
    call 0x140010d40
    mov rax, qword ptr [rip + 0x1fc84]
    lea r8, [rip + 0x2001d]
    mov rdx, rbp
    sar rdx, 6
    mov qword ptr [rbx + rax], r14
    mov rax, rbp
    and eax, 0x3f
    lea rcx, [rax + rax*8]
    mov rax, qword ptr [r8 + rdx*8]
    mov rcx, qword ptr [rax + rcx*8 + 0x28]
    add rcx, 2
    cmp rcx, 2
    ja 0x14000b741
    mov dword ptr [rsi], 0xfffffffe
    inc rbp
    add r14, 0x58
    add rbx, 8
    add rsi, 0x58
    sub rdi, 1
    jne 0x14000b6f4
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop r14
    ret
    int3 
    mov eax, ecx
    lea rcx, [rip + 0x1e903]
    imul rax, rax, 0x58
    add rax, rcx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    call 0x140011358
    call 0x140010f64
    xor ebx, ebx
    mov rcx, qword ptr [rip + 0x1fbef]
    mov rcx, qword ptr [rbx + rcx]
    call 0x140011360
    mov rax, qword ptr [rip + 0x1fbdf]
    mov rcx, qword ptr [rbx + rax]
    add rcx, 0x30
    call qword ptr [rip + 0x12911]
    add rbx, 8
    cmp rbx, 0x18
    jne 0x14000b79a
    mov rcx, qword ptr [rip + 0x1fbc0]
    call 0x1400109a0
    and qword ptr [rip + 0x1fbb3], 0
    add rsp, 0x20
    pop rbx
    ret
    int3 
    add rcx, 0x30
    jmp qword ptr [rip + 0x128d1]
    int3 
    add rcx, 0x30
    jmp qword ptr [rip + 0x128cd]
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov rcx, qword ptr [rdx]
    call 0x14000b7e4
    nop 
    mov rcx, rdi
    call 0x14000c698
    mov edi, eax
    mov rcx, qword ptr [rbx]
    call 0x14000b7f0
    mov eax, edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r14
    push r15
    lea rbp, [rsp - 0x3d0]
    sub rsp, 0x4d0
    mov rax, qword ptr [rip + 0x1e7a3]
    xor rax, rsp
    mov qword ptr [rbp + 0x3c0], rax
    mov rax, qword ptr [rbp + 0x430]
    xor r12d, r12d
    mov rdi, r8
    mov rsi, rdx
    mov r15, rcx
    test r9, r9
    jne 0x14000b8ab
    mov byte ptr [rax + 0x30], 1
    xor r9d, r9d
    mov qword ptr [rsp + 0x28], rax
    xor r8d, r8d
    xor edx, edx
    mov dword ptr [rax + 0x2c], 0x16
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], r12
    call 0x14000b4f0
    or eax, 0xffffffff
    jmp 0x14000b9af
    test rdi, rdi
    je 0x14000b8b5
    test rsi, rsi
    je 0x14000b87f
    mov r14, r15
    mov dword ptr [rsp + 0x49], r12d
    mov word ptr [rsp + 0x4d], r12w
    mov byte ptr [rsp + 0x4f], r12b
    mov qword ptr [rsp + 0x30], rsi
    mov qword ptr [rsp + 0x38], rdi
    mov qword ptr [rsp + 0x40], r12
    and r14d, 2
    jne 0x14000b8e7
    mov byte ptr [rsp + 0x48], r12b
    test rsi, rsi
    jne 0x14000b8ec
    mov byte ptr [rsp + 0x48], 1
    mov qword ptr [rsp + 0x58], rax
    lea rcx, [rsp + 0x50]
    lea rax, [rsp + 0x30]
    mov dword ptr [rsp + 0x70], r12d
    mov qword ptr [rbp + 0x3b0], rax
    xorps xmm0, xmm0
    mov rax, qword ptr [rbp + 0x438]
    mov qword ptr [rsp + 0x68], rax
    mov byte ptr [rsp + 0x74], r12b
    mov qword ptr [rsp + 0x78], r12
    mov dword ptr [rbp - 0x80], r12d
    mov word ptr [rbp - 0x78], r12w
    mov dword ptr [rbp - 0x68], r12d
    mov byte ptr [rbp - 0x64], r12b
    movdqa xmmword ptr [rbp + 0x3a0], xmm0
    mov qword ptr [rsp + 0x50], r15
    mov qword ptr [rsp + 0x60], r9
    mov dword ptr [rbp + 0x3b8], r12d
    call 0x14000cc48
    movsxd rbx, eax
    test rsi, rsi
    je 0x14000b9a1
    test r15b, 1
    je 0x14000b980
    test rdi, rdi
    jne 0x14000b96b
    test eax, eax
    je 0x14000b96b
    or ebx, 0xffffffff
    jmp 0x14000b9a1
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rdi
    jne 0x14000b99d
    test ebx, ebx
    js 0x14000b9a1
    cmp rbx, rdi
    jbe 0x14000b9a1
    jmp 0x14000b966
    test r14, r14
    je 0x14000b9d0
    test rdi, rdi
    je 0x14000b9a1
    test eax, eax
    jns 0x14000b993
    mov byte ptr [rsi], r12b
    jmp 0x14000b9a1
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rdi
    je 0x14000b9e4
    mov byte ptr [rsi + rax], r12b
    mov rcx, qword ptr [rbp + 0x3a8]
    call 0x1400109a0
    mov eax, ebx
    mov rcx, qword ptr [rbp + 0x3c0]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0x4d0
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    test rdi, rdi
    je 0x14000b966
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rdi
    jne 0x14000b99d
    mov ebx, 0xfffffffe
    mov byte ptr [rsi + rdi - 1], r12b
    jmp 0x14000b9a1
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    movabs rax, 0x7fffffffffffffff
    mov rbp, rcx
    cmp rdx, rax
    jbe 0x14000ba23
    mov byte ptr [r8 + 0x30], 1
    xor al, al
    mov dword ptr [r8 + 0x2c], 0xc
    jmp 0x14000ba7f
    xor edi, edi
    lea rsi, [rdx + rdx]
    cmp qword ptr [rcx + 0x408], rdi
    jne 0x14000ba3b
    cmp rsi, 0x400
    jbe 0x14000ba44
    cmp rsi, qword ptr [rcx + 0x400]
    ja 0x14000ba48
    mov al, 1
    jmp 0x14000ba7f
    mov rcx, rsi
    call 0x140011618
    mov rbx, rax
    test rax, rax
    je 0x14000ba75
    mov rcx, qword ptr [rbp + 0x408]
    call 0x1400109a0
    mov qword ptr [rbp + 0x408], rbx
    mov dil, 1
    mov qword ptr [rbp + 0x400], rsi
    xor ecx, ecx
    call 0x1400109a0
    mov al, dil
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov r12, qword ptr [rdx]
    mov ebp, r8d
    mov rbx, rdx
    mov r13, rcx
    test r12, r12
    jne 0x14000bad3
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    jmp 0x14000bb05
    test ebp, ebp
    je 0x14000bb1d
    lea eax, [r8 - 2]
    cmp eax, 0x22
    jbe 0x14000bb1d
    mov byte ptr [rcx + 0x30], 1
    xor r9d, r9d
    mov dword ptr [rcx + 0x2c], 0x16
    xor r8d, r8d
    mov qword ptr [rsp + 0x28], r13
    xor ecx, ecx
    and qword ptr [rsp + 0x20], 0
    xor edx, edx
    call 0x14000b4f0
    mov rcx, qword ptr [rbx + 8]
    test rcx, rcx
    je 0x14000bc90
    mov rax, qword ptr [rbx]
    mov qword ptr [rcx], rax
    jmp 0x14000bc90
    mov sil, byte ptr [r12]
    lea rcx, [r12 + 1]
    xor r14d, r14d
    movzx eax, r9b
    mov edi, eax
    mov qword ptr [rdx], rcx
    lea r15d, [r14 + 2]
    or edi, r15d
    cmp sil, 0x2d
    cmovne edi, eax
    je 0x14000bb48
    cmp sil, 0x2b
    jne 0x14000bb51
    mov sil, byte ptr [rcx]
    inc rcx
    mov qword ptr [rdx], rcx
    test ebp, 0xffffffef
    jne 0x14000bbe5
    lea eax, [rsi - 0x30]
    cmp al, 9
    ja 0x14000bb6d
    movsx eax, sil
    add eax, -0x30
    jmp 0x14000bb8b
    lea eax, [rsi - 0x61]
    cmp al, 0x19
    ja 0x14000bb7d
    movsx eax, sil
    add eax, -0x57
    jmp 0x14000bb8b
    lea eax, [rsi - 0x41]
    cmp al, 0x19
    ja 0x14000bbd9
    movsx eax, sil
    add eax, -0x37
    test eax, eax
    jne 0x14000bbd9
    mov dl, byte ptr [rcx]
    lea r8, [rcx + 1]
    mov qword ptr [rbx], r8
    lea eax, [rdx - 0x58]
    test al, 0xdf
    je 0x14000bbc8
    test ebp, ebp
    mov qword ptr [rbx], rcx
    mov eax, 8
    cmovne eax, ebp
    mov ebp, eax
    test dl, dl
    je 0x14000bbe5
    cmp byte ptr [rcx], dl
    je 0x14000bbe5
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    jmp 0x14000bbe5
    mov sil, byte ptr [r8]
    lea rax, [r8 + 1]
    mov qword ptr [rbx], rax
    mov eax, 0x10
    jmp 0x14000bbde
    mov eax, 0xa
    test ebp, ebp
    cmovne eax, ebp
    mov ebp, eax
    mov r8, qword ptr [rbx]
    xor edx, edx
    or eax, 0xffffffff
    div ebp
    mov r9d, eax
    lea ecx, [rsi - 0x30]
    cmp cl, 9
    ja 0x14000bc03
    movsx ecx, sil
    add ecx, -0x30
    jmp 0x14000bc26
    lea eax, [rsi - 0x61]
    cmp al, 0x19
    ja 0x14000bc13
    movsx ecx, sil
    add ecx, -0x57
    jmp 0x14000bc26
    lea eax, [rsi - 0x41]
    cmp al, 0x19
    ja 0x14000bc23
    movsx ecx, sil
    add ecx, -0x37
    jmp 0x14000bc26
    or ecx, 0xffffffff
    cmp ecx, ebp
    jae 0x14000bc5a
    mov sil, byte ptr [r8]
    mov eax, r14d
    imul eax, ebp
    lea edx, [rax + rcx]
    xor ecx, ecx
    cmp edx, eax
    setb cl
    xor eax, eax
    cmp r14d, r9d
    mov r14d, edx
    seta al
    or ecx, eax
    shl ecx, 2
    or ecx, 8
    or edi, ecx
    inc r8
    mov qword ptr [rbx], r8
    jmp 0x14000bbf2
    lea rax, [r8 - 1]
    mov qword ptr [rbx], rax
    test sil, sil
    je 0x14000bc7b
    cmp byte ptr [rax], sil
    je 0x14000bc7b
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    test dil, 8
    jne 0x14000bc97
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rbx], r12
    test rax, rax
    je 0x14000bc90
    mov qword ptr [rax], r12
    xor eax, eax
    jmp 0x14000bd2a
    mov r8d, 0x80000000
    lea r9d, [r8 - 1]
    test dil, 4
    je 0x14000bcb0
    mov eax, 1
    mov ecx, edi
    jmp 0x14000bcce
    test dil, 1
    je 0x14000bd10
    test r15b, dil
    je 0x14000bcc2
    cmp r14d, r8d
    jbe 0x14000bd15
    jmp 0x14000bcc7
    cmp r14d, r9d
    jbe 0x14000bd18
    mov ecx, 1
    mov eax, edi
    and edi, r15d
    mov byte ptr [r13 + 0x30], 1
    mov dword ptr [r13 + 0x2c], 0x22
    test eax, ecx
    jne 0x14000bce8
    or r14d, 0xffffffff
    jmp 0x14000bd18
    mov rdx, qword ptr [rbx + 8]
    test edi, edi
    je 0x14000bd00
    test rdx, rdx
    je 0x14000bcfb
    mov rcx, qword ptr [rbx]
    mov qword ptr [rdx], rcx
    mov eax, r8d
    jmp 0x14000bd2a
    test rdx, rdx
    je 0x14000bd0b
    mov rcx, qword ptr [rbx]
    mov qword ptr [rdx], rcx
    mov eax, r9d
    jmp 0x14000bd2a
    test r15b, dil
    je 0x14000bd18
    neg r14d
    mov rax, qword ptr [rbx + 8]
    test rax, rax
    je 0x14000bd27
    mov rcx, qword ptr [rbx]
    mov qword ptr [rax], rcx
    mov eax, r14d
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov r8d, dword ptr [rcx + 0x34]
    mov bpl, dl
    mov rbx, rcx
    mov r14d, 8
    cmp r8d, 5
    jg 0x14000be44
    je 0x14000bdaa
    test r8d, r8d
    je 0x14000be9b
    sub r8d, 1
    je 0x14000be1b
    sub r8d, 1
    je 0x14000bdf3
    sub r8d, 1
    je 0x14000be9b
    cmp r8d, 1
    jne 0x14000be67
    mov edx, dword ptr [rcx + 0x28]
    mov rdi, r14
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov rsi, qword ptr [rcx]
    mov eax, edx
    shr eax, 4
    test al, 1
    je 0x14000bddd
    test rsi, rsi
    jns 0x14000bddd
    neg rsi
    or edx, 0x40
    mov dword ptr [rbx + 0x28], edx
    cmp dword ptr [rbx + 0x30], 0
    jge 0x14000bec7
    mov dword ptr [rbx + 0x30], 1
    jmp 0x14000bede
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 2
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000be16
    movsx rsi, word ptr [rcx]
    jmp 0x14000bdc6
    movzx esi, word ptr [rcx]
    jmp 0x14000bdc6
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 1
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test dil, al
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000be3f
    movsx rsi, byte ptr [rcx]
    jmp 0x14000bdc6
    movzx esi, byte ptr [rcx]
    jmp 0x14000bdc6
    sub r8d, 6
    je 0x14000bdaa
    sub r8d, 1
    je 0x14000bdaa
    sub r8d, 2
    je 0x14000bdaa
    jmp 0x14000bd96
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x14000b4f0
    xor al, al
    jmp 0x14000bf30
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 4
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000bec0
    movsxd rsi, dword ptr [rcx]
    jmp 0x14000bdc6
    mov esi, dword ptr [rcx]
    jmp 0x14000bdc6
    mov r8, qword ptr [rbx + 8]
    lea rcx, [rbx + 0x50]
    and edx, 0xfffffff7
    mov dword ptr [rbx + 0x28], edx
    movsxd rdx, dword ptr [rbx + 0x30]
    call 0x14000b9ec
    test rsi, rsi
    jne 0x14000bee7
    and dword ptr [rbx + 0x28], 0xffffffdf
    mov byte ptr [rbx + 0x4c], 0
    mov r8b, bpl
    mov rcx, rbx
    cmp rdi, r14
    jne 0x14000bf00
    mov rdx, rsi
    call 0x14000c4f4
    jmp 0x14000bf07
    mov edx, esi
    call 0x14000c354
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 7
    test al, 1
    je 0x14000bf2e
    cmp dword ptr [rbx + 0x48], 0
    je 0x14000bf20
    mov rax, qword ptr [rbx + 0x40]
    cmp byte ptr [rax], 0x30
    je 0x14000bf2e
    dec qword ptr [rbx + 0x40]
    mov rcx, qword ptr [rbx + 0x40]
    mov byte ptr [rcx], 0x30
    inc dword ptr [rbx + 0x48]
    mov al, 1
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov r8d, dword ptr [rcx + 0x34]
    mov bpl, dl
    mov rbx, rcx
    mov r14d, 8
    cmp r8d, 5
    jg 0x14000c048
    je 0x14000bfae
    test r8d, r8d
    je 0x14000c09f
    sub r8d, 1
    je 0x14000c01f
    sub r8d, 1
    je 0x14000bff7
    sub r8d, 1
    je 0x14000c09f
    cmp r8d, 1
    jne 0x14000c06b
    mov edx, dword ptr [rcx + 0x28]
    mov rdi, r14
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov rsi, qword ptr [rcx]
    mov eax, edx
    shr eax, 4
    test al, 1
    je 0x14000bfe1
    test rsi, rsi
    jns 0x14000bfe1
    neg rsi
    or edx, 0x40
    mov dword ptr [rbx + 0x28], edx
    cmp dword ptr [rbx + 0x30], 0
    jge 0x14000c0cb
    mov dword ptr [rbx + 0x30], 1
    jmp 0x14000c0e2
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 2
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000c01a
    movsx rsi, word ptr [rcx]
    jmp 0x14000bfca
    movzx esi, word ptr [rcx]
    jmp 0x14000bfca
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 1
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test dil, al
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000c043
    movsx rsi, byte ptr [rcx]
    jmp 0x14000bfca
    movzx esi, byte ptr [rcx]
    jmp 0x14000bfca
    sub r8d, 6
    je 0x14000bfae
    sub r8d, 1
    je 0x14000bfae
    sub r8d, 2
    je 0x14000bfae
    jmp 0x14000bf9a
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x14000b4f0
    xor al, al
    jmp 0x14000c134
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 4
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000c0c4
    movsxd rsi, dword ptr [rcx]
    jmp 0x14000bfca
    mov esi, dword ptr [rcx]
    jmp 0x14000bfca
    mov r8, qword ptr [rbx + 8]
    lea rcx, [rbx + 0x50]
    and edx, 0xfffffff7
    mov dword ptr [rbx + 0x28], edx
    movsxd rdx, dword ptr [rbx + 0x30]
    call 0x14000b9ec
    test rsi, rsi
    jne 0x14000c0eb
    and dword ptr [rbx + 0x28], 0xffffffdf
    mov byte ptr [rbx + 0x4c], 0
    mov r8b, bpl
    mov rcx, rbx
    cmp rdi, r14
    jne 0x14000c104
    mov rdx, rsi
    call 0x14000c564
    jmp 0x14000c10b
    mov edx, esi
    call 0x14000c3c4
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 7
    test al, 1
    je 0x14000c132
    cmp dword ptr [rbx + 0x48], 0
    je 0x14000c124
    mov rax, qword ptr [rbx + 0x40]
    cmp byte ptr [rax], 0x30
    je 0x14000c132
    dec qword ptr [rbx + 0x40]
    mov rcx, qword ptr [rbx + 0x40]
    mov byte ptr [rcx], 0x30
    inc dword ptr [rbx + 0x48]
    mov al, 1
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov r8d, dword ptr [rcx + 0x34]
    mov bpl, dl
    mov rbx, rcx
    mov r14d, 8
    cmp r8d, 5
    jg 0x14000c24c
    je 0x14000c1b2
    test r8d, r8d
    je 0x14000c2a3
    sub r8d, 1
    je 0x14000c223
    sub r8d, 1
    je 0x14000c1fb
    sub r8d, 1
    je 0x14000c2a3
    cmp r8d, 1
    jne 0x14000c26f
    mov edx, dword ptr [rcx + 0x28]
    mov rdi, r14
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov rsi, qword ptr [rcx]
    mov eax, edx
    shr eax, 4
    test al, 1
    je 0x14000c1e5
    test rsi, rsi
    jns 0x14000c1e5
    neg rsi
    or edx, 0x40
    mov dword ptr [rbx + 0x28], edx
    cmp dword ptr [rbx + 0x30], 0
    jge 0x14000c2cf
    mov dword ptr [rbx + 0x30], 1
    jmp 0x14000c2e6
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 2
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000c21e
    movsx rsi, word ptr [rcx]
    jmp 0x14000c1ce
    movzx esi, word ptr [rcx]
    jmp 0x14000c1ce
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 1
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test dil, al
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000c247
    movsx rsi, byte ptr [rcx]
    jmp 0x14000c1ce
    movzx esi, byte ptr [rcx]
    jmp 0x14000c1ce
    sub r8d, 6
    je 0x14000c1b2
    sub r8d, 1
    je 0x14000c1b2
    sub r8d, 2
    je 0x14000c1b2
    jmp 0x14000c19e
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x14000b4f0
    xor al, al
    jmp 0x14000c338
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 4
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000c2c8
    movsxd rsi, dword ptr [rcx]
    jmp 0x14000c1ce
    mov esi, dword ptr [rcx]
    jmp 0x14000c1ce
    mov r8, qword ptr [rbx + 8]
    lea rcx, [rbx + 0x50]
    and edx, 0xfffffff7
    mov dword ptr [rbx + 0x28], edx
    movsxd rdx, dword ptr [rbx + 0x30]
    call 0x14000b9ec
    test rsi, rsi
    jne 0x14000c2ef
    and dword ptr [rbx + 0x28], 0xffffffdf
    mov byte ptr [rbx + 0x4c], 0
    mov r8b, bpl
    mov rcx, rbx
    cmp rdi, r14
    jne 0x14000c308
    mov rdx, rsi
    call 0x14000c614
    jmp 0x14000c30f
    mov edx, esi
    call 0x14000c470
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 7
    test al, 1
    je 0x14000c336
    cmp dword ptr [rbx + 0x48], 0
    je 0x14000c328
    mov rax, qword ptr [rbx + 0x40]
    cmp byte ptr [rax], 0x30
    je 0x14000c336
    dec qword ptr [rbx + 0x40]
    mov rcx, qword ptr [rbx + 0x40]
    mov byte ptr [rcx], 0x30
    inc dword ptr [rbx + 0x48]
    mov al, 1
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    int3 
    lea r8, [rcx + 0x50]
    mov r9d, edx
    mov rax, qword ptr [r8 + 0x408]
    test rax, rax
    jne 0x14000c36e
    mov eax, 0x200
    jmp 0x14000c37b
    mov r8, rax
    mov rax, qword ptr [rcx + 0x450]
    shr rax, 1
    lea rdx, [r8 - 1]
    add rdx, rax
    mov qword ptr [rcx + 0x40], rdx
    mov r8, rdx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jg 0x14000c395
    test r9d, r9d
    je 0x14000c3b2
    dec eax
    mov dword ptr [rcx + 0x30], eax
    mov al, r9b
    and al, 7
    shr r9d, 3
    add al, 0x30
    mov byte ptr [r8], al
    dec qword ptr [rcx + 0x40]
    mov r8, qword ptr [rcx + 0x40]
    jmp 0x14000c389
    sub edx, dword ptr [rcx + 0x40]
    lea rax, [r8 + 1]
    mov dword ptr [rcx + 0x48], edx
    mov qword ptr [rcx + 0x40], rax
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov rax, qword ptr [rcx + 0x458]
    mov r9, rcx
    add rcx, 0x50
    mov bl, r8b
    mov r11d, edx
    test rax, rax
    jne 0x14000c3e9
    mov eax, 0x200
    jmp 0x14000c3f6
    mov rcx, rax
    mov rax, qword ptr [r9 + 0x450]
    shr rax, 1
    lea r8, [rcx - 1]
    add r8, rax
    mov qword ptr [r9 + 0x40], r8
    mov r10, r8
    mov eax, dword ptr [r9 + 0x30]
    test eax, eax
    jg 0x14000c411
    test r11d, r11d
    je 0x14000c458
    dec eax
    mov dword ptr [r9 + 0x30], eax
    mov eax, 0xcccccccd
    mul r11d
    shr edx, 3
    mov al, dl
    shl al, 2
    lea ecx, [rax + rdx]
    add cl, cl
    sub r11b, cl
    add r11b, 0x30
    mov al, r11b
    mov cl, r11b
    mov r11d, edx
    cmp al, 0x39
    jle 0x14000c44b
    mov al, bl
    xor al, 1
    shl al, 5
    add al, 7
    add al, cl
    mov byte ptr [r10], al
    dec qword ptr [r9 + 0x40]
    mov r10, qword ptr [r9 + 0x40]
    jmp 0x14000c404
    sub r8d, dword ptr [r9 + 0x40]
    lea rax, [r10 + 1]
    mov rbx, qword ptr [rsp + 8]
    mov dword ptr [r9 + 0x48], r8d
    mov qword ptr [r9 + 0x40], rax
    ret
    int3 
    int3 
    lea r9, [rcx + 0x50]
    mov r11b, r8b
    mov rax, qword ptr [r9 + 0x408]
    mov r10d, edx
    test rax, rax
    jne 0x14000c48d
    mov eax, 0x200
    jmp 0x14000c49a
    mov r9, rax
    mov rax, qword ptr [rcx + 0x450]
    shr rax, 1
    lea rdx, [r9 - 1]
    add rdx, rax
    mov qword ptr [rcx + 0x40], rdx
    mov r8, rdx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jg 0x14000c4b4
    test r10d, r10d
    je 0x14000c4e5
    dec eax
    mov dword ptr [rcx + 0x30], eax
    mov al, r10b
    and al, 0xf
    shr r10d, 4
    add al, 0x30
    mov r9b, al
    cmp al, 0x39
    jbe 0x14000c4d8
    mov al, r11b
    xor al, 1
    shl al, 5
    add al, 7
    add al, r9b
    mov byte ptr [r8], al
    dec qword ptr [rcx + 0x40]
    mov r8, qword ptr [rcx + 0x40]
    jmp 0x14000c4a8
    sub edx, dword ptr [rcx + 0x40]
    lea rax, [r8 + 1]
    mov dword ptr [rcx + 0x48], edx
    mov qword ptr [rcx + 0x40], rax
    ret
    lea r8, [rcx + 0x50]
    mov r9, rdx
    mov rax, qword ptr [r8 + 0x408]
    test rax, rax
    jne 0x14000c50e
    mov eax, 0x200
    jmp 0x14000c51b
    mov r8, rax
    mov rax, qword ptr [rcx + 0x450]
    shr rax, 1
    lea rdx, [r8 - 1]
    add rdx, rax
    mov qword ptr [rcx + 0x40], rdx
    mov r8, rdx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jg 0x14000c535
    test r9, r9
    je 0x14000c552
    dec eax
    mov dword ptr [rcx + 0x30], eax
    mov al, r9b
    and al, 7
    shr r9, 3
    add al, 0x30
    mov byte ptr [r8], al
    dec qword ptr [rcx + 0x40]
    mov r8, qword ptr [rcx + 0x40]
    jmp 0x14000c529
    sub edx, dword ptr [rcx + 0x40]
    lea rax, [r8 + 1]
    mov dword ptr [rcx + 0x48], edx
    mov qword ptr [rcx + 0x40], rax
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov rax, qword ptr [rcx + 0x458]
    mov r9, rcx
    add rcx, 0x50
    mov bl, r8b
    mov r11, rdx
    test rax, rax
    jne 0x14000c589
    mov eax, 0x200
    jmp 0x14000c596
    mov rcx, rax
    mov rax, qword ptr [r9 + 0x450]
    shr rax, 1
    lea r8, [rcx - 1]
    add r8, rax
    mov qword ptr [r9 + 0x40], r8
    mov r10, r8
    mov eax, dword ptr [r9 + 0x30]
    test eax, eax
    jg 0x14000c5b1
    test r11, r11
    je 0x14000c5fe
    dec eax
    mov dword ptr [r9 + 0x30], eax
    movabs rax, 0xcccccccccccccccd
    mul r11
    shr rdx, 3
    mov al, dl
    shl al, 2
    lea ecx, [rax + rdx]
    add cl, cl
    sub r11b, cl
    add r11b, 0x30
    mov al, r11b
    mov cl, r11b
    mov r11, rdx
    cmp al, 0x39
    jle 0x14000c5f1
    mov al, bl
    xor al, 1
    shl al, 5
    add al, 7
    add al, cl
    mov byte ptr [r10], al
    dec qword ptr [r9 + 0x40]
    mov r10, qword ptr [r9 + 0x40]
    jmp 0x14000c5a4
    sub r8d, dword ptr [r9 + 0x40]
    lea rax, [r10 + 1]
    mov rbx, qword ptr [rsp + 8]
    mov dword ptr [r9 + 0x48], r8d
    mov qword ptr [r9 + 0x40], rax
    ret
    lea r9, [rcx + 0x50]
    mov r11b, r8b
    mov rax, qword ptr [r9 + 0x408]
    mov r10, rdx
    test rax, rax
    jne 0x14000c631
    mov eax, 0x200
    jmp 0x14000c63e
    mov r9, rax
    mov rax, qword ptr [rcx + 0x450]
    shr rax, 1
    lea rdx, [r9 - 1]
    add rdx, rax
    mov qword ptr [rcx + 0x40], rdx
    mov r8, rdx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jg 0x14000c658
    test r10, r10
    je 0x14000c689
    dec eax
    mov dword ptr [rcx + 0x30], eax
    mov al, r10b
    and al, 0xf
    shr r10, 4
    add al, 0x30
    mov r9b, al
    cmp al, 0x39
    jbe 0x14000c67c
    mov al, r11b
    xor al, 1
    shl al, 5
    add al, 7
    add al, r9b
    mov byte ptr [r8], al
    dec qword ptr [rcx + 0x40]
    mov r8, qword ptr [rcx + 0x40]
    jmp 0x14000c64c
    sub edx, dword ptr [rcx + 0x40]
    lea rax, [r8 + 1]
    mov dword ptr [rcx + 0x48], edx
    mov qword ptr [rcx + 0x40], rax
    ret
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push rbp
    push r14
    push r15
    lea rbp, [rax - 0x3b8]
    sub rsp, 0x4a0
    mov rax, qword ptr [rip + 0x1d93f]
    xor rax, rsp
    mov qword ptr [rbp + 0x390], rax
    mov rax, qword ptr [rcx]
    mov rbx, rcx
    mov r14, qword ptr [rcx + 8]
    mov r15, qword ptr [rax]
    mov rcx, r15
    call 0x140012c40
    mov rcx, qword ptr [rbx + 0x18]
    xorps xmm0, xmm0
    mov r9, qword ptr [rbx]
    mov sil, al
    mov rdx, qword ptr [rbx + 0x20]
    mov r11, qword ptr [rcx]
    mov r9, qword ptr [r9]
    mov rdi, qword ptr [rdx]
    mov rcx, qword ptr [rbx + 0x10]
    mov r10, qword ptr [rcx]
    mov rcx, qword ptr [rbx + 8]
    and dword ptr [rsp + 0x40], 0
    and dword ptr [rsp + 0x48], 0
    and dword ptr [rsp + 0x4c], 0
    and dword ptr [rsp + 0x50], 0
    and word ptr [rsp + 0x58], 0
    and dword ptr [rsp + 0x68], 0
    and dword ptr [rbp + 0x388], 0
    mov qword ptr [rsp + 0x28], rcx
    lea rcx, [rsp + 0x20]
    mov byte ptr [rsp + 0x44], 0
    mov byte ptr [rsp + 0x6c], 0
    movdqa xmmword ptr [rbp + 0x370], xmm0
    mov qword ptr [rbp + 0x380], r9
    mov qword ptr [rsp + 0x20], r10
    mov qword ptr [rsp + 0x30], r11
    mov qword ptr [rsp + 0x38], rdi
    call 0x14000c8b0
    mov rcx, qword ptr [rbp + 0x378]
    mov ebx, eax
    call 0x1400109a0
    and qword ptr [rbp + 0x378], 0
    mov r8, r14
    mov rdx, r15
    mov cl, sil
    call 0x140012d08
    mov eax, ebx
    mov rcx, qword ptr [rbp + 0x390]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x4a0]
    mov rbx, qword ptr [r11 + 0x28]
    mov rsi, qword ptr [r11 + 0x30]
    mov rdi, qword ptr [r11 + 0x38]
    mov rsp, r11
    pop r15
    pop r14
    pop rbp
    ret
    mov rax, qword ptr [rdx]
    mov rdx, qword ptr [rax + 0xf8]
    mov rax, qword ptr [rdx]
    mov r9b, byte ptr [rax]
    mov al, byte ptr [rcx]
    test al, al
    je 0x14000c7de
    mov dl, al
    mov al, dl
    cmp dl, r9b
    je 0x14000c7de
    inc rcx
    mov al, byte ptr [rcx]
    mov dl, al
    test al, al
    jne 0x14000c7cc
    inc rcx
    test al, al
    je 0x14000c81d
    jmp 0x14000c7f0
    sub al, 0x45
    test al, 0xdf
    je 0x14000c7f6
    inc rcx
    mov al, byte ptr [rcx]
    test al, al
    jne 0x14000c7e7
    mov r8, rcx
    dec rcx
    mov al, byte ptr [rcx]
    cmp al, 0x30
    je 0x14000c7f9
    cmp al, r9b
    lea rdx, [rcx - 1]
    cmovne rdx, rcx
    sub r8, rdx
    mov al, byte ptr [r8 + rdx]
    inc rdx
    mov byte ptr [rdx], al
    test al, al
    jne 0x14000c810
    ret
    int3 
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 0x10], rbx
    mov qword ptr [r11 + 0x18], rbp
    mov qword ptr [r11 + 0x20], rsi
    push rdi
    sub rsp, 0x30
    mov rbp, qword ptr [rcx + 8]
    mov rsi, rcx
    mov rax, qword ptr [rcx + 0x10]
    mov rdi, rdx
    lea rcx, [r11 + 8]
    dec rax
    mov qword ptr [r11 - 0x10], rcx
    lea rdx, [r11 - 0x18]
    mov rbx, qword ptr [rbp + 0x2c]
    mov r9b, 1
    mov r8d, 0xa
    mov qword ptr [r11 + 8], rax
    mov rcx, rbp
    mov qword ptr [r11 - 0x18], rax
    call 0x14000ba94
    mov dword ptr [rdi], eax
    xor ecx, ecx
    mov rax, qword ptr [rsi + 8]
    cmp byte ptr [rax + 0x30], cl
    je 0x14000c881
    cmp dword ptr [rax + 0x2c], 0x22
    je 0x14000c892
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, qword ptr [rsi + 0x10]
    jb 0x14000c892
    mov qword ptr [rsi + 0x10], rax
    mov cl, 1
    mov rsi, qword ptr [rsp + 0x58]
    mov al, cl
    mov qword ptr [rbp + 0x2c], rbx
    mov rbx, qword ptr [rsp + 0x48]
    mov rbp, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov rax, qword ptr [rcx + 8]
    mov rbx, rcx
    mov rcx, qword ptr [rcx + 0x460]
    or esi, 0xffffffff
    xor ebp, ebp
    test rcx, rcx
    jne 0x14000c8f1
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    jmp 0x14000cc28
    call 0x14000e408
    test al, al
    je 0x14000ca60
    mov rcx, qword ptr [rbx + 0x10]
    test rcx, rcx
    jne 0x14000c939
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x14000b4f0
    or eax, 0xffffffff
    jmp 0x14000ca62
    mov eax, dword ptr [rbx + 0x468]
    inc eax
    mov dword ptr [rbx + 0x468], eax
    cmp eax, 2
    je 0x14000cbe1
    lea r14, [rip + 0x12d69]
    mov dword ptr [rbx + 0x48], ebp
    mov byte ptr [rbx + 0x24], bpl
    mov r8b, byte ptr [rcx]
    inc rcx
    jmp 0x14000cbbd
    cmp dword ptr [rbx + 0x20], ebp
    jl 0x14000cbce
    lea eax, [r8 - 0x20]
    cmp al, 0x5a
    ja 0x14000c98c
    movsx rax, r8b
    sub rax, 0x20
    and eax, 0x7f
    mov cl, byte ptr [r14 + rax*2 + 1]
    jmp 0x14000c98f
    mov cl, bpl
    movzx eax, byte ptr [rbx + 0x24]
    movzx ecx, cl
    lea rdx, [rax + rcx*8]
    and edx, 0x7f
    movzx eax, byte ptr [r14 + rdx*2]
    mov byte ptr [rbx + 0x24], al
    cmp al, 8
    jae 0x14000cc15
    mov ecx, eax
    test al, al
    je 0x14000cae3
    sub ecx, 1
    je 0x14000cacc
    sub ecx, 1
    je 0x14000ca7d
    sub ecx, 1
    je 0x14000ca2c
    sub ecx, 1
    je 0x14000ca24
    sub ecx, 1
    je 0x14000c9f6
    sub ecx, 1
    je 0x14000c9ec
    cmp ecx, 1
    jne 0x14000ca60
    mov rcx, rbx
    call 0x14000d65c
    jmp 0x14000ca58
    mov rcx, rbx
    call 0x14000d34c
    jmp 0x14000ca58
    cmp r8b, 0x2a
    je 0x14000ca0a
    lea rdx, [rbx + 0x30]
    mov rcx, rbx
    call 0x14000c820
    jmp 0x14000ca58
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    test eax, eax
    mov ecx, eax
    cmovs ecx, esi
    mov dword ptr [rbx + 0x30], ecx
    jmp 0x14000ca56
    mov dword ptr [rbx + 0x30], ebp
    jmp 0x14000cbb2
    cmp r8b, 0x2a
    je 0x14000ca38
    lea rdx, [rbx + 0x2c]
    jmp 0x14000ca00
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    mov dword ptr [rbx + 0x2c], eax
    test eax, eax
    jns 0x14000ca56
    or dword ptr [rbx + 0x28], 4
    neg eax
    mov dword ptr [rbx + 0x2c], eax
    mov al, 1
    test al, al
    jne 0x14000cbb2
    mov eax, esi
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    cmp r8b, 0x20
    je 0x14000cac3
    cmp r8b, 0x23
    je 0x14000caba
    cmp r8b, 0x2b
    je 0x14000cab1
    cmp r8b, 0x2d
    je 0x14000caa8
    cmp r8b, 0x30
    jne 0x14000cbb2
    or dword ptr [rbx + 0x28], 8
    jmp 0x14000cbb2
    or dword ptr [rbx + 0x28], 4
    jmp 0x14000cbb2
    or dword ptr [rbx + 0x28], 1
    jmp 0x14000cbb2
    or dword ptr [rbx + 0x28], 0x20
    jmp 0x14000cbb2
    or dword ptr [rbx + 0x28], 2
    jmp 0x14000cbb2
    mov qword ptr [rbx + 0x28], rbp
    mov byte ptr [rbx + 0x38], bpl
    mov dword ptr [rbx + 0x30], esi
    mov dword ptr [rbx + 0x34], ebp
    mov byte ptr [rbx + 0x4c], bpl
    jmp 0x14000cbb2
    mov rdi, qword ptr [rbx + 8]
    mov byte ptr [rbx + 0x4c], bpl
    cmp byte ptr [rdi + 0x28], bpl
    jne 0x14000caf9
    mov rcx, rdi
    call 0x14000e390
    movsx r8, byte ptr [rbx + 0x39]
    mov r9, r8
    cmp r8d, esi
    jl 0x14000cb6f
    mov rax, qword ptr [rdi + 0x18]
    mov rcx, qword ptr [rax]
    mov eax, 0x8000
    test word ptr [rcx + r8*2], ax
    je 0x14000cb6f
    mov rax, qword ptr [rbx + 0x460]
    mov r8, qword ptr [rbx + 8]
    mov edx, dword ptr [rax + 0x14]
    nop 
    shr edx, 0xc
    test dl, 1
    je 0x14000cb3d
    mov rax, qword ptr [rbx + 0x460]
    cmp qword ptr [rax + 8], rbp
    je 0x14000cb50
    mov rdx, qword ptr [rbx + 0x460]
    mov ecx, r9d
    call 0x140012bdc
    cmp eax, esi
    je 0x14000cb55
    inc dword ptr [rbx + 0x20]
    jmp 0x14000cb58
    mov dword ptr [rbx + 0x20], esi
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    inc rax
    mov qword ptr [rbx + 0x10], rax
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    je 0x14000cbe9
    mov rax, qword ptr [rbx + 0x460]
    mov rdx, qword ptr [rbx + 8]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000cb93
    mov rax, qword ptr [rbx + 0x460]
    cmp qword ptr [rax + 8], rbp
    je 0x14000cbaa
    movsx ecx, r8b
    mov r8, rdx
    mov rdx, qword ptr [rbx + 0x460]
    call 0x140012bdc
    cmp eax, esi
    je 0x14000cbaf
    inc dword ptr [rbx + 0x20]
    jmp 0x14000cbb2
    mov dword ptr [rbx + 0x20], esi
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    lea rcx, [rax + 1]
    mov qword ptr [rbx + 0x10], rcx
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    jne 0x14000c969
    inc dword ptr [rbx + 0x468]
    cmp dword ptr [rbx + 0x468], 2
    jne 0x14000c957
    mov eax, dword ptr [rbx + 0x20]
    jmp 0x14000ca62
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x14000b4f0
    mov rax, qword ptr [rbx + 8]
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], rbp
    xor edx, edx
    xor ecx, ecx
    call 0x14000b4f0
    jmp 0x14000ca60
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov rax, qword ptr [rcx + 8]
    or esi, 0xffffffff
    xor ebp, ebp
    mov rbx, rcx
    cmp qword ptr [rcx + 0x460], rbp
    jne 0x14000cc86
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    jmp 0x14000cfad
    mov rcx, qword ptr [rcx + 0x10]
    test rcx, rcx
    jne 0x14000ccbd
    mov byte ptr [rax + 0x30], 1
    xor r9d, r9d
    mov dword ptr [rax + 0x2c], 0x16
    xor r8d, r8d
    mov rax, qword ptr [rbx + 8]
    xor edx, edx
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x14000b4f0
    or eax, 0xffffffff
    jmp 0x14000cf53
    mov eax, dword ptr [rbx + 0x468]
    inc eax
    mov dword ptr [rbx + 0x468], eax
    cmp eax, 2
    je 0x14000cf50
    lea r14, [rip + 0x12ae5]
    mov dword ptr [rbx + 0x48], ebp
    mov byte ptr [rbx + 0x24], bpl
    mov dl, byte ptr [rcx]
    inc rcx
    jmp 0x14000cf23
    cmp dword ptr [rbx + 0x20], ebp
    jl 0x14000cf32
    lea eax, [rdx - 0x20]
    cmp al, 0x5a
    ja 0x14000cd0e
    movsx rax, dl
    sub rax, 0x20
    and eax, 0x7f
    mov cl, byte ptr [r14 + rax*2 + 1]
    jmp 0x14000cd11
    mov cl, bpl
    movzx eax, cl
    lea rcx, [rax + rax*8]
    movzx eax, byte ptr [rbx + 0x24]
    add rcx, rax
    and ecx, 0x7f
    movzx eax, byte ptr [r14 + rcx*2]
    mov byte ptr [rbx + 0x24], al
    cmp al, 8
    jae 0x14000cf9a
    mov ecx, eax
    test al, al
    je 0x14000ce4d
    sub ecx, 1
    je 0x14000ce36
    sub ecx, 1
    je 0x14000cdec
    sub ecx, 1
    je 0x14000cdb4
    sub ecx, 1
    je 0x14000cdac
    sub ecx, 1
    je 0x14000cd7f
    sub ecx, 1
    je 0x14000cd75
    cmp ecx, 1
    jne 0x14000cfc6
    mov rcx, rbx
    call 0x14000da94
    jmp 0x14000cddf
    mov rcx, rbx
    call 0x14000d4d4
    jmp 0x14000cddf
    cmp dl, 0x2a
    je 0x14000cd92
    lea rdx, [rbx + 0x30]
    mov rcx, rbx
    call 0x14000c820
    jmp 0x14000cddf
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    test eax, eax
    mov ecx, eax
    cmovs ecx, esi
    mov dword ptr [rbx + 0x30], ecx
    jmp 0x14000cddd
    mov dword ptr [rbx + 0x30], ebp
    jmp 0x14000cf19
    cmp dl, 0x2a
    je 0x14000cdbf
    lea rdx, [rbx + 0x2c]
    jmp 0x14000cd88
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    mov dword ptr [rbx + 0x2c], eax
    test eax, eax
    jns 0x14000cddd
    or dword ptr [rbx + 0x28], 4
    neg eax
    mov dword ptr [rbx + 0x2c], eax
    mov al, 1
    test al, al
    je 0x14000cfc6
    jmp 0x14000cf19
    cmp dl, 0x20
    je 0x14000ce2d
    cmp dl, 0x23
    je 0x14000ce24
    cmp dl, 0x2b
    je 0x14000ce1b
    cmp dl, 0x2d
    je 0x14000ce12
    cmp dl, 0x30
    jne 0x14000cf19
    or dword ptr [rbx + 0x28], 8
    jmp 0x14000cf19
    or dword ptr [rbx + 0x28], 4
    jmp 0x14000cf19
    or dword ptr [rbx + 0x28], 1
    jmp 0x14000cf19
    or dword ptr [rbx + 0x28], 0x20
    jmp 0x14000cf19
    or dword ptr [rbx + 0x28], 2
    jmp 0x14000cf19
    mov qword ptr [rbx + 0x28], rbp
    mov byte ptr [rbx + 0x38], bpl
    mov dword ptr [rbx + 0x30], esi
    mov dword ptr [rbx + 0x34], ebp
    mov byte ptr [rbx + 0x4c], bpl
    jmp 0x14000cf19
    mov rdi, qword ptr [rbx + 8]
    mov byte ptr [rbx + 0x4c], bpl
    cmp byte ptr [rdi + 0x28], bpl
    jne 0x14000ce63
    mov rcx, rdi
    call 0x14000e390
    movsx r8, byte ptr [rbx + 0x39]
    cmp r8d, esi
    jl 0x14000ceda
    mov rax, qword ptr [rdi + 0x18]
    mov rcx, qword ptr [rax]
    mov eax, 0x8000
    test word ptr [rcx + r8*2], ax
    je 0x14000ceda
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000cea1
    cmp byte ptr [rcx + 0x18], bpl
    je 0x14000ce9c
    inc dword ptr [rbx + 0x20]
    jmp 0x14000cebf
    mov dword ptr [rbx + 0x20], esi
    jmp 0x14000cebf
    inc dword ptr [rbx + 0x20]
    inc qword ptr [rcx + 0x10]
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], r8b
    mov rax, qword ptr [rbx + 0x460]
    inc qword ptr [rax]
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    inc rax
    mov qword ptr [rbx + 0x10], rax
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    je 0x14000cf6e
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000cefb
    cmp byte ptr [rcx + 0x18], bpl
    je 0x14000cef6
    inc dword ptr [rbx + 0x20]
    jmp 0x14000cf19
    mov dword ptr [rbx + 0x20], esi
    jmp 0x14000cf19
    inc dword ptr [rbx + 0x20]
    inc qword ptr [rcx + 0x10]
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], r8b
    mov rax, qword ptr [rbx + 0x460]
    inc qword ptr [rax]
    mov rax, qword ptr [rbx + 0x10]
    mov dl, byte ptr [rax]
    lea rcx, [rax + 1]
    mov qword ptr [rbx + 0x10], rcx
    mov byte ptr [rbx + 0x39], dl
    test dl, dl
    jne 0x14000ccec
    mov al, byte ptr [rbx + 0x24]
    test al, al
    je 0x14000cf3d
    cmp al, 7
    jne 0x14000cf9a
    inc dword ptr [rbx + 0x468]
    cmp dword ptr [rbx + 0x468], 2
    jne 0x14000ccdb
    mov eax, dword ptr [rbx + 0x20]
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x14000b4f0
    mov rax, qword ptr [rbx + 8]
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], rbp
    xor edx, edx
    xor ecx, ecx
    call 0x14000b4f0
    mov eax, esi
    jmp 0x14000cf53
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov rax, qword ptr [rcx + 8]
    or esi, 0xffffffff
    xor ebp, ebp
    mov rbx, rcx
    cmp qword ptr [rcx + 0x460], rbp
    jne 0x14000d00a
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    jmp 0x14000d32f
    mov rcx, qword ptr [rcx + 0x10]
    test rcx, rcx
    jne 0x14000d041
    mov byte ptr [rax + 0x30], 1
    xor r9d, r9d
    mov dword ptr [rax + 0x2c], 0x16
    xor r8d, r8d
    mov rax, qword ptr [rbx + 8]
    xor edx, edx
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x14000b4f0
    or eax, 0xffffffff
    jmp 0x14000d2d5
    mov eax, dword ptr [rbx + 0x468]
    inc eax
    mov dword ptr [rbx + 0x468], eax
    cmp eax, 2
    je 0x14000d2d2
    lea r14, [rip + 0x12661]
    mov dword ptr [rbx + 0x48], ebp
    mov byte ptr [rbx + 0x24], bpl
    mov r8b, byte ptr [rcx]
    inc rcx
    jmp 0x14000d2ae
    cmp dword ptr [rbx + 0x20], ebp
    jl 0x14000d2bf
    lea eax, [r8 - 0x20]
    cmp al, 0x5a
    ja 0x14000d094
    movsx rax, r8b
    sub rax, 0x20
    and eax, 0x7f
    mov cl, byte ptr [r14 + rax*2 + 1]
    jmp 0x14000d097
    mov cl, bpl
    movzx eax, byte ptr [rbx + 0x24]
    movzx ecx, cl
    lea rdx, [rax + rcx*8]
    and edx, 0x7f
    movzx eax, byte ptr [r14 + rdx*2]
    mov byte ptr [rbx + 0x24], al
    cmp al, 8
    jae 0x14000d31c
    mov ecx, eax
    test al, al
    je 0x14000d1d7
    sub ecx, 1
    je 0x14000d1c0
    sub ecx, 1
    je 0x14000d171
    sub ecx, 1
    je 0x14000d138
    sub ecx, 1
    je 0x14000d130
    sub ecx, 1
    je 0x14000d102
    sub ecx, 1
    je 0x14000d0f8
    cmp ecx, 1
    jne 0x14000d348
    mov rcx, rbx
    call 0x14000da94
    jmp 0x14000d164
    mov rcx, rbx
    call 0x14000d4d4
    jmp 0x14000d164
    cmp r8b, 0x2a
    je 0x14000d116
    lea rdx, [rbx + 0x30]
    mov rcx, rbx
    call 0x14000c820
    jmp 0x14000d164
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    test eax, eax
    mov ecx, eax
    cmovs ecx, esi
    mov dword ptr [rbx + 0x30], ecx
    jmp 0x14000d162
    mov dword ptr [rbx + 0x30], ebp
    jmp 0x14000d2a3
    cmp r8b, 0x2a
    je 0x14000d144
    lea rdx, [rbx + 0x2c]
    jmp 0x14000d10c
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    mov dword ptr [rbx + 0x2c], eax
    test eax, eax
    jns 0x14000d162
    or dword ptr [rbx + 0x28], 4
    neg eax
    mov dword ptr [rbx + 0x2c], eax
    mov al, 1
    test al, al
    je 0x14000d348
    jmp 0x14000d2a3
    cmp r8b, 0x20
    je 0x14000d1b7
    cmp r8b, 0x23
    je 0x14000d1ae
    cmp r8b, 0x2b
    je 0x14000d1a5
    cmp r8b, 0x2d
    je 0x14000d19c
    cmp r8b, 0x30
    jne 0x14000d2a3
    or dword ptr [rbx + 0x28], 8
    jmp 0x14000d2a3
    or dword ptr [rbx + 0x28], 4
    jmp 0x14000d2a3
    or dword ptr [rbx + 0x28], 1
    jmp 0x14000d2a3
    or dword ptr [rbx + 0x28], 0x20
    jmp 0x14000d2a3
    or dword ptr [rbx + 0x28], 2
    jmp 0x14000d2a3
    mov qword ptr [rbx + 0x28], rbp
    mov byte ptr [rbx + 0x38], bpl
    mov dword ptr [rbx + 0x30], esi
    mov dword ptr [rbx + 0x34], ebp
    mov byte ptr [rbx + 0x4c], bpl
    jmp 0x14000d2a3
    mov rdi, qword ptr [rbx + 8]
    mov byte ptr [rbx + 0x4c], bpl
    cmp byte ptr [rdi + 0x28], bpl
    jne 0x14000d1ed
    mov rcx, rdi
    call 0x14000e390
    movsx r8, byte ptr [rbx + 0x39]
    cmp r8d, esi
    jl 0x14000d264
    mov rax, qword ptr [rdi + 0x18]
    mov rcx, qword ptr [rax]
    mov eax, 0x8000
    test word ptr [rcx + r8*2], ax
    je 0x14000d264
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000d22b
    cmp byte ptr [rcx + 0x18], bpl
    je 0x14000d226
    inc dword ptr [rbx + 0x20]
    jmp 0x14000d249
    mov dword ptr [rbx + 0x20], esi
    jmp 0x14000d249
    inc dword ptr [rbx + 0x20]
    inc qword ptr [rcx + 0x10]
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], r8b
    mov rax, qword ptr [rbx + 0x460]
    inc qword ptr [rax]
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    inc rax
    mov qword ptr [rbx + 0x10], rax
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    je 0x14000d2f0
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000d285
    cmp byte ptr [rcx + 0x18], bpl
    je 0x14000d280
    inc dword ptr [rbx + 0x20]
    jmp 0x14000d2a3
    mov dword ptr [rbx + 0x20], esi
    jmp 0x14000d2a3
    inc dword ptr [rbx + 0x20]
    inc qword ptr [rcx + 0x10]
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], r8b
    mov rax, qword ptr [rbx + 0x460]
    inc qword ptr [rax]
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    lea rcx, [rax + 1]
    mov qword ptr [rbx + 0x10], rcx
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    jne 0x14000d071
    inc dword ptr [rbx + 0x468]
    cmp dword ptr [rbx + 0x468], 2
    jne 0x14000d05f
    mov eax, dword ptr [rbx + 0x20]
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x14000b4f0
    mov rax, qword ptr [rbx + 8]
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], rbp
    xor edx, edx
    xor ecx, ecx
    call 0x14000b4f0
    mov eax, esi
    jmp 0x14000d2d5
    sub rsp, 0x38
    mov al, byte ptr [rcx + 0x39]
    cmp al, 0x46
    jne 0x14000d36d
    test byte ptr [rcx], 8
    jne 0x14000d4cc
    mov byte ptr [rcx + 0x24], 7
    add rsp, 0x38
    jmp 0x14000d65c
    cmp al, 0x4e
    jne 0x14000d3b2
    test byte ptr [rcx], 8
    jne 0x14000d4cc
    mov byte ptr [rcx + 0x24], 8
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x14000b4f0
    xor al, al
    jmp 0x14000d4ce
    cmp dword ptr [rcx + 0x34], 0
    jne 0x14000d37e
    cmp al, 0x49
    je 0x14000d470
    cmp al, 0x4c
    je 0x14000d467
    cmp al, 0x54
    je 0x14000d45e
    cmp al, 0x68
    je 0x14000d440
    cmp al, 0x6a
    je 0x14000d434
    cmp al, 0x6c
    je 0x14000d410
    cmp al, 0x74
    je 0x14000d404
    cmp al, 0x77
    je 0x14000d3f8
    cmp al, 0x7a
    jne 0x14000d4cc
    mov dword ptr [rcx + 0x34], 6
    jmp 0x14000d4cc
    mov dword ptr [rcx + 0x34], 0xc
    jmp 0x14000d4cc
    mov dword ptr [rcx + 0x34], 7
    jmp 0x14000d4cc
    mov rax, qword ptr [rcx + 0x10]
    cmp byte ptr [rax], 0x6c
    jne 0x14000d427
    inc rax
    mov qword ptr [rcx + 0x10], rax
    mov eax, 4
    jmp 0x14000d42c
    mov eax, 3
    mov dword ptr [rcx + 0x34], eax
    jmp 0x14000d4cc
    mov dword ptr [rcx + 0x34], 5
    jmp 0x14000d4cc
    mov rax, qword ptr [rcx + 0x10]
    cmp byte ptr [rax], 0x68
    jne 0x14000d457
    inc rax
    mov qword ptr [rcx + 0x10], rax
    mov eax, 1
    jmp 0x14000d42c
    mov eax, 2
    jmp 0x14000d42c
    mov dword ptr [rcx + 0x34], 0xd
    jmp 0x14000d4cc
    mov dword ptr [rcx + 0x34], 8
    jmp 0x14000d4cc
    mov r8, qword ptr [rcx + 0x10]
    mov al, byte ptr [r8]
    cmp al, 0x33
    jne 0x14000d493
    cmp byte ptr [r8 + 1], 0x32
    jne 0x14000d493
    lea rax, [r8 + 2]
    mov dword ptr [rcx + 0x34], 0xa
    mov qword ptr [rcx + 0x10], rax
    jmp 0x14000d4cc
    cmp al, 0x36
    jne 0x14000d4af
    cmp byte ptr [r8 + 1], 0x34
    jne 0x14000d4cc
    lea rax, [r8 + 2]
    mov dword ptr [rcx + 0x34], 0xb
    mov qword ptr [rcx + 0x10], rax
    jmp 0x14000d4cc
    sub al, 0x58
    cmp al, 0x20
    ja 0x14000d4cc
    movabs rdx, 0x120821001
    bt rdx, rax
    jae 0x14000d4cc
    mov dword ptr [rcx + 0x34], 9
    mov al, 1
    add rsp, 0x38
    ret
    int3 
    sub rsp, 0x38
    mov al, byte ptr [rcx + 0x39]
    cmp al, 0x46
    jne 0x14000d4f5
    test byte ptr [rcx], 8
    jne 0x14000d654
    mov byte ptr [rcx + 0x24], 7
    add rsp, 0x38
    jmp 0x14000da94
    cmp al, 0x4e
    jne 0x14000d53a
    test byte ptr [rcx], 8
    jne 0x14000d654
    mov byte ptr [rcx + 0x24], 8
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x14000b4f0
    xor al, al
    jmp 0x14000d656
    cmp dword ptr [rcx + 0x34], 0
    jne 0x14000d506
    cmp al, 0x49
    je 0x14000d5f8
    cmp al, 0x4c
    je 0x14000d5ef
    cmp al, 0x54
    je 0x14000d5e6
    cmp al, 0x68
    je 0x14000d5c8
    cmp al, 0x6a
    je 0x14000d5bc
    cmp al, 0x6c
    je 0x14000d598
    cmp al, 0x74
    je 0x14000d58c
    cmp al, 0x77
    je 0x14000d580
    cmp al, 0x7a
    jne 0x14000d654
    mov dword ptr [rcx + 0x34], 6
    jmp 0x14000d654
    mov dword ptr [rcx + 0x34], 0xc
    jmp 0x14000d654
    mov dword ptr [rcx + 0x34], 7
    jmp 0x14000d654
    mov rax, qword ptr [rcx + 0x10]
    cmp byte ptr [rax], 0x6c
    jne 0x14000d5af
    inc rax
    mov qword ptr [rcx + 0x10], rax
    mov eax, 4
    jmp 0x14000d5b4
    mov eax, 3
    mov dword ptr [rcx + 0x34], eax
    jmp 0x14000d654
    mov dword ptr [rcx + 0x34], 5
    jmp 0x14000d654
    mov rax, qword ptr [rcx + 0x10]
    cmp byte ptr [rax], 0x68
    jne 0x14000d5df
    inc rax
    mov qword ptr [rcx + 0x10], rax
    mov eax, 1
    jmp 0x14000d5b4
    mov eax, 2
    jmp 0x14000d5b4
    mov dword ptr [rcx + 0x34], 0xd
    jmp 0x14000d654
    mov dword ptr [rcx + 0x34], 8
    jmp 0x14000d654
    mov r8, qword ptr [rcx + 0x10]
    mov al, byte ptr [r8]
    cmp al, 0x33
    jne 0x14000d61b
    cmp byte ptr [r8 + 1], 0x32
    jne 0x14000d61b
    lea rax, [r8 + 2]
    mov dword ptr [rcx + 0x34], 0xa
    mov qword ptr [rcx + 0x10], rax
    jmp 0x14000d654
    cmp al, 0x36
    jne 0x14000d637
    cmp byte ptr [r8 + 1], 0x34
    jne 0x14000d654
    lea rax, [r8 + 2]
    mov dword ptr [rcx + 0x34], 0xb
    mov qword ptr [rcx + 0x10], rax
    jmp 0x14000d654
    sub al, 0x58
    cmp al, 0x20
    ja 0x14000d654
    movabs rdx, 0x120821001
    bt rdx, rax
    jae 0x14000d654
    mov dword ptr [rcx + 0x34], 9
    mov al, 1
    add rsp, 0x38
    ret
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rbp
    push rdi
    push r12
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x50
    mov rax, qword ptr [rip + 0x1c984]
    xor rax, rsp
    mov qword ptr [rbp - 0x10], rax
    movsx edx, byte ptr [rcx + 0x39]
    mov rbx, rcx
    mov edi, 0x78
    cmp edx, 0x64
    jg 0x14000d6fe
    je 0x14000d725
    cmp edx, 0x53
    jg 0x14000d6cc
    je 0x14000d768
    sub edx, 0x41
    je 0x14000d6c2
    sub edx, 2
    je 0x14000d6e8
    sub edx, 2
    je 0x14000d6c2
    sub edx, 1
    je 0x14000d6c2
    cmp edx, 1
    jne 0x14000d788
    call 0x14000df14
    jmp 0x14000d784
    cmp edx, 0x58
    je 0x14000d77d
    cmp edx, 0x5a
    je 0x14000d6f4
    cmp edx, 0x61
    je 0x14000d6c2
    cmp edx, 0x63
    jne 0x14000d788
    xor edx, edx
    call 0x14000e168
    jmp 0x14000d784
    call 0x14000de98
    jmp 0x14000d784
    cmp edx, 0x6f
    jg 0x14000d751
    je 0x14000d732
    sub edx, 0x65
    je 0x14000d6c2
    sub edx, 1
    je 0x14000d6c2
    sub edx, 1
    je 0x14000d6c2
    sub edx, 2
    je 0x14000d725
    cmp edx, 5
    jne 0x14000d788
    call 0x14000e23c
    jmp 0x14000d784
    or dword ptr [rcx + 0x28], 0x10
    xor edx, edx
    call 0x14000bf4c
    jmp 0x14000d784
    mov ecx, dword ptr [rcx + 0x28]
    mov eax, ecx
    shr eax, 5
    test al, 1
    je 0x14000d745
    bts ecx, 7
    mov dword ptr [rbx + 0x28], ecx
    xor edx, edx
    mov rcx, rbx
    call 0x14000bd48
    jmp 0x14000d784
    cmp edx, 0x70
    je 0x14000d76f
    cmp edx, 0x73
    je 0x14000d768
    cmp edx, 0x75
    je 0x14000d729
    cmp edx, edi
    jne 0x14000d788
    xor edx, edx
    jmp 0x14000d77f
    call 0x14000e2f4
    jmp 0x14000d784
    mov dword ptr [rcx + 0x30], 0x10
    mov dword ptr [rcx + 0x34], 0xb
    mov dl, 1
    call 0x14000c150
    test al, al
    jne 0x14000d78f
    xor al, al
    jmp 0x14000da6e
    cmp byte ptr [rbx + 0x38], 0
    jne 0x14000da6c
    mov edx, dword ptr [rbx + 0x28]
    xor eax, eax
    mov word ptr [rbp - 0x20], ax
    xor esi, esi
    mov byte ptr [rbp - 0x1e], al
    mov eax, edx
    shr eax, 4
    test al, 1
    je 0x14000d7db
    mov eax, edx
    shr eax, 6
    test al, 1
    je 0x14000d7bf
    mov byte ptr [rbp - 0x20], 0x2d
    jmp 0x14000d7d6
    test dl, 1
    je 0x14000d7ca
    mov byte ptr [rbp - 0x20], 0x2b
    jmp 0x14000d7d6
    mov eax, edx
    shr eax, 1
    test al, 1
    je 0x14000d7db
    mov byte ptr [rbp - 0x20], 0x20
    mov esi, 1
    mov cl, byte ptr [rbx + 0x39]
    lea eax, [rcx - 0x58]
    test al, 0xdf
    jne 0x14000d7f3
    mov eax, edx
    shr eax, 5
    test al, 1
    je 0x14000d7f3
    mov r8b, 1
    jmp 0x14000d7f6
    xor r8b, r8b
    lea eax, [rcx - 0x41]
    test al, 0xdf
    sete al
    test r8b, r8b
    jne 0x14000d807
    test al, al
    je 0x14000d822
    mov byte ptr [rbp + rsi - 0x20], 0x30
    cmp cl, 0x58
    je 0x14000d816
    cmp cl, 0x41
    jne 0x14000d819
    mov dil, 0x58
    mov byte ptr [rbp + rsi - 0x1f], dil
    add rsi, 2
    mov r15d, dword ptr [rbx + 0x2c]
    sub r15d, esi
    sub r15d, dword ptr [rbx + 0x48]
    test dl, 0xc
    jne 0x14000d892
    mov r14, qword ptr [rbx + 8]
    xor edi, edi
    test r15d, r15d
    jle 0x14000d892
    mov rax, qword ptr [rbx + 0x460]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000d85e
    mov rax, qword ptr [rbx + 0x460]
    cmp qword ptr [rax + 8], 0
    je 0x14000d877
    mov rdx, qword ptr [rbx + 0x460]
    mov r8, r14
    mov ecx, 0x20
    call 0x140012bdc
    cmp eax, -1
    je 0x14000d88e
    mov ecx, dword ptr [rbx + 0x20]
    lea eax, [rcx + 1]
    mov dword ptr [rbx + 0x20], eax
    cmp ecx, -2
    je 0x14000d892
    inc edi
    cmp edi, r15d
    jl 0x14000d83d
    jmp 0x14000d892
    or dword ptr [rbx + 0x20], 0xffffffff
    mov rdx, qword ptr [rbx + 8]
    lea r14, [rbx + 0x460]
    mov rax, qword ptr [r14]
    lea rdi, [rbx + 0x20]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000d8be
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    jne 0x14000d8be
    add dword ptr [rdi], esi
    jmp 0x14000d8d5
    mov qword ptr [rsp + 0x20], rdx
    mov r9, rdi
    lea rdx, [rbp - 0x20]
    mov r8d, esi
    mov rcx, r14
    call 0x14000e548
    mov ecx, dword ptr [rbx + 0x28]
    mov eax, ecx
    shr eax, 3
    test al, 1
    je 0x14000d93a
    shr ecx, 2
    test cl, 1
    jne 0x14000d93a
    mov r12, qword ptr [rbx + 8]
    xor esi, esi
    test r15d, r15d
    jle 0x14000d93a
    mov rax, qword ptr [r14]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000d90d
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    je 0x14000d922
    mov rdx, qword ptr [r14]
    mov r8, r12
    mov ecx, 0x30
    call 0x140012bdc
    cmp eax, -1
    je 0x14000d937
    mov ecx, dword ptr [rdi]
    lea eax, [rcx + 1]
    mov dword ptr [rdi], eax
    cmp ecx, -2
    je 0x14000d93a
    inc esi
    cmp esi, r15d
    jl 0x14000d8f4
    jmp 0x14000d93a
    or dword ptr [rdi], 0xffffffff
    cmp byte ptr [rbx + 0x4c], 0
    je 0x14000d9cf
    cmp dword ptr [rbx + 0x48], 0
    jle 0x14000d9cf
    mov r12, qword ptr [rbx + 0x40]
    xor esi, esi
    mov rax, qword ptr [rbx + 8]
    lea rdx, [rbp - 0x1c]
    movzx r9d, word ptr [r12]
    lea rcx, [rbp - 0x20]
    and dword ptr [rbp - 0x20], 0
    lea r12, [r12 + 2]
    mov r8d, 6
    mov qword ptr [rsp + 0x20], rax
    call 0x140012874
    test eax, eax
    jne 0x14000d9ca
    mov r8d, dword ptr [rbp - 0x20]
    test r8d, r8d
    je 0x14000d9ca
    mov rax, qword ptr [r14]
    mov rdx, qword ptr [rbx + 8]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000d9ad
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    jne 0x14000d9ad
    add dword ptr [rdi], r8d
    jmp 0x14000d9c1
    mov qword ptr [rsp + 0x20], rdx
    mov r9, rdi
    lea rdx, [rbp - 0x1c]
    mov rcx, r14
    call 0x14000e548
    inc esi
    cmp esi, dword ptr [rbx + 0x48]
    jne 0x14000d954
    jmp 0x14000da0c
    or dword ptr [rdi], 0xffffffff
    jmp 0x14000da0c
    mov rax, qword ptr [r14]
    mov rdx, qword ptr [rbx + 8]
    mov r8d, dword ptr [rbx + 0x48]
    mov r10, qword ptr [rbx + 0x40]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000d9f9
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    jne 0x14000d9f9
    add dword ptr [rdi], r8d
    jmp 0x14000da0c
    mov qword ptr [rsp + 0x20], rdx
    mov r9, rdi
    mov rdx, r10
    mov rcx, r14
    call 0x14000e548
    cmp dword ptr [rdi], 0
    jl 0x14000da6c
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 2
    test al, 1
    je 0x14000da6c
    mov rsi, qword ptr [rbx + 8]
    xor ebx, ebx
    test r15d, r15d
    jle 0x14000da6c
    mov rax, qword ptr [r14]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000da3f
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    je 0x14000da54
    mov rdx, qword ptr [r14]
    mov r8, rsi
    mov ecx, 0x20
    call 0x140012bdc
    cmp eax, -1
    je 0x14000da69
    mov ecx, dword ptr [rdi]
    lea eax, [rcx + 1]
    mov dword ptr [rdi], eax
    cmp ecx, -2
    je 0x14000da6c
    inc ebx
    cmp ebx, r15d
    jl 0x14000da26
    jmp 0x14000da6c
    or dword ptr [rdi], 0xffffffff
    mov al, 1
    mov rcx, qword ptr [rbp - 0x10]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x50]
    mov rbx, qword ptr [r11 + 0x38]
    mov rsi, qword ptr [r11 + 0x40]
    mov rsp, r11
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rbp
    ret
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    mov qword ptr [rsp + 0x20], rdi
    push rbp
    push r12
    push r13
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x50
    mov rax, qword ptr [rip + 0x1c546]
    xor rax, rsp
    mov qword ptr [rbp - 0x10], rax
    mov edi, 0x78
    mov rbx, rcx
    movsx ecx, byte ptr [rcx + 0x39]
    lea r13d, [rdi - 0x77]
    cmp ecx, 0x64
    jg 0x14000db49
    je 0x14000db73
    cmp ecx, 0x53
    jg 0x14000db11
    je 0x14000dbba
    sub ecx, 0x41
    je 0x14000db04
    sub ecx, 2
    je 0x14000db2d
    sub ecx, 2
    je 0x14000db04
    sub ecx, r13d
    je 0x14000db04
    cmp ecx, r13d
    jne 0x14000dbe1
    mov rcx, rbx
    call 0x14000df14
    jmp 0x14000dbdd
    cmp ecx, 0x58
    je 0x14000dbd2
    cmp ecx, 0x5a
    je 0x14000db3c
    cmp ecx, 0x61
    je 0x14000db04
    cmp ecx, 0x63
    jne 0x14000dbe1
    xor edx, edx
    mov rcx, rbx
    call 0x14000e168
    jmp 0x14000dbdd
    mov rcx, rbx
    call 0x14000de98
    jmp 0x14000dbdd
    cmp ecx, 0x6f
    jg 0x14000dba3
    je 0x14000db83
    sub ecx, 0x65
    je 0x14000db04
    sub ecx, r13d
    je 0x14000db04
    sub ecx, r13d
    je 0x14000db04
    sub ecx, 2
    je 0x14000db73
    cmp ecx, 5
    jne 0x14000dbe1
    mov rcx, rbx
    call 0x14000e23c
    jmp 0x14000dbdd
    or dword ptr [rbx + 0x28], 0x10
    xor edx, edx
    mov rcx, rbx
    call 0x14000bf4c
    jmp 0x14000dbdd
    mov ecx, dword ptr [rbx + 0x28]
    mov eax, ecx
    shr eax, 5
    test r13b, al
    je 0x14000db97
    bts ecx, 7
    mov dword ptr [rbx + 0x28], ecx
    xor edx, edx
    mov rcx, rbx
    call 0x14000bd48
    jmp 0x14000dbdd
    cmp ecx, 0x70
    je 0x14000dbc4
    cmp ecx, 0x73
    je 0x14000dbba
    cmp ecx, 0x75
    je 0x14000db77
    cmp ecx, edi
    jne 0x14000dbe1
    xor edx, edx
    jmp 0x14000dbd5
    mov rcx, rbx
    call 0x14000e2f4
    jmp 0x14000dbdd
    mov dword ptr [rbx + 0x30], 0x10
    mov dword ptr [rbx + 0x34], 0xb
    mov dl, r13b
    mov rcx, rbx
    call 0x14000c150
    test al, al
    jne 0x14000dbe8
    xor al, al
    jmp 0x14000de6b
    cmp byte ptr [rbx + 0x38], 0
    jne 0x14000de68
    mov ecx, dword ptr [rbx + 0x28]
    xor eax, eax
    mov word ptr [rbp - 0x20], ax
    xor edx, edx
    mov byte ptr [rbp - 0x1e], al
    mov eax, ecx
    shr eax, 4
    test r13b, al
    je 0x14000dc35
    mov eax, ecx
    shr eax, 6
    test r13b, al
    je 0x14000dc1a
    mov byte ptr [rbp - 0x20], 0x2d
    jmp 0x14000dc32
    test r13b, cl
    je 0x14000dc25
    mov byte ptr [rbp - 0x20], 0x2b
    jmp 0x14000dc32
    mov eax, ecx
    shr eax, 1
    test r13b, al
    je 0x14000dc35
    mov byte ptr [rbp - 0x20], 0x20
    mov rdx, r13
    mov r8b, byte ptr [rbx + 0x39]
    lea eax, [r8 - 0x58]
    test al, 0xdf
    jne 0x14000dc50
    mov eax, ecx
    shr eax, 5
    test r13b, al
    je 0x14000dc50
    mov r9b, r13b
    jmp 0x14000dc53
    xor r9b, r9b
    lea eax, [r8 - 0x41]
    test al, 0xdf
    sete al
    test r9b, r9b
    jne 0x14000dc65
    test al, al
    je 0x14000dc82
    mov byte ptr [rbp + rdx - 0x20], 0x30
    cmp r8b, 0x58
    je 0x14000dc76
    cmp r8b, 0x41
    jne 0x14000dc79
    mov dil, 0x58
    mov byte ptr [rbp + rdx - 0x1f], dil
    add rdx, 2
    mov esi, dword ptr [rbx + 0x2c]
    sub esi, edx
    sub esi, dword ptr [rbx + 0x48]
    test cl, 0xc
    jne 0x14000dcf4
    xor r9d, r9d
    test esi, esi
    jle 0x14000dcf4
    mov r8d, dword ptr [rbx + 0x20]
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000dcc0
    cmp byte ptr [rcx + 0x18], 0
    je 0x14000dcb6
    inc r8d
    jmp 0x14000dcba
    or r8d, 0xffffffff
    mov dword ptr [rbx + 0x20], r8d
    jmp 0x14000dce2
    lea eax, [r8 + 1]
    mov dword ptr [rbx + 0x20], eax
    add qword ptr [rcx + 0x10], r13
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], 0x20
    mov rax, qword ptr [rbx + 0x460]
    add qword ptr [rax], r13
    mov r8d, dword ptr [rbx + 0x20]
    cmp r8d, -1
    je 0x14000dcf4
    add r9d, r13d
    cmp r9d, esi
    jl 0x14000dc9a
    mov rax, qword ptr [rbx + 8]
    lea rdi, [rbx + 0x20]
    mov r8d, edx
    mov qword ptr [rsp + 0x20], rax
    lea r14, [rbx + 0x460]
    mov r9, rdi
    mov rcx, r14
    lea rdx, [rbp - 0x20]
    call 0x14000e4a4
    mov ecx, dword ptr [rbx + 0x28]
    mov eax, ecx
    shr eax, 3
    test r13b, al
    je 0x14000dd7d
    shr ecx, 2
    test r13b, cl
    jne 0x14000dd7d
    xor r8d, r8d
    test esi, esi
    jle 0x14000dd7d
    mov edx, dword ptr [rdi]
    mov rcx, qword ptr [r14]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000dd56
    cmp byte ptr [rcx + 0x18], 0
    je 0x14000dd4f
    inc edx
    jmp 0x14000dd52
    or edx, 0xffffffff
    mov dword ptr [rdi], edx
    jmp 0x14000dd6e
    lea eax, [rdx + 1]
    mov dword ptr [rdi], eax
    add qword ptr [rcx + 0x10], r13
    mov rax, qword ptr [r14]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], 0x30
    mov rax, qword ptr [r14]
    add qword ptr [rax], r13
    mov edx, dword ptr [rdi]
    cmp edx, -1
    je 0x14000dd7d
    add r8d, r13d
    cmp r8d, esi
    jl 0x14000dd38
    cmp byte ptr [rbx + 0x4c], 0
    je 0x14000ddef
    cmp dword ptr [rbx + 0x48], 0
    jle 0x14000ddef
    mov r12, qword ptr [rbx + 0x40]
    xor r15d, r15d
    mov rax, qword ptr [rbx + 8]
    lea rdx, [rbp - 0x1c]
    movzx r9d, word ptr [r12]
    lea rcx, [rbp - 0x20]
    and dword ptr [rbp - 0x20], 0
    lea r12, [r12 + 2]
    mov r8d, 6
    mov qword ptr [rsp + 0x20], rax
    call 0x140012874
    test eax, eax
    jne 0x14000ddea
    mov r8d, dword ptr [rbp - 0x20]
    test r8d, r8d
    je 0x14000ddea
    mov rax, qword ptr [rbx + 8]
    lea rdx, [rbp - 0x1c]
    mov r9, rdi
    mov qword ptr [rsp + 0x20], rax
    mov rcx, r14
    call 0x14000e4a4
    add r15d, r13d
    cmp r15d, dword ptr [rbx + 0x48]
    jne 0x14000dd90
    jmp 0x14000de0b
    or dword ptr [rdi], 0xffffffff
    jmp 0x14000de0b
    mov rax, qword ptr [rbx + 8]
    mov r9, rdi
    mov r8d, dword ptr [rbx + 0x48]
    mov rcx, r14
    mov rdx, qword ptr [rbx + 0x40]
    mov qword ptr [rsp + 0x20], rax
    call 0x14000e4a4
    mov ecx, dword ptr [rdi]
    test ecx, ecx
    js 0x14000de68
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 2
    test r13b, al
    je 0x14000de68
    xor r8d, r8d
    test esi, esi
    jle 0x14000de68
    mov rdx, qword ptr [r14]
    mov rax, qword ptr [rdx + 8]
    cmp qword ptr [rdx + 0x10], rax
    jne 0x14000de41
    cmp byte ptr [rdx + 0x18], 0
    je 0x14000de3a
    inc ecx
    jmp 0x14000de3d
    or ecx, 0xffffffff
    mov dword ptr [rdi], ecx
    jmp 0x14000de59
    lea eax, [rcx + 1]
    mov dword ptr [rdi], eax
    add qword ptr [rdx + 0x10], r13
    mov rax, qword ptr [r14]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], 0x20
    mov rax, qword ptr [r14]
    add qword ptr [rax], r13
    mov ecx, dword ptr [rdi]
    cmp ecx, -1
    je 0x14000de68
    add r8d, r13d
    cmp r8d, esi
    jl 0x14000de23
    mov al, r13b
    mov rcx, qword ptr [rbp - 0x10]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x50]
    mov rbx, qword ptr [r11 + 0x38]
    mov rsi, qword ptr [r11 + 0x40]
    mov rdi, qword ptr [r11 + 0x48]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov rdx, qword ptr [rcx + 0x18]
    lea rax, [rdx + 8]
    mov qword ptr [rcx + 0x18], rax
    mov r9, qword ptr [rdx]
    test r9, r9
    je 0x14000defa
    mov r10, qword ptr [r9 + 8]
    test r10, r10
    je 0x14000defa
    mov edx, dword ptr [rcx + 0x34]
    mov r8b, byte ptr [rcx + 0x39]
    sub edx, 2
    je 0x14000dee2
    sub edx, 1
    je 0x14000dede
    cmp edx, 9
    je 0x14000dede
    cmp dword ptr [rcx + 0x34], 0xd
    je 0x14000dee2
    sub r8b, 0x63
    test r8b, 0xef
    setne al
    jmp 0x14000dee4
    mov al, 1
    jmp 0x14000dee4
    xor al, al
    mov qword ptr [rcx + 0x40], r10
    test al, al
    movzx edx, word ptr [r9]
    mov eax, edx
    je 0x14000df0a
    mov byte ptr [rcx + 0x4c], 1
    shr eax, 1
    jmp 0x14000df0e
    lea rdx, [rip + 0x119cf]
    mov eax, 6
    mov qword ptr [rcx + 0x40], rdx
    mov byte ptr [rcx + 0x4c], 0
    mov dword ptr [rcx + 0x48], eax
    mov al, 1
    ret
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rbp
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    sub rsp, 0x50
    or dword ptr [rcx + 0x28], 0x10
    mov rbx, rcx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jns 0x14000df4c
    mov al, byte ptr [rcx + 0x39]
    sub al, 0x41
    and al, 0xdf
    neg al
    sbb eax, eax
    and eax, 0xfffffff9
    add eax, 0xd
    mov dword ptr [rcx + 0x30], eax
    jmp 0x14000df66
    jne 0x14000df66
    cmp byte ptr [rcx + 0x39], 0x67
    je 0x14000df5a
    cmp byte ptr [rcx + 0x39], 0x47
    jne 0x14000df66
    mov dword ptr [rcx + 0x30], 1
    mov eax, 1
    mov r8, qword ptr [rcx + 8]
    lea rdi, [rcx + 0x50]
    add eax, 0x15d
    mov rcx, rdi
    movsxd rdx, eax
    call 0x14000b9ec
    mov r8d, 0x200
    test al, al
    jne 0x14000dfac
    cmp qword ptr [rbx + 0x458], 0
    jne 0x14000df97
    mov eax, r8d
    jmp 0x14000dfa1
    mov rax, qword ptr [rbx + 0x450]
    shr rax, 1
    lea edx, [rax - 0x15d]
    mov dword ptr [rbx + 0x30], edx
    jmp 0x14000dfaf
    mov edx, dword ptr [rbx + 0x30]
    mov rax, qword ptr [rdi + 0x408]
    test rax, rax
    cmove rax, rdi
    mov qword ptr [rbx + 0x40], rax
    xor eax, eax
    mov rcx, qword ptr [rbx + 0x18]
    mov qword ptr [rsp + 0x60], rax
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov r10, qword ptr [rbx + 0x458]
    movsd xmm0, qword ptr [rcx]
    mov r11, qword ptr [rbx + 8]
    mov rsi, qword ptr [rbx]
    movsx ebp, byte ptr [rbx + 0x39]
    movsd qword ptr [rsp + 0x60], xmm0
    test r10, r10
    jne 0x14000e001
    lea r9, [rdi + 0x200]
    mov rcx, r8
    jmp 0x14000e025
    mov r9, qword ptr [rdi + 0x400]
    mov rdi, r10
    mov rcx, qword ptr [rbx + 0x450]
    mov r8, qword ptr [rbx + 0x450]
    shr r9, 1
    add r9, r10
    shr rcx, 1
    shr r8, 1
    mov qword ptr [rsp + 0x48], r11
    mov dword ptr [rsp + 0x40], 1
    mov qword ptr [rsp + 0x38], rsi
    mov dword ptr [rsp + 0x30], edx
    mov rdx, rdi
    mov dword ptr [rsp + 0x28], ebp
    mov qword ptr [rsp + 0x20], rcx
    lea rcx, [rsp + 0x60]
    call 0x14001258c
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 5
    test al, 1
    je 0x14000e0d7
    cmp dword ptr [rbx + 0x30], 0
    jne 0x14000e0d7
    mov rdi, qword ptr [rbx + 8]
    cmp byte ptr [rdi + 0x28], 0
    jne 0x14000e073
    mov rcx, rdi
    call 0x14000e390
    mov rcx, qword ptr [rbx + 0x40]
    mov r9, qword ptr [rdi + 0x18]
    movzx r8d, byte ptr [rcx]
    mov rdx, qword ptr [r9 + 0x110]
    cmp byte ptr [r8 + rdx], 0x65
    je 0x14000e09e
    mov rax, qword ptr [r9]
    inc rcx
    movzx r8d, byte ptr [rcx]
    test byte ptr [rax + r8*2], 4
    jne 0x14000e090
    movzx eax, r8b
    cmp byte ptr [rax + rdx], 0x78
    jne 0x14000e0ac
    mov r8b, byte ptr [rcx + 2]
    mov rax, qword ptr [r9 + 0xf8]
    lea rdx, [rcx + 2]
    cmovne rdx, rcx
    mov rcx, qword ptr [rax]
    mov al, byte ptr [rcx]
    mov byte ptr [rdx], al
    inc rdx
    mov al, byte ptr [rdx]
    mov cl, r8b
    mov byte ptr [rdx], r8b
    inc rdx
    mov r8b, al
    test cl, cl
    jne 0x14000e0c5
    mov al, byte ptr [rbx + 0x39]
    sub al, 0x47
    test al, 0xdf
    jne 0x14000e109
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 5
    test al, 1
    jne 0x14000e109
    mov rdi, qword ptr [rbx + 8]
    cmp byte ptr [rdi + 0x28], 0
    jne 0x14000e0fc
    mov rcx, rdi
    call 0x14000e390
    mov rcx, qword ptr [rbx + 0x40]
    lea rdx, [rdi + 0x18]
    call 0x14000c7b4
    mov rcx, qword ptr [rbx + 0x40]
    mov al, byte ptr [rcx]
    cmp al, 0x2d
    jne 0x14000e120
    or dword ptr [rbx + 0x28], 0x40
    inc rcx
    mov qword ptr [rbx + 0x40], rcx
    mov al, byte ptr [rcx]
    sub al, 0x49
    cmp al, 0x25
    ja 0x14000e13e
    movabs rdx, 0x2100000021
    bt rdx, rax
    jae 0x14000e13e
    and dword ptr [rbx + 0x28], 0xfffffff7
    mov byte ptr [rbx + 0x39], 0x73
    or rdx, 0xffffffffffffffff
    inc rdx
    cmp byte ptr [rcx + rdx], 0
    jne 0x14000e142
    mov rbp, qword ptr [rsp + 0x70]
    mov al, 1
    mov rsi, qword ptr [rsp + 0x78]
    mov dword ptr [rbx + 0x48], edx
    mov rbx, qword ptr [rsp + 0x68]
    add rsp, 0x50
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x30
    mov dl, byte ptr [rcx + 0x39]
    mov rbx, rcx
    mov ecx, dword ptr [rcx + 0x34]
    sub ecx, 2
    je 0x14000e1f2
    sub ecx, 1
    je 0x14000e19d
    cmp ecx, 9
    je 0x14000e19d
    cmp dword ptr [rbx + 0x34], 0xd
    je 0x14000e1f2
    sub dl, 0x63
    test dl, 0xef
    setne al
    test al, al
    je 0x14000e1f2
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov rdx, qword ptr [rbx + 0x458]
    mov rax, qword ptr [rbx + 8]
    movzx r9d, word ptr [rcx]
    test rdx, rdx
    jne 0x14000e1cc
    lea rdx, [rbx + 0x50]
    mov r8d, 0x200
    mov rdi, rdx
    jmp 0x14000e1da
    mov r8, qword ptr [rbx + 0x450]
    lea rdi, [rbx + 0x50]
    shr r8, 1
    lea rcx, [rbx + 0x48]
    mov qword ptr [rsp + 0x20], rax
    call 0x140012874
    test eax, eax
    je 0x14000e21b
    mov byte ptr [rbx + 0x38], 1
    jmp 0x14000e21b
    mov rcx, qword ptr [rbx + 0x18]
    lea rdi, [rbx + 0x50]
    mov rdx, qword ptr [rdi + 0x408]
    test rdx, rdx
    lea rax, [rcx + 8]
    cmove rdx, rdi
    mov qword ptr [rbx + 0x18], rax
    mov al, byte ptr [rcx]
    mov byte ptr [rdx], al
    mov dword ptr [rbx + 0x48], 1
    mov rcx, qword ptr [rdi + 0x408]
    mov al, 1
    test rcx, rcx
    cmove rcx, rdi
    mov qword ptr [rbx + 0x40], rcx
    mov rbx, qword ptr [rsp + 0x40]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x30
    mov rdx, qword ptr [rcx + 0x18]
    mov rbx, rcx
    lea rax, [rdx + 8]
    mov qword ptr [rcx + 0x18], rax
    mov rdi, qword ptr [rdx]
    call 0x140012bc4
    test eax, eax
    jne 0x14000e292
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x14000b4f0
    xor al, al
    jmp 0x14000e2e0
    mov ecx, dword ptr [rbx + 0x34]
    cmp ecx, 5
    jg 0x14000e2ba
    je 0x14000e2d3
    test ecx, ecx
    je 0x14000e2eb
    sub ecx, 1
    je 0x14000e2b3
    sub ecx, 1
    jne 0x14000e2c9
    movzx eax, word ptr [rbx + 0x20]
    mov word ptr [rdi], ax
    jmp 0x14000e2da
    mov al, byte ptr [rbx + 0x20]
    mov byte ptr [rdi], al
    jmp 0x14000e2da
    sub ecx, 6
    je 0x14000e2d3
    sub ecx, 1
    je 0x14000e2d3
    sub ecx, 2
    je 0x14000e2d3
    sub ecx, 1
    je 0x14000e2eb
    cmp ecx, 1
    jne 0x14000e261
    movsxd rax, dword ptr [rbx + 0x20]
    mov qword ptr [rdi], rax
    mov byte ptr [rbx + 0x38], 1
    mov al, 1
    mov rbx, qword ptr [rsp + 0x40]
    add rsp, 0x30
    pop rdi
    ret
    mov eax, dword ptr [rbx + 0x20]
    mov dword ptr [rdi], eax
    jmp 0x14000e2da
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rdx, qword ptr [rcx + 0x18]
    mov rbx, rcx
    lea rax, [rdx + 8]
    mov qword ptr [rcx + 0x18], rax
    mov eax, 0x7fffffff
    mov rcx, qword ptr [rdx]
    mov r8d, dword ptr [rbx + 0x30]
    cmp r8d, -1
    mov edx, dword ptr [rbx + 0x34]
    mov r9b, byte ptr [rbx + 0x39]
    cmove r8d, eax
    mov qword ptr [rbx + 0x40], rcx
    sub edx, 2
    je 0x14000e36a
    sub edx, 1
    je 0x14000e34c
    cmp edx, 9
    je 0x14000e34c
    cmp dword ptr [rbx + 0x34], 0xd
    je 0x14000e36a
    sub r9b, 0x63
    test r9b, 0xef
    setne al
    test al, al
    je 0x14000e36a
    test rcx, rcx
    jne 0x14000e35c
    lea rcx, [rip + 0x11568]
    mov qword ptr [rbx + 0x40], rcx
    movsxd rdx, r8d
    mov byte ptr [rbx + 0x4c], 1
    call 0x1400117c8
    jmp 0x14000e382
    test rcx, rcx
    jne 0x14000e37a
    lea rcx, [rip + 0x1155a]
    mov qword ptr [rbx + 0x40], rcx
    movsxd rdx, r8d
    call 0x140011678
    mov dword ptr [rbx + 0x48], eax
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov rdi, rcx
    call 0x14000b1d0
    lea rdx, [rdi + 0x18]
    mov rcx, rax
    mov rsi, rax
    mov r8, qword ptr [rax + 0x90]
    mov qword ptr [rdx], r8
    mov r8, qword ptr [rax + 0x88]
    mov qword ptr [rdi + 0x20], r8
    mov r8, qword ptr [rdi + 8]
    call 0x1400119d4
    mov r8, qword ptr [rdi + 8]
    lea rdx, [rdi + 0x20]
    mov rcx, rsi
    call 0x140011a40
    mov eax, dword ptr [rsi + 0x3a8]
    test al, 2
    jne 0x14000e3f6
    or eax, 2
    mov dword ptr [rsi + 0x3a8], eax
    mov byte ptr [rdi + 0x28], 2
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    sub rsp, 0x28
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 0xc
    test al, 1
    jne 0x14000e49c
    call 0x140012b9c
    movsxd r9, eax
    lea r10, [rip + 0x1bef6]
    lea r11, [rip + 0x1d2ff]
    mov r8, r9
    lea eax, [r9 + 2]
    cmp eax, 1
    jbe 0x14000e458
    mov rax, r9
    mov rdx, r9
    sar rdx, 6
    and eax, 0x3f
    lea rcx, [rax + rax*8]
    mov rax, qword ptr [r11 + rdx*8]
    lea rdx, [rax + rcx*8]
    jmp 0x14000e45b
    mov rdx, r10
    cmp byte ptr [rdx + 0x39], 0
    jne 0x14000e488
    lea eax, [r9 + 2]
    cmp eax, 1
    jbe 0x14000e481
    mov rax, r8
    sar rax, 6
    and r8d, 0x3f
    mov rax, qword ptr [r11 + rax*8]
    lea rcx, [r8 + r8*8]
    lea r10, [rax + rcx*8]
    test byte ptr [r10 + 0x3d], 1
    je 0x14000e49c
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    xor al, al
    jmp 0x14000e49e
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    test r8d, r8d
    je 0x14000e546
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x20
    mov r14, rcx
    movsxd rdi, r8d
    mov rcx, qword ptr [rcx]
    mov rbx, r9
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000e4ed
    cmp byte ptr [rcx + 0x18], 0
    je 0x14000e4e7
    add dword ptr [r9], edi
    jmp 0x14000e52c
    or dword ptr [r9], 0xffffffff
    jmp 0x14000e52c
    sub rax, qword ptr [rcx + 0x10]
    mov rsi, rdi
    mov rcx, qword ptr [rcx]
    cmp rax, rdi
    cmovb rsi, rax
    mov r8, rsi
    call 0x14001c6e0
    mov rax, qword ptr [r14]
    add qword ptr [rax], rsi
    mov rax, qword ptr [r14]
    add qword ptr [rax + 0x10], rsi
    mov rax, qword ptr [r14]
    cmp byte ptr [rax + 0x18], 0
    je 0x14000e520
    add dword ptr [rbx], edi
    jmp 0x14000e52c
    cmp rsi, rdi
    je 0x14000e52a
    or dword ptr [rbx], 0xffffffff
    jmp 0x14000e52c
    add dword ptr [rbx], esi
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop r14
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    mov rsi, qword ptr [rsp + 0x60]
    mov rdi, r9
    movsxd rbp, r8d
    mov r14, rdx
    add rbp, rdx
    mov r15, rcx
    cmp rdx, rbp
    mov rbx, qword ptr [rsi + 0x2c]
    je 0x14000e5f7
    mov rax, qword ptr [r15]
    movsx edx, byte ptr [r14]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000e59a
    mov rax, qword ptr [r15]
    cmp qword ptr [rax + 8], 0
    je 0x14000e5e5
    mov ecx, edx
    mov r8, rsi
    mov rdx, qword ptr [r15]
    call 0x140012bdc
    mov rcx, qword ptr [r15]
    cmp eax, -1
    jne 0x14000e5e5
    cmp byte ptr [rsi + 0x30], 0
    je 0x14000e5f4
    cmp dword ptr [rsi + 0x2c], 0x2a
    jne 0x14000e5f4
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 0xc
    test al, 1
    je 0x14000e5d0
    mov rax, qword ptr [r15]
    cmp qword ptr [rax + 8], 0
    je 0x14000e5e5
    mov rdx, qword ptr [r15]
    mov r8, rsi
    mov ecx, 0x3f
    call 0x140012bdc
    cmp eax, -1
    je 0x14000e5e9
    inc dword ptr [rdi]
    jmp 0x14000e5ec
    or dword ptr [rdi], 0xffffffff
    inc r14
    cmp r14, rbp
    jmp 0x14000e57b
    or dword ptr [rdi], 0xffffffff
    mov rbp, qword ptr [rsp + 0x48]
    mov qword ptr [rsi + 0x2c], rbx
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    push rbp
    push rbx
    push rdi
    lea rbp, [rsp - 0x3f]
    sub rsp, 0xb0
    and qword ptr [rbp - 0x41], 0
    mov byte ptr [rbp - 0x31], 0
    mov byte ptr [rbp - 0x19], 0
    mov byte ptr [rbp - 0x11], 0
    mov byte ptr [rbp - 9], 0
    test r9, r9
    je 0x14000e644
    movups xmm0, xmmword ptr [r9]
    jmp 0x14000e654
    cmp dword ptr [rip + 0x1cee5], 0
    jne 0x14000e65d
    movups xmm0, xmmword ptr [rip + 0x1bca4]
    mov byte ptr [rbp - 0x19], 1
    movdqu xmmword ptr [rbp - 0x29], xmm0
    mov rax, qword ptr [rbp + 0x7f]
    mov qword ptr [rbp + 0x77], rax
    mov qword ptr [rbp + 0x6f], r8
    mov qword ptr [rbp + 0x5f], rdx
    mov qword ptr [rbp + 0x67], rcx
    test rdx, rdx
    jne 0x14000e6a4
    lea rax, [rbp - 0x41]
    mov byte ptr [rbp - 0x11], 1
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    and qword ptr [rsp + 0x20], 0
    xor r8d, r8d
    xor edx, edx
    mov dword ptr [rbp - 0x15], 0x16
    xor ecx, ecx
    call 0x14000b4f0
    or edi, 0xffffffff
    jmp 0x14000e6f0
    test r8, r8
    je 0x14000e676
    lea rax, [rbp + 0x5f]
    mov qword ptr [rbp - 1], rdx
    mov qword ptr [rbp + 0xf], rax
    lea r9, [rbp - 1]
    lea rax, [rbp - 0x41]
    mov qword ptr [rbp + 7], rdx
    mov qword ptr [rbp + 0x17], rax
    lea r8, [rbp + 0xf]
    lea rax, [rbp + 0x67]
    mov qword ptr [rbp + 0x1f], rax
    lea rdx, [rbp + 7]
    lea rax, [rbp + 0x6f]
    mov qword ptr [rbp + 0x27], rax
    lea rcx, [rbp + 0x7f]
    lea rax, [rbp + 0x77]
    mov qword ptr [rbp + 0x2f], rax
    call 0x14000b7fc
    mov edi, eax
    cmp byte ptr [rbp - 0x19], 2
    jne 0x14000e701
    mov rcx, qword ptr [rbp - 0x41]
    and dword ptr [rcx + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x11], 0
    je 0x14000e716
    mov ebx, dword ptr [rbp - 0x15]
    lea rcx, [rbp - 0x41]
    call 0x14000b1d0
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 9], 0
    je 0x14000e72b
    mov ebx, dword ptr [rbp - 0xd]
    lea rcx, [rbp - 0x41]
    call 0x14000b1d0
    mov dword ptr [rax + 0x24], ebx
    mov eax, edi
    add rsp, 0xb0
    pop rdi
    pop rbx
    pop rbp
    ret
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r14
    push r15
    lea rbp, [rsp - 0x410]
    sub rsp, 0x510
    mov rax, qword ptr [rip + 0x1b8a7]
    xor rax, rsp
    mov qword ptr [rbp + 0x400], rax
    mov rax, qword ptr [rbp + 0x470]
    xor r12d, r12d
    mov qword ptr [rsp + 0x50], r12
    mov rbx, r8
    mov byte ptr [rsp + 0x60], r12b
    mov rsi, rdx
    mov byte ptr [rsp + 0x78], r12b
    mov r15, rcx
    mov byte ptr [rbp - 0x80], r12b
    mov byte ptr [rbp - 0x78], r12b
    test rax, rax
    je 0x14000e797
    movups xmm0, xmmword ptr [rax]
    jmp 0x14000e7a7
    cmp dword ptr [rip + 0x1cd92], r12d
    jne 0x14000e7b2
    movups xmm0, xmmword ptr [rip + 0x1bb51]
    mov byte ptr [rsp + 0x78], 1
    movdqu xmmword ptr [rsp + 0x68], xmm0
    test r9, r9
    jne 0x14000e7e9
    lea rax, [rsp + 0x50]
    mov byte ptr [rbp - 0x80], 1
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], r12
    xor edx, edx
    mov dword ptr [rsp + 0x7c], 0x16
    xor ecx, ecx
    call 0x14000b4f0
    or edi, 0xffffffff
    jmp 0x14000e926
    test rbx, rbx
    je 0x14000e7f3
    test rsi, rsi
    je 0x14000e7b7
    mov r14, r15
    mov dword ptr [rsp + 0x49], r12d
    mov word ptr [rsp + 0x4d], r12w
    mov byte ptr [rsp + 0x4f], r12b
    mov qword ptr [rsp + 0x30], rsi
    mov qword ptr [rsp + 0x38], rbx
    mov qword ptr [rsp + 0x40], r12
    and r14d, 2
    jne 0x14000e825
    mov byte ptr [rsp + 0x48], r12b
    test rsi, rsi
    jne 0x14000e82a
    mov byte ptr [rsp + 0x48], 1
    lea rax, [rsp + 0x50]
    mov dword ptr [rbp - 0x50], r12d
    mov qword ptr [rbp - 0x68], rax
    lea rcx, [rbp - 0x70]
    lea rax, [rsp + 0x30]
    mov byte ptr [rbp - 0x4c], r12b
    mov qword ptr [rbp + 0x3f0], rax
    xorps xmm0, xmm0
    mov rax, qword ptr [rbp + 0x478]
    mov qword ptr [rbp - 0x58], rax
    mov qword ptr [rbp - 0x48], r12
    mov dword ptr [rbp - 0x40], r12d
    mov word ptr [rbp - 0x38], r12w
    mov dword ptr [rbp - 0x28], r12d
    mov byte ptr [rbp - 0x24], r12b
    movdqa xmmword ptr [rbp + 0x3e0], xmm0
    mov qword ptr [rbp - 0x70], r15
    mov qword ptr [rbp - 0x60], r9
    mov dword ptr [rbp + 0x3f8], r12d
    call 0x14000cfcc
    movsxd rdi, eax
    test rsi, rsi
    je 0x14000e91a
    test r15b, 1
    je 0x14000e8cb
    test rbx, rbx
    jne 0x14000e8b6
    test eax, eax
    je 0x14000e8b6
    mov rcx, qword ptr [rbp + 0x3e8]
    call 0x1400109a0
    jmp 0x14000e7e1
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rbx
    jne 0x14000e916
    test edi, edi
    js 0x14000e91a
    cmp rdi, rbx
    jbe 0x14000e91a
    jmp 0x14000e8a5
    test r14, r14
    je 0x14000e8ef
    test rbx, rbx
    je 0x14000e91a
    test eax, eax
    jns 0x14000e8de
    mov byte ptr [rsi], r12b
    jmp 0x14000e91a
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rbx
    jne 0x14000e916
    mov byte ptr [rbx + rsi - 1], r12b
    jmp 0x14000e91a
    test rbx, rbx
    je 0x14000e8a5
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rbx
    jne 0x14000e916
    mov rcx, qword ptr [rbp + 0x3e8]
    mov byte ptr [rbx + rsi - 1], r12b
    call 0x1400109a0
    mov edi, 0xfffffffe
    jmp 0x14000e926
    mov byte ptr [rax + rsi], r12b
    mov rcx, qword ptr [rbp + 0x3e8]
    call 0x1400109a0
    cmp byte ptr [rsp + 0x78], 2
    jne 0x14000e939
    mov rax, qword ptr [rsp + 0x50]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x80], r12b
    je 0x14000e950
    mov ebx, dword ptr [rsp + 0x7c]
    lea rcx, [rsp + 0x50]
    call 0x14000b1d0
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 0x78], r12b
    je 0x14000e966
    mov ebx, dword ptr [rbp - 0x7c]
    lea rcx, [rsp + 0x50]
    call 0x14000b1d0
    mov dword ptr [rax + 0x24], ebx
    mov eax, edi
    mov rcx, qword ptr [rbp + 0x400]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0x510
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push rbp
    mov rbp, rsp
    sub rsp, 0x70
    mov rax, qword ptr [rbp + 0x30]
    xor esi, esi
    mov qword ptr [rbp - 0x40], rsi
    mov rbx, rdx
    mov byte ptr [rbp - 0x30], sil
    mov byte ptr [rbp - 0x18], sil
    mov byte ptr [rbp - 0x10], sil
    mov byte ptr [rbp - 8], sil
    test rax, rax
    je 0x14000e9ca
    movups xmm0, xmmword ptr [rax]
    jmp 0x14000e9d9
    cmp dword ptr [rip + 0x1cb60], esi
    jne 0x14000e9e2
    movups xmm0, xmmword ptr [rip + 0x1b91f]
    mov byte ptr [rbp - 0x18], 1
    movdqu xmmword ptr [rbp - 0x28], xmm0
    test r9, r9
    je 0x14000ea1f
    test rbx, rbx
    je 0x14000ea1f
    test r8, r8
    je 0x14000ea1f
    mov rax, qword ptr [rbp + 0x38]
    mov qword ptr [rsp + 0x28], rax
    lea rax, [rbp - 0x40]
    mov qword ptr [rsp + 0x20], rax
    call 0x14000b83c
    mov edi, eax
    test eax, eax
    jns 0x14000ea11
    mov byte ptr [rbx], sil
    cmp eax, -2
    jne 0x14000ea4a
    mov dword ptr [rbp - 0x14], 0x22
    jmp 0x14000ea26
    mov dword ptr [rbp - 0x14], 0x16
    lea rax, [rbp - 0x40]
    mov byte ptr [rbp - 0x10], 1
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], rsi
    xor edx, edx
    xor ecx, ecx
    call 0x14000b4f0
    or edi, 0xffffffff
    cmp byte ptr [rbp - 0x18], 2
    jne 0x14000ea5b
    mov rax, qword ptr [rbp - 0x40]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x10], sil
    je 0x14000ea70
    mov ebx, dword ptr [rbp - 0x14]
    lea rcx, [rbp - 0x40]
    call 0x14000b1d0
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 8], sil
    je 0x14000ea85
    mov ebx, dword ptr [rbp - 0xc]
    lea rcx, [rbp - 0x40]
    call 0x14000b1d0
    mov dword ptr [rax + 0x24], ebx
    lea r11, [rsp + 0x70]
    mov eax, edi
    mov rbx, qword ptr [r11 + 0x10]
    mov rsi, qword ptr [r11 + 0x18]
    mov rdi, qword ptr [r11 + 0x20]
    mov rsp, r11
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rip + 0x1c8f9], rcx
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rcx
    call 0x14000eae8
    xor ebx, ebx
    test rax, rax
    je 0x14000eadb
    movabs r10, 0xd1ed0fdf1cd32070
    mov rcx, rdi
    call qword ptr [rip + 0xf7a4]
    test eax, eax
    setne bl
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    xor ecx, ecx
    call 0x140012d90
    nop 
    mov rax, qword ptr [rip + 0x1b503]
    mov ecx, eax
    and ecx, 0x3f
    mov rbx, qword ptr [rip + 0x1c897]
    xor rbx, rax
    ror rbx, cl
    xor ecx, ecx
    call 0x140012de4
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    jmp 0x140011618
    int3 
    int3 
    int3 
    mov dword ptr [rsp + 0x10], 0
    mov eax, dword ptr [rsp + 0x10]
    jmp 0x1400109a0
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rsi, rdx
    mov edi, ecx
    call 0x14001064c
    xor r9d, r9d
    mov rbx, rax
    test rax, rax
    je 0x14000eb84
    mov rcx, qword ptr [rax]
    mov rax, rcx
    lea r8, [rcx + 0xc0]
    cmp rcx, r8
    je 0x14000eb84
    cmp dword ptr [rax], edi
    je 0x14000eb9b
    add rax, 0x10
    cmp rax, r8
    jne 0x14000eb77
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    test rax, rax
    je 0x14000eb84
    mov r8, qword ptr [rax + 8]
    test r8, r8
    je 0x14000eb84
    cmp r8, 5
    jne 0x14000ebb9
    mov qword ptr [rax + 8], r9
    lea eax, [r8 - 4]
    jmp 0x14000eb86
    cmp r8, 1
    jne 0x14000ebc4
    or eax, 0xffffffff
    jmp 0x14000eb86
    mov rbp, qword ptr [rbx + 8]
    mov qword ptr [rbx + 8], rsi
    cmp dword ptr [rax + 4], 8
    jne 0x14000ec9a
    add rcx, 0x30
    lea rdx, [rcx + 0x90]
    jmp 0x14000ebeb
    mov qword ptr [rcx + 8], r9
    add rcx, 0x10
    cmp rcx, rdx
    jne 0x14000ebe3
    cmp dword ptr [rax], 0xc000008d
    mov edi, dword ptr [rbx + 0x10]
    je 0x14000ec75
    cmp dword ptr [rax], 0xc000008e
    je 0x14000ec6e
    cmp dword ptr [rax], 0xc000008f
    je 0x14000ec67
    cmp dword ptr [rax], 0xc0000090
    je 0x14000ec60
    cmp dword ptr [rax], 0xc0000091
    je 0x14000ec59
    cmp dword ptr [rax], 0xc0000092
    je 0x14000ec52
    cmp dword ptr [rax], 0xc0000093
    je 0x14000ec4b
    cmp dword ptr [rax], 0xc00002b4
    je 0x14000ec44
    cmp dword ptr [rax], 0xc00002b5
    mov edx, edi
    jne 0x14000ec7d
    mov edx, 0x8d
    jmp 0x14000ec7a
    mov edx, 0x8e
    jmp 0x14000ec7a
    mov edx, 0x85
    jmp 0x14000ec7a
    mov edx, 0x8a
    jmp 0x14000ec7a
    mov edx, 0x84
    jmp 0x14000ec7a
    mov edx, 0x81
    jmp 0x14000ec7a
    mov edx, 0x86
    jmp 0x14000ec7a
    mov edx, 0x83
    jmp 0x14000ec7a
    mov edx, 0x82
    mov dword ptr [rbx + 0x10], edx
    movabs r10, 0x8b9c1f4f30d33370
    mov ecx, 8
    mov rax, r8
    call qword ptr [rip + 0xf5e3]
    mov dword ptr [rbx + 0x10], edi
    jmp 0x14000ecb4
    mov qword ptr [rax + 8], r9
    movabs r10, 0xc6c1864950d77370
    mov ecx, dword ptr [rax + 4]
    mov rax, r8
    call qword ptr [rip + 0xf5c4]
    mov qword ptr [rbx + 8], rbp
    jmp 0x14000ebbf
    int3 
    int3 
    int3 
    mov eax, dword ptr [rip + 0x1c6e2]
    ret
    int3 
    mov dword ptr [rip + 0x1c6da], ecx
    ret
    int3 
    mov rax, qword ptr [rip + 0x1b329]
    mov rdx, qword ptr [rip + 0x1c6d2]
    mov ecx, eax
    xor rdx, rax
    and ecx, 0x3f
    ror rdx, cl
    test rdx, rdx
    setne al
    ret
    mov qword ptr [rip + 0x1c6b9], rcx
    ret
    mov rax, qword ptr [rip + 0x1b301]
    mov r8, rcx
    mov rdx, qword ptr [rip + 0x1c6a7]
    mov ecx, eax
    and ecx, 0x3f
    xor rdx, rax
    ror rdx, cl
    test rdx, rdx
    jne 0x14000ed1c
    xor eax, eax
    ret
    movabs r10, 0xd88807e658547170
    mov rcx, r8
    mov rax, rdx
    jmp qword ptr [rip + 0xf545]
    int3 
    mov r8, qword ptr [rip + 0x1b2c5]
    mov r9, rcx
    mov edx, r8d
    mov ecx, 0x40
    and edx, 0x3f
    sub ecx, edx
    ror r9, cl
    xor r9, r8
    mov qword ptr [rip + 0x1c658], r9
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov r12, qword ptr [rsp + 0x70]
    mov r13, r9
    mov rbx, r8
    mov r14, rdx
    mov rdi, rcx
    and qword ptr [r12], 0
    mov qword ptr [r9], 1
    test rdx, rdx
    je 0x14000eda1
    mov qword ptr [rdx], rbx
    add r14, 8
    xor bpl, bpl
    cmp byte ptr [rdi], 0x22
    mov r15, rdi
    jne 0x14000edbb
    test bpl, bpl
    mov sil, 0x22
    sete bpl
    inc rdi
    jmp 0x14000edf5
    inc qword ptr [r12]
    test rbx, rbx
    je 0x14000edcb
    mov al, byte ptr [rdi]
    mov byte ptr [rbx], al
    inc rbx
    movsx esi, byte ptr [rdi]
    inc rdi
    mov ecx, esi
    call 0x1400146c0
    test eax, eax
    je 0x14000edf0
    inc qword ptr [r12]
    test rbx, rbx
    je 0x14000edec
    mov al, byte ptr [rdi]
    mov byte ptr [rbx], al
    inc rbx
    lea rdi, [r15 + 2]
    test sil, sil
    je 0x14000ee11
    test bpl, bpl
    jne 0x14000eda4
    cmp sil, 0x20
    je 0x14000ee06
    cmp sil, 9
    jne 0x14000eda4
    test rbx, rbx
    je 0x14000ee14
    mov byte ptr [rbx - 1], 0
    jmp 0x14000ee14
    dec rdi
    xor sil, sil
    mov al, byte ptr [rdi]
    test al, al
    je 0x14000eef7
    cmp al, 0x20
    je 0x14000ee29
    cmp al, 9
    jne 0x14000ee30
    inc rdi
    mov al, byte ptr [rdi]
    jmp 0x14000ee21
    test al, al
    je 0x14000eef7
    test r14, r14
    je 0x14000ee44
    mov qword ptr [r14], rbx
    add r14, 8
    inc qword ptr [r13]
    mov edx, 1
    xor eax, eax
    jmp 0x14000ee56
    inc rdi
    inc eax
    mov cl, byte ptr [rdi]
    cmp cl, 0x5c
    je 0x14000ee51
    cmp cl, 0x22
    jne 0x14000ee93
    test dl, al
    jne 0x14000ee7e
    test sil, sil
    je 0x14000ee75
    cmp byte ptr [rdi + 1], cl
    jne 0x14000ee75
    inc rdi
    jmp 0x14000ee7e
    xor edx, edx
    test sil, sil
    sete sil
    shr eax, 1
    jmp 0x14000ee93
    dec eax
    test rbx, rbx
    je 0x14000ee8f
    mov byte ptr [rbx], 0x5c
    inc rbx
    inc qword ptr [r12]
    test eax, eax
    jne 0x14000ee82
    mov al, byte ptr [rdi]
    test al, al
    je 0x14000eee3
    test sil, sil
    jne 0x14000eeaa
    cmp al, 0x20
    je 0x14000eee3
    cmp al, 9
    je 0x14000eee3
    test edx, edx
    je 0x14000eedb
    test rbx, rbx
    je 0x14000eeb8
    mov byte ptr [rbx], al
    inc rbx
    movsx ecx, byte ptr [rdi]
    call 0x1400146c0
    test eax, eax
    je 0x14000eed7
    inc qword ptr [r12]
    inc rdi
    test rbx, rbx
    je 0x14000eed7
    mov al, byte ptr [rdi]
    mov byte ptr [rbx], al
    inc rbx
    inc qword ptr [r12]
    inc rdi
    jmp 0x14000ee48
    test rbx, rbx
    je 0x14000eeee
    mov byte ptr [rbx], 0
    inc rbx
    inc qword ptr [r12]
    jmp 0x14000ee17
    test r14, r14
    je 0x14000ef00
    and qword ptr [r14], 0
    inc qword ptr [r13]
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    movabs rax, 0x1fffffffffffffff
    mov r9, rdx
    cmp rcx, rax
    jae 0x14000ef79
    xor edx, edx
    or rax, 0xffffffffffffffff
    div r8
    cmp r9, rax
    jae 0x14000ef79
    shl rcx, 3
    imul r9, r8
    mov rax, rcx
    not rax
    cmp rax, r9
    jbe 0x14000ef79
    add rcx, r9
    mov edx, 1
    call 0x140010928
    xor ecx, ecx
    mov rbx, rax
    call 0x1400109a0
    mov rax, rbx
    jmp 0x14000ef7b
    xor eax, eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rbp
    push rsi
    push rdi
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x30
    xor edi, edi
    mov r14d, ecx
    test ecx, ecx
    je 0x14000f0f7
    lea eax, [rcx - 1]
    cmp eax, 1
    jbe 0x14000efc2
    call 0x140010908
    lea ebx, [rdi + 0x16]
    mov dword ptr [rax], ebx
    call 0x14000b5bc
    mov edi, ebx
    jmp 0x14000f0f7
    call 0x140014310
    lea rbx, [rip + 0x1c3f2]
    mov r8d, 0x104
    mov rdx, rbx
    xor ecx, ecx
    call 0x1400139f4
    mov rsi, qword ptr [rip + 0x1c53b]
    mov qword ptr [rip + 0x1c514], rbx
    test rsi, rsi
    je 0x14000eff6
    cmp byte ptr [rsi], dil
    jne 0x14000eff9
    mov rsi, rbx
    lea rax, [rbp + 0x48]
    mov qword ptr [rbp + 0x40], rdi
    lea r9, [rbp + 0x40]
    mov qword ptr [rsp + 0x20], rax
    xor r8d, r8d
    mov qword ptr [rbp + 0x48], rdi
    xor edx, edx
    mov rcx, rsi
    call 0x14000ed5c
    mov r15, qword ptr [rbp + 0x40]
    mov r8d, 1
    mov rdx, qword ptr [rbp + 0x48]
    mov rcx, r15
    call 0x14000ef24
    mov rbx, rax
    test rax, rax
    jne 0x14000f051
    call 0x140010908
    mov ebx, 0xc
    xor ecx, ecx
    mov dword ptr [rax], ebx
    call 0x1400109a0
    jmp 0x14000efbb
    lea r8, [rax + r15*8]
    mov rdx, rbx
    lea rax, [rbp + 0x48]
    mov rcx, rsi
    lea r9, [rbp + 0x40]
    mov qword ptr [rsp + 0x20], rax
    call 0x14000ed5c
    cmp r14d, 1
    jne 0x14000f089
    mov eax, dword ptr [rbp + 0x40]
    dec eax
    mov qword ptr [rip + 0x1c491], rbx
    mov dword ptr [rip + 0x1c483], eax
    xor ecx, ecx
    jmp 0x14000f0f2
    lea rdx, [rbp + 0x38]
    mov qword ptr [rbp + 0x38], rdi
    mov rcx, rbx
    call 0x1400138d0
    mov esi, eax
    test eax, eax
    je 0x14000f0b8
    mov rcx, qword ptr [rbp + 0x38]
    call 0x1400109a0
    mov rcx, rbx
    mov qword ptr [rbp + 0x38], rdi
    call 0x1400109a0
    mov edi, esi
    jmp 0x14000f0f7
    mov rdx, qword ptr [rbp + 0x38]
    mov rcx, rdi
    mov rax, rdx
    cmp qword ptr [rdx], rdi
    je 0x14000f0d3
    lea rax, [rax + 8]
    inc rcx
    cmp qword ptr [rax], rdi
    jne 0x14000f0c7
    mov dword ptr [rip + 0x1c42f], ecx
    xor ecx, ecx
    mov qword ptr [rbp + 0x38], rdi
    mov qword ptr [rip + 0x1c42a], rdx
    call 0x1400109a0
    mov rcx, rbx
    mov qword ptr [rbp + 0x38], rdi
    call 0x1400109a0
    mov rbx, qword ptr [rsp + 0x60]
    mov eax, edi
    add rsp, 0x30
    pop r15
    pop r14
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    xor edi, edi
    cmp qword ptr [rip + 0x1c3a9], rdi
    je 0x14000f125
    xor eax, eax
    jmp 0x14000f174
    call 0x140014310
    call 0x140014844
    mov rbx, rax
    test rax, rax
    jne 0x14000f143
    xor ecx, ecx
    call 0x1400109a0
    or eax, 0xffffffff
    jmp 0x14000f174
    mov rcx, rbx
    call 0x14000f180
    test rax, rax
    jne 0x14000f155
    or edi, 0xffffffff
    jmp 0x14000f163
    mov qword ptr [rip + 0x1c384], rax
    mov qword ptr [rip + 0x1c365], rax
    xor ecx, ecx
    call 0x1400109a0
    mov rcx, rbx
    call 0x1400109a0
    mov eax, edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov rsi, rcx
    xor ecx, ecx
    mov r8, rsi
    mov dl, byte ptr [rsi]
    jmp 0x14000f1ca
    cmp dl, 0x3d
    lea rax, [rcx + 1]
    cmove rax, rcx
    mov rcx, rax
    or rax, 0xffffffffffffffff
    inc rax
    cmp byte ptr [r8 + rax], 0
    jne 0x14000f1b7
    inc r8
    add r8, rax
    mov dl, byte ptr [r8]
    test dl, dl
    jne 0x14000f1a5
    inc rcx
    mov edx, 8
    call 0x140010928
    mov rbx, rax
    test rax, rax
    jne 0x14000f1ee
    xor ecx, ecx
    call 0x1400109a0
    xor eax, eax
    jmp 0x14000f260
    mov r14, rbx
    mov al, byte ptr [rsi]
    test al, al
    je 0x14000f256
    or rbp, 0xffffffffffffffff
    inc rbp
    cmp byte ptr [rsi + rbp], 0
    jne 0x14000f1fb
    inc rbp
    cmp al, 0x3d
    je 0x14000f240
    mov edx, 1
    mov rcx, rbp
    call 0x140010928
    mov rdi, rax
    test rax, rax
    je 0x14000f245
    mov r8, rsi
    mov rdx, rbp
    mov rcx, rax
    call 0x14000ffe0
    xor ecx, ecx
    test eax, eax
    jne 0x14000f27b
    mov qword ptr [r14], rdi
    add r14, 8
    call 0x1400109a0
    add rsi, rbp
    jmp 0x14000f1f1
    mov rcx, rbx
    call 0x14000f290
    xor ecx, ecx
    call 0x1400109a0
    jmp 0x14000f1e3
    xor ecx, ecx
    call 0x1400109a0
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    call 0x14000b60c
    int3 
    int3 
    test rcx, rcx
    je 0x14000f2d0
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rax, qword ptr [rcx]
    mov rbx, rcx
    mov rdi, rcx
    jmp 0x14000f2b9
    mov rcx, rax
    call 0x1400109a0
    lea rdi, [rdi + 8]
    mov rax, qword ptr [rdi]
    test rax, rax
    jne 0x14000f2aa
    mov rcx, rbx
    call 0x1400109a0
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x40
    mov rdi, qword ptr [rip + 0x1c1e0]
    or r14d, 0xffffffff
    test rdi, rdi
    jne 0x14000f395
    mov eax, r14d
    mov rbx, qword ptr [rsp + 0x50]
    mov rsi, qword ptr [rsp + 0x58]
    mov rdi, qword ptr [rsp + 0x60]
    add rsp, 0x40
    pop r14
    ret
    and qword ptr [rsp + 0x38], 0
    mov r9d, r14d
    and qword ptr [rsp + 0x30], 0
    mov r8, rax
    and dword ptr [rsp + 0x28], 0
    xor edx, edx
    and qword ptr [rsp + 0x20], 0
    xor ecx, ecx
    call 0x140014764
    movsxd rsi, eax
    test eax, eax
    je 0x14000f2fd
    mov edx, 1
    mov rcx, rsi
    call 0x140010928
    mov rbx, rax
    test rax, rax
    je 0x14000f3a6
    and qword ptr [rsp + 0x38], 0
    mov r9d, r14d
    and qword ptr [rsp + 0x30], 0
    xor edx, edx
    mov r8, qword ptr [rdi]
    xor ecx, ecx
    mov dword ptr [rsp + 0x28], esi
    mov qword ptr [rsp + 0x20], rax
    call 0x140014764
    mov rcx, rbx
    test eax, eax
    je 0x14000f3a8
    xor edx, edx
    call 0x140014d94
    xor ecx, ecx
    call 0x1400109a0
    add rdi, 8
    mov rax, qword ptr [rdi]
    test rax, rax
    jne 0x14000f316
    jmp 0x14000f300
    xor ecx, ecx
    call 0x1400109a0
    jmp 0x14000f2fd
    int3 
    int3 
    sub rsp, 0x28
    mov rcx, qword ptr [rcx]
    cmp rcx, qword ptr [rip + 0x1c11e]
    je 0x14000f3c9
    call 0x14000f290
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    mov rcx, qword ptr [rcx]
    cmp rcx, qword ptr [rip + 0x1c0fa]
    je 0x14000f3e5
    call 0x14000f290
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    mov rax, qword ptr [rip + 0x1c0d1]
    test rax, rax
    jne 0x14000f422
    cmp qword ptr [rip + 0x1c0cd], rax
    jne 0x14000f409
    xor eax, eax
    jmp 0x14000f422
    call 0x14000f10c
    test eax, eax
    je 0x14000f41b
    call 0x14000f2d4
    test eax, eax
    jne 0x14000f405
    mov rax, qword ptr [rip + 0x1c0a6]
    add rsp, 0x28
    ret
    int3 
    sub rsp, 0x38
    mov qword ptr [rsp + 0x20], 0xfffffffffffffffe
    lea rcx, [rip + 0x1c08c]
    call 0x14000f3b4
    nop 
    lea rcx, [rip + 0x1c087]
    call 0x14000f3d0
    nop 
    mov rcx, qword ptr [rip + 0x1c08a]
    call 0x14000f290
    mov rcx, qword ptr [rip + 0x1c076]
    add rsp, 0x38
    jmp 0x14000f290
    int3 
    sub rsp, 0x28
    mov rax, qword ptr [rip + 0x1c069]
    test rax, rax
    jne 0x14000f4b5
    mov rax, qword ptr [rip + 0x1c045]
    test rax, rax
    jne 0x14000f4ae
    cmp qword ptr [rip + 0x1c041], rax
    jne 0x14000f495
    xor eax, eax
    jmp 0x14000f4ae
    call 0x14000f10c
    test eax, eax
    je 0x14000f4a7
    call 0x14000f2d4
    test eax, eax
    jne 0x14000f491
    mov rax, qword ptr [rip + 0x1c01a]
    mov qword ptr [rip + 0x1c02b], rax
    add rsp, 0x28
    ret
    int3 
    int3 
    jmp 0x14000f10c
    int3 
    int3 
    int3 
    cmp rcx, rdx
    je 0x14000f504
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rdx
    mov rbx, rcx
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x14000f4f1
    movabs r10, 0x85f13e9656da4870
    call qword ptr [rip + 0xed87]
    add rbx, 8
    cmp rbx, rdi
    jne 0x14000f4d9
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rdx
    mov rbx, rcx
    cmp rcx, rdx
    je 0x14000f542
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x14000f539
    movabs r10, 0xd30527475e523070
    call qword ptr [rip + 0xed43]
    test eax, eax
    jne 0x14000f544
    add rbx, 8
    cmp rbx, rdi
    jmp 0x14000f51b
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rcx, rdi
    call 0x14000f588
    nop 
    mov ecx, dword ptr [rbx]
    call 0x140012de4
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    push rbx
    sub rsp, 0x30
    mov rbx, rcx
    cmp byte ptr [rip + 0x1bf60], 0
    jne 0x14000f647
    mov eax, 1
    xchg dword ptr [rip + 0x1bf3f], eax
    mov rax, qword ptr [rcx]
    mov ecx, dword ptr [rax]
    test ecx, ecx
    jne 0x14000f5f0
    mov rax, qword ptr [rip + 0x1aa47]
    mov rdx, qword ptr [rip + 0x1bf30]
    cmp rdx, rax
    je 0x14000f5e7
    mov ecx, eax
    and ecx, 0x3f
    xor rax, rdx
    ror rax, cl
    movabs r10, 0x99012e4578d92870
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call qword ptr [rip + 0xec91]
    lea rcx, [rip + 0x1bf52]
    jmp 0x14000f5fc
    cmp ecx, 1
    jne 0x14000f602
    lea rcx, [rip + 0x1bf5c]
    call 0x14000fd88
    nop 
    mov rax, qword ptr [rbx]
    cmp dword ptr [rax], 0
    jne 0x14000f61d
    lea rdx, [rip + 0xecff]
    lea rcx, [rip + 0xecd8]
    call 0x14000f4c4
    lea rdx, [rip + 0xecfc]
    lea rcx, [rip + 0xeced]
    call 0x14000f4c4
    mov rax, qword ptr [rbx + 8]
    cmp dword ptr [rax], 0
    jne 0x14000f647
    mov byte ptr [rip + 0x1beb8], 1
    mov rax, qword ptr [rbx + 0x10]
    mov byte ptr [rax], 1
    add rsp, 0x30
    pop rbx
    ret
    call 0x14000ffb4
    nop 
    int3 
    mov dword ptr [rsp + 0x18], r8d
    mov dword ptr [rsp + 0x10], edx
    push rbp
    mov rbp, rsp
    sub rsp, 0x50
    mov qword ptr [rbp - 0x20], 0xfffffffffffffffe
    mov qword ptr [rsp + 0x60], rbx
    mov ebx, ecx
    test r8d, r8d
    jne 0x14000f6c3
    xor ecx, ecx
    call qword ptr [rip + 0xe9ff]
    test rax, rax
    je 0x14000f6c3
    mov ecx, 0x5a4d
    cmp word ptr [rax], cx
    jne 0x14000f6c3
    movsxd rcx, dword ptr [rax + 0x3c]
    add rcx, rax
    cmp dword ptr [rcx], 0x4550
    jne 0x14000f6c3
    mov eax, 0x20b
    cmp word ptr [rcx + 0x18], ax
    jne 0x14000f6c3
    cmp dword ptr [rcx + 0x84], 0xe
    jbe 0x14000f6c3
    cmp dword ptr [rcx + 0xf8], 0
    je 0x14000f6c3
    mov ecx, ebx
    call 0x14000f774
    mov byte ptr [rbp + 0x28], 0
    lea rax, [rbp + 0x18]
    mov qword ptr [rbp - 0x18], rax
    lea rax, [rbp + 0x20]
    mov qword ptr [rbp - 0x10], rax
    lea rax, [rbp + 0x28]
    mov qword ptr [rbp - 8], rax
    mov eax, 2
    mov dword ptr [rbp - 0x2c], eax
    mov dword ptr [rbp - 0x28], eax
    lea r9, [rbp - 0x2c]
    lea r8, [rbp - 0x18]
    lea rdx, [rbp - 0x28]
    lea rcx, [rbp - 0x30]
    call 0x14000f550
    nop 
    cmp dword ptr [rbp + 0x20], 0
    je 0x14000f711
    mov rbx, qword ptr [rsp + 0x60]
    add rsp, 0x50
    pop rbp
    ret
    mov ecx, ebx
    call 0x14000f71c
    int3 
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    call 0x14000f750
    test al, al
    je 0x14000f73e
    call qword ptr [rip + 0xe8fd]
    mov rcx, rax
    mov edx, ebx
    call qword ptr [rip + 0xe8fa]
    mov ecx, ebx
    call 0x14000f774
    mov ecx, ebx
    call qword ptr [rip + 0xe9e3]
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call 0x140014dd0
    cmp eax, 1
    je 0x14000f76a
    call 0x140014d9c
    test al, al
    sete al
    jmp 0x14000f76c
    xor al, al
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x30
    mov qword ptr [rsp + 0x20], 0xfffffffffffffffe
    mov ebx, ecx
    and qword ptr [rsp + 0x48], 0
    lea r8, [rsp + 0x48]
    lea rdx, [rip + 0x10299]
    xor ecx, ecx
    call qword ptr [rip + 0xe999]
    mov rcx, qword ptr [rsp + 0x48]
    test eax, eax
    je 0x14000f7d1
    lea rdx, [rip + 0x10299]
    call qword ptr [rip + 0xe953]
    test rax, rax
    je 0x14000f7cc
    movabs r10, 0xa201879b5e5a7b70
    mov ecx, ebx
    call qword ptr [rip + 0xeaac]
    mov rcx, qword ptr [rsp + 0x48]
    test rcx, rcx
    je 0x14000f7dd
    call qword ptr [rip + 0xe924]
    nop 
    add rsp, 0x30
    pop rbx
    ret
    int3 
    mov qword ptr [rip + 0x1bd05], rcx
    ret
    mov edx, 2
    xor ecx, ecx
    lea r8d, [rdx - 1]
    jmp 0x14000f654
    xor edx, edx
    xor ecx, ecx
    lea r8d, [rdx + 1]
    jmp 0x14000f654
    int3 
    int3 
    int3 
    xor r8d, r8d
    lea edx, [r8 + 2]
    jmp 0x14000f654
    sub rsp, 0x28
    mov r8, qword ptr [rip + 0x1a7dd]
    mov rdx, rcx
    cmp qword ptr [rip + 0x1bcc3], r8
    jne 0x14000f850
    mov ecx, r8d
    mov eax, 0x40
    and ecx, 0x3f
    sub eax, ecx
    mov cl, al
    ror rdx, cl
    xor rdx, r8
    mov qword ptr [rip + 0x1bca5], rdx
    add rsp, 0x28
    ret
    call 0x14000ffb4
    int3 
    int3 
    int3 
    xor r8d, r8d
    xor edx, edx
    jmp 0x14000f654
    int3 
    int3 
    sub rsp, 0x28
    lea eax, [rcx - 0x4000]
    test eax, 0xffff3fff
    jne 0x14000f887
    cmp ecx, 0xc000
    je 0x14000f887
    xchg dword ptr [rip + 0x1c535], ecx
    xor eax, eax
    jmp 0x14000f89c
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    mov eax, 0x16
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call qword ptr [rip + 0xe892]
    mov qword ptr [rip + 0x1bc6b], rax
    call qword ptr [rip + 0xe88d]
    mov qword ptr [rip + 0x1bc66], rax
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    lea rax, [rip + 0x1bc35]
    ret
    lea rax, [rip + 0x1bc35]
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x30
    mov rdi, r9
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    lea rbx, [rip + 0x1bc6e]
    lea rsi, [rip + 0x1a897]
    mov qword ptr [rsp + 0x20], rbx
    lea rax, [rip + 0x1bc63]
    cmp rbx, rax
    je 0x14000f933
    cmp qword ptr [rbx], rsi
    je 0x14000f92d
    mov rdx, rsi
    mov rcx, rbx
    call 0x140015928
    mov qword ptr [rbx], rax
    add rbx, 8
    jmp 0x14000f909
    mov ecx, dword ptr [rdi]
    call 0x140012de4
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    mov eax, 1
    xchg dword ptr [rip + 0x1bbd9], eax
    ret
    mov r11, rsp
    sub rsp, 0x28
    mov eax, 4
    lea r9, [r11 + 0x10]
    lea r8, [r11 + 8]
    mov dword ptr [rsp + 0x38], eax
    lea rdx, [r11 + 0x18]
    mov dword ptr [rsp + 0x40], eax
    lea rcx, [r11 + 8]
    call 0x14000f8dc
    add rsp, 0x28
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    call 0x1400104d4
    mov r8d, dword ptr [rax + 0x3a8]
    mov edx, r8d
    and dl, 2
    neg dl
    sbb ecx, ecx
    cmp ebx, -1
    je 0x14000f9e1
    test ebx, ebx
    je 0x14000f9e8
    cmp ebx, 1
    je 0x14000f9d4
    cmp ebx, 2
    je 0x14000f9ce
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    or eax, 0xffffffff
    jmp 0x14000f9eb
    and r8d, 0xfffffffd
    jmp 0x14000f9d8
    or r8d, 2
    mov dword ptr [rax + 0x3a8], r8d
    jmp 0x14000f9e8
    or dword ptr [rip + 0x1af68], 0xffffffff
    lea eax, [rcx + 2]
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov eax, dword ptr [rip + 0x1bb3a]
    nop 
    ret
    sub rsp, 0x28
    cmp ecx, 1
    jbe 0x14000fa1a
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    or eax, 0xffffffff
    jmp 0x14000fa22
    xchg dword ptr [rip + 0x1bb14], ecx
    mov eax, ecx
    add rsp, 0x28
    ret
    int3 
    lea rax, [rip + 0x1bb09]
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rcx, rdi
    call 0x14000faa8
    mov edi, eax
    mov ecx, dword ptr [rbx]
    call 0x140012de4
    mov eax, edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rcx, rdi
    call 0x14000fc58
    mov edi, eax
    mov ecx, dword ptr [rbx]
    call 0x140012de4
    mov eax, edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    mov rax, qword ptr [rcx]
    xor ebp, ebp
    mov r15, rcx
    mov rdx, qword ptr [rax]
    test rdx, rdx
    je 0x14000fc3c
    mov r10, qword ptr [rip + 0x1a525]
    mov ecx, r10d
    mov rsi, r10
    xor rsi, qword ptr [rdx]
    and ecx, 0x3f
    mov r9, r10
    ror rsi, cl
    xor r9, qword ptr [rdx + 8]
    mov rbx, r10
    xor rbx, qword ptr [rdx + 0x10]
    ror r9, cl
    ror rbx, cl
    cmp r9, rbx
    jne 0x14000fbae
    sub rbx, rsi
    mov eax, 0x200
    sar rbx, 3
    cmp rbx, rax
    mov rdi, rbx
    cmova rdi, rax
    lea eax, [rbp + 0x20]
    add rdi, rbx
    cmove rdi, rax
    cmp rdi, rbx
    jb 0x14000fb4a
    lea r8d, [rbp + 8]
    mov rdx, rdi
    mov rcx, rsi
    call 0x140015990
    xor ecx, ecx
    mov r14, rax
    call 0x1400109a0
    test r14, r14
    jne 0x14000fb72
    lea rdi, [rbx + 4]
    mov r8d, 8
    mov rdx, rdi
    mov rcx, rsi
    call 0x140015990
    xor ecx, ecx
    mov r14, rax
    call 0x1400109a0
    test r14, r14
    je 0x14000fc3c
    mov r10, qword ptr [rip + 0x1a487]
    lea r9, [r14 + rbx*8]
    lea rbx, [r14 + rdi*8]
    mov rsi, r14
    mov rcx, rbx
    sub rcx, r9
    add rcx, 7
    shr rcx, 3
    cmp r9, rbx
    cmova rcx, rbp
    test rcx, rcx
    je 0x14000fbae
    mov rax, r10
    mov rdi, r9
    rep stosq qword ptr [rdi], rax
    mov r10, qword ptr [rip + 0x1a452]
    mov r8d, 0x40
    lea rdi, [r9 + 8]
    mov ecx, r8d
    mov eax, r10d
    and eax, 0x3f
    sub ecx, eax
    mov rax, qword ptr [r15 + 8]
    mov rdx, qword ptr [rax]
    mov eax, r8d
    ror rdx, cl
    xor rdx, r10
    mov qword ptr [r9], rdx
    mov rdx, qword ptr [rip + 0x1a423]
    mov ecx, edx
    and ecx, 0x3f
    sub eax, ecx
    mov cl, al
    mov rax, qword ptr [r15]
    ror rsi, cl
    xor rsi, rdx
    mov rcx, qword ptr [rax]
    mov qword ptr [rcx], rsi
    mov ecx, r8d
    mov rdx, qword ptr [rip + 0x1a401]
    mov eax, edx
    and eax, 0x3f
    sub ecx, eax
    mov rax, qword ptr [r15]
    ror rdi, cl
    xor rdi, rdx
    mov rdx, qword ptr [rax]
    mov qword ptr [rdx + 8], rdi
    mov rdx, qword ptr [rip + 0x1a3e3]
    mov eax, edx
    and eax, 0x3f
    sub r8d, eax
    mov rax, qword ptr [r15]
    mov cl, r8b
    ror rbx, cl
    xor rbx, rdx
    mov rcx, qword ptr [rax]
    xor eax, eax
    mov qword ptr [rcx + 0x10], rbx
    jmp 0x14000fc3f
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    mov rax, qword ptr [rcx]
    mov rsi, rcx
    mov rdx, qword ptr [rax]
    test rdx, rdx
    jne 0x14000fc86
    or eax, 0xffffffff
    jmp 0x14000fd5f
    mov r8, qword ptr [rip + 0x1a373]
    mov ecx, r8d
    mov rdi, r8
    xor rdi, qword ptr [rdx]
    and ecx, 0x3f
    ror rdi, cl
    mov rbx, r8
    xor rbx, qword ptr [rdx + 8]
    ror rbx, cl
    lea rax, [rdi - 1]
    cmp rax, -3
    ja 0x14000fd5d
    mov ecx, r8d
    mov r14, r8
    and ecx, 0x3f
    mov r15, rdi
    mov rbp, rbx
    sub rbx, 8
    cmp rbx, rdi
    jb 0x14000fd2b
    mov rax, qword ptr [rbx]
    cmp rax, r14
    je 0x14000fcc3
    xor rax, r8
    mov qword ptr [rbx], r14
    ror rax, cl
    movabs r10, 0x85f13e9656da4870
    call qword ptr [rip + 0xe58b]
    mov r8, qword ptr [rip + 0x1a30c]
    mov rax, qword ptr [rsi]
    mov ecx, r8d
    and ecx, 0x3f
    mov r9, r8
    mov rdx, qword ptr [rax]
    mov rax, r8
    xor r9, qword ptr [rdx]
    xor rax, qword ptr [rdx + 8]
    ror r9, cl
    ror rax, cl
    cmp r9, r15
    jne 0x14000fd1d
    cmp rax, rbp
    je 0x14000fcc3
    mov r15, r9
    mov rdi, r9
    mov rbp, rax
    mov rbx, rax
    jmp 0x14000fcc3
    cmp rdi, -1
    je 0x14000fd40
    mov rcx, rdi
    call 0x1400109a0
    mov r8, qword ptr [rip + 0x1a2c0]
    mov rax, qword ptr [rsi]
    mov rcx, qword ptr [rax]
    mov qword ptr [rcx], r8
    mov rax, qword ptr [rsi]
    mov rcx, qword ptr [rax]
    mov qword ptr [rcx + 8], r8
    mov rax, qword ptr [rsi]
    mov rcx, qword ptr [rax]
    mov qword ptr [rcx + 0x10], r8
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    mov rdx, rcx
    lea rcx, [rip + 0x1b7be]
    jmp 0x14000fdf4
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 8], rcx
    sub rsp, 0x38
    mov qword ptr [r11 - 0x10], 0xfffffffffffffffe
    lea rax, [r11 + 8]
    mov qword ptr [r11 - 0x18], rax
    mov eax, 2
    mov dword ptr [rsp + 0x50], eax
    mov dword ptr [rsp + 0x58], eax
    lea r9, [r11 + 0x18]
    lea r8, [r11 - 0x18]
    lea rdx, [r11 + 0x20]
    lea rcx, [r11 + 0x10]
    call 0x14000fa6c
    nop 
    add rsp, 0x38
    ret
    int3 
    test rcx, rcx
    jne 0x14000fdd5
    or eax, 0xffffffff
    ret
    mov rax, qword ptr [rcx + 0x10]
    cmp qword ptr [rcx], rax
    jne 0x14000fdf0
    mov rax, qword ptr [rip + 0x1a21b]
    mov qword ptr [rcx], rax
    mov qword ptr [rcx + 8], rax
    mov qword ptr [rcx + 0x10], rax
    xor eax, eax
    ret
    int3 
    mov qword ptr [rsp + 0x10], rdx
    mov qword ptr [rsp + 8], rcx
    push rbp
    mov rbp, rsp
    sub rsp, 0x40
    lea rax, [rbp + 0x10]
    mov qword ptr [rbp - 0x18], rax
    lea r9, [rbp + 0x28]
    lea rax, [rbp + 0x18]
    mov qword ptr [rbp - 0x10], rax
    lea r8, [rbp - 0x18]
    mov eax, 2
    lea rdx, [rbp - 0x20]
    lea rcx, [rbp + 0x20]
    mov dword ptr [rbp + 0x28], eax
    mov dword ptr [rbp - 0x20], eax
    call 0x14000fa30
    add rsp, 0x40
    pop rbp
    ret
    lea rax, [rip + 0x1a35d]
    mov qword ptr [rip + 0x1b726], rax
    mov al, 1
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    lea rcx, [rip + 0x1b6e5]
    call 0x14000fdcc
    lea rcx, [rip + 0x1b6f1]
    call 0x14000fdcc
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    sub rsp, 0x28
    call 0x14000f428
    mov al, 1
    add rsp, 0x28
    ret
    push rbx
    sub rsp, 0x20
    mov rbx, qword ptr [rip + 0x1a16f]
    mov rcx, rbx
    call 0x14000b44c
    mov rcx, rbx
    call 0x14000eaa0
    mov rcx, rbx
    call 0x140015ba4
    mov rcx, rbx
    call 0x14000ecf0
    mov rcx, rbx
    call 0x14000f7e4
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    xor ecx, ecx
    jmp 0x140006870
    int3 
    push rbx
    sub rsp, 0x20
    mov rcx, qword ptr [rip + 0x1becf]
    or eax, 0xffffffff
    lock xadd dword ptr [rcx], eax
    cmp eax, 1
    jne 0x14000ff04
    mov rcx, qword ptr [rip + 0x1bebc]
    lea rbx, [rip + 0x1a47d]
    cmp rcx, rbx
    je 0x14000ff04
    call 0x1400109a0
    mov qword ptr [rip + 0x1bea4], rbx
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    sub rsp, 0x28
    mov rcx, qword ptr [rip + 0x1bc31]
    call 0x1400109a0
    mov rcx, qword ptr [rip + 0x1bc2d]
    and qword ptr [rip + 0x1bc1d], 0
    call 0x1400109a0
    mov rcx, qword ptr [rip + 0x1b5d9]
    and qword ptr [rip + 0x1bc11], 0
    call 0x1400109a0
    mov rcx, qword ptr [rip + 0x1b5cd]
    and qword ptr [rip + 0x1b5bd], 0
    call 0x1400109a0
    and qword ptr [rip + 0x1b5b8], 0
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    lea rdx, [rip + 0xfc11]
    lea rcx, [rip + 0xfb0a]
    jmp 0x140015a50
    int3 
    sub rsp, 0x28
    test cl, cl
    je 0x14000ff9a
    cmp qword ptr [rip + 0x1b404], 0
    je 0x14000ff93
    call 0x140011358
    mov al, 1
    add rsp, 0x28
    ret
    lea rdx, [rip + 0xfbdf]
    lea rcx, [rip + 0xfad8]
    add rsp, 0x28
    jmp 0x140015ae4
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call 0x1400104d4
    mov rax, qword ptr [rax + 0x18]
    test rax, rax
    je 0x14000ffd8
    movabs r10, 0x85f13e9656da4870
    call qword ptr [rip + 0xe2a2]
    jmp 0x14000ffd8
    call 0x140010040
    nop 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    xor ebx, ebx
    test rcx, rcx
    je 0x14000fff9
    test rdx, rdx
    je 0x14000fff9
    test r8, r8
    jne 0x140010012
    mov byte ptr [rcx], bl
    call 0x140010908
    mov ebx, 0x16
    mov dword ptr [rax], ebx
    call 0x14000b5bc
    mov eax, ebx
    add rsp, 0x20
    pop rbx
    ret
    mov r9, rcx
    sub r8, rcx
    mov al, byte ptr [r8 + r9]
    mov byte ptr [r9], al
    inc r9
    test al, al
    je 0x14001000a
    sub rdx, 1
    jne 0x140010018
    test rdx, rdx
    jne 0x14001000a
    mov byte ptr [rcx], bl
    call 0x140010908
    mov ebx, 0x22
    jmp 0x140010003
    int3 
    sub rsp, 0x28
    call 0x140015b74
    test rax, rax
    je 0x140010058
    mov ecx, 0x16
    call 0x140015bc4
    test byte ptr [rip + 0x1a129], 2
    je 0x14001008b
    mov ecx, 0x17
    call qword ptr [rip + 0xdfd4]
    test eax, eax
    je 0x140010077
    mov ecx, 7
    int 0x29
    mov r8d, 1
    mov edx, 0x40000015
    lea ecx, [r8 + 2]
    call 0x14000b2f0
    mov ecx, 3
    call 0x14000f80c
    int3 
    int3 
    int3 
    jmp 0x140010928
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    sub rdx, rcx
    test r8, r8
    je 0x140010122
    test ecx, 7
    je 0x1400100dd
    movzx eax, byte ptr [rcx]
    cmp al, byte ptr [rdx + rcx]
    jne 0x140010125
    inc rcx
    dec r8
    je 0x140010122
    test al, al
    je 0x140010122
    test rcx, 7
    jne 0x1400100c0
    movabs r11, 0x8080808080808080
    movabs r10, 0xfefefefefefefeff
    lea eax, [rdx + rcx]
    and eax, 0xfff
    cmp eax, 0xff8
    ja 0x1400100c0
    mov rax, qword ptr [rcx]
    cmp rax, qword ptr [rdx + rcx]
    jne 0x1400100c0
    add rcx, 8
    sub r8, 8
    jbe 0x140010122
    lea r9, [r10 + rax]
    not rax
    and rax, r9
    test r11, rax
    je 0x1400100f1
    xor eax, eax
    ret
    sbb rax, rax
    or rax, 1
    ret
    int3 
    int3 
    int3 
    test r8, r8
    jne 0x14001014d
    xor eax, eax
    ret
    movzx eax, word ptr [rcx]
    test ax, ax
    je 0x140010153
    cmp ax, word ptr [rdx]
    jne 0x140010153
    add rcx, 2
    add rdx, 2
    sub r8, 1
    jne 0x140010138
    movzx eax, word ptr [rcx]
    movzx ecx, word ptr [rdx]
    sub eax, ecx
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rax, qword ptr [rdi]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rcx + 0x88]
    lock inc dword ptr [rax]
    mov ecx, dword ptr [rbx]
    call 0x140012de4
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rcx, qword ptr [rdi]
    xor edx, edx
    mov rcx, qword ptr [rcx]
    call 0x14001046c
    nop 
    mov ecx, dword ptr [rbx]
    call 0x140012de4
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rax, qword ptr [rdi + 8]
    mov rdx, qword ptr [rax]
    mov rcx, qword ptr [rdi]
    mov rdx, qword ptr [rdx]
    mov rcx, qword ptr [rcx]
    call 0x14001046c
    nop 
    mov ecx, dword ptr [rbx]
    call 0x140012de4
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rax, qword ptr [rdi]
    mov rcx, qword ptr [rax]
    mov rcx, qword ptr [rcx + 0x88]
    test rcx, rcx
    je 0x140010271
    or eax, 0xffffffff
    lock xadd dword ptr [rcx], eax
    cmp eax, 1
    jne 0x140010271
    lea rax, [rip + 0x1a10a]
    cmp rcx, rax
    je 0x140010271
    call 0x1400109a0
    nop 
    mov ecx, dword ptr [rbx]
    call 0x140012de4
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    push rbp
    mov rbp, rsp
    sub rsp, 0x50
    mov qword ptr [rbp - 0x28], rcx
    lea rax, [rbp - 0x28]
    mov qword ptr [rbp - 0x18], rax
    lea r9, [rbp + 0x20]
    mov edx, 1
    lea r8, [rbp - 0x18]
    mov eax, 5
    mov dword ptr [rbp + 0x20], eax
    mov dword ptr [rbp + 0x28], eax
    lea rax, [rbp - 0x28]
    mov qword ptr [rbp - 0x10], rax
    lea rax, [rbp - 0x20]
    mov qword ptr [rbp - 8], rax
    mov eax, 4
    mov dword ptr [rbp - 0x30], eax
    mov dword ptr [rbp - 0x2c], eax
    lea rax, [rip + 0x1b29d]
    mov qword ptr [rbp - 0x20], rax
    mov dword ptr [rcx + 0x28], edx
    lea rcx, [rip + 0xf5ff]
    mov rax, qword ptr [rbp - 0x28]
    mov qword ptr [rax], rcx
    lea rcx, [rip + 0x1a081]
    mov rax, qword ptr [rbp - 0x28]
    mov dword ptr [rax + 0x3a8], edx
    mov rax, qword ptr [rbp - 0x28]
    mov qword ptr [rax + 0x88], rcx
    lea ecx, [rdx + 0x42]
    mov rax, qword ptr [rbp - 0x28]
    lea rdx, [rbp + 0x28]
    mov word ptr [rax + 0xbc], cx
    mov rax, qword ptr [rbp - 0x28]
    mov word ptr [rax + 0x1c2], cx
    lea rcx, [rbp + 0x18]
    mov rax, qword ptr [rbp - 0x28]
    and qword ptr [rax + 0x3a0], 0
    call 0x14001015c
    lea r9, [rbp - 0x30]
    lea r8, [rbp - 0x10]
    lea rdx, [rbp - 0x2c]
    lea rcx, [rbp + 0x18]
    call 0x1400101dc
    add rsp, 0x50
    pop rbp
    ret
    int3 
    int3 
    int3 
    test rcx, rcx
    je 0x140010373
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    call 0x140010374
    mov rcx, rbx
    call 0x1400109a0
    add rsp, 0x20
    pop rbx
    ret
    push rbp
    mov rbp, rsp
    sub rsp, 0x40
    lea rax, [rbp - 0x18]
    mov qword ptr [rbp - 0x18], rcx
    mov qword ptr [rbp - 0x10], rax
    lea rdx, [rip + 0xf550]
    mov eax, 5
    mov dword ptr [rbp + 0x20], eax
    mov dword ptr [rbp + 0x28], eax
    lea rax, [rbp - 0x18]
    mov qword ptr [rbp - 8], rax
    mov eax, 4
    mov dword ptr [rbp - 0x20], eax
    mov dword ptr [rbp - 0x1c], eax
    mov rax, qword ptr [rcx]
    cmp rax, rdx
    je 0x1400103c2
    mov rcx, rax
    call 0x1400109a0
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x70]
    call 0x1400109a0
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x58]
    call 0x1400109a0
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x60]
    call 0x1400109a0
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x68]
    call 0x1400109a0
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x48]
    call 0x1400109a0
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x50]
    call 0x1400109a0
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x78]
    call 0x1400109a0
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x80]
    call 0x1400109a0
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x3c0]
    call 0x1400109a0
    lea r9, [rbp + 0x20]
    lea r8, [rbp - 0x10]
    lea rdx, [rbp + 0x28]
    lea rcx, [rbp + 0x18]
    call 0x140010224
    lea r9, [rbp - 0x20]
    lea r8, [rbp - 8]
    lea rdx, [rbp - 0x1c]
    lea rcx, [rbp + 0x18]
    call 0x14001019c
    add rsp, 0x40
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rcx
    mov rbx, rdx
    mov rcx, qword ptr [rcx + 0x90]
    test rcx, rcx
    je 0x1400104b4
    call 0x140015810
    mov rcx, qword ptr [rdi + 0x90]
    cmp rcx, qword ptr [rip + 0x1b0d5]
    je 0x1400104b4
    lea rax, [rip + 0x19cfc]
    cmp rcx, rax
    je 0x1400104b4
    cmp dword ptr [rcx + 0x10], 0
    jne 0x1400104b4
    call 0x140015610
    mov qword ptr [rdi + 0x90], rbx
    test rbx, rbx
    je 0x1400104c8
    mov rcx, rbx
    call 0x140015584
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    call qword ptr [rip + 0xdbbf]
    mov ecx, dword ptr [rip + 0x19ca1]
    xor esi, esi
    mov ebx, eax
    cmp ecx, -1
    je 0x140010515
    call 0x140010d30
    mov rdi, rax
    test rax, rax
    je 0x14001050f
    cmp rax, -1
    cmove rdi, rsi
    jmp 0x140010581
    mov ecx, dword ptr [rip + 0x19c7b]
    or rdx, 0xffffffffffffffff
    call 0x140010d38
    test eax, eax
    jne 0x140010527
    mov rdi, rsi
    jmp 0x140010581
    mov edx, 0x3c8
    mov ecx, 1
    call 0x140010928
    mov ecx, dword ptr [rip + 0x19c54]
    mov rdi, rax
    test rax, rax
    jne 0x140010554
    xor edx, edx
    call 0x140010d38
    xor ecx, ecx
    call 0x1400109a0
    jmp 0x140010522
    mov rdx, rdi
    call 0x140010d38
    test eax, eax
    jne 0x140010572
    mov ecx, dword ptr [rip + 0x19c2a]
    xor edx, edx
    call 0x140010d38
    mov rcx, rdi
    jmp 0x14001054d
    mov rcx, rdi
    call 0x140010284
    xor ecx, ecx
    call 0x1400109a0
    mov ecx, ebx
    call qword ptr [rip + 0xdb27]
    test rdi, rdi
    je 0x1400105a1
    mov rbx, qword ptr [rsp + 0x30]
    mov rax, rdi
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    call 0x140010040
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ecx, dword ptr [rip + 0x19bdc]
    cmp ecx, -1
    je 0x1400105d4
    call 0x140010d30
    mov rbx, rax
    test rax, rax
    je 0x1400105ce
    cmp rax, -1
    je 0x140010644
    jmp 0x14001063b
    mov ecx, dword ptr [rip + 0x19bbc]
    or rdx, 0xffffffffffffffff
    call 0x140010d38
    test eax, eax
    je 0x140010644
    mov edx, 0x3c8
    mov ecx, 1
    call 0x140010928
    mov ecx, dword ptr [rip + 0x19b9a]
    mov rbx, rax
    test rax, rax
    jne 0x14001060e
    xor edx, edx
    call 0x140010d38
    xor ecx, ecx
    call 0x1400109a0
    jmp 0x140010644
    mov rdx, rbx
    call 0x140010d38
    test eax, eax
    jne 0x14001062c
    mov ecx, dword ptr [rip + 0x19b70]
    xor edx, edx
    call 0x140010d38
    mov rcx, rbx
    jmp 0x140010607
    mov rcx, rbx
    call 0x140010284
    xor ecx, ecx
    call 0x1400109a0
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    call 0x140010040
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    call qword ptr [rip + 0xda47]
    mov ecx, dword ptr [rip + 0x19b29]
    xor esi, esi
    mov ebx, eax
    cmp ecx, -1
    je 0x14001068d
    call 0x140010d30
    mov rdi, rax
    test rax, rax
    je 0x140010687
    cmp rax, -1
    cmove rdi, rsi
    jmp 0x1400106f9
    mov ecx, dword ptr [rip + 0x19b03]
    or rdx, 0xffffffffffffffff
    call 0x140010d38
    test eax, eax
    jne 0x14001069f
    mov rdi, rsi
    jmp 0x1400106f9
    mov edx, 0x3c8
    mov ecx, 1
    call 0x140010928
    mov ecx, dword ptr [rip + 0x19adc]
    mov rdi, rax
    test rax, rax
    jne 0x1400106cc
    xor edx, edx
    call 0x140010d38
    xor ecx, ecx
    call 0x1400109a0
    jmp 0x14001069a
    mov rdx, rdi
    call 0x140010d38
    test eax, eax
    jne 0x1400106ea
    mov ecx, dword ptr [rip + 0x19ab2]
    xor edx, edx
    call 0x140010d38
    mov rcx, rdi
    jmp 0x1400106c5
    mov rcx, rdi
    call 0x140010284
    xor ecx, ecx
    call 0x1400109a0
    mov ecx, ebx
    call qword ptr [rip + 0xd9af]
    mov rbx, qword ptr [rsp + 0x30]
    mov rax, rdi
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov ecx, dword ptr [rip + 0x19a67]
    xor ebx, ebx
    mov rsi, rdx
    cmp ecx, -1
    je 0x14001074e
    call 0x140010d30
    mov rdi, rax
    test rax, rax
    je 0x140010748
    cmp rax, -1
    je 0x1400107bf
    jmp 0x1400107b5
    mov ecx, dword ptr [rip + 0x19a42]
    or rdx, 0xffffffffffffffff
    call 0x140010d38
    test eax, eax
    je 0x1400107bf
    mov edx, 0x3c8
    mov ecx, 1
    call 0x140010928
    mov ecx, dword ptr [rip + 0x19a20]
    mov rdi, rax
    test rax, rax
    jne 0x140010788
    xor edx, edx
    call 0x140010d38
    xor ecx, ecx
    call 0x1400109a0
    jmp 0x1400107bf
    mov rdx, rdi
    call 0x140010d38
    test eax, eax
    jne 0x1400107a6
    mov ecx, dword ptr [rip + 0x199f6]
    xor edx, edx
    call 0x140010d38
    mov rcx, rdi
    jmp 0x140010781
    mov rcx, rdi
    call 0x140010284
    xor ecx, ecx
    call 0x1400109a0
    imul rbx, rsi, 0x3c8
    add rbx, rdi
    mov rsi, qword ptr [rsp + 0x38]
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    sub rsp, 0x28
    lea rcx, [rip - 0x48b]
    call 0x140010d20
    mov dword ptr [rip + 0x199a6], eax
    cmp eax, -1
    jne 0x1400107f3
    xor al, al
    jmp 0x140010808
    call 0x14001064c
    test rax, rax
    jne 0x140010806
    xor ecx, ecx
    call 0x140010810
    jmp 0x1400107ef
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    mov ecx, dword ptr [rip + 0x19976]
    cmp ecx, -1
    je 0x14001082b
    call 0x140010d28
    or dword ptr [rip + 0x19965], 0xffffffff
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    xor eax, eax
    lea r9, [rip + 0xf9c3]
    mov rdx, r9
    lea r8d, [rax + 8]
    cmp ecx, dword ptr [rdx]
    je 0x140010873
    inc eax
    add rdx, r8
    cmp eax, 0x2d
    jb 0x140010844
    lea eax, [rcx - 0x13]
    cmp eax, 0x11
    ja 0x140010860
    mov eax, 0xd
    ret
    add ecx, 0xffffff44
    mov eax, 0x16
    cmp ecx, 0xe
    cmovbe eax, r8d
    ret
    mov eax, dword ptr [r9 + rax*8 + 4]
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    call 0x14001064c
    test rax, rax
    jne 0x140010897
    lea rax, [rip + 0x19a7b]
    jmp 0x14001089b
    add rax, 0x24
    mov ecx, ebx
    mov dword ptr [rax], ebx
    call 0x140010834
    mov ebx, eax
    call 0x14001064c
    lea rcx, [rip + 0x19a5a]
    test rax, rax
    je 0x1400108bb
    lea rcx, [rax + 0x20]
    mov dword ptr [rcx], ebx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rdx
    mov byte ptr [rdx + 0x38], 1
    mov dword ptr [rdx + 0x34], ecx
    call 0x140010834
    mov dword ptr [rbx + 0x2c], eax
    mov byte ptr [rbx + 0x30], 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x14001064c
    test rax, rax
    jne 0x1400108ff
    lea rax, [rip + 0x19a13]
    jmp 0x140010903
    add rax, 0x24
    add rsp, 0x28
    ret
    sub rsp, 0x28
    call 0x14001064c
    test rax, rax
    jne 0x14001091f
    lea rax, [rip + 0x199ef]
    jmp 0x140010923
    add rax, 0x20
    add rsp, 0x28
    ret
    push rbx
    sub rsp, 0x20
    mov r8, rdx
    mov rbx, rcx
    test rcx, rcx
    je 0x140010947
    xor edx, edx
    lea rax, [rdx - 0x20]
    div rbx
    cmp rax, r8
    jb 0x14001098a
    imul rbx, r8
    mov eax, 1
    test rbx, rbx
    cmove rbx, rax
    jmp 0x14001096e
    call 0x14000f9f4
    test eax, eax
    je 0x14001098a
    mov rcx, rbx
    call 0x14000eaa8
    test eax, eax
    je 0x14001098a
    mov rcx, qword ptr [rip + 0x1b453]
    mov r8, rbx
    mov edx, 8
    call qword ptr [rip + 0xd7cd]
    test rax, rax
    je 0x140010959
    jmp 0x140010997
    call 0x140010908
    mov dword ptr [rax], 0xc
    xor eax, eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    test rcx, rcx
    je 0x1400109db
    push rbx
    sub rsp, 0x20
    mov r8, rcx
    xor edx, edx
    mov rcx, qword ptr [rip + 0x1b412]
    call qword ptr [rip + 0xd79c]
    test eax, eax
    jne 0x1400109d6
    call qword ptr [rip + 0xd6e2]
    mov ecx, eax
    call 0x140010834
    mov ebx, eax
    call 0x140010908
    mov dword ptr [rax], ebx
    add rsp, 0x20
    pop rbx
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov r15d, ecx
    lea r14, [rip - 0x10a02]
    or rdi, 0xffffffffffffffff
    mov r12, r9
    mov rbp, r8
    mov r13, rdx
    mov r10, qword ptr [r14 + r15*8 + 0x2b630]
    nop 
    mov r11, qword ptr [rip + 0x195e1]
    xor r10, r11
    mov ecx, r11d
    and ecx, 0x3f
    ror r10, cl
    cmp r10, rdi
    je 0x140010b1f
    test r10, r10
    je 0x140010a41
    mov rax, r10
    jmp 0x140010b21
    cmp r8, r12
    je 0x140010b04
    mov esi, dword ptr [rbp]
    mov rbx, qword ptr [r14 + rsi*8 + 0x2b580]
    nop 
    test rbx, rbx
    je 0x140010a69
    cmp rbx, rdi
    jne 0x140010b5e
    jmp 0x140010af0
    mov r14, qword ptr [r14 + rsi*8 + 0x20370]
    xor edx, edx
    mov rcx, r14
    mov r8d, 0x800
    call qword ptr [rip + 0xd68e]
    mov rbx, rax
    test rax, rax
    jne 0x140010b3e
    call qword ptr [rip + 0xd614]
    cmp eax, 0x57
    jne 0x140010ade
    lea ebx, [rax - 0x50]
    mov rcx, r14
    mov r8d, ebx
    lea rdx, [rip + 0xeb7f]
    call 0x140010130
    test eax, eax
    je 0x140010ade
    mov r8d, ebx
    lea rdx, [rip + 0xfdfc]
    mov rcx, r14
    call 0x140010130
    test eax, eax
    je 0x140010ade
    xor r8d, r8d
    xor edx, edx
    mov rcx, r14
    call qword ptr [rip + 0xd63a]
    mov rbx, rax
    test rax, rax
    jne 0x140010b3e
    mov rax, rdi
    lea r14, [rip - 0x10ae8]
    xchg qword ptr [r14 + rsi*8 + 0x2b580], rax
    add rbp, 4
    cmp rbp, r12
    jne 0x140010a4a
    mov r11, qword ptr [rip + 0x194fc]
    mov eax, r11d
    mov ecx, 0x40
    and eax, 0x3f
    sub ecx, eax
    ror rdi, cl
    xor rdi, r11
    xchg qword ptr [r14 + r15*8 + 0x2b630], rdi
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    mov rax, rbx
    lea r14, [rip - 0x10b48]
    xchg qword ptr [r14 + rsi*8 + 0x2b580], rax
    test rax, rax
    je 0x140010b5e
    mov rcx, rbx
    call qword ptr [rip + 0xd5a2]
    mov rdx, r13
    mov rcx, rbx
    call qword ptr [rip + 0xd59e]
    test rax, rax
    je 0x140010afd
    mov r8, qword ptr [rip + 0x1948a]
    mov edx, 0x40
    mov ecx, r8d
    and ecx, 0x3f
    sub edx, ecx
    mov cl, dl
    mov rdx, rax
    ror rdx, cl
    xor rdx, r8
    xchg qword ptr [r14 + r15*8 + 0x2b630], rdx
    jmp 0x140010b21
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    lea r9, [rip + 0xfd90]
    mov ecx, 0x19
    lea r8, [rip + 0xfd80]
    lea rdx, [rip + 0xfd7d]
    call 0x1400109dc
    test rax, rax
    je 0x140010be5
    movabs r10, 0xbdc017da34d1c070
    mov rdx, rbx
    mov rcx, 0xfffffffffffffffa
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0xd693]
    mov eax, 0xc0000225
    add rsp, 0x20
    pop rbx
    ret
    sub rsp, 0x28
    lea r9, [rip + 0xfcd1]
    xor ecx, ecx
    lea r8, [rip + 0xfcc4]
    lea rdx, [rip + 0xfcc5]
    call 0x1400109dc
    test rax, rax
    je 0x140010c2a
    movabs r10, 0xd30527475e523070
    add rsp, 0x28
    jmp qword ptr [rip + 0xd64e]
    mov eax, 1
    add rsp, 0x28
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x50
    mov ebx, r9d
    mov rdi, r8
    mov esi, edx
    lea r9, [rip + 0xfc91]
    mov rbp, rcx
    lea r8, [rip + 0xfc7f]
    lea rdx, [rip + 0xfc80]
    mov ecx, 1
    call 0x1400109dc
    mov r11, rax
    test rax, rax
    je 0x140010cd9
    movabs r10, 0xab8817f47a550870
    mov rdx, qword ptr [rsp + 0xa0]
    mov r9d, ebx
    mov rcx, qword ptr [rsp + 0x98]
    mov r8, rdi
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x40], rdx
    mov edx, esi
    mov qword ptr [rsp + 0x38], rcx
    mov rcx, qword ptr [rsp + 0x90]
    mov qword ptr [rsp + 0x30], rcx
    mov ecx, dword ptr [rsp + 0x88]
    mov dword ptr [rsp + 0x28], ecx
    mov rcx, rbp
    mov qword ptr [rsp + 0x20], rax
    mov rax, r11
    call qword ptr [rip + 0xd5a1]
    jmp 0x140010d0b
    xor edx, edx
    mov rcx, rbp
    call 0x140010e9c
    mov ecx, eax
    mov r9d, ebx
    mov eax, dword ptr [rsp + 0x88]
    mov r8, rdi
    mov dword ptr [rsp + 0x28], eax
    mov edx, esi
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x20], rax
    call qword ptr [rip + 0xd475]
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x50
    pop rdi
    ret
    jmp qword ptr [rip + 0xd439]
    int3 
    jmp qword ptr [rip + 0xd449]
    int3 
    jmp qword ptr [rip + 0xd431]
    int3 
    jmp qword ptr [rip + 0xd431]
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov esi, r8d
    lea r9, [rip + 0xfba7]
    mov ebx, edx
    lea r8, [rip + 0xfb96]
    mov rdi, rcx
    lea rdx, [rip + 0xe92c]
    mov ecx, 0xf
    call 0x1400109dc
    test rax, rax
    je 0x140010d95
    movabs r10, 0x82a03e5032d2da70
    mov r8d, esi
    mov edx, ebx
    mov rcx, rdi
    call qword ptr [rip + 0xd4e5]
    jmp 0x140010da0
    mov edx, ebx
    mov rcx, rdi
    call qword ptr [rip + 0xd338]
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x50
    mov ebx, r9d
    mov rdi, r8
    mov esi, edx
    lea r9, [rip + 0xfb35]
    mov rbp, rcx
    lea r8, [rip + 0xfb23]
    lea rdx, [rip + 0xfb24]
    mov ecx, 0x11
    call 0x1400109dc
    mov r11, rax
    test rax, rax
    je 0x140010e55
    movabs r10, 0xe3a11f625057e270
    mov rdx, qword ptr [rsp + 0xa0]
    mov r9d, ebx
    mov rcx, qword ptr [rsp + 0x98]
    mov r8, rdi
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x40], rdx
    mov edx, esi
    mov qword ptr [rsp + 0x38], rcx
    mov rcx, qword ptr [rsp + 0x90]
    mov qword ptr [rsp + 0x30], rcx
    mov ecx, dword ptr [rsp + 0x88]
    mov dword ptr [rsp + 0x28], ecx
    mov rcx, rbp
    mov qword ptr [rsp + 0x20], rax
    mov rax, r11
    call qword ptr [rip + 0xd425]
    jmp 0x140010e87
    xor edx, edx
    mov rcx, rbp
    call 0x140010e9c
    mov ecx, eax
    mov r9d, ebx
    mov eax, dword ptr [rsp + 0x88]
    mov r8, rdi
    mov dword ptr [rsp + 0x28], eax
    mov edx, esi
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x20], rax
    call qword ptr [rip + 0xd301]
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x50
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov edi, edx
    lea r9, [rip + 0xfa71]
    mov rbx, rcx
    lea rdx, [rip + 0xfa67]
    mov ecx, 0x13
    lea r8, [rip + 0xfa53]
    call 0x1400109dc
    test rax, rax
    je 0x140010ee6
    movabs r10, 0xeadd062354d83270
    mov edx, edi
    mov rcx, rbx
    call qword ptr [rip + 0xd394]
    jmp 0x140010eee
    mov rcx, rbx
    call 0x140015e40
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rdi
    mov rax, qword ptr [rip + 0x190f8]
    lea rdi, [rip + 0x1a721]
    mov ecx, 0x1f
    rep stosq qword ptr [rdi], rax
    mov rdi, qword ptr [rsp + 8]
    mov al, 1
    ret
    int3 
    push rbx
    sub rsp, 0x20
    test cl, cl
    jne 0x140010f59
    lea rbx, [rip + 0x1a64f]
    mov rcx, qword ptr [rbx]
    test rcx, rcx
    je 0x140010f49
    cmp rcx, -1
    je 0x140010f45
    call qword ptr [rip + 0xd1bb]
    and qword ptr [rbx], 0
    add rbx, 8
    lea rax, [rip + 0x1a6d4]
    cmp rbx, rax
    jne 0x140010f31
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    push rdi
    sub rsp, 0x30
    and dword ptr [rsp + 0x20], 0
    mov ecx, 8
    call 0x140012d90
    nop 
    mov ebx, 3
    mov dword ptr [rsp + 0x24], ebx
    cmp ebx, dword ptr [rip + 0x1a3fb]
    je 0x140010ffd
    movsxd rdi, ebx
    mov rax, qword ptr [rip + 0x1a3f7]
    mov rcx, qword ptr [rax + rdi*8]
    test rcx, rcx
    jne 0x140010fa4
    jmp 0x140010ff9
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 0xd
    and al, 1
    je 0x140010fc8
    mov rcx, qword ptr [rip + 0x1a3da]
    mov rcx, qword ptr [rcx + rdi*8]
    call 0x140016008
    cmp eax, -1
    je 0x140010fc8
    inc dword ptr [rsp + 0x20]
    mov rax, qword ptr [rip + 0x1a3c1]
    mov rcx, qword ptr [rax + rdi*8]
    add rcx, 0x30
    call qword ptr [rip + 0xd0f3]
    mov rcx, qword ptr [rip + 0x1a3ac]
    mov rcx, qword ptr [rcx + rdi*8]
    call 0x1400109a0
    mov rax, qword ptr [rip + 0x1a39c]
    and qword ptr [rax + rdi*8], 0
    inc ebx
    jmp 0x140010f83
    mov ecx, 8
    call 0x140012de4
    mov eax, dword ptr [rsp + 0x20]
    mov rbx, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rdi, r9
    mov rbx, r8
    mov rcx, qword ptr [rdx]
    call 0x14000b7e4
    nop 
    mov rdx, qword ptr [rbx + 8]
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    test rcx, rcx
    je 0x1400110a1
    mov ecx, dword ptr [rcx + 0x14]
    nop 
    mov eax, ecx
    shr eax, 0xd
    and al, 1
    je 0x1400110a1
    mov eax, ecx
    and al, 3
    cmp al, 2
    jne 0x14001105f
    test cl, 0xc0
    jne 0x140011069
    bt ecx, 0xb
    jb 0x140011069
    inc dword ptr [rdx]
    jmp 0x1400110a1
    mov rax, qword ptr [rbx + 0x10]
    cmp byte ptr [rax], 0
    jne 0x140011082
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 1
    and al, 1
    je 0x1400110a1
    mov rcx, qword ptr [rbx]
    mov rcx, qword ptr [rcx]
    call 0x140011284
    cmp eax, -1
    je 0x14001109a
    mov rax, qword ptr [rbx + 8]
    inc dword ptr [rax]
    jmp 0x1400110a1
    mov rax, qword ptr [rbx + 0x18]
    or dword ptr [rax], 0xffffffff
    mov rcx, qword ptr [rdi]
    call 0x14000b7f0
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rsi
    push rdi
    push r14
    sub rsp, 0x60
    mov rdi, r9
    mov rsi, r8
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rbx, qword ptr [rip + 0x1a2b5]
    movsxd rax, dword ptr [rip + 0x1a2a6]
    lea r14, [rbx + rax*8]
    mov qword ptr [rsp + 0x38], rbx
    cmp rbx, r14
    je 0x14001117d
    mov rax, qword ptr [rbx]
    mov qword ptr [rsp + 0x20], rax
    mov rdx, qword ptr [rsi]
    test rax, rax
    je 0x140011126
    mov ecx, dword ptr [rax + 0x14]
    nop 
    mov eax, ecx
    shr eax, 0xd
    and al, 1
    je 0x140011126
    mov eax, ecx
    and al, 3
    cmp al, 2
    jne 0x14001111e
    test cl, 0xc0
    jne 0x14001112c
    bt ecx, 0xb
    jb 0x14001112c
    inc dword ptr [rdx]
    add rbx, 8
    jmp 0x1400110e6
    mov rdx, qword ptr [rsi + 0x10]
    mov rcx, qword ptr [rsi + 8]
    mov rax, qword ptr [rsi]
    lea r8, [rsp + 0x20]
    mov qword ptr [rsp + 0x40], r8
    mov qword ptr [rsp + 0x48], rax
    mov qword ptr [rsp + 0x50], rcx
    mov qword ptr [rsp + 0x58], rdx
    mov rax, qword ptr [rsp + 0x20]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x30], rax
    lea r9, [rsp + 0x28]
    lea r8, [rsp + 0x40]
    lea rdx, [rsp + 0x30]
    lea rcx, [rsp + 0x88]
    call 0x140011018
    jmp 0x140011126
    mov ecx, dword ptr [rdi]
    call 0x140012de4
    mov rbx, qword ptr [rsp + 0x80]
    add rsp, 0x60
    pop r14
    pop rdi
    pop rsi
    ret
    int3 
    int3 
    int3 
    mov byte ptr [rsp + 8], cl
    push rbp
    mov rbp, rsp
    sub rsp, 0x40
    and dword ptr [rbp + 0x28], 0
    lea rax, [rbp + 0x28]
    and dword ptr [rbp + 0x20], 0
    lea r9, [rbp - 0x20]
    mov qword ptr [rbp - 0x18], rax
    lea r8, [rbp - 0x18]
    lea rax, [rbp + 0x10]
    mov qword ptr [rbp - 0x10], rax
    lea rdx, [rbp - 0x1c]
    lea rax, [rbp + 0x20]
    mov qword ptr [rbp - 8], rax
    lea rcx, [rbp + 0x18]
    mov eax, 8
    mov dword ptr [rbp - 0x20], eax
    mov dword ptr [rbp - 0x1c], eax
    call 0x1400110b4
    cmp byte ptr [rbp + 0x10], 0
    mov eax, dword ptr [rbp + 0x20]
    cmovne eax, dword ptr [rbp + 0x28]
    add rsp, 0x40
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rbx, rcx
    mov rbp, rdx
    mov ecx, dword ptr [rcx + 0x14]
    mov eax, ecx
    and al, 3
    nop 
    cmp al, 2
    jne 0x14001126d
    test cl, 0xc0
    je 0x14001126d
    mov edi, dword ptr [rbx]
    sub edi, dword ptr [rbx + 8]
    and dword ptr [rbx + 0x10], 0
    mov rsi, qword ptr [rbx + 8]
    mov qword ptr [rbx], rsi
    test edi, edi
    jle 0x14001126d
    mov rcx, rbx
    call 0x140012b9c
    mov r9, rbp
    mov r8d, edi
    mov rdx, rsi
    mov ecx, eax
    call 0x1400169c8
    cmp edi, eax
    je 0x14001125d
    lock or dword ptr [rbx + 0x14], 0x10
    or eax, 0xffffffff
    jmp 0x14001126f
    mov eax, dword ptr [rbx + 0x14]
    nop 
    shr eax, 2
    test al, 1
    je 0x14001126d
    lock and dword ptr [rbx + 0x14], 0xfffffffd
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rdi
    push rbp
    mov rbp, rsp
    sub rsp, 0x60
    and qword ptr [rbp - 0x40], 0
    mov rbx, rcx
    cmp dword ptr [rip + 0x1a28b], 0
    mov byte ptr [rbp - 0x30], 0
    mov byte ptr [rbp - 0x18], 0
    mov byte ptr [rbp - 0x10], 0
    mov byte ptr [rbp - 8], 0
    jne 0x1400112c7
    movups xmm0, xmmword ptr [rip + 0x1903a]
    mov byte ptr [rbp - 0x18], 1
    movdqu xmmword ptr [rbp - 0x28], xmm0
    test rbx, rbx
    jne 0x1400112d7
    xor ecx, ecx
    call 0x140011198
    mov edi, eax
    jmp 0x140011309
    lea rdx, [rbp - 0x40]
    call 0x1400111f8
    test eax, eax
    je 0x1400112e9
    or edi, 0xffffffff
    jmp 0x140011309
    mov eax, dword ptr [rbx + 0x14]
    nop 
    shr eax, 0xb
    test al, 1
    je 0x140011307
    mov rcx, rbx
    call 0x140012b9c
    mov ecx, eax
    call 0x14001612c
    test eax, eax
    jne 0x1400112e4
    xor edi, edi
    cmp byte ptr [rbp - 0x18], 2
    jne 0x14001131a
    mov rax, qword ptr [rbp - 0x40]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x10], 0
    je 0x14001132f
    mov ebx, dword ptr [rbp - 0x14]
    lea rcx, [rbp - 0x40]
    call 0x14000b1d0
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 8], 0
    je 0x140011344
    mov ebx, dword ptr [rbp - 0xc]
    lea rcx, [rbp - 0x40]
    call 0x14000b1d0
    mov dword ptr [rax + 0x24], ebx
    mov rbx, qword ptr [rsp + 0x70]
    mov eax, edi
    mov rdi, qword ptr [rsp + 0x78]
    add rsp, 0x60
    pop rbp
    ret
    int3 
    int3 
    mov cl, 1
    jmp 0x140011198
    int3 
    push rbx
    sub rsp, 0x20
    mov eax, dword ptr [rcx + 0x14]
    mov rbx, rcx
    shr eax, 0xd
    nop 
    test al, 1
    je 0x14001139c
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 6
    test al, 1
    je 0x14001139c
    mov rcx, qword ptr [rcx + 8]
    call 0x1400109a0
    lock and dword ptr [rbx + 0x14], 0xfffffebf
    xor eax, eax
    mov qword ptr [rbx + 8], rax
    mov qword ptr [rbx], rax
    mov dword ptr [rbx + 0x10], eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x90
    lea rcx, [rax - 0x78]
    call qword ptr [rip + 0xccae]
    xor r14d, r14d
    cmp word ptr [rsp + 0x62], r14w
    je 0x140011473
    mov rax, qword ptr [rsp + 0x68]
    test rax, rax
    je 0x140011473
    movsxd rbx, dword ptr [rax]
    lea rsi, [rax + 4]
    mov edi, 0x2000
    add rbx, rsi
    cmp dword ptr [rax], edi
    cmovl edi, dword ptr [rax]
    mov ecx, edi
    call 0x140014ef8
    cmp edi, dword ptr [rip + 0x1a728]
    cmovg edi, dword ptr [rip + 0x1a721]
    test edi, edi
    je 0x140011473
    mov ebp, r14d
    cmp qword ptr [rbx], -1
    je 0x140011463
    cmp qword ptr [rbx], -2
    je 0x140011463
    test byte ptr [rsi], 1
    je 0x140011463
    test byte ptr [rsi], 8
    jne 0x140011439
    mov rcx, qword ptr [rbx]
    call qword ptr [rip + 0xcd5b]
    test eax, eax
    je 0x140011463
    mov rax, rbp
    lea r8, [rip + 0x1a2ed]
    mov rcx, rbp
    sar rcx, 6
    and eax, 0x3f
    mov rcx, qword ptr [r8 + rcx*8]
    lea rdx, [rax + rax*8]
    mov rax, qword ptr [rbx]
    mov qword ptr [rcx + rdx*8 + 0x28], rax
    mov al, byte ptr [rsi]
    mov byte ptr [rcx + rdx*8 + 0x38], al
    inc rbp
    inc rsi
    add rbx, 8
    sub rdi, 1
    jne 0x140011416
    lea r11, [rsp + 0x90]
    mov rbx, qword ptr [r11 + 0x10]
    mov rbp, qword ptr [r11 + 0x18]
    mov rsi, qword ptr [r11 + 0x20]
    mov rdi, qword ptr [r11 + 0x28]
    mov rsp, r11
    pop r14
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x20
    xor esi, esi
    xor r14d, r14d
    movsxd rcx, esi
    lea rdi, [rip + 0x1a274]
    mov rax, rcx
    and ecx, 0x3f
    sar rax, 6
    lea rbx, [rcx + rcx*8]
    mov rdi, qword ptr [rdi + rax*8]
    mov rax, qword ptr [rdi + rbx*8 + 0x28]
    add rax, 2
    cmp rax, 1
    jbe 0x1400114e7
    or byte ptr [rdi + rbx*8 + 0x38], 0x80
    jmp 0x140011572
    mov byte ptr [rdi + rbx*8 + 0x38], 0x81
    mov ecx, esi
    test esi, esi
    je 0x140011508
    sub ecx, 1
    je 0x140011501
    cmp ecx, 1
    mov ecx, 0xfffffff4
    jmp 0x14001150d
    mov ecx, 0xfffffff5
    jmp 0x14001150d
    mov ecx, 0xfffffff6
    call qword ptr [rip + 0xcc05]
    mov rbp, rax
    lea rcx, [rax + 1]
    cmp rcx, 1
    jbe 0x14001154d
    mov rcx, rax
    call qword ptr [rip + 0xcc67]
    test eax, eax
    je 0x14001154d
    movzx eax, al
    mov qword ptr [rdi + rbx*8 + 0x28], rbp
    cmp eax, 2
    jne 0x140011541
    or byte ptr [rdi + rbx*8 + 0x38], 0x40
    jmp 0x140011572
    cmp eax, 3
    jne 0x140011572
    or byte ptr [rdi + rbx*8 + 0x38], 8
    jmp 0x140011572
    or byte ptr [rdi + rbx*8 + 0x38], 0x40
    mov qword ptr [rdi + rbx*8 + 0x28], 0xfffffffffffffffe
    mov rax, qword ptr [rip + 0x19e2e]
    test rax, rax
    je 0x140011572
    mov rax, qword ptr [r14 + rax]
    mov dword ptr [rax + 0x18], 0xfffffffe
    inc esi
    add r14, 8
    cmp esi, 3
    jne 0x1400114b2
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop r14
    ret
    push rbx
    sub rsp, 0x20
    mov ecx, 7
    call 0x140012d90
    xor ebx, ebx
    xor ecx, ecx
    call 0x140014ef8
    test eax, eax
    jne 0x1400115c5
    call 0x1400113a4
    call 0x140011494
    mov bl, 1
    mov ecx, 7
    call 0x140012de4
    mov al, bl
    add rsp, 0x20
    pop rbx
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    xor ebx, ebx
    lea rdi, [rip + 0x1a145]
    mov rcx, qword ptr [rbx + rdi]
    test rcx, rcx
    je 0x1400115fe
    call 0x140014ea8
    and qword ptr [rbx + rdi], 0
    add rbx, 8
    cmp rbx, 0x400
    jb 0x1400115e4
    mov rbx, qword ptr [rsp + 0x30]
    mov al, 1
    add rsp, 0x20
    pop rdi
    ret
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    cmp rcx, -0x20
    ja 0x140011663
    test rcx, rcx
    mov eax, 1
    cmove rbx, rax
    jmp 0x14001164a
    call 0x14000f9f4
    test eax, eax
    je 0x140011663
    mov rcx, rbx
    call 0x14000eaa8
    test eax, eax
    je 0x140011663
    mov rcx, qword ptr [rip + 0x1a777]
    mov r8, rbx
    xor edx, edx
    call qword ptr [rip + 0xcaf4]
    test rax, rax
    je 0x140011635
    jmp 0x140011670
    call 0x140010908
    mov dword ptr [rax], 0xc
    xor eax, eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    mov eax, dword ptr [rip + 0x189da]
    mov r9, rcx
    cmp eax, 5
    jl 0x14001171d
    mov r8, rcx
    mov eax, 0x20
    and r8d, 0x1f
    sub rax, r8
    neg r8
    sbb r10, r10
    and r10, rax
    mov rax, r9
    cmp rdx, r10
    cmovb r10, rdx
    add rcx, r10
    cmp r9, rcx
    je 0x1400116c1
    cmp byte ptr [rax], 0
    je 0x1400116c1
    inc rax
    cmp rax, rcx
    jne 0x1400116b4
    mov rcx, rax
    sub rcx, r9
    cmp rcx, r10
    jne 0x1400117c4
    mov r8, rdx
    mov rcx, rax
    sub r8, r10
    and r8, 0xffffffffffffffe0
    add r8, rax
    cmp rax, r8
    je 0x140011701
    vpxor xmm1, xmm1, xmm1
    vpcmpeqb ymm1, ymm1, ymmword ptr [rcx]
    vpmovmskb eax, ymm1
    test eax, eax
    vzeroupper 
    jne 0x140011701
    add rcx, 0x20
    cmp rcx, r8
    jne 0x1400116e5
    lea rax, [r9 + rdx]
    jmp 0x140011713
    cmp byte ptr [rcx], 0
    je 0x1400117c1
    inc rcx
    cmp rcx, rax
    jne 0x140011707
    jmp 0x1400117c1
    cmp eax, 1
    jl 0x1400117ab
    and ecx, 0xf
    mov eax, 0x10
    sub rax, rcx
    neg rcx
    sbb r10, r10
    and r10, rax
    mov rax, r9
    cmp rdx, r10
    cmovb r10, rdx
    lea rcx, [r10 + r9]
    cmp r9, rcx
    je 0x14001175a
    cmp byte ptr [rax], 0
    je 0x14001175a
    inc rax
    cmp rax, rcx
    jne 0x14001174d
    mov rcx, rax
    sub rcx, r9
    cmp rcx, r10
    jne 0x1400117c4
    mov r8, rdx
    mov rcx, rax
    sub r8, r10
    xorps xmm1, xmm1
    and r8, 0xfffffffffffffff0
    add r8, rax
    cmp rax, r8
    je 0x140011796
    movdqa xmm0, xmm1
    pcmpeqb xmm0, xmmword ptr [rcx]
    pmovmskb eax, xmm0
    test eax, eax
    jne 0x140011796
    add rcx, 0x10
    cmp rcx, r8
    jne 0x14001177d
    lea rax, [r9 + rdx]
    jmp 0x1400117a4
    cmp byte ptr [rcx], 0
    je 0x1400117c1
    inc rcx
    cmp rcx, rax
    jne 0x14001179c
    jmp 0x1400117c1
    lea rax, [rcx + rdx]
    cmp r9, rax
    je 0x1400117c1
    cmp byte ptr [rcx], 0
    je 0x1400117c1
    inc rcx
    cmp rcx, rax
    jne 0x1400117b4
    sub rcx, r9
    mov rax, rcx
    ret
    mov eax, dword ptr [rip + 0x1888a]
    mov r10, rdx
    mov r8, rcx
    cmp eax, 5
    jl 0x1400118a9
    test r8b, 1
    je 0x14001180c
    lea rax, [rcx + rdx*2]
    mov rdx, rcx
    cmp rcx, rax
    je 0x140011994
    xor ecx, ecx
    cmp word ptr [rdx], cx
    je 0x140011994
    add rdx, 2
    cmp rdx, rax
    jne 0x1400117f5
    jmp 0x140011994
    and ecx, 0x1f
    mov eax, 0x20
    sub rax, rcx
    mov rdx, r8
    neg rcx
    sbb r11, r11
    and r11, rax
    shr r11, 1
    cmp r10, r11
    cmovb r11, r10
    xor ecx, ecx
    lea rax, [r8 + r11*2]
    cmp r8, rax
    je 0x140011846
    cmp word ptr [rdx], cx
    je 0x140011846
    add rdx, 2
    cmp rdx, rax
    jne 0x140011838
    sub rdx, r8
    sar rdx, 1
    cmp rdx, r11
    jne 0x14001199a
    lea r9, [r8 + rdx*2]
    mov rax, r10
    sub rax, r11
    and rax, 0xffffffffffffffe0
    add rax, rdx
    lea rdx, [r8 + rax*2]
    cmp r9, rdx
    je 0x14001188c
    vpxor xmm1, xmm1, xmm1
    vpcmpeqw ymm1, ymm1, ymmword ptr [r9]
    vpmovmskb eax, ymm1
    test eax, eax
    vzeroupper 
    jne 0x14001188c
    add r9, 0x20
    cmp r9, rdx
    jne 0x14001186f
    lea rax, [r8 + r10*2]
    jmp 0x14001189c
    cmp word ptr [r9], cx
    je 0x1400118a1
    add r9, 2
    cmp r9, rax
    jne 0x140011892
    mov rdx, r9
    jmp 0x140011994
    cmp eax, 1
    jl 0x140011978
    test r8b, 1
    je 0x1400118e1
    lea rax, [rcx + rdx*2]
    mov rdx, r8
    cmp r8, rax
    je 0x140011994
    xor ecx, ecx
    cmp word ptr [rdx], cx
    je 0x140011994
    add rdx, 2
    cmp rdx, rax
    jne 0x1400118ca
    jmp 0x140011994
    and ecx, 0xf
    mov eax, 0x10
    sub rax, rcx
    mov rdx, r8
    neg rcx
    sbb r11, r11
    and r11, rax
    shr r11, 1
    cmp r10, r11
    cmovb r11, r10
    xor ecx, ecx
    lea rax, [r8 + r11*2]
    cmp r8, rax
    je 0x14001191b
    cmp word ptr [rdx], cx
    je 0x14001191b
    add rdx, 2
    cmp rdx, rax
    jne 0x14001190d
    sub rdx, r8
    sar rdx, 1
    cmp rdx, r11
    jne 0x14001199a
    mov rax, r10
    lea r9, [r8 + rdx*2]
    sub rax, r11
    xorps xmm1, xmm1
    and rax, 0xfffffffffffffff0
    add rax, rdx
    lea rdx, [r8 + rax*2]
    jmp 0x140011955
    movdqa xmm0, xmm1
    pcmpeqw xmm0, xmmword ptr [r9]
    pmovmskb eax, xmm0
    test eax, eax
    jne 0x14001195a
    add r9, 0x10
    cmp r9, rdx
    jne 0x140011940
    lea rax, [r8 + r10*2]
    jmp 0x14001196e
    cmp word ptr [r9], cx
    je 0x1400118a1
    add r9, 2
    cmp r9, rax
    jne 0x140011960
    jmp 0x1400118a1
    lea rax, [rcx + rdx*2]
    mov rdx, r8
    cmp r8, rax
    je 0x140011994
    xor ecx, ecx
    cmp word ptr [rdx], cx
    je 0x140011994
    add rdx, 2
    cmp rdx, rax
    jne 0x140011986
    sub rdx, r8
    sar rdx, 1
    mov rax, rdx
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rax, qword ptr [rip + 0x19bc3]
    mov rbx, rdx
    cmp qword ptr [rdx], rax
    je 0x1400119cb
    mov eax, dword ptr [rcx + 0x3a8]
    test dword ptr [rip + 0x18f8f], eax
    jne 0x1400119cb
    call 0x1400158b8
    mov qword ptr [rbx], rax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    lea rax, [rip + 0x19b8f]
    mov rbx, rdx
    mov rax, qword ptr [rax + r8*8]
    cmp qword ptr [rdx], rax
    je 0x140011a03
    mov eax, dword ptr [rcx + 0x3a8]
    test dword ptr [rip + 0x18f57], eax
    jne 0x140011a03
    call 0x1400158b8
    mov qword ptr [rbx], rax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rax, qword ptr [rip + 0x1a38f]
    mov rbx, rdx
    cmp qword ptr [rdx], rax
    je 0x140011a37
    mov eax, dword ptr [rcx + 0x3a8]
    test dword ptr [rip + 0x18f23], eax
    jne 0x140011a37
    call 0x140014370
    mov qword ptr [rbx], rax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    lea rax, [rip + 0x1a35b]
    mov rbx, rdx
    mov rax, qword ptr [rax + r8*8]
    cmp qword ptr [rdx], rax
    je 0x140011a6f
    mov eax, dword ptr [rcx + 0x3a8]
    test dword ptr [rip + 0x18eeb], eax
    jne 0x140011a6f
    call 0x140014370
    mov qword ptr [rbx], rax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x50
    mov eax, dword ptr [rsp + 0xa8]
    xor r11d, r11d
    test eax, eax
    mov byte ptr [rdx], r11b
    mov edi, r11d
    mov r10, r9
    cmovns edi, eax
    mov rbx, rdx
    mov r14, rcx
    lea eax, [rdi + 0xb]
    movsxd r9, eax
    cmp r8, r9
    ja 0x140011af0
    mov rcx, qword ptr [rsp + 0xc8]
    lea ebx, [r11 + 0x22]
    mov qword ptr [rsp + 0x28], rcx
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], r11
    xor edx, edx
    mov byte ptr [rcx + 0x30], 1
    mov dword ptr [rcx + 0x2c], ebx
    xor ecx, ecx
    call 0x14000b4f0
    mov eax, ebx
    jmp 0x140011df1
    mov rax, qword ptr [rcx]
    mov ecx, 0x7ff
    shr rax, 0x34
    and rax, rcx
    cmp rax, rcx
    jne 0x140011b89
    mov rax, qword ptr [rsp + 0xc8]
    mov r9, r10
    mov qword ptr [rsp + 0x48], rax
    mov rcx, r14
    mov eax, dword ptr [rsp + 0xc0]
    mov dword ptr [rsp + 0x40], eax
    mov eax, dword ptr [rsp + 0xb8]
    mov dword ptr [rsp + 0x38], eax
    mov rax, qword ptr [rsp + 0xa0]
    mov byte ptr [rsp + 0x30], r11b
    mov dword ptr [rsp + 0x28], edi
    mov qword ptr [rsp + 0x20], rax
    call 0x140011e10
    test eax, eax
    je 0x140011b58
    mov byte ptr [rbx], 0
    jmp 0x140011df1
    mov edx, 0x65
    mov rcx, rbx
    call 0x14001c4ac
    test rax, rax
    je 0x140011def
    mov cl, byte ptr [rsp + 0xb0]
    xor cl, 1
    shl cl, 5
    add cl, 0x50
    mov byte ptr [rax], cl
    mov byte ptr [rax + 3], 0
    jmp 0x140011def
    mov eax, 0x2d
    cmp qword ptr [r14], r11
    jge 0x140011b98
    mov byte ptr [rdx], al
    inc rbx
    mov al, byte ptr [rsp + 0xb0]
    lea r12, [rbx + 1]
    xor al, 1
    mov r15d, 0x3ff
    movzx r13d, al
    mov r8d, 0x30
    mov ebp, r13d
    movabs rax, 0x7ff0000000000000
    shl ebp, 5
    movabs r9, 0xfffffffffffff
    add ebp, 7
    test qword ptr [r14], rax
    jne 0x140011bef
    mov byte ptr [rbx], r8b
    mov rax, qword ptr [r14]
    and rax, r9
    neg rax
    sbb r15, r15
    and r15d, 0x3fe
    jmp 0x140011bf2
    mov byte ptr [rbx], 0x31
    lea rsi, [r12 + 1]
    test edi, edi
    jne 0x140011c00
    mov al, r11b
    jmp 0x140011c37
    mov rbx, qword ptr [rsp + 0xc8]
    cmp byte ptr [rbx + 0x28], r11b
    jne 0x140011c27
    mov rcx, rbx
    call 0x14000e390
    xor r11d, r11d
    movabs r9, 0xfffffffffffff
    lea r8d, [r11 + 0x30]
    mov rax, qword ptr [rbx + 0x18]
    mov rcx, qword ptr [rax + 0xf8]
    mov rax, qword ptr [rcx]
    mov al, byte ptr [rax]
    mov byte ptr [r12], al
    test qword ptr [r14], r9
    jbe 0x140011cce
    movzx edx, r8w
    movabs r10, 0xf000000000000
    movzx ecx, dx
    test edi, edi
    jle 0x140011c85
    mov rax, qword ptr [r14]
    and rax, r10
    and rax, r9
    shr rax, cl
    add ax, r8w
    cmp ax, 0x39
    jbe 0x140011c72
    add ax, bp
    mov byte ptr [rsi], al
    dec edi
    inc rsi
    shr r10, 4
    add dx, -4
    jns 0x140011c52
    jmp 0x140011cce
    mov r9d, dword ptr [rsp + 0xc0]
    movzx r8d, cx
    mov rcx, r14
    mov rdx, r10
    call 0x140012474
    xor r11d, r11d
    test al, al
    je 0x140011cef
    lea rcx, [rsi - 1]
    mov dl, byte ptr [rcx]
    lea eax, [rdx - 0x46]
    test al, 0xdf
    jne 0x140011cb8
    mov byte ptr [rcx], 0x30
    dec rcx
    jmp 0x140011ca7
    cmp rcx, r12
    je 0x140011ccb
    cmp dl, 0x39
    jne 0x140011cc5
    add dl, bpl
    inc dl
    mov byte ptr [rcx], dl
    jmp 0x140011cce
    inc byte ptr [rcx - 1]
    test edi, edi
    jle 0x140011cef
    mov r8d, edi
    mov rcx, rsi
    mov ebx, edi
    mov edi, 0x30
    mov dl, dil
    call 0x14001cd80
    add rsi, rbx
    xor r11d, r11d
    jmp 0x140011cf4
    mov edi, 0x30
    cmp byte ptr [r12], r11b
    cmove rsi, r12
    shl r13b, 5
    add r13b, 0x50
    mov byte ptr [rsi], r13b
    lea r9, [rsi + 2]
    mov rax, qword ptr [r14]
    shr rax, 0x34
    and eax, 0x7ff
    mov ecx, eax
    sub rcx, r15
    mov rdx, rcx
    jns 0x140011d27
    mov rcx, r15
    sub rcx, rax
    test rdx, rdx
    mov eax, 0x2b
    mov r8, r9
    lea edx, [rax + 2]
    cmovs eax, edx
    mov byte ptr [rsi + 1], al
    mov byte ptr [r9], dil
    cmp rcx, 0x3e8
    jl 0x140011d7b
    movabs rax, 0x20c49ba5e353f7cf
    lea r8, [r9 + 1]
    imul rcx
    sar rdx, 7
    mov rax, rdx
    shr rax, 0x3f
    add rdx, rax
    lea eax, [rdi + rdx]
    mov byte ptr [r9], al
    imul rax, rdx, -0x3e8
    add rcx, rax
    cmp r8, r9
    jne 0x140011d81
    cmp rcx, 0x64
    jl 0x140011db4
    movabs rax, 0xa3d70a3d70a3d70b
    imul rcx
    add rdx, rcx
    sar rdx, 6
    mov rax, rdx
    shr rax, 0x3f
    add rdx, rax
    lea eax, [rdi + rdx]
    mov byte ptr [r8], al
    inc r8
    imul rax, rdx, -0x64
    add rcx, rax
    cmp r8, r9
    jne 0x140011dba
    cmp rcx, 0xa
    jl 0x140011de5
    movabs rax, 0x6666666666666667
    imul rcx
    sar rdx, 2
    mov rax, rdx
    shr rax, 0x3f
    add rdx, rax
    lea eax, [rdi + rdx]
    mov byte ptr [r8], al
    inc r8
    imul rax, rdx, -0xa
    add rcx, rax
    add cl, dil
    mov byte ptr [r8], cl
    mov byte ptr [r8 + 1], r11b
    xor eax, eax
    lea r11, [rsp + 0x50]
    mov rbx, qword ptr [r11 + 0x30]
    mov rbp, qword ptr [r11 + 0x40]
    mov rsi, qword ptr [r11 + 0x48]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 8], rbx
    mov qword ptr [r11 + 0x10], rbp
    mov qword ptr [r11 + 0x18], rsi
    mov qword ptr [r11 + 0x20], rdi
    push r14
    sub rsp, 0x50
    mov rax, qword ptr [rsp + 0x80]
    mov rsi, r8
    mov ebp, dword ptr [rsp + 0x88]
    mov rdi, rdx
    mov rcx, qword ptr [rcx]
    mov r8d, 1
    mov qword ptr [r11 - 0x30], rax
    mov qword ptr [r11 - 0x38], r9
    lea r9, [r11 - 0x18]
    lea edx, [rbp + 1]
    call 0x14001746c
    mov r14, qword ptr [rsp + 0xa8]
    lea r8d, [rbp + 1]
    xor r9d, r9d
    mov qword ptr [rsp + 0x30], r14
    cmp dword ptr [rsp + 0x40], 0x2d
    mov r10d, eax
    mov eax, dword ptr [rsp + 0xa0]
    mov rdx, rsi
    sete r9b
    mov dword ptr [rsp + 0x28], eax
    xor ecx, ecx
    mov dword ptr [rsp + 0x20], r10d
    test ebp, ebp
    setg cl
    sub rdx, rcx
    sub rdx, r9
    cmp rsi, -1
    cmove rdx, rsi
    add rcx, r9
    add rcx, rdi
    lea r9, [rsp + 0x40]
    call 0x140016ec0
    test eax, eax
    je 0x140011ebc
    mov byte ptr [rdi], 0
    jmp 0x140011ef1
    mov r9b, byte ptr [rsp + 0x90]
    lea rax, [rsp + 0x40]
    mov qword ptr [rsp + 0x38], r14
    mov r8d, ebp
    mov byte ptr [rsp + 0x30], 0
    mov rdx, rsi
    mov qword ptr [rsp + 0x28], rax
    mov rcx, rdi
    mov eax, dword ptr [rsp + 0x98]
    mov dword ptr [rsp + 0x20], eax
    call 0x140011f0c
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    mov rdi, qword ptr [rsp + 0x78]
    add rsp, 0x50
    pop r14
    ret
    mov r11, rsp
    mov qword ptr [r11 + 8], rbx
    mov qword ptr [r11 + 0x10], rbp
    mov qword ptr [r11 + 0x18], rsi
    mov qword ptr [r11 + 0x20], rdi
    push r13
    push r14
    push r15
    sub rsp, 0x30
    xor eax, eax
    movsxd rbp, r8d
    test r8d, r8d
    mov r13b, r9b
    mov r15, rdx
    mov rdi, rcx
    cmovg eax, ebp
    add eax, 9
    cdqe 
    cmp rdx, rax
    ja 0x140011f94
    mov rcx, qword ptr [rsp + 0x88]
    mov ebx, 0x22
    mov qword ptr [r11 - 0x20], rcx
    xor r9d, r9d
    and qword ptr [r11 - 0x28], 0
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rcx + 0x30], 1
    mov dword ptr [rcx + 0x2c], ebx
    xor ecx, ecx
    call 0x14000b4f0
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    mov rdi, qword ptr [rsp + 0x68]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    ret
    cmp byte ptr [rsp + 0x80], 0
    mov rsi, qword ptr [rsp + 0x78]
    je 0x140011fcd
    xor edx, edx
    cmp dword ptr [rsi], 0x2d
    sete dl
    add rdx, rdi
    test r8d, r8d
    jle 0x140011fcd
    or r8, 0xffffffffffffffff
    inc r8
    cmp byte ptr [rdx + r8], 0
    jne 0x140011fb7
    inc r8
    lea rcx, [rdx + 1]
    call 0x14001c6e0
    cmp dword ptr [rsi], 0x2d
    mov rbx, rdi
    jne 0x140011fdc
    mov byte ptr [rdi], 0x2d
    lea rbx, [rdi + 1]
    test ebp, ebp
    jle 0x140012011
    mov al, byte ptr [rbx + 1]
    mov r14, qword ptr [rsp + 0x88]
    mov byte ptr [rbx], al
    inc rbx
    cmp byte ptr [r14 + 0x28], 0
    jne 0x140011fff
    mov rcx, r14
    call 0x14000e390
    mov rax, qword ptr [r14 + 0x18]
    mov rcx, qword ptr [rax + 0xf8]
    mov rax, qword ptr [rcx]
    mov cl, byte ptr [rax]
    mov byte ptr [rbx], cl
    movzx ecx, byte ptr [rsp + 0x80]
    lea r8, [rip + 0xea0c]
    xor rcx, 1
    add rbx, rbp
    add rbx, rcx
    sub rdi, rbx
    mov rcx, rbx
    cmp r15, -1
    lea rdx, [r15 + rdi]
    cmove rdx, r15
    call 0x14000ffe0
    test eax, eax
    jne 0x1400120d7
    lea rcx, [rbx + 2]
    test r13b, r13b
    je 0x140012055
    mov byte ptr [rbx], 0x45
    mov rax, qword ptr [rsi + 8]
    cmp byte ptr [rax], 0x30
    je 0x1400120b5
    mov r8d, dword ptr [rsi + 4]
    sub r8d, 1
    jns 0x14001206f
    neg r8d
    mov byte ptr [rbx + 1], 0x2d
    cmp r8d, 0x64
    jl 0x140012090
    mov eax, 0x51eb851f
    imul r8d
    sar edx, 5
    mov eax, edx
    shr eax, 0x1f
    add edx, eax
    add byte ptr [rbx + 2], dl
    imul eax, edx, -0x64
    add r8d, eax
    cmp r8d, 0xa
    jl 0x1400120b1
    mov eax, 0x66666667
    imul r8d
    sar edx, 2
    mov eax, edx
    shr eax, 0x1f
    add edx, eax
    add byte ptr [rbx + 3], dl
    imul eax, edx, -0xa
    add r8d, eax
    add byte ptr [rbx + 4], r8b
    cmp dword ptr [rsp + 0x70], 2
    jne 0x1400120d0
    cmp byte ptr [rcx], 0x30
    jne 0x1400120d0
    lea rdx, [rcx + 1]
    mov r8d, 3
    call 0x14001c6e0
    xor eax, eax
    jmp 0x140011f75
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b60c
    int3 
    int3 
    int3 
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 8], rbx
    mov qword ptr [r11 + 0x10], rbp
    mov qword ptr [r11 + 0x18], rsi
    push rdi
    sub rsp, 0x50
    mov rax, qword ptr [rsp + 0x80]
    mov rdi, r8
    mov esi, dword ptr [rsp + 0x88]
    mov rbx, rdx
    mov rcx, qword ptr [rcx]
    xorps xmm0, xmm0
    mov qword ptr [r11 - 0x30], rax
    xor r8d, r8d
    mov qword ptr [r11 - 0x38], r9
    mov edx, esi
    lea r9, [r11 - 0x18]
    movups xmmword ptr [rsp + 0x40], xmm0
    call 0x14001746c
    mov r8d, dword ptr [rsp + 0x44]
    xor r9d, r9d
    cmp dword ptr [rsp + 0x40], 0x2d
    mov r10d, eax
    mov eax, dword ptr [rsp + 0x90]
    mov rdx, rdi
    mov rbp, qword ptr [rsp + 0x98]
    sete r9b
    sub rdx, r9
    mov qword ptr [rsp + 0x30], rbp
    add r8d, esi
    mov dword ptr [rsp + 0x28], eax
    cmp rdi, -1
    mov dword ptr [rsp + 0x20], r10d
    lea rcx, [r9 + rbx]
    cmove rdx, rdi
    lea r9, [rsp + 0x40]
    call 0x140016ec0
    test eax, eax
    je 0x140012193
    mov byte ptr [rbx], 0
    jmp 0x1400121b0
    mov qword ptr [rsp + 0x28], rbp
    lea r9, [rsp + 0x40]
    mov r8d, esi
    mov byte ptr [rsp + 0x20], 0
    mov rdx, rdi
    mov rcx, rbx
    call 0x1400121c8
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x50
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    cmp byte ptr [rsp + 0x60], 0
    mov rbx, rcx
    movsxd rcx, dword ptr [r9 + 4]
    mov r14, r9
    mov ebp, r8d
    je 0x14001220f
    lea eax, [rcx - 1]
    cmp eax, r8d
    jne 0x14001220f
    xor eax, eax
    cmp dword ptr [r9], 0x2d
    sete al
    add rax, rbx
    mov word ptr [rcx + rax - 1], 0x30
    cmp dword ptr [r9], 0x2d
    jne 0x14001221b
    mov byte ptr [rbx], 0x2d
    inc rbx
    movsxd rax, dword ptr [r9 + 4]
    or rdi, 0xffffffffffffffff
    test eax, eax
    jg 0x140012270
    jne 0x140012236
    mov rax, qword ptr [r9 + 8]
    cmp byte ptr [rax], 0x30
    jne 0x140012236
    mov al, 1
    jmp 0x140012238
    xor al, al
    cmp byte ptr [rsp + 0x60], 0
    je 0x140012249
    test al, al
    je 0x140012249
    lea rsi, [rbx + 1]
    jmp 0x140012268
    lea rsi, [rbx + 1]
    mov r8, rdi
    inc r8
    cmp byte ptr [rbx + r8], 0
    jne 0x140012250
    inc r8
    mov rdx, rbx
    mov rcx, rsi
    call 0x14001c6e0
    mov byte ptr [rbx], 0x30
    mov rbx, rsi
    jmp 0x140012273
    add rbx, rax
    test ebp, ebp
    jle 0x140012303
    lea rsi, [rbx + 1]
    mov r8, rdi
    inc r8
    cmp byte ptr [rbx + r8], 0
    jne 0x140012282
    inc r8
    mov rdx, rbx
    mov rcx, rsi
    call 0x14001c6e0
    mov r15, qword ptr [rsp + 0x68]
    cmp byte ptr [r15 + 0x28], 0
    jne 0x1400122ae
    mov rcx, r15
    call 0x14000e390
    mov rax, qword ptr [r15 + 0x18]
    mov rcx, qword ptr [rax + 0xf8]
    mov rax, qword ptr [rcx]
    mov cl, byte ptr [rax]
    mov byte ptr [rbx], cl
    mov eax, dword ptr [r14 + 4]
    test eax, eax
    jns 0x140012303
    neg eax
    cmp byte ptr [rsp + 0x60], 0
    jne 0x1400122d5
    cmp eax, ebp
    jge 0x1400122d7
    mov ebp, eax
    movsxd rbx, ebp
    inc rdi
    cmp byte ptr [rsi + rdi], 0
    jne 0x1400122da
    lea r8, [rdi + 1]
    mov rdx, rsi
    lea rcx, [rbx + rsi]
    call 0x14001c6e0
    mov r8, rbx
    mov edx, 0x30
    mov rcx, rsi
    call 0x14001cd80
    mov rbx, qword ptr [rsp + 0x40]
    xor eax, eax
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    int3 
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 8], rbx
    mov qword ptr [r11 + 0x10], rbp
    mov qword ptr [r11 + 0x18], rdi
    mov qword ptr [r11 + 0x20], r14
    push r15
    sub rsp, 0x50
    mov rax, qword ptr [rsp + 0x80]
    mov rbp, r8
    mov rcx, qword ptr [rcx]
    mov rdi, rdx
    mov edx, dword ptr [rsp + 0x88]
    xorps xmm0, xmm0
    mov qword ptr [r11 - 0x30], rax
    xor r8d, r8d
    mov qword ptr [r11 - 0x38], r9
    lea r9, [r11 - 0x18]
    movups xmmword ptr [rsp + 0x40], xmm0
    call 0x14001746c
    mov r15d, dword ptr [rsp + 0x44]
    xor r8d, r8d
    cmp dword ptr [rsp + 0x40], 0x2d
    mov r9d, eax
    mov eax, dword ptr [rsp + 0xa0]
    mov rdx, rbp
    mov r14, qword ptr [rsp + 0xa8]
    sete r8b
    sub rdx, r8
    mov qword ptr [rsp + 0x30], r14
    mov dword ptr [rsp + 0x28], eax
    dec r15d
    mov dword ptr [rsp + 0x20], r9d
    cmp rbp, -1
    lea rbx, [r8 + rdi]
    mov r8d, dword ptr [rsp + 0x88]
    cmove rdx, rbp
    lea r9, [rsp + 0x40]
    mov rcx, rbx
    call 0x140016ec0
    test eax, eax
    je 0x1400123d4
    mov byte ptr [rdi], 0
    jmp 0x140012457
    mov eax, dword ptr [rsp + 0x44]
    dec eax
    cmp eax, -4
    jl 0x14001241d
    cmp eax, dword ptr [rsp + 0x88]
    jge 0x14001241d
    cmp r15d, eax
    jge 0x1400123f9
    mov al, byte ptr [rbx]
    inc rbx
    test al, al
    jne 0x1400123ed
    mov byte ptr [rbx - 2], al
    mov r8d, dword ptr [rsp + 0x88]
    lea r9, [rsp + 0x40]
    mov qword ptr [rsp + 0x28], r14
    mov rdx, rbp
    mov rcx, rdi
    mov byte ptr [rsp + 0x20], 1
    call 0x1400121c8
    jmp 0x140012457
    mov r9b, byte ptr [rsp + 0x90]
    lea rax, [rsp + 0x40]
    mov r8d, dword ptr [rsp + 0x88]
    mov rdx, rbp
    mov qword ptr [rsp + 0x38], r14
    mov rcx, rdi
    mov byte ptr [rsp + 0x30], 1
    mov qword ptr [rsp + 0x28], rax
    mov eax, dword ptr [rsp + 0x98]
    mov dword ptr [rsp + 0x20], eax
    call 0x140011f0c
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rdi, qword ptr [rsp + 0x70]
    mov r14, qword ptr [rsp + 0x78]
    add rsp, 0x50
    pop r15
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r12
    push r14
    push r15
    sub rsp, 0x20
    mov rbx, qword ptr [rcx]
    movabs r12, 0xfffffffffffff
    and rbx, rdx
    movsx r14d, r8w
    and rbx, r12
    mov rdi, rcx
    mov ecx, r14d
    xor r15d, r15d
    shr rbx, cl
    mov rbp, rdx
    test r9d, r9d
    jne 0x1400124c8
    cmp bx, 8
    setae al
    jmp 0x14001256b
    call 0x140018784
    test eax, eax
    jne 0x140012543
    mov r8, qword ptr [rdi]
    mov ecx, r14d
    mov rax, r8
    and rax, rbp
    and rax, r12
    shr rax, cl
    cmp ax, 8
    jbe 0x1400124f0
    mov edx, 1
    jmp 0x14001253f
    jae 0x1400124f7
    mov dl, r15b
    jmp 0x14001253f
    mov edx, 1
    mov eax, edx
    shl rax, cl
    sub rax, rdx
    and rax, r8
    test r12, rax
    jne 0x14001253f
    cmp r14d, 0x30
    je 0x14001252b
    shr r8, 4
    movabs rax, 0xffffffffffff
    and r8, rbp
    and r8, rax
    shr r8, cl
    jmp 0x14001253c
    movabs rax, 0x7ff0000000000000
    test rax, r8
    setne r8b
    and dl, r8b
    mov al, dl
    jmp 0x14001256b
    cmp eax, 0x200
    jne 0x140012556
    test bx, bx
    je 0x1400124f2
    cmp qword ptr [rdi], r15
    jl 0x1400124f2
    jmp 0x1400124e9
    cmp eax, 0x100
    jne 0x140012569
    test bx, bx
    je 0x1400124f2
    cmp qword ptr [rdi], r15
    jge 0x1400124f2
    jmp 0x1400124e9
    xor al, al
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x20
    pop r15
    pop r14
    pop r12
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x50
    mov r11, r8
    mov r10, rdx
    mov rdi, rcx
    test rdx, rdx
    jne 0x1400125dc
    mov rcx, qword ptr [rsp + 0xa8]
    lea ebx, [rdx + 0x16]
    mov qword ptr [rsp + 0x28], rcx
    mov byte ptr [rcx + 0x30], 1
    mov dword ptr [rcx + 0x2c], ebx
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b4f0
    mov eax, ebx
    jmp 0x14001284b
    test r11, r11
    jne 0x1400125fc
    mov rax, qword ptr [rsp + 0xa8]
    mov ebx, 0x16
    mov qword ptr [rsp + 0x28], rax
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], ebx
    jmp 0x1400125c0
    test r9, r9
    je 0x1400125e1
    mov r8, qword ptr [rsp + 0x80]
    test r8, r8
    je 0x1400125e1
    mov ecx, dword ptr [rsp + 0x88]
    cmp ecx, 0x41
    je 0x140012627
    lea eax, [rcx - 0x45]
    cmp eax, 2
    jbe 0x140012627
    xor sil, sil
    jmp 0x14001262a
    mov sil, 1
    mov rbx, qword ptr [rsp + 0x98]
    test bl, 8
    jne 0x140012721
    mov rdx, qword ptr [rdi]
    mov rax, rdx
    shr rax, 0x34
    and eax, 0x7ff
    cmp rax, 0x7ff
    jne 0x140012721
    movabs rcx, 0xfffffffffffff
    mov rax, rdx
    mov r8d, 0xc
    and rax, rcx
    jne 0x140012672
    xor ecx, ecx
    jmp 0x14001269f
    movabs rcx, 0x8000000000000
    test rdx, rdx
    jns 0x14001268b
    cmp rax, rcx
    jne 0x14001268b
    mov rcx, r8
    jmp 0x14001269f
    mov rax, rdx
    and rax, rcx
    neg rax
    sbb rcx, rcx
    and rcx, 0xfffffffffffffffc
    add rcx, 8
    shr rdx, 0x3f
    lea rax, [rdx + 4]
    cmp r11, rax
    jae 0x1400126b2
    mov byte ptr [r10], 0
    jmp 0x140012719
    or r8, 0xffffffffffffffff
    test dl, dl
    je 0x1400126cd
    mov byte ptr [r10], 0x2d
    inc r10
    mov byte ptr [r10], 0
    cmp r11, r8
    je 0x1400126cd
    dec r11
    movzx edx, sil
    lea rbx, [rip + 0xe288]
    xor edx, 1
    add edx, edx
    mov eax, edx
    add rax, rcx
    mov r9, qword ptr [rbx + rax*8]
    inc r8
    cmp byte ptr [r9 + r8], 0
    jne 0x1400126e6
    xor eax, eax
    cmp r11, r8
    setbe al
    lea r8d, [rdx + rax]
    mov rdx, r11
    add r8, rcx
    mov rcx, r10
    mov r8, qword ptr [rbx + r8*8]
    call 0x14000ffe0
    test eax, eax
    jne 0x14001285b
    xor r8d, r8d
    mov eax, r8d
    jmp 0x14001284b
    mov rdx, rbx
    and bl, 0x20
    shr rdx, 4
    and edx, 1
    or edx, 2
    neg bl
    sbb ebx, ebx
    and ebx, dword ptr [rsp + 0xa0]
    sub ecx, 0x41
    je 0x140012813
    sub ecx, 4
    je 0x1400127d9
    sub ecx, 1
    je 0x1400127a8
    sub ecx, 1
    je 0x14001276b
    sub ecx, 0x1a
    je 0x140012813
    sub ecx, 4
    je 0x1400127d9
    cmp ecx, 1
    je 0x1400127a8
    mov rax, qword ptr [rsp + 0xa8]
    mov rcx, rdi
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rsp + 0x90]
    mov dword ptr [rsp + 0x40], ebx
    mov dword ptr [rsp + 0x38], edx
    mov rdx, r10
    mov byte ptr [rsp + 0x30], sil
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], r8
    mov r8, r11
    call 0x140012320
    jmp 0x14001284b
    mov rax, qword ptr [rsp + 0xa8]
    mov rdx, r10
    mov qword ptr [rsp + 0x38], rax
    mov rcx, rdi
    mov eax, dword ptr [rsp + 0x90]
    mov dword ptr [rsp + 0x30], ebx
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], r8
    mov r8, r11
    call 0x1400120f0
    jmp 0x14001284b
    mov rax, qword ptr [rsp + 0xa8]
    mov rcx, rdi
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rsp + 0x90]
    mov dword ptr [rsp + 0x40], ebx
    mov dword ptr [rsp + 0x38], edx
    mov rdx, r10
    mov byte ptr [rsp + 0x30], sil
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], r8
    mov r8, r11
    call 0x140011e10
    jmp 0x14001284b
    mov rax, qword ptr [rsp + 0xa8]
    mov rcx, rdi
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rsp + 0x90]
    mov dword ptr [rsp + 0x40], ebx
    mov dword ptr [rsp + 0x38], edx
    mov rdx, r10
    mov byte ptr [rsp + 0x30], sil
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], r8
    mov r8, r11
    call 0x140011a78
    mov rbx, qword ptr [rsp + 0x60]
    mov rsi, qword ptr [rsp + 0x68]
    add rsp, 0x50
    pop rdi
    ret
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b60c
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    mov word ptr [rsp + 0x20], r9w
    push rsi
    push rdi
    push r14
    sub rsp, 0x40
    xor ebx, ebx
    mov rbp, r8
    mov r14, rdx
    mov rsi, rcx
    test rdx, rdx
    jne 0x1400128b1
    test r8, r8
    je 0x1400128b1
    test rcx, rcx
    je 0x1400129ce
    mov dword ptr [rcx], ebx
    jmp 0x1400129ce
    test rsi, rsi
    je 0x1400128b9
    or dword ptr [rcx], 0xffffffff
    mov rdi, qword ptr [rsp + 0x80]
    cmp rbp, 0x7fffffff
    jbe 0x1400128d4
    mov esi, 0x16
    jmp 0x1400129fd
    cmp byte ptr [rdi + 0x28], bl
    jne 0x1400128e7
    mov rcx, rdi
    call 0x14000e390
    movzx r9d, word ptr [rsp + 0x78]
    mov rax, qword ptr [rdi + 0x18]
    mov ecx, dword ptr [rax + 0xc]
    cmp ecx, 0xfde9
    jne 0x14001292b
    movzx edx, r9w
    lea r8, [rsp + 0x68]
    mov r9, rdi
    mov qword ptr [rsp + 0x68], rbx
    mov rcx, r14
    call 0x140018798
    test rsi, rsi
    je 0x140012916
    mov dword ptr [rsi], eax
    cmp eax, 4
    jle 0x1400129ce
    cmp byte ptr [rdi + 0x30], bl
    je 0x140012927
    mov ebx, dword ptr [rdi + 0x2c]
    mov eax, ebx
    jmp 0x140012962
    cmp qword ptr [rax + 0x138], rbx
    jne 0x14001298f
    mov eax, 0xff
    cmp r9w, ax
    jbe 0x140012975
    test r14, r14
    je 0x140012956
    test rbp, rbp
    je 0x140012956
    mov r8, rbp
    xor edx, edx
    mov rcx, r14
    call 0x14001cd80
    mov eax, 0x2a
    mov dword ptr [rdi + 0x2c], eax
    mov byte ptr [rdi + 0x30], 1
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x70]
    add rsp, 0x40
    pop r14
    pop rdi
    pop rsi
    ret
    test r14, r14
    je 0x140012982
    test rbp, rbp
    je 0x1400129f8
    mov byte ptr [r14], r9b
    test rsi, rsi
    je 0x1400129ce
    mov dword ptr [rsi], 1
    jmp 0x1400129ce
    lea rax, [rsp + 0x68]
    mov dword ptr [rsp + 0x68], ebx
    mov qword ptr [rsp + 0x38], rax
    lea r8, [rsp + 0x78]
    mov qword ptr [rsp + 0x30], rbx
    mov r9d, 1
    mov dword ptr [rsp + 0x28], ebp
    xor edx, edx
    mov qword ptr [rsp + 0x20], r14
    call 0x140014764
    test eax, eax
    je 0x1400129d2
    cmp dword ptr [rsp + 0x68], ebx
    jne 0x140012956
    test rsi, rsi
    je 0x1400129ce
    mov dword ptr [rsi], eax
    xor eax, eax
    jmp 0x140012962
    call qword ptr [rip + 0xb6d0]
    cmp eax, 0x7a
    jne 0x140012956
    test r14, r14
    je 0x1400129f8
    test rbp, rbp
    je 0x1400129f8
    mov r8, rbp
    xor edx, edx
    mov rcx, r14
    call 0x14001cd80
    mov esi, 0x22
    mov dword ptr [rdi + 0x2c], esi
    xor r9d, r9d
    mov qword ptr [rsp + 0x28], rdi
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rdi + 0x30], 1
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rbx
    call 0x14000b4f0
    mov eax, esi
    jmp 0x140012962
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    xor r14d, r14d
    mov rbx, r9
    mov rbp, r8
    mov rsi, rdx
    mov rdi, rcx
    test rdx, rdx
    je 0x140012b78
    test r8, r8
    je 0x140012b78
    cmp byte ptr [rdx], r14b
    jne 0x140012a75
    test rcx, rcx
    je 0x140012b7f
    mov word ptr [rcx], r14w
    jmp 0x140012b7f
    cmp byte ptr [r9 + 0x28], r14b
    jne 0x140012a83
    mov rcx, rbx
    call 0x14000e390
    mov rdx, qword ptr [rbx + 0x18]
    mov r10d, dword ptr [rdx + 0xc]
    cmp r10d, 0xfde9
    jne 0x140012abb
    lea r9, [rip + 0x1909d]
    mov qword ptr [rsp + 0x20], rbx
    mov r8, rbp
    mov rdx, rsi
    mov rcx, rdi
    call 0x14001883c
    or ecx, 0xffffffff
    test eax, eax
    cmovs eax, ecx
    jmp 0x140012b81
    cmp qword ptr [rdx + 0x138], r14
    jne 0x140012ad8
    test rdi, rdi
    je 0x140012b71
    movzx eax, byte ptr [rsi]
    mov word ptr [rdi], ax
    jmp 0x140012b71
    movzx ecx, byte ptr [rsi]
    mov rax, qword ptr [rdx]
    cmp word ptr [rax + rcx*2], r14w
    jge 0x140012b46
    mov r9d, dword ptr [rdx + 8]
    cmp r9d, 1
    jle 0x140012b1a
    cmp ebp, r9d
    jl 0x140012b1a
    mov eax, r14d
    test rdi, rdi
    mov r8, rsi
    mov edx, 9
    setne al
    mov ecx, r10d
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], rdi
    call 0x1400146d4
    test eax, eax
    jne 0x140012b2d
    mov rax, qword ptr [rbx + 0x18]
    movsxd rcx, dword ptr [rax + 8]
    cmp rbp, rcx
    jb 0x140012b36
    cmp byte ptr [rsi + 1], r14b
    je 0x140012b36
    mov rax, qword ptr [rbx + 0x18]
    mov eax, dword ptr [rax + 8]
    jmp 0x140012b81
    mov byte ptr [rbx + 0x30], 1
    or eax, 0xffffffff
    mov dword ptr [rbx + 0x2c], 0x2a
    jmp 0x140012b81
    mov eax, r14d
    mov r9d, 1
    test rdi, rdi
    mov r8, rsi
    mov ecx, r10d
    setne al
    mov dword ptr [rsp + 0x28], eax
    lea edx, [r9 + 8]
    mov qword ptr [rsp + 0x20], rdi
    call 0x1400146d4
    test eax, eax
    je 0x140012b36
    mov eax, 1
    jmp 0x140012b81
    mov qword ptr [rip + 0x18fb9], r14
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    sub rsp, 0x28
    test rcx, rcx
    jne 0x140012bba
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    or eax, 0xffffffff
    jmp 0x140012bbe
    mov eax, dword ptr [rcx + 0x18]
    nop 
    add rsp, 0x28
    ret
    int3 
    mov rcx, qword ptr [rip + 0x17435]
    xor eax, eax
    or rcx, 1
    cmp qword ptr [rip + 0x18f68], rcx
    sete al
    ret
    sub dword ptr [rdx + 0x10], 1
    js 0x140018b98
    mov rax, qword ptr [rdx]
    mov byte ptr [rax], cl
    inc qword ptr [rdx]
    movzx eax, cl
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov ecx, 2
    call 0x14000b774
    cmp rbx, rax
    je 0x140012c35
    mov ecx, 1
    call 0x14000b774
    cmp rbx, rax
    jne 0x140012c31
    mov rcx, rbx
    call 0x140012b9c
    mov ecx, eax
    call 0x140018c64
    test eax, eax
    setne al
    jmp 0x140012c37
    xor al, al
    jmp 0x140012c37
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, rcx
    call 0x140012bf4
    test al, al
    je 0x140012cfa
    mov ecx, 1
    call 0x14000b774
    cmp rbx, rax
    jne 0x140012c72
    lea rdi, [rip + 0x18ed8]
    jmp 0x140012c88
    mov ecx, 2
    call 0x14000b774
    cmp rbx, rax
    jne 0x140012cfa
    lea rdi, [rip + 0x18ec8]
    inc dword ptr [rip + 0x1870a]
    mov eax, dword ptr [rbx + 0x14]
    nop 
    test eax, 0x4c0
    jne 0x140012cfa
    lock or dword ptr [rbx + 0x14], 0x282
    cmp qword ptr [rdi], 0
    jne 0x140012cbb
    mov ecx, 0x1000
    call 0x140011618
    xor ecx, ecx
    mov qword ptr [rdi], rax
    call 0x1400109a0
    mov rcx, qword ptr [rdi]
    test rcx, rcx
    jne 0x140012ce0
    lea rcx, [rbx + 0x1c]
    mov dword ptr [rbx + 0x10], 2
    mov qword ptr [rbx + 8], rcx
    mov qword ptr [rbx], rcx
    mov dword ptr [rbx + 0x20], 2
    mov al, 1
    jmp 0x140012cfc
    mov qword ptr [rbx + 8], rcx
    mov rax, qword ptr [rdi]
    mov qword ptr [rbx], rax
    mov dword ptr [rbx + 0x10], 0x1000
    mov dword ptr [rbx + 0x20], 0x1000
    jmp 0x140012cdc
    xor al, al
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    test cl, cl
    je 0x140012d44
    push rbx
    sub rsp, 0x20
    mov eax, dword ptr [rdx + 0x14]
    mov rbx, rdx
    shr eax, 9
    nop 
    test al, 1
    je 0x140012d3f
    mov rdx, r8
    mov rcx, rbx
    call 0x1400111f8
    lock and dword ptr [rbx + 0x14], 0xfffffd7f
    and dword ptr [rbx + 0x20], 0
    and qword ptr [rbx + 8], 0
    and qword ptr [rbx], 0
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    xor ebx, ebx
    lea rdx, [rip + 0x18e09]
    xor r8d, r8d
    lea rcx, [rbx + rbx*4]
    lea rcx, [rdx + rcx*8]
    mov edx, 0xfa0
    call 0x140010d40
    test eax, eax
    je 0x140012d81
    inc dword ptr [rip + 0x1901a]
    inc ebx
    cmp ebx, 0xe
    jb 0x140012d50
    mov al, 1
    jmp 0x140012d8a
    xor ecx, ecx
    call 0x140012dac
    xor al, al
    add rsp, 0x20
    pop rbx
    ret
    movsxd rax, ecx
    lea rcx, [rax + rax*4]
    lea rax, [rip + 0x18dc2]
    lea rcx, [rax + rcx*8]
    jmp qword ptr [rip + 0xb317]
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, dword ptr [rip + 0x18fd8]
    jmp 0x140012dd7
    lea rax, [rip + 0x18d9f]
    dec ebx
    lea rcx, [rbx + rbx*4]
    lea rcx, [rax + rcx*8]
    call qword ptr [rip + 0xb2ff]
    dec dword ptr [rip + 0x18fb9]
    test ebx, ebx
    jne 0x140012dba
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    movsxd rax, ecx
    lea rcx, [rax + rax*4]
    lea rax, [rip + 0x18d6e]
    lea rcx, [rax + rcx*8]
    jmp qword ptr [rip + 0xb2cb]
    int3 
    int3 
    int3 
    cmp rcx, rdx
    jae 0x140012e09
    or eax, 0xffffffff
    ret
    xor eax, eax
    cmp rcx, rdx
    seta al
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    xor r14d, r14d
    mov ebp, r9d
    mov rbx, rdx
    mov rdi, rcx
    test rcx, rcx
    jne 0x140012e62
    cmp byte ptr [rdx + 0x28], r14b
    je 0x140012e51
    mov rcx, qword ptr [rdx + 0x10]
    call 0x1400109a0
    mov byte ptr [rbx + 0x28], r14b
    mov qword ptr [rbx + 0x10], r14
    mov qword ptr [rbx + 0x18], r14
    mov qword ptr [rbx + 0x20], r14
    jmp 0x140012f70
    cmp byte ptr [rcx], r14b
    jne 0x140012ebc
    cmp qword ptr [rdx + 0x18], r14
    jne 0x140012eb2
    cmp byte ptr [rdx + 0x28], r14b
    je 0x140012e80
    mov rcx, qword ptr [rdx + 0x10]
    call 0x1400109a0
    mov byte ptr [rbx + 0x28], r14b
    mov ecx, 2
    call 0x140011618
    mov qword ptr [rbx + 0x10], rax
    mov rdx, r14
    neg rax
    sbb eax, eax
    not eax
    and eax, 0xc
    sete dl
    test eax, eax
    sete cl
    mov byte ptr [rbx + 0x28], cl
    mov qword ptr [rbx + 0x18], rdx
    test eax, eax
    jne 0x140012f72
    mov rax, qword ptr [rbx + 0x10]
    mov word ptr [rax], r14w
    jmp 0x140012e59
    or r9d, 0xffffffff
    mov dword ptr [rsp + 0x28], r14d
    mov r8, rdi
    mov qword ptr [rsp + 0x20], r14
    mov ecx, ebp
    lea edx, [r9 + 0xa]
    call 0x1400146d4
    movsxd rsi, eax
    test eax, eax
    jne 0x140012ef5
    call qword ptr [rip + 0xb1c3]
    mov ecx, eax
    call 0x14001087c
    call 0x140010908
    mov eax, dword ptr [rax]
    jmp 0x140012f72
    mov rdx, qword ptr [rbx + 0x18]
    cmp rsi, rdx
    jbe 0x140012f3f
    cmp byte ptr [rbx + 0x28], r14b
    je 0x140012f11
    mov rcx, qword ptr [rbx + 0x10]
    call 0x1400109a0
    mov byte ptr [rbx + 0x28], r14b
    lea rcx, [rsi + rsi]
    call 0x140011618
    mov qword ptr [rbx + 0x10], rax
    mov rdx, r14
    neg rax
    sbb eax, eax
    not eax
    and eax, 0xc
    cmove rdx, rsi
    test eax, eax
    sete cl
    mov byte ptr [rbx + 0x28], cl
    mov qword ptr [rbx + 0x18], rdx
    test eax, eax
    jne 0x140012f72
    mov rax, qword ptr [rbx + 0x10]
    or r9d, 0xffffffff
    mov dword ptr [rsp + 0x28], edx
    mov r8, rdi
    mov ecx, ebp
    mov qword ptr [rsp + 0x20], rax
    lea edx, [r9 + 0xa]
    call 0x1400146d4
    cdqe 
    test rax, rax
    je 0x140012edf
    dec rax
    mov qword ptr [rbx + 0x20], rax
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x40
    xor r14d, r14d
    mov ebp, r9d
    mov rbx, rdx
    mov rdi, rcx
    test rcx, rcx
    jne 0x140012fde
    cmp byte ptr [rdx + 0x28], r14b
    je 0x140012fcd
    mov rcx, qword ptr [rdx + 0x10]
    call 0x1400109a0
    mov byte ptr [rbx + 0x28], r14b
    mov qword ptr [rbx + 0x10], r14
    mov qword ptr [rbx + 0x18], r14
    mov qword ptr [rbx + 0x20], r14
    jmp 0x1400130fe
    cmp word ptr [rcx], r14w
    jne 0x140013038
    cmp qword ptr [rdx + 0x18], r14
    jne 0x14001302f
    cmp byte ptr [rdx + 0x28], r14b
    je 0x140012ffd
    mov rcx, qword ptr [rdx + 0x10]
    call 0x1400109a0
    mov byte ptr [rbx + 0x28], r14b
    mov ecx, 1
    call 0x140011618
    mov qword ptr [rbx + 0x10], rax
    mov rdx, r14
    neg rax
    sbb eax, eax
    not eax
    and eax, 0xc
    sete dl
    test eax, eax
    sete cl
    mov byte ptr [rbx + 0x28], cl
    mov qword ptr [rbx + 0x18], rdx
    test eax, eax
    jne 0x140013100
    mov rax, qword ptr [rbx + 0x10]
    mov byte ptr [rax], r14b
    jmp 0x140012fd5
    mov qword ptr [rsp + 0x38], r14
    or r9d, 0xffffffff
    mov qword ptr [rsp + 0x30], r14
    mov r8, rdi
    mov dword ptr [rsp + 0x28], r14d
    xor edx, edx
    mov ecx, ebp
    mov qword ptr [rsp + 0x20], r14
    call 0x140014764
    movsxd rsi, eax
    test eax, eax
    jne 0x14001307c
    call qword ptr [rip + 0xb03f]
    mov ecx, eax
    call 0x14001087c
    call 0x140010908
    mov eax, dword ptr [rax]
    jmp 0x140013100
    mov rdx, qword ptr [rbx + 0x18]
    cmp rsi, rdx
    jbe 0x1400130c5
    cmp byte ptr [rbx + 0x28], r14b
    je 0x140013098
    mov rcx, qword ptr [rbx + 0x10]
    call 0x1400109a0
    mov byte ptr [rbx + 0x28], r14b
    mov rcx, rsi
    call 0x140011618
    mov qword ptr [rbx + 0x10], rax
    mov rdx, r14
    neg rax
    sbb eax, eax
    not eax
    and eax, 0xc
    cmove rdx, rsi
    test eax, eax
    sete cl
    mov byte ptr [rbx + 0x28], cl
    mov qword ptr [rbx + 0x18], rdx
    test eax, eax
    jne 0x140013100
    mov rax, qword ptr [rbx + 0x10]
    or r9d, 0xffffffff
    mov qword ptr [rsp + 0x38], r14
    mov r8, rdi
    mov qword ptr [rsp + 0x30], r14
    mov ecx, ebp
    mov dword ptr [rsp + 0x28], edx
    xor edx, edx
    mov qword ptr [rsp + 0x20], rax
    call 0x140014764
    cdqe 
    test rax, rax
    je 0x140013063
    dec rax
    mov qword ptr [rbx + 0x20], rax
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    mov rdi, qword ptr [rsp + 0x68]
    add rsp, 0x40
    pop r14
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x50
    xor r15d, r15d
    mov r13, rdx
    mov rbx, rcx
    test rdx, rdx
    jne 0x140013158
    call 0x140010908
    lea ebx, [r13 + 0x16]
    mov dword ptr [rax], ebx
    call 0x14000b5bc
    mov eax, ebx
    jmp 0x14001332f
    xorps xmm0, xmm0
    mov qword ptr [rdx], r15
    mov rax, qword ptr [rcx]
    movdqu xmmword ptr [rbp - 0x20], xmm0
    mov qword ptr [rbp - 0x10], r15
    test rax, rax
    je 0x140013210
    lea rdx, [rbp + 0x48]
    mov word ptr [rbp + 0x48], 0x3f2a
    mov rcx, rax
    mov byte ptr [rbp + 0x4a], r15b
    call 0x140019270
    mov rcx, qword ptr [rbx]
    test rax, rax
    jne 0x1400131cd
    lea r9, [rbp - 0x20]
    xor r8d, r8d
    xor edx, edx
    call 0x140013360
    mov esi, eax
    test eax, eax
    je 0x1400131df
    mov rdi, qword ptr [rbp - 0x20]
    mov rbx, rdi
    cmp rdi, qword ptr [rbp - 0x18]
    je 0x140013293
    mov rcx, qword ptr [rbx]
    call 0x1400109a0
    add rbx, 8
    cmp rbx, qword ptr [rbp - 0x18]
    jne 0x1400131b6
    jmp 0x140013293
    lea r8, [rbp - 0x20]
    mov rdx, rax
    call 0x1400134e4
    mov esi, eax
    test eax, eax
    jne 0x1400131e8
    add rbx, 8
    mov rax, qword ptr [rbx]
    jmp 0x14001316a
    mov rdi, qword ptr [rbp - 0x20]
    mov rbx, rdi
    cmp rdi, qword ptr [rbp - 0x18]
    je 0x140013293
    mov rcx, qword ptr [rbx]
    call 0x1400109a0
    add rbx, 8
    cmp rbx, qword ptr [rbp - 0x18]
    jne 0x1400131f9
    jmp 0x140013293
    mov rdi, qword ptr [rbp - 0x20]
    or r12, 0xffffffffffffffff
    mov rsi, qword ptr [rbp - 0x18]
    mov rdx, r15
    mov r14, rsi
    mov qword ptr [rbp + 0x50], rdx
    sub r14, rdi
    mov rax, rdi
    sar r14, 3
    inc r14
    cmp rdi, rsi
    je 0x14001325a
    mov r8, qword ptr [rax]
    mov rcx, r12
    inc rcx
    cmp byte ptr [r8 + rcx], r15b
    jne 0x14001323e
    inc rdx
    add rax, 8
    add rdx, rcx
    cmp rax, rsi
    jne 0x140013238
    mov qword ptr [rbp + 0x50], rdx
    mov r8d, 1
    mov rcx, r14
    call 0x14000ef24
    mov rbx, rax
    test rax, rax
    jne 0x1400132a2
    xor ecx, ecx
    call 0x1400109a0
    mov rbx, rdi
    cmp rdi, rsi
    je 0x140013290
    mov rcx, qword ptr [rbx]
    call 0x1400109a0
    add rbx, 8
    cmp rbx, rsi
    jne 0x14001327f
    mov esi, r12d
    mov rcx, rdi
    call 0x1400109a0
    mov eax, esi
    jmp 0x14001332f
    lea rcx, [rax + r14*8]
    mov r14, rdi
    mov qword ptr [rbp + 0x58], rcx
    mov r12, rcx
    cmp rdi, rsi
    je 0x140013301
    sub rax, rdi
    mov qword ptr [rbp + 0x48], rax
    mov r8, qword ptr [r14]
    or r15, 0xffffffffffffffff
    inc r15
    cmp byte ptr [r8 + r15], 0
    jne 0x1400132c3
    mov rdx, rcx
    inc r15
    sub rdx, r12
    mov r9, r15
    add rdx, qword ptr [rbp + 0x50]
    mov rcx, r12
    call 0x1400190e0
    test eax, eax
    jne 0x140013347
    mov rax, qword ptr [rbp + 0x48]
    mov rcx, qword ptr [rbp + 0x58]
    mov qword ptr [rax + r14], r12
    add r12, r15
    add r14, 8
    cmp r14, rsi
    jne 0x1400132bc
    xor ecx, ecx
    mov qword ptr [r13], rbx
    call 0x1400109a0
    mov rbx, rdi
    cmp rdi, rsi
    je 0x140013325
    mov rcx, qword ptr [rbx]
    call 0x1400109a0
    add rbx, 8
    cmp rbx, rsi
    jne 0x140013314
    mov rcx, rdi
    call 0x1400109a0
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x90]
    add rsp, 0x50
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b60c
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    or rbp, 0xffffffffffffffff
    mov rsi, r9
    xor edi, edi
    mov r14, r8
    mov r13, rdx
    mov r12, rcx
    inc rbp
    cmp byte ptr [rcx + rbp], dil
    jne 0x14001338e
    mov edx, 1
    mov rax, r14
    add rbp, rdx
    not rax
    cmp rbp, rax
    jbe 0x1400133ca
    lea eax, [rdx + 0xb]
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    lea r15, [r8 + 1]
    add r15, rbp
    mov rcx, r15
    call 0x140010928
    mov rbx, rax
    test r14, r14
    je 0x1400133fa
    mov r9, r14
    mov r8, r13
    mov rdx, r15
    mov rcx, rax
    call 0x1400190e0
    test eax, eax
    jne 0x1400134cf
    sub r15, r14
    lea rcx, [rbx + r14]
    mov rdx, r15
    mov r9, rbp
    mov r8, r12
    call 0x1400190e0
    test eax, eax
    jne 0x1400134cf
    mov r14, qword ptr [rsi + 0x10]
    lea r15d, [rax + 8]
    cmp qword ptr [rsi + 8], r14
    jne 0x1400134b6
    cmp qword ptr [rsi], rdi
    jne 0x140013459
    mov edx, r15d
    lea ecx, [rax + 4]
    call 0x140010928
    xor ecx, ecx
    mov qword ptr [rsi], rax
    call 0x1400109a0
    mov rax, qword ptr [rsi]
    test rax, rax
    je 0x14001348d
    mov qword ptr [rsi + 8], rax
    add rax, 0x20
    mov qword ptr [rsi + 0x10], rax
    jmp 0x1400134b6
    sub r14, qword ptr [rsi]
    movabs rax, 0x7fffffffffffffff
    sar r14, 3
    cmp r14, rax
    ja 0x14001348d
    mov rcx, qword ptr [rsi]
    lea rbp, [r14 + r14]
    mov rdx, rbp
    mov r8, r15
    call 0x140015990
    test rax, rax
    jne 0x14001349c
    xor ecx, ecx
    call 0x1400109a0
    mov rcx, rbx
    mov edi, 0xc
    call 0x1400109a0
    jmp 0x1400134c1
    lea rcx, [rax + r14*8]
    mov qword ptr [rsi], rax
    mov qword ptr [rsi + 8], rcx
    lea rcx, [rax + rbp*8]
    mov qword ptr [rsi + 0x10], rcx
    xor ecx, ecx
    call 0x1400109a0
    mov rcx, qword ptr [rsi + 8]
    mov qword ptr [rcx], rbx
    add qword ptr [rsi + 8], r15
    xor ecx, ecx
    call 0x1400109a0
    mov eax, edi
    jmp 0x1400133ad
    xor r9d, r9d
    mov qword ptr [rsp + 0x20], rdi
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b60c
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    lea rbp, [rsp - 0x240]
    sub rsp, 0x340
    mov rax, qword ptr [rip + 0x16afb]
    xor rax, rsp
    mov qword ptr [rbp + 0x230], rax
    mov r12, r8
    mov rdi, rcx
    movabs rbx, 0x200000000801
    cmp rdx, rcx
    je 0x140013546
    mov al, byte ptr [rdx]
    sub al, 0x2f
    cmp al, 0x2d
    ja 0x140013536
    movsx rax, al
    bt rbx, rax
    jb 0x140013546
    mov rcx, rdi
    call 0x140019638
    mov rdx, rax
    cmp rax, rdi
    jne 0x140013524
    mov r8b, byte ptr [rdx]
    cmp r8b, 0x3a
    jne 0x14001356d
    lea rax, [rdi + 1]
    cmp rdx, rax
    je 0x14001356d
    mov r9, r12
    xor r8d, r8d
    xor edx, edx
    mov rcx, rdi
    call 0x140013360
    jmp 0x140013810
    sub r8b, 0x2f
    xor r14d, r14d
    cmp r8b, 0x2d
    ja 0x140013586
    movsx rax, r8b
    bt rbx, rax
    mov al, 1
    jb 0x140013589
    mov al, r14b
    sub rdx, rdi
    mov qword ptr [rsp + 0x40], r14
    inc rdx
    mov qword ptr [rsp + 0x48], r14
    neg al
    mov qword ptr [rsp + 0x50], r14
    lea rcx, [rsp + 0x70]
    mov qword ptr [rsp + 0x58], r14
    sbb r13, r13
    mov qword ptr [rsp + 0x60], r14
    and r13, rdx
    mov byte ptr [rsp + 0x68], r14b
    xor edx, edx
    mov qword ptr [rsp + 0x38], r13
    call 0x140013834
    mov rax, qword ptr [rsp + 0x78]
    mov ecx, 0xfde9
    cmp dword ptr [rax + 0xc], ecx
    jne 0x1400135ec
    cmp byte ptr [rbp - 0x78], r14b
    je 0x1400135e7
    mov rax, qword ptr [rsp + 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, ecx
    jmp 0x140013624
    call 0x140010bf0
    test eax, eax
    jne 0x14001360f
    cmp byte ptr [rbp - 0x78], r14b
    je 0x140013607
    mov rax, qword ptr [rsp + 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, 1
    jmp 0x140013624
    cmp byte ptr [rbp - 0x78], r14b
    je 0x140013621
    mov rax, qword ptr [rsp + 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, r14d
    lea r8, [rsp + 0x30]
    mov rcx, rdi
    lea rdx, [rsp + 0x40]
    call 0x140012e14
    mov rcx, qword ptr [rsp + 0x50]
    lea r8, [rbp - 0x20]
    test eax, eax
    mov dword ptr [rsp + 0x28], r14d
    mov qword ptr [rsp + 0x20], r14
    cmovne rcx, r14
    xor r9d, r9d
    xor edx, edx
    call qword ptr [rip + 0xab46]
    mov rbx, rax
    cmp rax, -1
    jne 0x14001368d
    mov r9, r12
    xor r8d, r8d
    xor edx, edx
    mov rcx, rdi
    call 0x140013360
    mov ebx, eax
    cmp byte ptr [rsp + 0x68], r14b
    je 0x140013686
    mov rcx, qword ptr [rsp + 0x50]
    call 0x1400109a0
    mov eax, ebx
    jmp 0x140013810
    mov rsi, qword ptr [r12 + 8]
    sub rsi, qword ptr [r12]
    sar rsi, 3
    xor edx, edx
    mov qword ptr [rbp - 0x50], r14
    lea rcx, [rbp - 0x70]
    mov qword ptr [rbp - 0x48], r14
    mov qword ptr [rbp - 0x40], r14
    mov qword ptr [rbp - 0x38], r14
    mov qword ptr [rbp - 0x30], r14
    mov byte ptr [rbp - 0x28], r14b
    call 0x140013834
    mov rax, qword ptr [rbp - 0x68]
    mov ecx, 0xfde9
    cmp dword ptr [rax + 0xc], ecx
    jne 0x1400136e1
    cmp byte ptr [rbp - 0x58], r14b
    je 0x1400136dc
    mov rax, qword ptr [rbp - 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, ecx
    jmp 0x140013717
    call 0x140010bf0
    test eax, eax
    jne 0x140013703
    cmp byte ptr [rbp - 0x58], r14b
    je 0x1400136fb
    mov rax, qword ptr [rbp - 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, 1
    jmp 0x140013717
    cmp byte ptr [rbp - 0x58], r14b
    je 0x140013714
    mov rax, qword ptr [rbp - 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, r14d
    lea r8, [rsp + 0x30]
    lea rdx, [rbp - 0x50]
    lea rcx, [rbp + 0xc]
    call 0x140012f90
    mov r14, qword ptr [rbp - 0x40]
    xor edx, edx
    test eax, eax
    mov rcx, r14
    cmovne rcx, rdx
    cmp byte ptr [rcx], 0x2e
    jne 0x14001375c
    mov al, byte ptr [rcx + 1]
    test al, al
    jne 0x140013753
    cmp byte ptr [rbp - 0x28], dl
    je 0x140013783
    mov rcx, r14
    call 0x1400109a0
    jmp 0x140013783
    cmp al, 0x2e
    jne 0x14001375c
    cmp byte ptr [rcx + 2], dl
    je 0x140013744
    mov r9, r12
    mov r8, r13
    mov rdx, rdi
    call 0x140013360
    mov r13d, eax
    test eax, eax
    jne 0x1400137e5
    cmp byte ptr [rbp - 0x28], al
    je 0x14001377e
    mov rcx, r14
    call 0x1400109a0
    mov r13, qword ptr [rsp + 0x38]
    lea rdx, [rbp - 0x20]
    mov rcx, rbx
    call qword ptr [rip + 0xaa18]
    xor r14d, r14d
    test eax, eax
    jne 0x14001369a
    mov rax, qword ptr [r12]
    mov rdx, qword ptr [r12 + 8]
    sub rdx, rax
    sar rdx, 3
    cmp rsi, rdx
    je 0x1400137c7
    sub rdx, rsi
    lea rcx, [rax + rsi*8]
    lea r9, [rip - 0x9be]
    lea r8d, [r14 + 8]
    call 0x140018cd0
    mov rcx, rbx
    call qword ptr [rip + 0xa9c8]
    cmp byte ptr [rsp + 0x68], r14b
    je 0x1400137e1
    mov rcx, qword ptr [rsp + 0x50]
    call 0x1400109a0
    xor eax, eax
    jmp 0x140013810
    cmp byte ptr [rbp - 0x28], 0
    je 0x1400137f3
    mov rcx, r14
    call 0x1400109a0
    mov rcx, rbx
    call qword ptr [rip + 0xa99c]
    cmp byte ptr [rsp + 0x68], 0
    je 0x14001380d
    mov rcx, qword ptr [rsp + 0x50]
    call 0x1400109a0
    mov eax, r13d
    mov rcx, qword ptr [rbp + 0x230]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0x340
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov byte ptr [rcx + 0x18], 0
    mov rdi, rcx
    lea rsi, [rcx + 8]
    test rdx, rdx
    je 0x140013858
    movups xmm0, xmmword ptr [rdx]
    jmp 0x140013868
    cmp dword ptr [rip + 0x17cd1], 0
    jne 0x14001386e
    movups xmm0, xmmword ptr [rip + 0x16a90]
    movdqu xmmword ptr [rsi], xmm0
    jmp 0x1400138bc
    call 0x1400104d4
    mov qword ptr [rdi], rax
    mov rdx, rsi
    mov rcx, qword ptr [rax + 0x90]
    mov qword ptr [rsi], rcx
    mov rcx, qword ptr [rax + 0x88]
    mov qword ptr [rdi + 0x10], rcx
    mov rcx, rax
    call 0x1400119a0
    mov rcx, qword ptr [rdi]
    lea rdx, [rdi + 0x10]
    call 0x140011a0c
    mov rcx, qword ptr [rdi]
    mov eax, dword ptr [rcx + 0x3a8]
    test al, 2
    jne 0x1400138bc
    or eax, 2
    mov dword ptr [rcx + 0x3a8], eax
    mov byte ptr [rdi + 0x18], 1
    mov rbx, qword ptr [rsp + 0x30]
    mov rax, rdi
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    jmp 0x14001311c
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x40
    xor ebp, ebp
    mov esi, r9d
    mov rbx, rdx
    mov rdi, rcx
    test rcx, rcx
    jne 0x140013917
    cmp byte ptr [rdx + 0x28], bpl
    je 0x140013906
    mov byte ptr [rdx + 0x28], bpl
    mov qword ptr [rdx + 0x10], rbp
    mov qword ptr [rdx + 0x18], rbp
    mov qword ptr [rdx + 0x20], rbp
    jmp 0x1400139da
    cmp word ptr [rcx], bp
    jne 0x140013950
    cmp qword ptr [rdx + 0x18], rbp
    jne 0x140013947
    cmp byte ptr [rdx + 0x28], bpl
    je 0x14001392c
    mov byte ptr [rdx + 0x28], bpl
    call 0x140010908
    mov ecx, 0x22
    mov dword ptr [rax], ecx
    mov eax, ecx
    mov byte ptr [rbx + 0x28], bpl
    mov qword ptr [rbx + 0x18], rbp
    jmp 0x1400139dc
    mov rax, qword ptr [rdx + 0x10]
    mov byte ptr [rax], bpl
    jmp 0x14001390e
    mov qword ptr [rsp + 0x38], rbp
    or r9d, 0xffffffff
    mov qword ptr [rsp + 0x30], rbp
    mov r8, rdi
    mov dword ptr [rsp + 0x28], ebp
    xor edx, edx
    mov ecx, esi
    mov qword ptr [rsp + 0x20], rbp
    call 0x140014764
    movsxd rdx, eax
    test eax, eax
    jne 0x140013990
    call qword ptr [rip + 0xa728]
    mov ecx, eax
    call 0x14001087c
    call 0x140010908
    mov eax, dword ptr [rax]
    jmp 0x1400139dc
    mov rcx, qword ptr [rbx + 0x18]
    cmp rdx, rcx
    jbe 0x1400139a5
    cmp byte ptr [rbx + 0x28], bpl
    je 0x14001392c
    mov byte ptr [rbx + 0x28], bpl
    jmp 0x14001392c
    mov rax, qword ptr [rbx + 0x10]
    or r9d, 0xffffffff
    mov qword ptr [rsp + 0x38], rbp
    mov r8, rdi
    mov qword ptr [rsp + 0x30], rbp
    xor edx, edx
    mov dword ptr [rsp + 0x28], ecx
    mov ecx, esi
    mov qword ptr [rsp + 0x20], rax
    call 0x140014764
    cdqe 
    test rax, rax
    je 0x14001397a
    dec rax
    mov qword ptr [rbx + 0x20], rax
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rdi
    push rbp
    lea rbp, [rsp - 0x1a0]
    sub rsp, 0x2a0
    mov rax, qword ptr [rip + 0x165eb]
    xor rax, rsp
    mov qword ptr [rbp + 0x190], rax
    mov edi, r8d
    mov rbx, rdx
    mov r8d, 0x105
    lea rdx, [rbp - 0x80]
    call qword ptr [rip + 0xa6f3]
    test eax, eax
    jne 0x140013a4d
    call qword ptr [rip + 0xa669]
    mov ecx, eax
    call 0x14001087c
    xor eax, eax
    jmp 0x140013af1
    and qword ptr [rsp + 0x68], 0
    lea rcx, [rsp + 0x28]
    mov rax, rdi
    mov qword ptr [rsp + 0x48], rbx
    xor edx, edx
    mov qword ptr [rsp + 0x50], rax
    mov qword ptr [rsp + 0x60], rax
    mov qword ptr [rsp + 0x58], rbx
    mov byte ptr [rsp + 0x70], 0
    call 0x140013834
    mov rax, qword ptr [rsp + 0x30]
    mov r9d, 0xfde9
    cmp dword ptr [rax + 0xc], r9d
    jne 0x140013aa1
    cmp byte ptr [rsp + 0x40], 0
    je 0x140013ada
    mov rax, qword ptr [rsp + 0x28]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    jmp 0x140013ada
    call 0x140010bf0
    test eax, eax
    jne 0x140013ac4
    cmp byte ptr [rsp + 0x40], al
    je 0x140013abc
    mov rax, qword ptr [rsp + 0x28]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, 1
    jmp 0x140013ada
    cmp byte ptr [rsp + 0x40], 0
    je 0x140013ad7
    mov rax, qword ptr [rsp + 0x28]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    xor r9d, r9d
    lea r8, [rsp + 0x20]
    lea rdx, [rsp + 0x48]
    lea rcx, [rbp - 0x80]
    call 0x1400138d8
    mov eax, dword ptr [rsp + 0x68]
    mov rcx, qword ptr [rbp + 0x190]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x2a0]
    mov rbx, qword ptr [r11 + 0x18]
    mov rdi, qword ptr [r11 + 0x20]
    mov rsp, r11
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x40
    mov rdi, r9
    mov rbx, r8
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rcx + 0x88]
    add rax, 0x18
    mov qword ptr [rsp + 0x58], rax
    mov rcx, qword ptr [rip + 0x18246]
    mov qword ptr [rsp + 0x20], rcx
    test rcx, rcx
    je 0x140013bcb
    test rax, rax
    je 0x140013bbe
    mov r8d, 2
    mov r9d, r8d
    lea edx, [r8 + 0x7e]
    movups xmm0, xmmword ptr [rax]
    movups xmmword ptr [rcx], xmm0
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x60], xmm0
    add rcx, rdx
    movups xmm1, xmmword ptr [rax + 0x70]
    movups xmmword ptr [rcx - 0x10], xmm1
    add rax, rdx
    sub r9, 1
    jne 0x140013b6e
    mov al, byte ptr [rax]
    mov byte ptr [rcx], al
    jmp 0x140013be5
    xor edx, edx
    mov r8d, 0x101
    call 0x14001cd80
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    mov r8d, 2
    lea edx, [r8 + 0x7e]
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rcx + 0x88]
    add rax, 0x119
    mov qword ptr [rsp + 0x28], rax
    mov rcx, qword ptr [rip + 0x1819c]
    mov qword ptr [rsp + 0x30], rcx
    test rcx, rcx
    je 0x140013c6c
    test rax, rax
    je 0x140013c5f
    movups xmm0, xmmword ptr [rax]
    movups xmmword ptr [rcx], xmm0
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x60], xmm0
    add rcx, rdx
    movups xmm1, xmmword ptr [rax + 0x70]
    movups xmmword ptr [rcx - 0x10], xmm1
    add rax, rdx
    sub r8, 1
    jne 0x140013c13
    jmp 0x140013c7c
    xor edx, edx
    mov r8d, 0x100
    call 0x14001cd80
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    mov rax, qword ptr [rbx + 8]
    mov rcx, qword ptr [rax]
    mov rdx, qword ptr [rcx]
    or eax, 0xffffffff
    lock xadd dword ptr [rdx], eax
    cmp eax, 1
    jne 0x140013cad
    mov rax, qword ptr [rbx + 8]
    mov rcx, qword ptr [rax]
    lea rax, [rip + 0x166d0]
    cmp qword ptr [rcx], rax
    je 0x140013cad
    mov rcx, qword ptr [rcx]
    call 0x1400109a0
    mov rax, qword ptr [rbx]
    mov rdx, qword ptr [rax]
    mov rax, qword ptr [rbx + 8]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rdx + 0x88]
    mov qword ptr [rcx], rax
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rcx + 0x88]
    lock inc dword ptr [rax]
    mov ecx, dword ptr [rdi]
    call 0x140012de4
    mov rbx, qword ptr [rsp + 0x50]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x40
    mov ebx, ecx
    xor edx, edx
    lea rcx, [rsp + 0x20]
    call 0x140013834
    and dword ptr [rip + 0x180ad], 0
    cmp ebx, -2
    jne 0x140013d1a
    mov dword ptr [rip + 0x1809e], 1
    call qword ptr [rip + 0xa4a8]
    jmp 0x140013d2f
    cmp ebx, -3
    jne 0x140013d33
    mov dword ptr [rip + 0x18087], 1
    call qword ptr [rip + 0xa489]
    mov ebx, eax
    jmp 0x140013d4a
    cmp ebx, -4
    jne 0x140013d4a
    mov rax, qword ptr [rsp + 0x28]
    mov dword ptr [rip + 0x18069], 1
    mov ebx, dword ptr [rax + 0xc]
    cmp byte ptr [rsp + 0x38], 0
    je 0x140013d5d
    mov rcx, qword ptr [rsp + 0x20]
    and dword ptr [rcx + 0x3a8], 0xfffffffd
    mov eax, ebx
    add rsp, 0x40
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, rcx
    xor edx, edx
    add rcx, 0x18
    mov r8d, 0x101
    call 0x14001cd80
    xor edx, edx
    lea rdi, [rbx + 0xc]
    movzx eax, dx
    lea r9, [rip + 0x165da]
    mov qword ptr [rbx + 4], rdx
    mov r8, rbx
    mov qword ptr [rbx + 0x220], rdx
    lea ecx, [rdx + 6]
    rep stosw word ptr [rdi], ax
    lea rax, [rip + 0x165d7]
    mov edi, edx
    sub r8, rax
    lea rcx, [rdi + r9]
    inc rdi
    mov al, byte ptr [rcx + 0x18]
    mov byte ptr [r8 + rcx + 0x30], al
    cmp rdi, 0x101
    jl 0x140013db6
    lea rax, [rip + 0x166b4]
    sub rbx, rax
    lea rcx, [rdx + r9]
    inc rdx
    mov al, byte ptr [rcx + 0x119]
    mov byte ptr [rbx + rcx + 0x232], al
    cmp rdx, 0x100
    jl 0x140013dd8
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rdi
    push rbp
    lea rbp, [rsp - 0x680]
    sub rsp, 0x780
    mov rax, qword ptr [rip + 0x161df]
    xor rax, rsp
    mov qword ptr [rbp + 0x670], rax
    mov rdi, rcx
    mov ecx, dword ptr [rcx + 4]
    cmp ecx, 0xfde9
    je 0x140013f84
    lea rdx, [rsp + 0x50]
    call qword ptr [rip + 0xa380]
    test eax, eax
    je 0x140013f84
    xor eax, eax
    lea rcx, [rsp + 0x70]
    mov ebx, 0x100
    mov byte ptr [rcx], al
    inc eax
    inc rcx
    cmp eax, ebx
    jb 0x140013e5c
    mov al, byte ptr [rsp + 0x56]
    lea rdx, [rsp + 0x56]
    mov byte ptr [rsp + 0x70], 0x20
    jmp 0x140013e97
    movzx r8d, byte ptr [rdx + 1]
    movzx ecx, al
    jmp 0x140013e8c
    cmp ecx, ebx
    jae 0x140013e91
    mov byte ptr [rsp + rcx + 0x70], 0x20
    inc ecx
    cmp ecx, r8d
    jbe 0x140013e81
    add rdx, 2
    mov al, byte ptr [rdx]
    test al, al
    jne 0x140013e77
    mov eax, dword ptr [rdi + 4]
    lea r8, [rsp + 0x70]
    and dword ptr [rsp + 0x30], 0
    mov r9d, ebx
    mov dword ptr [rsp + 0x28], eax
    mov edx, 1
    lea rax, [rbp + 0x270]
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rax
    call 0x1400153f4
    and dword ptr [rsp + 0x40], 0
    lea r9, [rsp + 0x70]
    mov eax, dword ptr [rdi + 4]
    mov r8d, ebx
    mov rdx, qword ptr [rdi + 0x220]
    xor ecx, ecx
    mov dword ptr [rsp + 0x38], eax
    lea rax, [rbp + 0x70]
    mov dword ptr [rsp + 0x30], ebx
    mov qword ptr [rsp + 0x28], rax
    mov dword ptr [rsp + 0x20], ebx
    call 0x140019a08
    and dword ptr [rsp + 0x40], 0
    lea r9, [rsp + 0x70]
    mov eax, dword ptr [rdi + 4]
    mov r8d, 0x200
    mov rdx, qword ptr [rdi + 0x220]
    xor ecx, ecx
    mov dword ptr [rsp + 0x38], eax
    lea rax, [rbp + 0x170]
    mov dword ptr [rsp + 0x30], ebx
    mov qword ptr [rsp + 0x28], rax
    mov dword ptr [rsp + 0x20], ebx
    call 0x140019a08
    lea r8, [rbp + 0x70]
    sub r8, rdi
    lea r9, [rbp + 0x170]
    sub r9, rdi
    lea rdx, [rbp + 0x270]
    lea rax, [rdi + 0x19]
    test byte ptr [rdx], 1
    je 0x140013f5e
    or byte ptr [rax], 0x10
    mov cl, byte ptr [r8 + rax - 0x19]
    jmp 0x140013f6f
    test byte ptr [rdx], 2
    je 0x140013f6d
    or byte ptr [rax], 0x20
    mov cl, byte ptr [r9 + rax - 0x19]
    jmp 0x140013f6f
    xor cl, cl
    mov byte ptr [rax + 0x100], cl
    add rdx, 2
    inc rax
    sub rbx, 1
    jne 0x140013f4f
    jmp 0x140013fc3
    xor edx, edx
    lea rcx, [rdi + 0x19]
    mov ebx, 0x100
    lea r8d, [rdx - 0x61]
    lea eax, [r8 + 0x20]
    cmp eax, 0x19
    ja 0x140013fa4
    or byte ptr [rcx], 0x10
    lea eax, [rdx + 0x20]
    jmp 0x140013fb4
    cmp r8d, 0x19
    ja 0x140013fb2
    or byte ptr [rcx], 0x20
    lea eax, [rdx - 0x20]
    jmp 0x140013fb4
    xor al, al
    mov byte ptr [rcx + 0x100], al
    inc edx
    inc rcx
    cmp edx, ebx
    jb 0x140013f8f
    mov rcx, qword ptr [rbp + 0x670]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x780]
    mov rbx, qword ptr [r11 + 0x18]
    mov rdi, qword ptr [r11 + 0x20]
    mov rsp, r11
    pop rbp
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rsi
    mov qword ptr [rax + 0x20], r9
    mov qword ptr [rax + 0x18], r8
    push rbp
    push rdi
    push r14
    lea rbp, [rax - 0x188]
    sub rsp, 0x270
    mov r14b, dl
    mov ebx, ecx
    mov rdx, r9
    mov rcx, r8
    call 0x140014258
    mov ecx, ebx
    call 0x140013ce8
    mov rcx, qword ptr [rbp + 0x1a0]
    mov edi, eax
    mov r8, qword ptr [rcx + 0x88]
    cmp eax, dword ptr [r8 + 4]
    jne 0x140014041
    xor eax, eax
    jmp 0x14001423f
    mov ecx, 0x228
    call 0x140011618
    mov rbx, rax
    test rax, rax
    jne 0x140014062
    xor ecx, ecx
    call 0x1400109a0
    or eax, 0xffffffff
    jmp 0x14001423f
    mov rax, qword ptr [rbp + 0x1a0]
    lea rcx, [rsp + 0x40]
    mov edx, 4
    mov r8d, edx
    mov rax, qword ptr [rax + 0x88]
    lea r9d, [rdx + 0x7c]
    movups xmm0, xmmword ptr [rax]
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx], xmm0
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm1, xmmword ptr [rax + 0x70]
    add rax, r9
    movups xmmword ptr [rcx + 0x60], xmm0
    add rcx, r9
    movups xmmword ptr [rcx - 0x10], xmm1
    sub r8, 1
    jne 0x140014081
    movups xmm0, xmmword ptr [rax]
    movups xmm1, xmmword ptr [rax + 0x10]
    mov rax, qword ptr [rax + 0x20]
    movups xmmword ptr [rcx], xmm0
    movups xmmword ptr [rcx + 0x10], xmm1
    mov qword ptr [rcx + 0x20], rax
    mov rcx, rbx
    lea rax, [rsp + 0x40]
    movups xmm0, xmmword ptr [rax]
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx], xmm0
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm1, xmmword ptr [rax + 0x70]
    add rax, r9
    movups xmmword ptr [rcx + 0x60], xmm0
    add rcx, r9
    movups xmmword ptr [rcx - 0x10], xmm1
    sub rdx, 1
    jne 0x1400140e9
    movups xmm0, xmmword ptr [rax]
    movups xmm1, xmmword ptr [rax + 0x10]
    mov rax, qword ptr [rax + 0x20]
    movups xmmword ptr [rcx], xmm0
    movups xmmword ptr [rcx + 0x10], xmm1
    mov qword ptr [rcx + 0x20], rax
    mov ecx, edi
    and dword ptr [rbx], edx
    mov rdx, rbx
    call 0x14001438c
    or edi, 0xffffffff
    mov esi, eax
    cmp eax, edi
    jne 0x140014178
    call 0x140010908
    mov rcx, rbx
    mov dword ptr [rax], 0x16
    call 0x1400109a0
    mov eax, edi
    jmp 0x14001423f
    test r14b, r14b
    jne 0x140014182
    call 0x14000f94c
    mov rax, qword ptr [rbp + 0x1a0]
    mov rcx, qword ptr [rax + 0x88]
    mov eax, edi
    lock xadd dword ptr [rcx], eax
    add eax, edi
    jne 0x1400141b9
    mov rax, qword ptr [rbp + 0x1a0]
    mov rcx, qword ptr [rax + 0x88]
    lea rax, [rip + 0x161c1]
    cmp rcx, rax
    je 0x1400141b9
    call 0x1400109a0
    mov dword ptr [rbx], 1
    mov rax, qword ptr [rbp + 0x1a0]
    mov qword ptr [rax + 0x88], rbx
    mov rax, qword ptr [rbp + 0x1a0]
    mov ecx, dword ptr [rax + 0x3a8]
    test dword ptr [rip + 0x16770], ecx
    jne 0x140014236
    lea rax, [rbp + 0x1a0]
    mov qword ptr [rsp + 0x30], rax
    lea r9, [rsp + 0x24]
    lea rax, [rbp + 0x1a8]
    mov qword ptr [rsp + 0x38], rax
    lea r8, [rsp + 0x30]
    mov eax, 5
    lea rdx, [rsp + 0x28]
    lea rcx, [rsp + 0x20]
    mov dword ptr [rsp + 0x24], eax
    mov dword ptr [rsp + 0x28], eax
    call 0x140013b18
    test r14b, r14b
    je 0x140014236
    mov rax, qword ptr [rbp + 0x1a8]
    mov rcx, qword ptr [rax]
    mov qword ptr [rip + 0x160ca], rcx
    xor ecx, ecx
    call 0x1400109a0
    mov eax, esi
    lea r11, [rsp + 0x270]
    mov rbx, qword ptr [r11 + 0x20]
    mov rsi, qword ptr [r11 + 0x28]
    mov rsp, r11
    pop r14
    pop rdi
    pop rbp
    ret
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rsi, rdx
    mov rdi, rcx
    mov eax, dword ptr [rip + 0x166dd]
    test dword ptr [rcx + 0x3a8], eax
    je 0x14001428e
    cmp qword ptr [rcx + 0x90], 0
    je 0x14001428e
    mov rbx, qword ptr [rcx + 0x88]
    jmp 0x1400142f2
    mov ecx, 5
    call 0x140012d90
    nop 
    mov rbx, qword ptr [rdi + 0x88]
    mov qword ptr [rsp + 0x30], rbx
    cmp rbx, qword ptr [rsi]
    je 0x1400142e8
    test rbx, rbx
    je 0x1400142d1
    or eax, 0xffffffff
    lock xadd dword ptr [rbx], eax
    cmp eax, 1
    jne 0x1400142d1
    lea rax, [rip + 0x160ae]
    mov rcx, qword ptr [rsp + 0x30]
    cmp rcx, rax
    je 0x1400142d1
    call 0x1400109a0
    mov rax, qword ptr [rsi]
    mov qword ptr [rdi + 0x88], rax
    mov qword ptr [rsp + 0x30], rax
    lock inc dword ptr [rax]
    mov rbx, qword ptr [rsp + 0x30]
    mov ecx, 5
    call 0x140012de4
    test rbx, rbx
    je 0x14001430a
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    call 0x140010040
    nop 
    sub rsp, 0x28
    cmp byte ptr [rip + 0x17a99], 0
    jne 0x140014369
    lea rcx, [rip + 0x1638c]
    mov qword ptr [rip + 0x17a75], rcx
    lea rax, [rip + 0x1603e]
    lea rcx, [rip + 0x16267]
    mov qword ptr [rip + 0x17a68], rax
    mov qword ptr [rip + 0x17a51], rcx
    call 0x1400105a8
    lea r9, [rip + 0x17a55]
    mov r8, rax
    mov dl, 1
    mov ecx, 0xfffffffd
    call 0x140013fe8
    mov byte ptr [rip + 0x17a4b], 1
    mov al, 1
    add rsp, 0x28
    ret
    sub rsp, 0x28
    call 0x1400104d4
    lea rdx, [rip + 0x17a28]
    mov rcx, rax
    add rsp, 0x28
    jmp 0x140014258
    mov qword ptr [rsp + 0x18], rbx
    mov qword ptr [rsp + 0x20], rbp
    push rsi
    push rdi
    push r12
    push r14
    push r15
    sub rsp, 0x40
    mov rax, qword ptr [rip + 0x15c57]
    xor rax, rsp
    mov qword ptr [rsp + 0x38], rax
    mov rsi, rdx
    call 0x140013ce8
    xor ebx, ebx
    mov edi, eax
    test eax, eax
    je 0x140014619
    lea r12, [rip + 0x163f4]
    mov r14d, ebx
    mov rax, r12
    lea ebp, [rbx + 1]
    cmp dword ptr [rax], edi
    je 0x140014523
    add r14d, ebp
    add rax, 0x30
    cmp r14d, 5
    jb 0x1400143d5
    cmp edi, 0xfde8
    je 0x14001451b
    movzx ecx, di
    call qword ptr [rip + 0x9db1]
    test eax, eax
    je 0x14001451b
    mov eax, 0xfde9
    cmp edi, eax
    jne 0x140014436
    mov qword ptr [rsi + 4], rax
    mov qword ptr [rsi + 0x220], rbx
    mov dword ptr [rsi + 0x18], ebx
    mov word ptr [rsi + 0x1c], bx
    lea rdi, [rsi + 0xc]
    movzx eax, bx
    mov ecx, 6
    rep stosw word ptr [rdi], ax
    jmp 0x14001460f
    lea rdx, [rsp + 0x20]
    mov ecx, edi
    call qword ptr [rip + 0x9d85]
    test eax, eax
    je 0x14001450f
    lea rcx, [rsi + 0x18]
    xor edx, edx
    mov r8d, 0x101
    call 0x14001cd80
    cmp dword ptr [rsp + 0x20], 2
    mov dword ptr [rsi + 4], edi
    mov qword ptr [rsi + 0x220], rbx
    jne 0x140014505
    lea rcx, [rsp + 0x26]
    cmp byte ptr [rsp + 0x26], bl
    je 0x1400144a8
    cmp byte ptr [rcx + 1], bl
    je 0x1400144a8
    movzx eax, byte ptr [rcx + 1]
    movzx edx, byte ptr [rcx]
    cmp edx, eax
    ja 0x1400144a0
    sub eax, edx
    lea edi, [rdx + 1]
    lea edx, [rax + rbp]
    or byte ptr [rdi + rsi + 0x18], 4
    add edi, ebp
    sub rdx, rbp
    jne 0x140014494
    add rcx, 2
    cmp byte ptr [rcx], bl
    jne 0x14001447c
    lea rax, [rsi + 0x1a]
    mov ecx, 0xfe
    or byte ptr [rax], 8
    add rax, rbp
    sub rcx, rbp
    jne 0x1400144b1
    mov ecx, dword ptr [rsi + 4]
    sub ecx, 0x3a4
    je 0x1400144f5
    sub ecx, 4
    je 0x1400144ec
    sub ecx, 0xd
    je 0x1400144e3
    cmp ecx, ebp
    je 0x1400144da
    mov rax, rbx
    jmp 0x1400144fc
    mov rax, qword ptr [rip + 0xc56f]
    jmp 0x1400144fc
    mov rax, qword ptr [rip + 0xc55e]
    jmp 0x1400144fc
    mov rax, qword ptr [rip + 0xc54d]
    jmp 0x1400144fc
    mov rax, qword ptr [rip + 0xc53c]
    mov qword ptr [rsi + 0x220], rax
    jmp 0x140014507
    mov ebp, ebx
    mov dword ptr [rsi + 8], ebp
    jmp 0x140014422
    cmp dword ptr [rip + 0x1789b], ebx
    jne 0x140014619
    or eax, 0xffffffff
    jmp 0x140014623
    lea rcx, [rsi + 0x18]
    xor edx, edx
    mov r8d, 0x101
    call 0x14001cd80
    mov eax, r14d
    lea r9, [r12 + 0x10]
    lea r11, [rip + 0x1626d]
    mov r14d, 4
    lea r15, [rax + rax*2]
    shl r15, 4
    add r9, r15
    mov rdx, r9
    cmp byte ptr [r9], bl
    je 0x14001459a
    cmp byte ptr [rdx + 1], bl
    je 0x14001459a
    movzx r8d, byte ptr [rdx]
    movzx eax, byte ptr [rdx + 1]
    cmp r8d, eax
    ja 0x140014592
    lea r10d, [r8 + 1]
    cmp r10d, 0x101
    jae 0x140014592
    mov al, byte ptr [r11]
    add r8d, ebp
    or byte ptr [r10 + rsi + 0x18], al
    add r10d, ebp
    movzx eax, byte ptr [rdx + 1]
    cmp r8d, eax
    jbe 0x140014572
    add rdx, 2
    cmp byte ptr [rdx], bl
    jne 0x14001455c
    add r9, 8
    add r11, rbp
    sub r14, rbp
    jne 0x140014554
    mov dword ptr [rsi + 4], edi
    mov dword ptr [rsi + 8], ebp
    sub edi, 0x3a4
    je 0x1400145dd
    sub edi, 4
    je 0x1400145d4
    sub edi, 0xd
    je 0x1400145cb
    cmp edi, ebp
    jne 0x1400145e4
    mov rbx, qword ptr [rip + 0xc487]
    jmp 0x1400145e4
    mov rbx, qword ptr [rip + 0xc476]
    jmp 0x1400145e4
    mov rbx, qword ptr [rip + 0xc465]
    jmp 0x1400145e4
    mov rbx, qword ptr [rip + 0xc454]
    lea rdi, [r12 + 4]
    mov qword ptr [rsi + 0x220], rbx
    add rdi, r15
    lea rdx, [rsi + 0xc]
    mov ecx, 6
    movzx eax, word ptr [rdi]
    lea rdi, [rdi + 2]
    mov word ptr [rdx], ax
    lea rdx, [rdx + 2]
    sub rcx, rbp
    jne 0x1400145fc
    mov rcx, rsi
    call 0x140013e00
    jmp 0x140014621
    mov rcx, rsi
    call 0x140013d68
    xor eax, eax
    mov rcx, qword ptr [rsp + 0x38]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x40]
    mov rbx, qword ptr [r11 + 0x40]
    mov rbp, qword ptr [r11 + 0x48]
    mov rsp, r11
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x40
    mov ebx, edx
    mov edi, r9d
    mov rdx, rcx
    mov esi, r8d
    lea rcx, [rsp + 0x20]
    call 0x140013834
    mov rax, qword ptr [rsp + 0x30]
    movzx edx, bl
    test byte ptr [rdx + rax + 0x19], dil
    jne 0x140014697
    test esi, esi
    je 0x140014693
    mov rax, qword ptr [rsp + 0x28]
    mov rcx, qword ptr [rax]
    movzx eax, word ptr [rcx + rdx*2]
    test esi, eax
    jne 0x140014697
    xor eax, eax
    jmp 0x14001469c
    mov eax, 1
    cmp byte ptr [rsp + 0x38], 0
    je 0x1400146af
    mov rcx, qword ptr [rsp + 0x20]
    and dword ptr [rcx + 0x3a8], 0xfffffffd
    mov rbx, qword ptr [rsp + 0x50]
    mov rsi, qword ptr [rsp + 0x58]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    mov edx, ecx
    mov r9d, 4
    xor ecx, ecx
    xor r8d, r8d
    jmp 0x14001464c
    int3 
    int3 
    mov eax, 0xdeac
    cmp ecx, eax
    ja 0x14001472c
    je 0x140014723
    mov eax, 0xc433
    cmp ecx, eax
    ja 0x140014707
    je 0x140014723
    mov eax, ecx
    sub eax, 0x2a
    je 0x140014723
    sub eax, 0xc402
    je 0x140014723
    sub eax, 1
    je 0x140014723
    sub eax, 1
    je 0x140014723
    cmp eax, 3
    jmp 0x140014721
    mov eax, ecx
    sub eax, 0xc435
    je 0x140014723
    sub eax, 0x1263
    je 0x14001475f
    sub eax, 0x812
    je 0x140014723
    cmp eax, 1
    jne 0x140014725
    xor edx, edx
    jmp qword ptr [rip + 0x9aa4]
    mov eax, ecx
    sub eax, 0xdead
    je 0x140014723
    sub eax, 1
    je 0x140014723
    sub eax, 1
    je 0x140014723
    sub eax, 1
    je 0x140014723
    sub eax, 1
    je 0x140014723
    sub eax, 1
    je 0x140014723
    sub eax, 1
    je 0x140014723
    sub eax, 0x1f35
    je 0x140014723
    cmp eax, 1
    jne 0x140014725
    and edx, 8
    jmp 0x140014725
    mov qword ptr [rsp + 8], rbx
    push rdi
    lea eax, [rcx - 0xfde8]
    mov r11d, r9d
    cmp eax, 1
    mov rbx, r8
    mov eax, 0xdeac
    setbe r10b
    xor edi, edi
    cmp ecx, eax
    ja 0x1400147c9
    je 0x140014802
    mov eax, 0xc433
    cmp ecx, eax
    ja 0x1400147b2
    je 0x140014802
    mov eax, ecx
    sub eax, 0x2a
    je 0x140014802
    sub eax, 0xc402
    je 0x140014802
    sub eax, 1
    je 0x140014802
    sub eax, 1
    je 0x140014802
    cmp eax, 3
    jmp 0x1400147fa
    mov eax, ecx
    sub eax, 0xc435
    je 0x140014802
    sub eax, 0x1263
    je 0x140014802
    sub eax, 0x812
    jmp 0x1400147f5
    mov eax, ecx
    sub eax, 0xdead
    je 0x140014802
    sub eax, 1
    je 0x140014802
    sub eax, 1
    je 0x140014802
    sub eax, 1
    je 0x140014802
    sub eax, 1
    je 0x140014802
    sub eax, 1
    je 0x140014802
    sub eax, 1
    je 0x140014802
    sub eax, 0x1f35
    je 0x140014802
    cmp eax, 1
    je 0x140014802
    btr edx, 7
    jmp 0x140014804
    mov edx, edi
    mov rax, qword ptr [rsp + 0x48]
    test r10b, r10b
    mov r9, qword ptr [rsp + 0x40]
    mov r8, rax
    cmovne r8, rdi
    cmovne r9, rdi
    je 0x140014825
    test rax, rax
    je 0x140014825
    mov dword ptr [rax], edi
    mov qword ptr [rsp + 0x48], r8
    mov r8, rbx
    mov qword ptr [rsp + 0x40], r9
    mov r9d, r11d
    mov rbx, qword ptr [rsp + 0x10]
    pop rdi
    jmp qword ptr [rip + 0x9996]
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x40
    call qword ptr [rip + 0x997d]
    xor esi, esi
    mov rbx, rax
    test rax, rax
    jne 0x140014874
    xor eax, eax
    jmp 0x140014937
    mov rbp, rbx
    cmp word ptr [rax], si
    je 0x140014899
    or rax, 0xffffffffffffffff
    inc rax
    cmp word ptr [rbp + rax*2], si
    jne 0x140014880
    lea rbp, [rbp + rax*2]
    add rbp, 2
    cmp word ptr [rbp], si
    jne 0x14001487c
    mov qword ptr [rsp + 0x38], rsi
    sub rbp, rbx
    mov qword ptr [rsp + 0x30], rsi
    add rbp, 2
    sar rbp, 1
    mov r8, rbx
    mov r9d, ebp
    mov dword ptr [rsp + 0x28], esi
    xor edx, edx
    mov qword ptr [rsp + 0x20], rsi
    xor ecx, ecx
    call 0x140014764
    movsxd r14, eax
    test eax, eax
    jne 0x1400148d7
    mov rcx, rbx
    call qword ptr [rip + 0x9913]
    jmp 0x14001486d
    mov rcx, r14
    call 0x140011618
    mov rdi, rax
    test rax, rax
    jne 0x1400148f0
    xor ecx, ecx
    call 0x1400109a0
    jmp 0x1400148cc
    mov qword ptr [rsp + 0x38], rsi
    mov r9d, ebp
    mov qword ptr [rsp + 0x30], rsi
    mov r8, rbx
    mov dword ptr [rsp + 0x28], r14d
    xor edx, edx
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rdi
    call 0x140014764
    test eax, eax
    jne 0x140014921
    mov rcx, rdi
    call 0x1400109a0
    jmp 0x14001492b
    xor ecx, ecx
    call 0x1400109a0
    mov rsi, rdi
    mov rcx, rbx
    call qword ptr [rip + 0x98b4]
    mov rax, rsi
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    mov rdi, qword ptr [rsp + 0x68]
    add rsp, 0x40
    pop r14
    ret
    int3 
    int3 
    mov qword ptr [rsp + 0x18], rbx
    mov dword ptr [rsp + 0x10], edx
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    xor esi, esi
    mov ebx, edx
    mov r15, rcx
    test rcx, rcx
    jne 0x140014988
    call 0x140010908
    mov dword ptr [rax], 0x16
    jmp 0x140014c7b
    mov edx, 0x3d
    mov rdi, r15
    call 0x14001c5e8
    mov r13, rax
    test rax, rax
    je 0x140014c68
    cmp rax, r15
    je 0x140014c68
    mov r14, qword ptr [rip + 0x16b17]
    cmp r14, qword ptr [rip + 0x16b28]
    mov bpl, byte ptr [rax + 1]
    mov byte ptr [rsp + 0x70], bpl
    jne 0x1400149d5
    mov rcx, r14
    call 0x140014cac
    mov r14, rax
    mov qword ptr [rip + 0x16af3], rax
    mov r12d, 1
    test r14, r14
    jne 0x140014aae
    test ebx, ebx
    je 0x140014a3d
    cmp qword ptr [rip + 0x16ae1], rsi
    je 0x140014a3d
    call 0x14000f3ec
    test rax, rax
    jne 0x140014a19
    call 0x140010908
    mov dword ptr [rax], 0x16
    or rbp, 0xffffffffffffffff
    mov rcx, r15
    call 0x1400109a0
    mov eax, ebp
    jmp 0x140014c7f
    mov r14, qword ptr [rip + 0x16aa8]
    cmp r14, qword ptr [rip + 0x16ab9]
    jne 0x140014aa5
    mov rcx, r14
    call 0x140014cac
    mov r14, rax
    mov qword ptr [rip + 0x16a8d], rax
    jmp 0x140014aa5
    test bpl, bpl
    je 0x140014b5e
    mov edx, 8
    mov rcx, r12
    call 0x140010928
    xor ecx, ecx
    mov qword ptr [rip + 0x16a6c], rax
    call 0x1400109a0
    mov r14, qword ptr [rip + 0x16a60]
    test r14, r14
    je 0x140014a06
    cmp qword ptr [rip + 0x16a5c], rsi
    jne 0x140014aa5
    mov edx, 8
    mov rcx, r12
    call 0x140010928
    xor ecx, ecx
    mov qword ptr [rip + 0x16a44], rax
    call 0x1400109a0
    cmp qword ptr [rip + 0x16a38], rsi
    je 0x140014a06
    mov r14, qword ptr [rip + 0x16a23]
    test r14, r14
    je 0x140014a06
    mov rax, qword ptr [r14]
    mov r12, r13
    sub r12, r15
    mov rbx, r14
    test rax, rax
    je 0x140014af3
    mov r8, r12
    mov rdx, rax
    mov rcx, r15
    call 0x140019ab8
    test eax, eax
    jne 0x140014ae1
    mov rax, qword ptr [rbx]
    cmp byte ptr [r12 + rax], 0x3d
    je 0x140014aea
    cmp byte ptr [r12 + rax], sil
    je 0x140014aea
    add rbx, 8
    mov rax, qword ptr [rbx]
    jmp 0x140014aba
    sub rbx, r14
    sar rbx, 3
    jmp 0x140014afd
    sub rbx, r14
    sar rbx, 3
    neg rbx
    test rbx, rbx
    js 0x140014b59
    cmp qword ptr [r14], rsi
    je 0x140014b59
    mov rcx, qword ptr [r14 + rbx*8]
    call 0x1400109a0
    test bpl, bpl
    je 0x140014b2a
    mov qword ptr [r14 + rbx*8], r15
    jmp 0x140014bb9
    mov rax, qword ptr [r14 + rbx*8 + 8]
    mov qword ptr [r14 + rbx*8], rax
    inc rbx
    cmp qword ptr [r14 + rbx*8], rsi
    jne 0x140014b1e
    mov r8d, 8
    mov rdx, rbx
    mov rcx, r14
    call 0x140015990
    xor ecx, ecx
    mov rbx, rax
    call 0x1400109a0
    test rbx, rbx
    je 0x140014bbc
    mov qword ptr [rip + 0x16971], rbx
    jmp 0x140014bbc
    test bpl, bpl
    jne 0x140014b65
    mov ebp, esi
    jmp 0x140014a0a
    neg rbx
    lea rdx, [rbx + 2]
    cmp rdx, rbx
    jb 0x140014a06
    movabs rax, 0x1fffffffffffffff
    cmp rdx, rax
    jae 0x140014a06
    mov r8d, 8
    mov rcx, r14
    call 0x140015990
    xor ecx, ecx
    mov r14, rax
    call 0x1400109a0
    test r14, r14
    je 0x140014a06
    mov qword ptr [r14 + rbx*8], r15
    mov qword ptr [r14 + rbx*8 + 8], rsi
    mov qword ptr [rip + 0x1690f], r14
    mov rdi, rsi
    cmp dword ptr [rsp + 0x78], esi
    je 0x140014c5c
    or rbp, 0xffffffffffffffff
    mov r14, rbp
    inc r14
    cmp byte ptr [r15 + r14], sil
    jne 0x140014bcd
    mov edx, 1
    lea rcx, [r14 + 2]
    call 0x140010928
    mov rbx, rax
    test rax, rax
    jne 0x140014bf5
    xor ecx, ecx
    call 0x1400109a0
    jmp 0x140014c48
    mov r8, r15
    lea rdx, [r14 + 2]
    mov rcx, rbx
    call 0x14000ffe0
    test eax, eax
    jne 0x140014c97
    mov rax, rbx
    lea rcx, [r13 + 1]
    sub rax, r15
    add rcx, rax
    neg byte ptr [rsp + 0x70]
    sbb rdx, rdx
    mov byte ptr [rax + r13], sil
    and rdx, rcx
    mov rcx, rbx
    call 0x140019bd0
    test eax, eax
    jne 0x140014c54
    call 0x140010908
    mov rcx, rbx
    mov dword ptr [rax], 0x2a
    call 0x1400109a0
    mov esi, ebp
    mov rcx, rdi
    call 0x1400109a0
    mov eax, esi
    jmp 0x140014c7f
    mov rcx, rbx
    call 0x1400109a0
    mov rcx, rdi
    call 0x1400109a0
    xor eax, eax
    jmp 0x140014c7f
    call 0x140010908
    mov rcx, r15
    mov dword ptr [rax], 0x16
    call 0x1400109a0
    or rax, 0xffffffffffffffff
    mov rbx, qword ptr [rsp + 0x80]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    xor r9d, r9d
    mov qword ptr [rsp + 0x20], rsi
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b60c
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x30
    mov rdi, rcx
    test rcx, rcx
    jne 0x140014ce1
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    mov rdi, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop r14
    ret
    xor ecx, ecx
    mov rax, rdi
    cmp qword ptr [rdi], rcx
    je 0x140014cf8
    inc rcx
    lea rax, [rax + 8]
    cmp qword ptr [rax], 0
    jne 0x140014ceb
    inc rcx
    mov edx, 8
    call 0x140010928
    mov rbx, rax
    test rax, rax
    je 0x140014d8b
    mov rax, qword ptr [rdi]
    test rax, rax
    je 0x140014d66
    mov r14, rbx
    sub r14, rdi
    or rsi, 0xffffffffffffffff
    inc rsi
    cmp byte ptr [rax + rsi], 0
    jne 0x140014d1f
    mov edx, 1
    lea rcx, [rsi + 1]
    call 0x140010928
    xor ecx, ecx
    mov qword ptr [r14 + rdi], rax
    call 0x1400109a0
    mov rcx, qword ptr [r14 + rdi]
    test rcx, rcx
    je 0x140014d8b
    mov r8, qword ptr [rdi]
    lea rdx, [rsi + 1]
    call 0x14000ffe0
    test eax, eax
    jne 0x140014d75
    add rdi, 8
    mov rax, qword ptr [rdi]
    test rax, rax
    jne 0x140014d1b
    xor ecx, ecx
    call 0x1400109a0
    mov rax, rbx
    jmp 0x140014ccb
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b60c
    int3 
    call 0x140010040
    int3 
    int3 
    int3 
    int3 
    jmp 0x140014954
    int3 
    int3 
    int3 
    mov rax, qword ptr gs:[0x30]
    mov rcx, qword ptr [rax + 0x60]
    mov eax, dword ptr [rcx + 0xbc]
    shr eax, 8
    and al, 1
    ret
    int3 
    int3 
    int3 
    mov rax, qword ptr gs:[0x30]
    mov rcx, qword ptr [rax + 0x60]
    mov rax, qword ptr [rcx + 0x20]
    mov eax, dword ptr [rax + 8]
    shr eax, 0x1f
    ret
    push rbx
    sub rsp, 0x20
    xor ebx, ebx
    mov dword ptr [rsp + 0x30], ebx
    call 0x140014db8
    test al, al
    jne 0x140014def
    lea rcx, [rsp + 0x30]
    call 0x140010b98
    cmp dword ptr [rsp + 0x30], 1
    setne bl
    mov eax, ebx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov edx, 0x48
    lea ecx, [rdx - 8]
    call 0x140010928
    xor esi, esi
    mov rbx, rax
    test rax, rax
    je 0x140014e86
    lea rbp, [rax + 0x1200]
    cmp rax, rbp
    je 0x140014e83
    lea rdi, [rax + 0x30]
    lea rcx, [rdi - 0x30]
    xor r8d, r8d
    mov edx, 0xfa0
    call 0x140010d40
    or qword ptr [rdi - 8], 0xffffffffffffffff
    lea rcx, [rdi + 0xe]
    and byte ptr [rdi + 0xd], 0xf8
    mov eax, esi
    mov qword ptr [rdi], rsi
    mov dword ptr [rdi + 8], 0xa0a0000
    mov byte ptr [rdi + 0xc], 0xa
    mov byte ptr [rcx], sil
    inc eax
    inc rcx
    cmp eax, 5
    jb 0x140014e69
    add rdi, 0x48
    lea rax, [rdi - 0x30]
    cmp rax, rbp
    jne 0x140014e3b
    mov rsi, rbx
    xor ecx, ecx
    call 0x1400109a0
    mov rbx, qword ptr [rsp + 0x30]
    mov rax, rsi
    mov rsi, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    test rcx, rcx
    je 0x140014ef7
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    lea rsi, [rcx + 0x1200]
    mov rbx, rcx
    mov rdi, rcx
    cmp rcx, rsi
    je 0x140014ee0
    mov rcx, rdi
    call qword ptr [rip + 0x91f9]
    add rdi, 0x48
    cmp rdi, rsi
    jne 0x140014ece
    mov rcx, rbx
    call 0x1400109a0
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r15
    sub rsp, 0x30
    mov esi, ecx
    cmp ecx, 0x2000
    jb 0x140014f40
    call 0x140010908
    mov ebx, 9
    mov dword ptr [rax], ebx
    call 0x14000b5bc
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    mov rdi, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop r15
    ret
    xor edi, edi
    lea ecx, [rdi + 7]
    call 0x140012d90
    nop 
    mov ebx, edi
    mov eax, dword ptr [rip + 0x16bdd]
    mov qword ptr [rsp + 0x20], rbx
    cmp esi, eax
    jl 0x140014f92
    lea r15, [rip + 0x167cd]
    cmp qword ptr [r15 + rbx*8], rdi
    je 0x140014f6b
    jmp 0x140014f8d
    call 0x140014e00
    mov qword ptr [r15 + rbx*8], rax
    test rax, rax
    jne 0x140014f7e
    lea edi, [rax + 0xc]
    jmp 0x140014f92
    mov eax, dword ptr [rip + 0x16bac]
    add eax, 0x40
    mov dword ptr [rip + 0x16ba3], eax
    inc rbx
    jmp 0x140014f53
    mov ecx, 7
    call 0x140012de4
    mov eax, edi
    jmp 0x140014f2a
    movsxd rdx, ecx
    lea r8, [rip + 0x16786]
    mov rax, rdx
    and edx, 0x3f
    sar rax, 6
    lea rcx, [rdx + rdx*8]
    mov rax, qword ptr [r8 + rax*8]
    lea rcx, [rax + rcx*8]
    jmp qword ptr [rip + 0x90f9]
    int3 
    movsxd rdx, ecx
    lea r8, [rip + 0x1675e]
    mov rax, rdx
    and edx, 0x3f
    sar rax, 6
    lea rcx, [rdx + rdx*8]
    mov rax, qword ptr [r8 + rax*8]
    lea rcx, [rax + rcx*8]
    jmp qword ptr [rip + 0x90d9]
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x20
    movsxd rbx, ecx
    test ecx, ecx
    js 0x14001507e
    cmp ebx, dword ptr [rip + 0x16b1e]
    jae 0x14001507e
    mov rax, rbx
    lea r14, [rip + 0x16712]
    and eax, 0x3f
    mov rsi, rbx
    shr rsi, 6
    lea rdi, [rax + rax*8]
    mov rax, qword ptr [r14 + rsi*8]
    test byte ptr [rax + rdi*8 + 0x38], 1
    je 0x14001507e
    cmp qword ptr [rax + rdi*8 + 0x28], -1
    je 0x14001507e
    call 0x14000ecc0
    cmp eax, 1
    jne 0x140015070
    test ebx, ebx
    je 0x140015063
    sub ebx, eax
    je 0x14001505c
    cmp ebx, eax
    jne 0x140015070
    mov ecx, 0xfffffff4
    jmp 0x140015068
    mov ecx, 0xfffffff5
    jmp 0x140015068
    mov ecx, 0xfffffff6
    xor edx, edx
    call qword ptr [rip + 0x9188]
    mov rax, qword ptr [r14 + rsi*8]
    or qword ptr [rax + rdi*8 + 0x28], 0xffffffffffffffff
    xor eax, eax
    jmp 0x140015094
    call 0x140010908
    mov dword ptr [rax], 9
    call 0x1400108e8
    and dword ptr [rax], 0
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    mov rdi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop r14
    ret
    int3 
    int3 
    sub rsp, 0x28
    cmp ecx, -2
    jne 0x1400150ca
    call 0x1400108e8
    and dword ptr [rax], 0
    call 0x140010908
    mov dword ptr [rax], 9
    jmp 0x140015118
    test ecx, ecx
    js 0x140015100
    cmp ecx, dword ptr [rip + 0x16a5c]
    jae 0x140015100
    movsxd rcx, ecx
    lea r8, [rip + 0x16650]
    mov rax, rcx
    and ecx, 0x3f
    shr rax, 6
    lea rdx, [rcx + rcx*8]
    mov rax, qword ptr [r8 + rax*8]
    test byte ptr [rax + rdx*8 + 0x38], 1
    je 0x140015100
    mov rax, qword ptr [rax + rdx*8 + 0x28]
    jmp 0x14001511c
    call 0x1400108e8
    and dword ptr [rax], 0
    call 0x140010908
    mov dword ptr [rax], 9
    call 0x14000b5bc
    or rax, 0xffffffffffffffff
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    mov eax, dword ptr [rip + 0x16c8e]
    mov ecx, 0x4000
    test eax, eax
    cmove eax, ecx
    mov dword ptr [rip + 0x16c7e], eax
    xor eax, eax
    ret
    int3 
    int3 
    int3 
    test rcx, rcx
    je 0x140015249
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov rcx, qword ptr [rcx + 0x18]
    cmp rcx, qword ptr [rip + 0x1576c]
    je 0x140015163
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x20]
    cmp rcx, qword ptr [rip + 0x15762]
    je 0x140015175
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x28]
    cmp rcx, qword ptr [rip + 0x15758]
    je 0x140015187
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x30]
    cmp rcx, qword ptr [rip + 0x1574e]
    je 0x140015199
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x38]
    cmp rcx, qword ptr [rip + 0x15744]
    je 0x1400151ab
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x40]
    cmp rcx, qword ptr [rip + 0x1573a]
    je 0x1400151bd
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x48]
    cmp rcx, qword ptr [rip + 0x15730]
    je 0x1400151cf
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x68]
    cmp rcx, qword ptr [rip + 0x1573e]
    je 0x1400151e1
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x70]
    cmp rcx, qword ptr [rip + 0x15734]
    je 0x1400151f3
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x78]
    cmp rcx, qword ptr [rip + 0x1572a]
    je 0x140015205
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x80]
    cmp rcx, qword ptr [rip + 0x1571d]
    je 0x14001521a
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x88]
    cmp rcx, qword ptr [rip + 0x15710]
    je 0x14001522f
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x90]
    cmp rcx, qword ptr [rip + 0x15703]
    je 0x140015244
    call 0x1400109a0
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    test rcx, rcx
    je 0x1400152b7
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov rcx, qword ptr [rcx]
    cmp rcx, qword ptr [rip + 0x1564d]
    je 0x14001526a
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 8]
    cmp rcx, qword ptr [rip + 0x15643]
    je 0x14001527c
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x10]
    cmp rcx, qword ptr [rip + 0x15639]
    je 0x14001528e
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x58]
    cmp rcx, qword ptr [rip + 0x1566f]
    je 0x1400152a0
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x60]
    cmp rcx, qword ptr [rip + 0x15665]
    je 0x1400152b2
    call 0x1400109a0
    add rsp, 0x20
    pop rbx
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    lea rdi, [rcx + rdx*8]
    mov rbx, rcx
    cmp rcx, rdi
    je 0x1400152df
    mov rcx, qword ptr [rbx]
    call 0x1400109a0
    add rbx, 8
    cmp rbx, rdi
    jne 0x1400152ce
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    test rcx, rcx
    je 0x1400153f3
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    push rsi
    sub rsp, 0x20
    mov ebp, 7
    mov rbx, rcx
    mov edx, ebp
    call 0x1400152b8
    lea rcx, [rbx + 0x38]
    mov edx, ebp
    call 0x1400152b8
    lea esi, [rbp + 5]
    mov edx, esi
    lea rcx, [rbx + 0x70]
    call 0x1400152b8
    lea rcx, [rbx + 0xd0]
    mov edx, esi
    call 0x1400152b8
    lea rcx, [rbx + 0x130]
    lea edx, [rbp - 5]
    call 0x1400152b8
    mov rcx, qword ptr [rbx + 0x140]
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x148]
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x150]
    call 0x1400109a0
    lea rcx, [rbx + 0x160]
    mov edx, ebp
    call 0x1400152b8
    lea rcx, [rbx + 0x198]
    mov edx, ebp
    call 0x1400152b8
    lea rcx, [rbx + 0x1d0]
    mov edx, esi
    call 0x1400152b8
    lea rcx, [rbx + 0x230]
    mov edx, esi
    call 0x1400152b8
    lea rcx, [rbx + 0x290]
    lea edx, [rbp - 5]
    call 0x1400152b8
    mov rcx, qword ptr [rbx + 0x2a0]
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x2a8]
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x2b0]
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x2b8]
    call 0x1400109a0
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rsi
    ret
    push rbp
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x60
    lea rbp, [rsp + 0x30]
    mov qword ptr [rbp + 0x60], rbx
    mov qword ptr [rbp + 0x68], rsi
    mov qword ptr [rbp + 0x70], rdi
    mov rax, qword ptr [rip + 0x14be6]
    xor rax, rbp
    mov qword ptr [rbp + 0x28], rax
    mov r13d, edx
    mov r15d, r9d
    mov rdx, rcx
    mov r12, r8
    lea rcx, [rbp + 8]
    call 0x140013834
    mov edi, dword ptr [rbp + 0x88]
    test edi, edi
    jne 0x140015447
    mov rax, qword ptr [rbp + 0x10]
    mov edi, dword ptr [rax + 0xc]
    neg dword ptr [rbp + 0x90]
    mov r9d, r15d
    mov r8, r12
    mov ecx, edi
    sbb edx, edx
    and dword ptr [rsp + 0x28], 0
    and qword ptr [rsp + 0x20], 0
    and edx, 8
    inc edx
    call 0x1400146d4
    movsxd r14, eax
    test eax, eax
    jne 0x14001547a
    xor edi, edi
    jmp 0x14001554a
    mov rsi, r14
    add rsi, rsi
    lea rax, [rsi + 0x10]
    cmp rsi, rax
    sbb rcx, rcx
    and rcx, rax
    je 0x140015530
    cmp rcx, 0x400
    ja 0x1400154cd
    lea rax, [rcx + 0xf]
    cmp rax, rcx
    ja 0x1400154af
    movabs rax, 0xffffffffffffff0
    and rax, 0xfffffffffffffff0
    call 0x14001c390
    sub rsp, rax
    lea rbx, [rsp + 0x30]
    test rbx, rbx
    je 0x140015532
    mov dword ptr [rbx], 0xcccc
    jmp 0x1400154e0
    call 0x140011618
    mov rbx, rax
    test rax, rax
    je 0x1400154e4
    mov dword ptr [rax], 0xdddd
    add rbx, 0x10
    test rbx, rbx
    je 0x140015532
    mov r8, rsi
    xor edx, edx
    mov rcx, rbx
    call 0x14001cd80
    mov r9d, r15d
    mov dword ptr [rsp + 0x28], r14d
    mov r8, r12
    mov qword ptr [rsp + 0x20], rbx
    mov edx, 1
    mov ecx, edi
    call 0x1400146d4
    test eax, eax
    je 0x140015532
    mov r9, qword ptr [rbp + 0x80]
    mov r8d, eax
    mov rdx, rbx
    mov ecx, r13d
    call qword ptr [rip + 0x8cd4]
    mov edi, eax
    jmp 0x140015539
    xor ebx, ebx
    xor edi, edi
    test rbx, rbx
    je 0x14001554a
    lea rcx, [rbx - 0x10]
    cmp dword ptr [rcx], 0xdddd
    jne 0x14001554a
    call 0x1400109a0
    cmp byte ptr [rbp + 0x20], 0
    je 0x14001555b
    mov rax, qword ptr [rbp + 8]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov eax, edi
    mov rcx, qword ptr [rbp + 0x28]
    xor rcx, rbp
    call 0x140004a50
    mov rbx, qword ptr [rbp + 0x60]
    mov rsi, qword ptr [rbp + 0x68]
    mov rdi, qword ptr [rbp + 0x70]
    lea rsp, [rbp + 0x30]
    pop r15
    pop r14
    pop r13
    pop r12
    pop rbp
    ret
    int3 
    lock inc dword ptr [rcx + 0x10]
    mov rax, qword ptr [rcx + 0xe0]
    test rax, rax
    je 0x140015597
    lock inc dword ptr [rax]
    mov rax, qword ptr [rcx + 0xf0]
    test rax, rax
    je 0x1400155a6
    lock inc dword ptr [rax]
    mov rax, qword ptr [rcx + 0xe8]
    test rax, rax
    je 0x1400155b5
    lock inc dword ptr [rax]
    mov rax, qword ptr [rcx + 0x100]
    test rax, rax
    je 0x1400155c4
    lock inc dword ptr [rax]
    lea rax, [rcx + 0x38]
    mov r8d, 6
    lea rdx, [rip + 0x14d33]
    cmp qword ptr [rax - 0x10], rdx
    je 0x1400155e6
    mov rdx, qword ptr [rax]
    test rdx, rdx
    je 0x1400155e6
    lock inc dword ptr [rdx]
    cmp qword ptr [rax - 0x18], 0
    je 0x1400155f9
    mov rdx, qword ptr [rax - 8]
    test rdx, rdx
    je 0x1400155f9
    lock inc dword ptr [rdx]
    add rax, 0x20
    sub r8, 1
    jne 0x1400155ce
    mov rcx, qword ptr [rcx + 0x120]
    jmp 0x140015788
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rax, qword ptr [rcx + 0xf8]
    mov rbx, rcx
    test rax, rax
    je 0x1400156ac
    lea rcx, [rip + 0x15276]
    cmp rax, rcx
    je 0x1400156ac
    mov rax, qword ptr [rbx + 0xe0]
    test rax, rax
    je 0x1400156ac
    cmp dword ptr [rax], 0
    jne 0x1400156ac
    mov rcx, qword ptr [rbx + 0xf0]
    test rcx, rcx
    je 0x140015672
    cmp dword ptr [rcx], 0
    jne 0x140015672
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0xf8]
    call 0x140015140
    mov rcx, qword ptr [rbx + 0xe8]
    test rcx, rcx
    je 0x140015694
    cmp dword ptr [rcx], 0
    jne 0x140015694
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0xf8]
    call 0x14001524c
    mov rcx, qword ptr [rbx + 0xe0]
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0xf8]
    call 0x1400109a0
    mov rax, qword ptr [rbx + 0x100]
    test rax, rax
    je 0x1400156ff
    cmp dword ptr [rax], 0
    jne 0x1400156ff
    mov rcx, qword ptr [rbx + 0x108]
    sub rcx, 0xfe
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x110]
    mov edi, 0x80
    sub rcx, rdi
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x118]
    sub rcx, rdi
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x100]
    call 0x1400109a0
    mov rcx, qword ptr [rbx + 0x120]
    call 0x1400157b0
    lea rsi, [rbx + 0x128]
    mov ebp, 6
    lea rdi, [rbx + 0x38]
    lea rax, [rip + 0x14be6]
    cmp qword ptr [rdi - 0x10], rax
    je 0x140015742
    mov rcx, qword ptr [rdi]
    test rcx, rcx
    je 0x140015742
    cmp dword ptr [rcx], 0
    jne 0x140015742
    call 0x1400109a0
    mov rcx, qword ptr [rsi]
    call 0x1400109a0
    cmp qword ptr [rdi - 0x18], 0
    je 0x14001575c
    mov rcx, qword ptr [rdi - 8]
    test rcx, rcx
    je 0x14001575c
    cmp dword ptr [rcx], 0
    jne 0x14001575c
    call 0x1400109a0
    add rsi, 8
    add rdi, 0x20
    sub rbp, 1
    jne 0x14001571b
    mov rcx, rbx
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    jmp 0x1400109a0
    int3 
    int3 
    test rcx, rcx
    je 0x1400157a9
    lea rax, [rip + 0xa3ec]
    cmp rcx, rax
    je 0x1400157a9
    mov eax, 1
    lock xadd dword ptr [rcx + 0x15c], eax
    inc eax
    ret
    mov eax, 0x7fffffff
    ret
    int3 
    test rcx, rcx
    je 0x1400157e6
    push rbx
    sub rsp, 0x20
    lea rax, [rip + 0xa3bf]
    mov rbx, rcx
    cmp rcx, rax
    je 0x1400157e1
    mov eax, dword ptr [rcx + 0x15c]
    nop 
    test eax, eax
    jne 0x1400157e1
    call 0x1400152ec
    mov rcx, rbx
    call 0x1400109a0
    add rsp, 0x20
    pop rbx
    ret
    int3 
    test rcx, rcx
    je 0x140015807
    lea rax, [rip + 0xa38c]
    cmp rcx, rax
    je 0x140015807
    or eax, 0xffffffff
    lock xadd dword ptr [rcx + 0x15c], eax
    dec eax
    ret
    mov eax, 0x7fffffff
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    test rcx, rcx
    je 0x1400158b3
    or r9d, 0xffffffff
    lock add dword ptr [rcx + 0x10], r9d
    mov rax, qword ptr [rcx + 0xe0]
    test rax, rax
    je 0x140015836
    lock add dword ptr [rax], r9d
    mov rax, qword ptr [rcx + 0xf0]
    test rax, rax
    je 0x140015846
    lock add dword ptr [rax], r9d
    mov rax, qword ptr [rcx + 0xe8]
    test rax, rax
    je 0x140015856
    lock add dword ptr [rax], r9d
    mov rax, qword ptr [rcx + 0x100]
    test rax, rax
    je 0x140015866
    lock add dword ptr [rax], r9d
    lea rax, [rcx + 0x38]
    mov r8d, 6
    lea rdx, [rip + 0x14a91]
    cmp qword ptr [rax - 0x10], rdx
    je 0x140015889
    mov rdx, qword ptr [rax]
    test rdx, rdx
    je 0x140015889
    lock add dword ptr [rdx], r9d
    cmp qword ptr [rax - 0x18], 0
    je 0x14001589d
    mov rdx, qword ptr [rax - 8]
    test rdx, rdx
    je 0x14001589d
    lock add dword ptr [rdx], r9d
    add rax, 0x20
    sub r8, 1
    jne 0x140015870
    mov rcx, qword ptr [rcx + 0x120]
    call 0x1400157e8
    add rsp, 0x28
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    call 0x1400104d4
    lea rdi, [rax + 0x90]
    mov ecx, dword ptr [rax + 0x3a8]
    mov eax, dword ptr [rip + 0x15076]
    test eax, ecx
    je 0x1400158e6
    mov rbx, qword ptr [rdi]
    test rbx, rbx
    jne 0x140015912
    mov ecx, 4
    call 0x140012d90
    nop 
    mov rdx, qword ptr [rip + 0x15c78]
    mov rcx, rdi
    call 0x140015928
    mov rbx, rax
    mov ecx, 4
    call 0x140012de4
    test rbx, rbx
    je 0x140015920
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    call 0x140010040
    nop 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rdx
    test rdx, rdx
    je 0x140015980
    test rcx, rcx
    je 0x140015980
    mov rbx, qword ptr [rcx]
    cmp rbx, rdx
    jne 0x14001594c
    mov rax, rdi
    jmp 0x140015982
    mov qword ptr [rcx], rdi
    mov rcx, rdi
    call 0x140015584
    test rbx, rbx
    je 0x140015947
    mov rcx, rbx
    call 0x140015810
    cmp dword ptr [rbx + 0x10], 0
    jne 0x140015947
    lea rax, [rip + 0x1482f]
    cmp rbx, rax
    je 0x140015947
    mov rcx, rbx
    call 0x140015610
    jmp 0x140015947
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rbp, r8
    mov rbx, rdx
    mov rsi, rcx
    test rdx, rdx
    je 0x1400159cf
    xor edx, edx
    lea rax, [rdx - 0x20]
    div rbx
    cmp rax, r8
    jae 0x1400159cf
    call 0x140010908
    mov dword ptr [rax], 0xc
    xor eax, eax
    jmp 0x140015a10
    test rsi, rsi
    je 0x1400159de
    call 0x140019dbc
    mov rdi, rax
    jmp 0x1400159e0
    xor edi, edi
    imul rbx, rbp
    mov rcx, rsi
    mov rdx, rbx
    call 0x140019df8
    mov rsi, rax
    test rax, rax
    je 0x140015a0d
    cmp rdi, rbx
    jae 0x140015a0d
    sub rbx, rdi
    lea rcx, [rax + rdi]
    mov r8, rbx
    xor edx, edx
    call 0x14001cd80
    mov rax, rsi
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call qword ptr [rip + 0x87d6]
    test rax, rax
    mov qword ptr [rip + 0x1638c], rax
    setne al
    add rsp, 0x28
    ret
    and qword ptr [rip + 0x1637c], 0
    mov al, 1
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov rsi, rdx
    mov rdi, rcx
    cmp rcx, rdx
    je 0x140015ad2
    mov rbx, rcx
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x140015a89
    movabs r10, 0xdf949ec45c5ca270
    call qword ptr [rip + 0x87f3]
    test al, al
    je 0x140015a92
    add rbx, 0x10
    cmp rbx, rsi
    jne 0x140015a6d
    cmp rbx, rsi
    je 0x140015ad2
    cmp rbx, rdi
    je 0x140015ace
    add rbx, -8
    cmp qword ptr [rbx - 8], 0
    je 0x140015ac1
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x140015ac1
    movabs r10, 0x9799a6753e593b70
    xor ecx, ecx
    call qword ptr [rip + 0x87b7]
    sub rbx, 0x10
    lea rax, [rbx + 8]
    cmp rax, rdi
    jne 0x140015aa0
    xor al, al
    jmp 0x140015ad4
    mov al, 1
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, rdx
    mov rdi, rcx
    cmp rcx, rdx
    je 0x140015b1d
    mov rax, qword ptr [rbx - 8]
    test rax, rax
    je 0x140015b14
    movabs r10, 0x9799a6753e593b70
    xor ecx, ecx
    call qword ptr [rip + 0x8764]
    sub rbx, 0x10
    cmp rbx, rdi
    jne 0x140015af9
    mov rbx, qword ptr [rsp + 0x30]
    mov al, 1
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rdi, r9
    mov ecx, dword ptr [rdx]
    call 0x140012d90
    nop 
    mov rax, qword ptr [rip + 0x144b3]
    mov ecx, eax
    and ecx, 0x3f
    mov rbx, qword ptr [rip + 0x16287]
    xor rbx, rax
    ror rbx, cl
    mov ecx, dword ptr [rdi]
    call 0x140012de4
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov r11, rsp
    sub rsp, 0x28
    mov eax, 3
    lea r9, [r11 + 0x10]
    lea r8, [r11 + 8]
    mov dword ptr [rsp + 0x38], eax
    lea rdx, [r11 + 0x18]
    mov dword ptr [rsp + 0x40], eax
    lea rcx, [r11 + 8]
    call 0x140015b2c
    add rsp, 0x28
    ret
    int3 
    int3 
    mov qword ptr [rip + 0x16225], rcx
    mov qword ptr [rip + 0x16226], rcx
    mov qword ptr [rip + 0x16227], rcx
    mov qword ptr [rip + 0x16228], rcx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x18], rbx
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x40
    mov ebx, ecx
    xor r15d, r15d
    and dword ptr [rsp + 0x78], r15d
    mov r14b, 1
    mov byte ptr [rsp + 0x70], r14b
    mov edx, ecx
    sub edx, 2
    je 0x140015c1b
    sub edx, 2
    je 0x140015c4b
    sub edx, 2
    je 0x140015c1b
    sub edx, 2
    je 0x140015c4b
    sub edx, 3
    je 0x140015c4b
    sub edx, 4
    je 0x140015c1b
    sub edx, 6
    je 0x140015c1b
    cmp edx, 1
    jne 0x140015c9d
    sub ecx, 2
    je 0x140015cd8
    sub ecx, 4
    je 0x140015cbd
    sub ecx, 9
    je 0x140015ccf
    sub ecx, 6
    je 0x140015cc6
    cmp ecx, 1
    je 0x140015cbd
    xor edi, edi
    jmp 0x140015cdf
    call 0x14001064c
    mov r15, rax
    test rax, rax
    jne 0x140015c75
    or eax, 0xffffffff
    lea r11, [rsp + 0x40]
    mov rbx, qword ptr [r11 + 0x40]
    mov rsi, qword ptr [r11 + 0x48]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    mov rax, qword ptr [rax]
    mov rcx, qword ptr [rip + 0x9d21]
    shl rcx, 4
    add rcx, rax
    jmp 0x140015c91
    cmp dword ptr [rax + 4], ebx
    je 0x140015c98
    add rax, 0x10
    cmp rax, rcx
    jne 0x140015c88
    xor eax, eax
    test rax, rax
    jne 0x140015caf
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    jmp 0x140015c58
    lea rdi, [rax + 8]
    xor r14b, r14b
    mov byte ptr [rsp + 0x70], r14b
    jmp 0x140015cdf
    lea rdi, [rip + 0x1611c]
    jmp 0x140015cdf
    lea rdi, [rip + 0x1610b]
    jmp 0x140015cdf
    lea rdi, [rip + 0x16112]
    jmp 0x140015cdf
    lea rdi, [rip + 0x160f1]
    xor r13d, r13d
    test r14b, r14b
    je 0x140015cf1
    lea ecx, [r13 + 3]
    call 0x140012d90
    nop 
    mov rsi, qword ptr [rdi]
    test r14b, r14b
    je 0x140015d0b
    mov rax, qword ptr [rip + 0x14300]
    mov ecx, eax
    and ecx, 0x3f
    xor rsi, rax
    ror rsi, cl
    cmp rsi, 1
    je 0x140015da0
    test rsi, rsi
    je 0x140015e24
    mov r12d, 0x910
    cmp ebx, 0xb
    ja 0x140015d5e
    bt r12d, ebx
    jae 0x140015d5e
    mov r13, qword ptr [r15 + 8]
    mov qword ptr [rsp + 0x30], r13
    and qword ptr [r15 + 8], 0
    cmp ebx, 8
    jne 0x140015d94
    call 0x1400104d4
    mov eax, dword ptr [rax + 0x10]
    mov dword ptr [rsp + 0x78], eax
    mov dword ptr [rsp + 0x20], eax
    call 0x1400104d4
    mov dword ptr [rax + 0x10], 0x8c
    cmp ebx, 8
    jne 0x140015d94
    mov rax, qword ptr [rip + 0x9c3e]
    shl rax, 4
    add rax, qword ptr [r15]
    mov rcx, qword ptr [rip + 0x9c38]
    shl rcx, 4
    add rcx, rax
    mov qword ptr [rsp + 0x28], rax
    cmp rax, rcx
    je 0x140015da6
    and qword ptr [rax + 8], 0
    add rax, 0x10
    jmp 0x140015d7f
    mov rax, qword ptr [rip + 0x14265]
    mov qword ptr [rdi], rax
    jmp 0x140015da6
    mov r12d, 0x910
    test r14b, r14b
    je 0x140015db5
    mov ecx, 3
    call 0x140012de4
    cmp rsi, 1
    jne 0x140015dc2
    xor eax, eax
    jmp 0x140015c5b
    cmp ebx, 8
    jne 0x140015dea
    call 0x1400104d4
    movabs r10, 0x8b9c1f4f30d33370
    mov edx, dword ptr [rax + 0x10]
    mov ecx, ebx
    mov rax, rsi
    mov r8, qword ptr [rip + 0x8493]
    call r8
    jmp 0x140015e02
    movabs r10, 0xc6c1864950d77370
    mov ecx, ebx
    mov rax, rsi
    mov rdx, qword ptr [rip + 0x8478]
    call rdx
    cmp ebx, 0xb
    ja 0x140015dbb
    bt r12d, ebx
    jae 0x140015dbb
    mov qword ptr [r15 + 8], r13
    cmp ebx, 8
    jne 0x140015dbb
    call 0x1400104d4
    mov ecx, dword ptr [rsp + 0x78]
    mov dword ptr [rax + 0x10], ecx
    jmp 0x140015dbb
    test r14b, r14b
    je 0x140015e31
    lea ecx, [rsi + 3]
    call 0x140012de4
    mov ecx, 3
    call 0x14000f80c
    nop 
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    mov rbp, rcx
    test rcx, rcx
    je 0x140015ea7
    xor ebx, ebx
    lea r15, [rip - 0x15e69]
    mov edi, 0xe3
    lea eax, [rdi + rbx]
    mov r8d, 0x55
    cdq 
    mov rcx, rbp
    sub eax, edx
    sar eax, 1
    movsxd rsi, eax
    mov r14, rsi
    add r14, r14
    mov rdx, qword ptr [r15 + r14*8 + 0x22b10]
    call 0x140019d70
    test eax, eax
    je 0x140015ec2
    jns 0x140015ea0
    lea edi, [rsi - 1]
    jmp 0x140015ea3
    lea ebx, [rsi + 1]
    cmp ebx, edi
    jle 0x140015e6e
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    movsxd rax, dword ptr [r15 + r14*8 + 0x22b18]
    test eax, eax
    js 0x140015ea7
    cmp rax, 0xe4
    jae 0x140015ea7
    add rax, rax
    mov eax, dword ptr [r15 + rax*8 + 0x210b0]
    jmp 0x140015ea9
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 8], rcx
    push rdi
    sub rsp, 0x30
    mov rdi, rdx
    mov rbx, rcx
    test rcx, rcx
    jne 0x140015f2d
    mov byte ptr [rdx + 0x30], 1
    mov dword ptr [rdx + 0x2c], 0x16
    mov qword ptr [rax - 0x10], rdx
    and qword ptr [rax - 0x18], rcx
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    call 0x14000b4f0
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 0xc
    and al, 1
    je 0x140015f3f
    call 0x14001a080
    jmp 0x140015f1f
    call 0x14000b7e4
    nop 
    mov rdx, rdi
    mov rcx, rbx
    call 0x140015f60
    mov edi, eax
    mov rcx, rbx
    call 0x14000b7f0
    mov eax, edi
    jmp 0x140015f22
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rsi
    push rdi
    sub rsp, 0x30
    mov rdi, rdx
    mov rbx, rcx
    test rcx, rcx
    jne 0x140015fa0
    mov qword ptr [rax - 0x10], rdx
    xor r9d, r9d
    and qword ptr [rax - 0x18], rcx
    xor r8d, r8d
    mov byte ptr [rdx + 0x30], 1
    mov dword ptr [rdx + 0x2c], 0x16
    xor edx, edx
    call 0x14000b4f0
    or eax, 0xffffffff
    jmp 0x140015ff5
    mov eax, dword ptr [rcx + 0x14]
    or esi, 0xffffffff
    shr eax, 0xd
    nop 
    test al, 1
    je 0x140015feb
    call 0x1400111f8
    mov rcx, rbx
    mov esi, eax
    call 0x140011360
    mov rcx, rbx
    call 0x140012b9c
    mov ecx, eax
    mov rdx, rdi
    call 0x140019eec
    test eax, eax
    jns 0x140015fd8
    or esi, 0xffffffff
    jmp 0x140015feb
    mov rcx, qword ptr [rbx + 0x28]
    test rcx, rcx
    je 0x140015feb
    call 0x1400109a0
    and qword ptr [rbx + 0x28], 0
    mov rcx, rbx
    call 0x14001a080
    mov eax, esi
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rdi
    push rbp
    mov rbp, rsp
    sub rsp, 0x60
    and qword ptr [rbp - 0x40], 0
    cmp dword ptr [rip + 0x1550a], 0
    mov byte ptr [rbp - 0x30], 0
    mov byte ptr [rbp - 0x18], 0
    mov byte ptr [rbp - 0x10], 0
    mov byte ptr [rbp - 8], 0
    jne 0x140016048
    movups xmm0, xmmword ptr [rip + 0x142b9]
    mov byte ptr [rbp - 0x18], 1
    movdqu xmmword ptr [rbp - 0x28], xmm0
    lea rdx, [rbp - 0x40]
    call 0x140015ee4
    cmp byte ptr [rbp - 0x18], 2
    mov edi, eax
    jne 0x140016064
    mov rcx, qword ptr [rbp - 0x40]
    and dword ptr [rcx + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x10], 0
    je 0x140016079
    mov ebx, dword ptr [rbp - 0x14]
    lea rcx, [rbp - 0x40]
    call 0x14000b1d0
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 8], 0
    je 0x14001608e
    mov ebx, dword ptr [rbp - 0xc]
    lea rcx, [rbp - 0x40]
    call 0x14000b1d0
    mov dword ptr [rax + 0x24], ebx
    mov rbx, qword ptr [rsp + 0x70]
    mov eax, edi
    mov rdi, qword ptr [rsp + 0x78]
    add rsp, 0x60
    pop rbp
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rdi, r9
    mov rbx, r8
    mov ecx, dword ptr [rdx]
    call 0x140014fa0
    nop 
    mov rax, qword ptr [rbx]
    movsxd rcx, dword ptr [rax]
    mov rdx, rcx
    mov rax, rcx
    sar rax, 6
    lea r8, [rip + 0x1565c]
    and edx, 0x3f
    lea rdx, [rdx + rdx*8]
    mov rax, qword ptr [r8 + rax*8]
    test byte ptr [rax + rdx*8 + 0x38], 1
    je 0x140016109
    call 0x1400150ac
    mov rcx, rax
    call qword ptr [rip + 0x811c]
    xor ebx, ebx
    test eax, eax
    jne 0x140016117
    call qword ptr [rip + 0x7fa8]
    mov ebx, eax
    call 0x1400108e8
    mov dword ptr [rax], ebx
    call 0x140010908
    mov dword ptr [rax], 9
    or ebx, 0xffffffff
    mov ecx, dword ptr [rdi]
    call 0x140014fc8
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov dword ptr [rsp + 8], ecx
    sub rsp, 0x38
    movsxd rdx, ecx
    cmp edx, -2
    jne 0x140016149
    call 0x140010908
    mov dword ptr [rax], 9
    jmp 0x1400161b5
    test ecx, ecx
    js 0x1400161a5
    cmp edx, dword ptr [rip + 0x159dd]
    jae 0x1400161a5
    mov rcx, rdx
    lea r8, [rip + 0x155d1]
    and ecx, 0x3f
    mov rax, rdx
    sar rax, 6
    lea rcx, [rcx + rcx*8]
    mov rax, qword ptr [r8 + rax*8]
    test byte ptr [rax + rcx*8 + 0x38], 1
    je 0x1400161a5
    lea rax, [rsp + 0x40]
    mov dword ptr [rsp + 0x50], edx
    mov dword ptr [rsp + 0x58], edx
    lea r9, [rsp + 0x50]
    lea rdx, [rsp + 0x58]
    mov qword ptr [rsp + 0x20], rax
    lea r8, [rsp + 0x20]
    lea rcx, [rsp + 0x48]
    call 0x1400160a0
    jmp 0x1400161b8
    call 0x140010908
    mov dword ptr [rax], 9
    call 0x14000b5bc
    or eax, 0xffffffff
    add rsp, 0x38
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    lea rbp, [rax - 0x57]
    sub rsp, 0xd0
    mov qword ptr [rbp - 9], 0xfffffffffffffffe
    mov qword ptr [rax + 8], rbx
    mov rax, qword ptr [rip + 0x13e14]
    xor rax, rsp
    mov qword ptr [rbp + 0x17], rax
    mov rsi, r8
    mov qword ptr [rbp - 0x41], r8
    movsxd r14, edx
    mov rbx, rcx
    mov rax, qword ptr [rbp + 0x7f]
    mov qword ptr [rbp - 0x59], rax
    mov rax, r14
    mov r13, r14
    sar r13, 6
    mov qword ptr [rbp - 0x39], r13
    lea rcx, [rip - 0x1621d]
    and eax, 0x3f
    lea r15, [rax + rax*8]
    mov rax, qword ptr [rcx + r13*8 + 0x2b730]
    mov rax, qword ptr [rax + r15*8 + 0x28]
    mov qword ptr [rbp - 0x19], rax
    mov r12d, r9d
    add r12, r8
    mov qword ptr [rbp - 0x61], r12
    call qword ptr [rip + 0x7fd3]
    mov dword ptr [rbp - 0x49], eax
    xor edi, edi
    mov r10, qword ptr [rbp - 0x59]
    cmp byte ptr [r10 + 0x28], dil
    jne 0x140016260
    mov rcx, r10
    call 0x14000e390
    mov r10, qword ptr [rbp - 0x59]
    mov rcx, qword ptr [r10 + 0x18]
    mov ecx, dword ptr [rcx + 0xc]
    mov dword ptr [rbp - 0x45], ecx
    xor eax, eax
    mov qword ptr [rbx], rax
    mov dword ptr [rbx + 8], eax
    cmp qword ptr [rbp - 0x41], r12
    jae 0x14001660b
    mov r9, r14
    sar r9, 6
    mov qword ptr [rbp - 0x11], r9
    mov edx, edi
    mov al, byte ptr [rsi]
    mov byte ptr [rbp - 0x71], al
    mov dword ptr [rbp - 0x6d], edi
    mov r12d, 1
    lea r11, [rip - 0x1629e]
    cmp ecx, 0xfde9
    jne 0x140016425
    mov edx, edi
    mov r14, rdi
    lea rcx, [r15*8 + 0x3e]
    add rcx, qword ptr [r11 + r9*8 + 0x2b730]
    cmp byte ptr [rcx], dil
    je 0x1400162d2
    inc edx
    inc r14
    inc rcx
    cmp r14, 5
    jl 0x1400162bf
    test r14, r14
    jle 0x1400163bb
    mov rax, qword ptr [r11 + r13*8 + 0x2b730]
    movzx ecx, byte ptr [rax + r15*8 + 0x3e]
    movsx r12d, byte ptr [rcx + r11 + 0x2a960]
    inc r12d
    mov eax, r12d
    sub eax, edx
    mov dword ptr [rbp - 0x51], eax
    mov rdx, qword ptr [rbp - 0x61]
    sub rdx, rsi
    movsxd r8, eax
    cmp r8, rdx
    jg 0x140016588
    mov rcx, rdi
    lea rdx, [r15*8 + 0x3e]
    add rdx, qword ptr [r11 + r9*8 + 0x2b730]
    mov al, byte ptr [rdx]
    mov byte ptr [rbp + rcx - 1], al
    inc rcx
    inc rdx
    cmp rcx, r14
    jl 0x140016323
    test r8, r8
    jle 0x140016353
    lea rcx, [rbp - 1]
    add rcx, r14
    mov rdx, rsi
    call 0x14001c6e0
    mov r10, qword ptr [rbp - 0x59]
    lea r11, [rip - 0x16353]
    mov rdx, rdi
    mov rcx, qword ptr [r11 + r13*8 + 0x2b730]
    add rcx, rdx
    mov byte ptr [rcx + r15*8 + 0x3e], dil
    inc rdx
    cmp rdx, r14
    jl 0x140016356
    mov qword ptr [rbp - 0x31], rdi
    lea rax, [rbp - 1]
    mov qword ptr [rbp - 0x29], rax
    mov eax, edi
    cmp r12d, 4
    sete al
    inc eax
    mov r12d, eax
    mov r8d, eax
    mov qword ptr [rsp + 0x20], r10
    lea r9, [rbp - 0x31]
    lea rdx, [rbp - 0x29]
    lea rcx, [rbp - 0x6d]
    call 0x140018880
    cmp rax, -1
    je 0x14001660b
    mov eax, dword ptr [rbp - 0x51]
    dec eax
    movsxd rcx, eax
    add rsi, rcx
    jmp 0x1400164b6
    movzx eax, byte ptr [rsi]
    movsx r13, byte ptr [rax + r11 + 0x2a960]
    lea ecx, [r13 + 1]
    mov r8, qword ptr [rbp - 0x61]
    sub r8, rsi
    movsxd rax, ecx
    cmp rax, r8
    jg 0x1400165b6
    mov qword ptr [rbp - 0x51], rdi
    mov qword ptr [rbp - 0x21], rsi
    mov eax, edi
    cmp ecx, 4
    sete al
    inc eax
    mov r14d, eax
    mov r8d, eax
    mov qword ptr [rsp + 0x20], r10
    lea r9, [rbp - 0x51]
    lea rdx, [rbp - 0x21]
    lea rcx, [rbp - 0x6d]
    call 0x140018880
    cmp rax, -1
    je 0x14001660b
    add rsi, r13
    mov r12d, r14d
    mov r13, qword ptr [rbp - 0x39]
    jmp 0x1400164b6
    mov r8, qword ptr [r11 + r13*8 + 0x2b730]
    mov cl, byte ptr [r8 + r15*8 + 0x3d]
    test cl, 4
    je 0x140016458
    mov al, byte ptr [r8 + r15*8 + 0x3e]
    mov byte ptr [rbp + 7], al
    mov al, byte ptr [rsi]
    mov byte ptr [rbp + 8], al
    and cl, 0xfb
    mov byte ptr [r8 + r15*8 + 0x3d], cl
    mov r8d, 2
    lea rdx, [rbp + 7]
    jmp 0x1400164a1
    movzx r9d, byte ptr [rsi]
    mov rax, qword ptr [r10 + 0x18]
    mov rcx, qword ptr [rax]
    cmp word ptr [rcx + r9*2], di
    jge 0x14001649b
    lea r14, [rsi + 1]
    cmp r14, qword ptr [rbp - 0x61]
    jae 0x1400165e8
    mov r9, r10
    mov r8d, 2
    mov rdx, rsi
    lea rcx, [rbp - 0x6d]
    call 0x140012a24
    cmp eax, -1
    je 0x14001660b
    mov rsi, r14
    jmp 0x1400164b6
    mov r8, r12
    mov rdx, rsi
    mov r9, r10
    lea rcx, [rbp - 0x6d]
    call 0x140012a24
    cmp eax, -1
    je 0x14001660b
    inc rsi
    mov qword ptr [rsp + 0x38], rdi
    mov qword ptr [rsp + 0x30], rdi
    mov dword ptr [rsp + 0x28], 5
    lea rax, [rbp + 0xf]
    mov qword ptr [rsp + 0x20], rax
    mov r9d, r12d
    lea r8, [rbp - 0x6d]
    xor edx, edx
    mov ecx, dword ptr [rbp - 0x49]
    call 0x140014764
    mov r14d, eax
    test eax, eax
    je 0x14001660b
    mov qword ptr [rsp + 0x20], rdi
    lea r9, [rbp - 0x69]
    mov r8d, eax
    lea rdx, [rbp + 0xf]
    mov r12, qword ptr [rbp - 0x19]
    mov rcx, r12
    call qword ptr [rip + 0x7c13]
    test eax, eax
    je 0x140016603
    mov edx, esi
    sub edx, dword ptr [rbp - 0x41]
    add edx, dword ptr [rbx + 8]
    mov dword ptr [rbx + 4], edx
    cmp dword ptr [rbp - 0x69], r14d
    jb 0x14001660b
    cmp byte ptr [rbp - 0x71], 0xa
    jne 0x14001656e
    mov eax, 0xd
    mov word ptr [rbp - 0x71], ax
    mov qword ptr [rsp + 0x20], rdi
    lea r9, [rbp - 0x69]
    lea r8d, [rax - 0xc]
    lea rdx, [rbp - 0x71]
    mov rcx, r12
    call qword ptr [rip + 0x7bcd]
    test eax, eax
    je 0x140016603
    cmp dword ptr [rbp - 0x69], 1
    jb 0x14001660b
    inc dword ptr [rbx + 8]
    inc dword ptr [rbx + 4]
    mov edx, dword ptr [rbx + 4]
    cmp rsi, qword ptr [rbp - 0x61]
    jae 0x14001660b
    mov r10, qword ptr [rbp - 0x59]
    mov r9, qword ptr [rbp - 0x11]
    mov ecx, dword ptr [rbp - 0x45]
    jmp 0x140016289
    test rdx, rdx
    jle 0x1400165b1
    sub rsi, r14
    mov rcx, qword ptr [r11 + r13*8 + 0x2b730]
    add rcx, r14
    mov al, byte ptr [rsi + r14]
    mov byte ptr [rcx + r15*8 + 0x3e], al
    inc edi
    inc r14
    movsxd rax, edi
    cmp rax, rdx
    jl 0x140016590
    add dword ptr [rbx + 4], edx
    jmp 0x14001660b
    test r8, r8
    jle 0x1400165e2
    mov rdx, rdi
    mov r9, qword ptr [rbp - 0x39]
    mov rcx, qword ptr [r11 + r9*8 + 0x2b730]
    add rcx, rdx
    mov al, byte ptr [rdx + rsi]
    mov byte ptr [rcx + r15*8 + 0x3e], al
    inc edi
    inc rdx
    movsxd rax, edi
    cmp rax, r8
    jl 0x1400165c2
    add dword ptr [rbx + 4], r8d
    jmp 0x14001660b
    mov byte ptr [r8 + r15*8 + 0x3e], r9b
    mov rax, qword ptr [r11 + r13*8 + 0x2b730]
    or byte ptr [rax + r15*8 + 0x3d], 4
    lea eax, [rdx + 1]
    mov dword ptr [rbx + 4], eax
    jmp 0x14001660b
    call qword ptr [rip + 0x7a9f]
    mov dword ptr [rbx], eax
    mov rax, rbx
    mov rcx, qword ptr [rbp + 0x17]
    xor rcx, rsp
    call 0x140004a50
    mov rbx, qword ptr [rsp + 0x110]
    add rsp, 0xd0
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rsi
    push rdi
    push r14
    mov eax, 0x1450
    call 0x14001c390
    sub rsp, rax
    mov rax, qword ptr [rip + 0x139a6]
    xor rax, rsp
    mov qword ptr [rsp + 0x1440], rax
    movsxd r10, edx
    mov rdi, rcx
    mov rax, r10
    mov ebp, r9d
    sar rax, 6
    lea rcx, [rip + 0x150b4]
    and r10d, 0x3f
    add rbp, r8
    mov rsi, r8
    mov rax, qword ptr [rcx + rax*8]
    lea rdx, [r10 + r10*8]
    mov r14, qword ptr [rax + rdx*8 + 0x28]
    xor eax, eax
    mov qword ptr [rdi], rax
    mov dword ptr [rdi + 8], eax
    cmp r8, rbp
    jae 0x14001670f
    lea rbx, [rsp + 0x40]
    cmp rsi, rbp
    jae 0x1400166ce
    mov al, byte ptr [rsi]
    inc rsi
    cmp al, 0xa
    jne 0x1400166bc
    inc dword ptr [rdi + 8]
    mov byte ptr [rbx], 0xd
    inc rbx
    mov byte ptr [rbx], al
    inc rbx
    lea rax, [rsp + 0x143f]
    cmp rbx, rax
    jb 0x1400166a5
    and qword ptr [rsp + 0x20], 0
    lea rax, [rsp + 0x40]
    sub ebx, eax
    lea r9, [rsp + 0x30]
    mov r8d, ebx
    lea rdx, [rsp + 0x40]
    mov rcx, r14
    call qword ptr [rip + 0x7a2f]
    test eax, eax
    je 0x140016707
    mov eax, dword ptr [rsp + 0x30]
    add dword ptr [rdi + 4], eax
    cmp eax, ebx
    jb 0x14001670f
    cmp rsi, rbp
    jb 0x1400166a0
    jmp 0x14001670f
    call qword ptr [rip + 0x799b]
    mov dword ptr [rdi], eax
    mov rax, rdi
    mov rcx, qword ptr [rsp + 0x1440]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x1450]
    mov rbx, qword ptr [r11 + 0x20]
    mov rbp, qword ptr [r11 + 0x30]
    mov rsp, r11
    pop r14
    pop rdi
    pop rsi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rsi
    push rdi
    push r14
    mov eax, 0x1450
    call 0x14001c390
    sub rsp, rax
    mov rax, qword ptr [rip + 0x138a2]
    xor rax, rsp
    mov qword ptr [rsp + 0x1440], rax
    movsxd r10, edx
    mov rdi, rcx
    mov rax, r10
    mov ebp, r9d
    sar rax, 6
    lea rcx, [rip + 0x14fb0]
    and r10d, 0x3f
    add rbp, r8
    mov rsi, r8
    mov rax, qword ptr [rcx + rax*8]
    lea rdx, [r10 + r10*8]
    mov r14, qword ptr [rax + rdx*8 + 0x28]
    xor eax, eax
    mov qword ptr [rdi], rax
    mov dword ptr [rdi + 8], eax
    cmp r8, rbp
    jae 0x14001682a
    lea rbx, [rsp + 0x40]
    cmp rsi, rbp
    jae 0x1400167e3
    movzx eax, word ptr [rsi]
    add rsi, 2
    cmp ax, 0xa
    jne 0x1400167cf
    add dword ptr [rdi + 8], 2
    mov ecx, 0xd
    mov word ptr [rbx], cx
    add rbx, 2
    mov word ptr [rbx], ax
    add rbx, 2
    lea rax, [rsp + 0x143e]
    cmp rbx, rax
    jb 0x1400167ad
    and qword ptr [rsp + 0x20], 0
    lea rax, [rsp + 0x40]
    sub rbx, rax
    lea r9, [rsp + 0x30]
    sar rbx, 1
    lea rdx, [rsp + 0x40]
    add ebx, ebx
    mov rcx, r14
    mov r8d, ebx
    call qword ptr [rip + 0x7914]
    test eax, eax
    je 0x140016822
    mov eax, dword ptr [rsp + 0x30]
    add dword ptr [rdi + 4], eax
    cmp eax, ebx
    jb 0x14001682a
    cmp rsi, rbp
    jb 0x1400167a8
    jmp 0x14001682a
    call qword ptr [rip + 0x7880]
    mov dword ptr [rdi], eax
    mov rax, rdi
    mov rcx, qword ptr [rsp + 0x1440]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x1450]
    mov rbx, qword ptr [r11 + 0x20]
    mov rbp, qword ptr [r11 + 0x30]
    mov rsp, r11
    pop r14
    pop rdi
    pop rsi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rsi
    push rdi
    push r12
    push r14
    push r15
    mov eax, 0x1470
    call 0x14001c390
    sub rsp, rax
    mov rax, qword ptr [rip + 0x13782]
    xor rax, rsp
    mov qword ptr [rsp + 0x1460], rax
    movsxd r10, edx
    mov rbx, rcx
    mov rax, r10
    mov r14d, r9d
    sar rax, 6
    lea rcx, [rip + 0x14e90]
    and r10d, 0x3f
    add r14, r8
    mov r15, r8
    mov rdi, r8
    mov rax, qword ptr [rcx + rax*8]
    lea rdx, [r10 + r10*8]
    mov r12, qword ptr [rax + rdx*8 + 0x28]
    xor eax, eax
    mov qword ptr [rbx], rax
    cmp r8, r14
    mov dword ptr [rbx + 8], eax
    jae 0x140016999
    lea rax, [rsp + 0x50]
    cmp rdi, r14
    jae 0x140016902
    movzx ecx, word ptr [rdi]
    add rdi, 2
    cmp cx, 0xa
    jne 0x1400168ee
    mov edx, 0xd
    mov word ptr [rax], dx
    add rax, 2
    mov word ptr [rax], cx
    add rax, 2
    lea rcx, [rsp + 0x6f8]
    cmp rax, rcx
    jb 0x1400168d0
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rsp + 0x50]
    and qword ptr [rsp + 0x30], 0
    lea r8, [rsp + 0x50]
    sub rax, rcx
    mov dword ptr [rsp + 0x28], 0xd55
    lea rcx, [rsp + 0x700]
    sar rax, 1
    mov qword ptr [rsp + 0x20], rcx
    mov r9d, eax
    mov ecx, 0xfde9
    xor edx, edx
    call 0x140014764
    mov ebp, eax
    test eax, eax
    je 0x140016991
    xor esi, esi
    test eax, eax
    je 0x140016981
    and qword ptr [rsp + 0x20], 0
    lea rdx, [rsp + 0x700]
    mov ecx, esi
    lea r9, [rsp + 0x40]
    mov r8d, ebp
    add rdx, rcx
    mov rcx, r12
    sub r8d, esi
    call qword ptr [rip + 0x77ab]
    test eax, eax
    je 0x140016991
    add esi, dword ptr [rsp + 0x40]
    cmp esi, ebp
    jb 0x14001694e
    mov eax, edi
    sub eax, r15d
    mov dword ptr [rbx + 4], eax
    cmp rdi, r14
    jmp 0x1400168c5
    call qword ptr [rip + 0x7711]
    mov dword ptr [rbx], eax
    mov rax, rbx
    mov rcx, qword ptr [rsp + 0x1460]
    xor rcx, rsp
    call 0x140004a50
    lea r11, [rsp + 0x1470]
    mov rbx, qword ptr [r11 + 0x30]
    mov rbp, qword ptr [r11 + 0x40]
    mov rsp, r11
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    ret
    mov qword ptr [rsp + 0x18], rbx
    mov qword ptr [rsp + 0x10], rdx
    mov dword ptr [rsp + 8], ecx
    push rsi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov rbx, r9
    mov r13d, r8d
    movsxd rsi, ecx
    cmp esi, -2
    jne 0x140016a1e
    mov byte ptr [r9 + 0x38], 1
    and dword ptr [r9 + 0x34], 0
    mov byte ptr [r9 + 0x30], 1
    mov dword ptr [r9 + 0x2c], 9
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x70]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rsi
    ret
    test ecx, ecx
    js 0x140016a31
    cmp esi, dword ptr [rip + 0x15108]
    jae 0x140016a31
    mov eax, 1
    jmp 0x140016a33
    xor eax, eax
    test eax, eax
    jne 0x140016a6a
    mov byte ptr [r9 + 0x38], 1
    and dword ptr [r9 + 0x34], 0
    mov byte ptr [r9 + 0x30], 1
    mov dword ptr [r9 + 0x2c], 9
    mov qword ptr [rsp + 0x28], rbx
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b4f0
    jmp 0x140016a08
    mov rax, rsi
    mov r15, rsi
    sar r15, 6
    lea rcx, [rip + 0x14cb5]
    and eax, 0x3f
    lea r12, [rax + rax*8]
    mov rax, qword ptr [rcx + r15*8]
    test byte ptr [rax + r12*8 + 0x38], 1
    je 0x140016a37
    mov ecx, esi
    call 0x140014fa0
    or r14d, 0xffffffff
    lea rax, [rip + 0x14c90]
    mov rax, qword ptr [rax + r15*8]
    test byte ptr [rax + r12*8 + 0x38], 1
    jne 0x140016ac1
    mov byte ptr [rbx + 0x30], 1
    mov dword ptr [rbx + 0x2c], 9
    mov byte ptr [rbx + 0x38], 1
    and dword ptr [rbx + 0x34], 0
    jmp 0x140016ad6
    mov r9, rbx
    mov r8d, r13d
    mov rdx, qword ptr [rsp + 0x68]
    mov ecx, esi
    call 0x140016ae8
    mov r14d, eax
    mov ecx, esi
    call 0x140014fc8
    mov eax, r14d
    jmp 0x140016a0b
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x78
    xor edi, edi
    mov r14d, r8d
    movsxd r15, ecx
    mov rbx, r9
    mov rsi, rdx
    test r8d, r8d
    je 0x140016ddb
    test rdx, rdx
    jne 0x140016b4f
    mov byte ptr [r9 + 0x38], 1
    xor r8d, r8d
    mov dword ptr [r9 + 0x34], edi
    xor edx, edx
    mov byte ptr [r9 + 0x30], 1
    xor ecx, ecx
    mov dword ptr [r9 + 0x2c], 0x16
    xor r9d, r9d
    mov qword ptr [rsp + 0x28], rbx
    mov qword ptr [rsp + 0x20], rdi
    call 0x14000b4f0
    or eax, 0xffffffff
    jmp 0x140016ddd
    mov rax, r15
    lea rcx, [rip + 0x14bd7]
    and eax, 0x3f
    mov r12, r15
    sar r12, 6
    mov qword ptr [rbp - 0x18], r12
    lea r13, [rax + rax*8]
    mov rcx, qword ptr [rcx + r12*8]
    mov al, byte ptr [rcx + r13*8 + 0x39]
    mov byte ptr [rbp - 0x48], al
    dec al
    cmp al, 1
    ja 0x140016b86
    mov eax, r14d
    not eax
    test al, 1
    je 0x140016b18
    test byte ptr [rcx + r13*8 + 0x38], 0x20
    je 0x140016b9c
    xor edx, edx
    mov ecx, r15d
    lea r8d, [rdx + 2]
    call 0x14001a304
    mov ecx, r15d
    mov qword ptr [rbp - 0x30], rdi
    call 0x140018c64
    lea rdx, [rip + 0x14b81]
    test eax, eax
    je 0x140016ccb
    mov rax, qword ptr [rdx + r12*8]
    cmp byte ptr [rax + r13*8 + 0x38], dil
    jge 0x140016ccb
    cmp byte ptr [rbx + 0x28], dil
    jne 0x140016bdb
    mov rcx, rbx
    call 0x14000e390
    lea rdx, [rip + 0x14b55]
    mov rax, qword ptr [rbx + 0x18]
    cmp qword ptr [rax + 0x138], rdi
    jne 0x140016bf7
    mov rax, qword ptr [rdx + r12*8]
    cmp byte ptr [rax + r13*8 + 0x39], dil
    je 0x140016ccb
    mov rcx, qword ptr [rdx + r12*8]
    lea rdx, [rbp - 0x20]
    mov rcx, qword ptr [rcx + r13*8 + 0x28]
    call qword ptr [rip + 0x7616]
    test eax, eax
    je 0x140016cc4
    movsx ecx, byte ptr [rbp - 0x48]
    test ecx, ecx
    je 0x140016ca1
    sub ecx, 1
    je 0x140016c2c
    cmp ecx, 1
    jne 0x140016d65
    lea r12, [rsi + r14]
    mov qword ptr [rbp - 0x40], rdi
    mov r15, rsi
    cmp rsi, r12
    jae 0x140016c98
    mov r14d, dword ptr [rbp - 0x3c]
    movzx eax, word ptr [r15]
    movzx ecx, ax
    mov word ptr [rbp - 0x48], ax
    call 0x14001a30c
    movzx ecx, word ptr [rbp - 0x48]
    cmp ax, cx
    jne 0x140016c8f
    add r14d, 2
    mov dword ptr [rbp - 0x3c], r14d
    cmp cx, 0xa
    jne 0x140016c84
    mov ecx, 0xd
    call 0x14001a30c
    mov ecx, 0xd
    cmp ax, cx
    jne 0x140016c8f
    inc r14d
    mov dword ptr [rbp - 0x3c], r14d
    inc edi
    add r15, 2
    cmp r15, r12
    jae 0x140016c98
    jmp 0x140016c40
    call qword ptr [rip + 0x7413]
    mov dword ptr [rbp - 0x40], eax
    mov r12, qword ptr [rbp - 0x18]
    jmp 0x140016d5b
    mov r9d, r14d
    mov qword ptr [rsp + 0x20], rbx
    mov r8, rsi
    lea rcx, [rbp - 0x40]
    mov edx, r15d
    call 0x1400161c0
    movsd xmm0, qword ptr [rax]
    mov edi, dword ptr [rax + 8]
    jmp 0x140016d60
    lea rdx, [rip + 0x14a65]
    mov rcx, qword ptr [rdx + r12*8]
    cmp byte ptr [rcx + r13*8 + 0x38], dil
    jge 0x140016d28
    movsx ecx, byte ptr [rbp - 0x48]
    test ecx, ecx
    je 0x140016d14
    sub ecx, 1
    je 0x140016d00
    cmp ecx, 1
    jne 0x140016d6c
    mov r9d, r14d
    lea rcx, [rbp - 0x40]
    mov r8, rsi
    mov edx, r15d
    call 0x14001673c
    jmp 0x140016cb8
    mov r9d, r14d
    lea rcx, [rbp - 0x40]
    mov r8, rsi
    mov edx, r15d
    call 0x140016858
    jmp 0x140016cb8
    mov r9d, r14d
    lea rcx, [rbp - 0x40]
    mov r8, rsi
    mov edx, r15d
    call 0x140016638
    jmp 0x140016cb8
    mov rcx, qword ptr [rcx + r13*8 + 0x28]
    lea r9, [rbp - 0x3c]
    xor eax, eax
    mov r8d, r14d
    and qword ptr [rsp + 0x20], rax
    mov rdx, rsi
    mov qword ptr [rbp - 0x40], rax
    mov dword ptr [rbp - 0x38], eax
    call qword ptr [rip + 0x73d5]
    test eax, eax
    jne 0x140016d58
    call qword ptr [rip + 0x7353]
    mov dword ptr [rbp - 0x40], eax
    mov edi, dword ptr [rbp - 0x38]
    movsd xmm0, qword ptr [rbp - 0x40]
    movsd qword ptr [rbp - 0x30], xmm0
    lea rdx, [rip + 0x149c4]
    mov rax, qword ptr [rbp - 0x30]
    shr rax, 0x20
    test eax, eax
    jne 0x140016dd4
    mov eax, dword ptr [rbp - 0x30]
    test eax, eax
    je 0x140016dab
    cmp eax, 5
    jne 0x140016d9b
    mov byte ptr [rbx + 0x30], 1
    mov dword ptr [rbx + 0x2c], 9
    mov byte ptr [rbx + 0x38], 1
    mov dword ptr [rbx + 0x34], eax
    jmp 0x140016b47
    mov ecx, dword ptr [rbp - 0x30]
    mov rdx, rbx
    call 0x1400108c4
    jmp 0x140016b47
    mov rax, qword ptr [rdx + r12*8]
    test byte ptr [rax + r13*8 + 0x38], 0x40
    je 0x140016dbc
    cmp byte ptr [rsi], 0x1a
    je 0x140016ddb
    and dword ptr [rbx + 0x34], 0
    mov byte ptr [rbx + 0x30], 1
    mov dword ptr [rbx + 0x2c], 0x1c
    mov byte ptr [rbx + 0x38], 1
    jmp 0x140016b47
    mov eax, dword ptr [rbp - 0x2c]
    sub eax, edi
    jmp 0x140016ddd
    xor eax, eax
    add rsp, 0x78
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    cmp dword ptr [rsp + 0x50], 0
    mov edi, r9d
    mov esi, r8d
    mov rbx, rdx
    mov rbp, rcx
    jne 0x140016e22
    cmp byte ptr [rdx], 0x35
    setge al
    jmp 0x140016eab
    call 0x140018784
    test eax, eax
    jne 0x140016e5b
    cmp byte ptr [rbx], 0x35
    lea ecx, [rax + 1]
    jg 0x140016e3d
    jl 0x140016ea9
    lea rax, [rbx + 1]
    test edi, edi
    jne 0x140016e44
    mov al, cl
    jmp 0x140016eab
    add rax, rcx
    mov dl, byte ptr [rax]
    cmp dl, 0x30
    je 0x140016e41
    test dl, dl
    jne 0x140016e3d
    cmp rbx, rbp
    je 0x140016ea9
    mov al, byte ptr [rbx - 1]
    and al, cl
    jmp 0x140016eab
    cmp eax, 0x200
    jne 0x140016e83
    mov ecx, 1
    test edi, edi
    je 0x140016e7a
    jmp 0x140016e70
    add rbx, rcx
    mov al, byte ptr [rbx]
    cmp al, 0x30
    je 0x140016e6d
    test al, al
    je 0x140016e7f
    cmp esi, 0x2d
    jne 0x140016e3d
    xor cl, cl
    jmp 0x140016e3d
    cmp eax, 0x100
    jne 0x140016ea9
    mov ecx, 1
    test edi, edi
    je 0x140016ea2
    jmp 0x140016e98
    add rbx, rcx
    mov al, byte ptr [rbx]
    cmp al, 0x30
    je 0x140016e95
    test al, al
    je 0x140016e7f
    cmp esi, 0x2d
    je 0x140016e3d
    jmp 0x140016e7f
    xor al, al
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x30
    mov rdi, r9
    mov rsi, rcx
    test rcx, rcx
    jne 0x140016f11
    mov ebx, 0x16
    mov rax, qword ptr [rsp + 0x70]
    xor r9d, r9d
    mov qword ptr [rsp + 0x28], rax
    xor r8d, r8d
    and qword ptr [rsp + 0x20], 0
    xor edx, edx
    xor ecx, ecx
    mov dword ptr [rax + 0x2c], ebx
    mov byte ptr [rax + 0x30], 1
    call 0x14000b4f0
    mov eax, ebx
    jmp 0x140016fbb
    test rdx, rdx
    je 0x140016edf
    xor eax, eax
    mov byte ptr [rcx], 0
    test r8d, r8d
    cmovg eax, r8d
    inc eax
    cdqe 
    cmp rdx, rax
    ja 0x140016f32
    mov ebx, 0x22
    jmp 0x140016ee4
    test rdi, rdi
    je 0x140016edf
    mov rcx, qword ptr [r9 + 8]
    lea rbx, [rsi + 1]
    mov rdx, rcx
    mov byte ptr [rsi], 0x30
    jmp 0x140016f5c
    mov al, byte ptr [rdx]
    test al, al
    je 0x140016f52
    inc rdx
    jmp 0x140016f54
    mov al, 0x30
    mov byte ptr [rbx], al
    inc rbx
    dec r8d
    test r8d, r8d
    jg 0x140016f47
    mov byte ptr [rbx], 0
    js 0x140016f91
    mov eax, dword ptr [rsp + 0x68]
    mov r9d, dword ptr [rsp + 0x60]
    mov r8d, dword ptr [rdi]
    mov dword ptr [rsp + 0x20], eax
    call 0x140016df0
    test al, al
    je 0x140016f91
    jmp 0x140016f84
    mov byte ptr [rbx], 0x30
    dec rbx
    mov al, byte ptr [rbx]
    cmp al, 0x39
    je 0x140016f81
    inc al
    mov byte ptr [rbx], al
    cmp byte ptr [rsi], 0x31
    jne 0x140016f9b
    inc dword ptr [rdi + 4]
    jmp 0x140016fb9
    or r8, 0xffffffffffffffff
    inc r8
    cmp byte ptr [r8 + rsi + 1], 0
    jne 0x140016f9f
    inc r8
    lea rdx, [rsi + 1]
    mov rcx, rsi
    call 0x14001c6e0
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop rdi
    ret
    mov qword ptr [rsp + 0x10], rdx
    push rbx
    push rbp
    push rsi
    push rdi
    push r12
    push r14
    push r15
    sub rsp, 0x220
    mov r10d, dword ptr [rcx]
    mov r15, rdx
    mov rsi, rcx
    test r10d, r10d
    je 0x140017458
    mov edi, dword ptr [rdx]
    test edi, edi
    je 0x140017458
    dec r10d
    lea ebp, [rdi - 1]
    test ebp, ebp
    jne 0x14001710b
    mov r12d, dword ptr [rdx + 4]
    xor ebp, ebp
    cmp r12d, 1
    jne 0x140017042
    mov ebx, dword ptr [rcx + 4]
    lea r8, [rsp + 0x44]
    add rcx, 4
    mov dword ptr [rsi], ebp
    xor r9d, r9d
    mov dword ptr [rsp + 0x40], ebp
    mov edx, 0x1cc
    call 0x1400186fc
    mov eax, ebx
    jmp 0x14001745a
    test r10d, r10d
    jne 0x140017084
    mov edi, dword ptr [rcx + 4]
    lea r8, [rsp + 0x44]
    mov dword ptr [rcx], ebp
    xor r9d, r9d
    add rcx, 4
    mov dword ptr [rsp + 0x40], ebp
    mov edx, 0x1cc
    call 0x1400186fc
    xor edx, edx
    mov eax, edi
    div r12d
    mov eax, edi
    test edx, edx
    mov dword ptr [rsi + 4], edx
    setne bpl
    xor edx, edx
    div r12d
    mov dword ptr [rsi], ebp
    jmp 0x14001745a
    mov r15d, 0xffffffff
    mov r14, rbp
    mov rdi, rbp
    cmp r10d, r15d
    je 0x1400170d0
    mov r9, r12
    nop dword ptr [rax + rax]
    mov r8d, dword ptr [rsi + r10*4 + 4]
    xor edx, edx
    shl rdi, 0x20
    add r10d, r15d
    or r8, rdi
    shl r14, 0x20
    mov rax, r8
    div r9
    xor edx, edx
    mov ecx, eax
    mov rax, r8
    div r9
    add r14, rcx
    mov rdi, rdx
    cmp r10d, r15d
    jne 0x1400170a0
    xor r9d, r9d
    mov dword ptr [rsp + 0x40], ebp
    lea r8, [rsp + 0x44]
    mov dword ptr [rsi], ebp
    mov edx, 0x1cc
    lea rcx, [rsi + 4]
    call 0x1400186fc
    mov rcx, rdi
    mov dword ptr [rsi + 4], edi
    shr rcx, 0x20
    mov rax, r14
    test ecx, ecx
    mov dword ptr [rsi + 8], ecx
    setne bpl
    inc ebp
    mov dword ptr [rsi], ebp
    jmp 0x14001745a
    cmp ebp, r10d
    ja 0x140017458
    mov r8d, r10d
    movsxd rdx, r10d
    sub r8d, ebp
    mov r9d, r10d
    movsxd rbx, r8d
    cmp rdx, rbx
    jl 0x140017171
    add rcx, 4
    lea rax, [rbx*4]
    mov r11, r15
    sub r11, rax
    sub r11, rsi
    lea rcx, [rcx + rdx*4]
    mov eax, dword ptr [rcx]
    cmp dword ptr [r11 + rcx], eax
    jne 0x14001715a
    dec r9d
    dec rdx
    sub rcx, 4
    cmp rdx, rbx
    jge 0x140017141
    jmp 0x140017171
    mov eax, r9d
    sub eax, r8d
    movsxd rdx, eax
    movsxd rax, r9d
    mov ecx, dword ptr [rsi + rax*4 + 4]
    cmp dword ptr [r15 + rdx*4 + 4], ecx
    jae 0x140017174
    inc r8d
    test r8d, r8d
    je 0x140017458
    mov r9d, dword ptr [r15 + rbp*4 + 4]
    lea eax, [rdi - 2]
    mov r11d, dword ptr [r15 + rax*4 + 4]
    xor ebp, ebp
    bsr eax, r9d
    mov dword ptr [rsp + 0x270], r11d
    je 0x1400171b8
    mov ebx, 0x1f
    mov r14d, 0x20
    sub ebx, eax
    sub r14d, ebx
    mov dword ptr [rsp + 0x260], r14d
    test ebx, ebx
    je 0x140017204
    jmp 0x1400171c7
    mov ebx, 0x20
    mov dword ptr [rsp + 0x260], ebp
    mov r14d, ebp
    mov eax, r9d
    mov edx, r11d
    mov ecx, r14d
    shr edx, cl
    mov ecx, ebx
    shl eax, cl
    mov r9d, edx
    shl r11d, cl
    or r9d, eax
    mov dword ptr [rsp + 0x270], r11d
    cmp edi, 2
    jbe 0x140017204
    lea eax, [rdi - 3]
    mov ecx, r14d
    mov eax, dword ptr [r15 + rax*4 + 4]
    shr eax, cl
    or r11d, eax
    mov dword ptr [rsp + 0x270], r11d
    lea r12d, [r8 - 1]
    mov qword ptr [rsp + 0x30], rbp
    mov r11, rbp
    test r12d, r12d
    js 0x140017419
    mov eax, r14d
    mov r15d, 0xffffffff
    mov qword ptr [rsp + 0x38], rax
    mov eax, r9d
    mov qword ptr [rsp + 0x218], r13
    lea r13d, [r12 + rdi]
    mov qword ptr [rsp + 0x28], rax
    nop dword ptr [rax + rax]
    cmp r13d, r10d
    ja 0x14001724c
    mov edx, dword ptr [rsi + r13*4 + 4]
    jmp 0x14001724e
    mov edx, ebp
    mov dword ptr [rsp + 0x278], edx
    lea eax, [r13 - 1]
    mov ecx, dword ptr [rsi + rax*4 + 4]
    lea eax, [r13 - 2]
    mov r11d, dword ptr [rsi + rax*4 + 4]
    mov qword ptr [rsp + 0x20], rcx
    mov dword ptr [rsp + 0x24], edx
    test ebx, ebx
    je 0x1400172a6
    mov rcx, qword ptr [rsp + 0x38]
    mov r8d, r11d
    mov rax, qword ptr [rsp + 0x20]
    shr r8, cl
    mov ecx, ebx
    shl rax, cl
    or r8, rax
    shl r11d, cl
    cmp r13d, 3
    jb 0x1400172ab
    lea eax, [r13 - 3]
    mov ecx, r14d
    mov eax, dword ptr [rsi + rax*4 + 4]
    shr eax, cl
    or r11d, eax
    jmp 0x1400172ab
    mov r8, qword ptr [rsp + 0x20]
    mov rcx, qword ptr [rsp + 0x28]
    xor edx, edx
    mov rax, r8
    div rcx
    xor edx, edx
    mov r9, rax
    mov rax, r8
    div rcx
    mov r8d, edx
    cmp r9, r15
    jbe 0x1400172e2
    movabs rax, 0xffffffff00000001
    add rax, r9
    mov r9, r15
    imul rax, rcx
    add r8, rax
    cmp r8, r15
    ja 0x140017325
    mov edx, dword ptr [rsp + 0x270]
    mov r14, rcx
    mov eax, edx
    imul rax, r9
    nop word ptr [rax + rax]
    mov rcx, r8
    shl rcx, 0x20
    or rcx, r11
    cmp rax, rcx
    jbe 0x14001731d
    dec r9
    sub rax, rdx
    add r8, r14
    cmp r8, r15
    jbe 0x140017300
    mov r14d, dword ptr [rsp + 0x260]
    test r9, r9
    je 0x1400173f0
    mov r10, rbp
    mov r11d, ebp
    test edi, edi
    je 0x14001739c
    mov r14, qword ptr [rsp + 0x268]
    mov r15d, dword ptr [rsp + 0x260]
    add r14, 4
    nop dword ptr [rax]
    mov eax, dword ptr [r14]
    lea r14, [r14 + 4]
    imul rax, r9
    add r10, rax
    lea eax, [r11 + r12]
    mov r8d, r10d
    mov ecx, eax
    shr r10, 0x20
    mov eax, dword ptr [rsi + rax*4 + 4]
    mov rdx, r10
    inc r10
    cmp eax, r8d
    cmovae r10, rdx
    sub eax, r8d
    inc r11d
    mov dword ptr [rsi + rcx*4 + 4], eax
    cmp r11d, edi
    jb 0x140017350
    mov r14d, r15d
    mov dword ptr [rsp + 0x260], r15d
    mov r15d, 0xffffffff
    mov r11, qword ptr [rsp + 0x268]
    mov eax, dword ptr [rsp + 0x278]
    add r11, 4
    cmp rax, r10
    jae 0x1400173ec
    mov r10d, ebp
    test edi, edi
    je 0x1400173e9
    mov r8, rbp
    nop 
    lea eax, [r10 + r12]
    inc r10d
    mov ecx, dword ptr [rsi + rax*4 + 4]
    lea rdx, [rsi + rax*4]
    mov eax, dword ptr [r11]
    lea r11, [r11 + 4]
    add r8, rax
    add r8, rcx
    mov dword ptr [rdx + 4], r8d
    shr r8, 0x20
    cmp r10d, edi
    jb 0x1400173c0
    dec r9
    lea r10d, [r13 - 1]
    mov r11, qword ptr [rsp + 0x30]
    dec r13d
    shl r11, 0x20
    mov eax, r9d
    add r11, rax
    sub r12d, 1
    mov qword ptr [rsp + 0x30], r11
    jns 0x140017240
    mov r13, qword ptr [rsp + 0x218]
    inc r10d
    mov ecx, r10d
    cmp r10d, dword ptr [rsi]
    jae 0x140017430
    mov eax, ecx
    inc ecx
    mov dword ptr [rsi + rax*4 + 4], ebp
    cmp ecx, dword ptr [rsi]
    jb 0x140017424
    mov dword ptr [rsi], r10d
    test r10d, r10d
    je 0x140017453
    nop dword ptr [rax + rax]
    lea edx, [r10 - 1]
    mov r10d, edx
    cmp dword ptr [rsi + rdx*4 + 4], ebp
    jne 0x140017453
    mov dword ptr [rsi], edx
    test edx, edx
    jne 0x140017440
    mov rax, r11
    jmp 0x14001745a
    xor eax, eax
    add rsp, 0x220
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    pop rbp
    pop rbx
    ret
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r14
    push r15
    lea rbp, [rsp - 0x6f0]
    sub rsp, 0x7f0
    mov rax, qword ptr [rip + 0x12b73]
    xor rax, rsp
    mov qword ptr [rbp + 0x6e0], rax
    mov r14, qword ptr [rbp + 0x750]
    mov r12, r9
    mov qword ptr [rsp + 0x50], rcx
    mov esi, edx
    lea rcx, [rsp + 0x70]
    mov qword ptr [rbp - 0x78], r14
    mov qword ptr [rbp - 0x68], r9
    mov dword ptr [rsp + 0x64], r8d
    call 0x14001a3ac
    mov eax, dword ptr [rsp + 0x70]
    mov r15d, 1
    and eax, 0x1f
    cmp al, 0x1f
    jne 0x1400174d7
    mov byte ptr [rsp + 0x78], 0
    jmp 0x1400174e6
    lea rcx, [rsp + 0x70]
    call 0x14001a424
    mov byte ptr [rsp + 0x78], r15b
    mov rbx, qword ptr [rsp + 0x50]
    mov edi, 0x20
    mov eax, edi
    mov qword ptr [r12 + 8], r14
    test rbx, rbx
    lea ecx, [rdi + 0xd]
    cmovs eax, ecx
    xor r8d, r8d
    xor edx, edx
    mov dword ptr [r12], eax
    lea rcx, [rbp - 0x80]
    call 0x14001a348
    mov rax, rbx
    mov edx, 0x7ff
    shr rax, 0x34
    movabs rcx, 0xfffffffffffff
    and rax, rdx
    jne 0x14001754e
    test rcx, rbx
    je 0x14001753f
    test dword ptr [rbp - 0x80], 0x1000000
    je 0x140017602
    and dword ptr [r12 + 4], 0
    lea r8, [rip + 0xd850]
    jmp 0x1400175ae
    cmp rax, rdx
    jne 0x140017602
    mov rax, rbx
    and rax, rcx
    jne 0x140017564
    mov eax, r15d
    jmp 0x14001758e
    test rbx, rbx
    jns 0x14001757f
    movabs rcx, 0x8000000000000
    cmp rax, rcx
    jne 0x14001757f
    mov eax, 4
    jmp 0x14001758e
    mov rax, rbx
    shr rax, 0x33
    not eax
    and eax, r15d
    or eax, 2
    mov dword ptr [r12 + 4], r15d
    sub eax, r15d
    je 0x1400175dc
    sub eax, r15d
    je 0x1400175d3
    sub eax, r15d
    je 0x1400175ca
    cmp eax, r15d
    jne 0x140017602
    lea r8, [rip + 0xd80a]
    mov rdx, qword ptr [rbp + 0x758]
    mov rcx, r14
    call 0x14000ffe0
    test eax, eax
    jne 0x1400186e4
    jmp 0x1400186af
    lea r8, [rip + 0xd7df]
    jmp 0x1400175ae
    lea r8, [rip + 0xd7ce]
    jmp 0x1400175ae
    mov rdx, qword ptr [rbp + 0x758]
    lea r8, [rip + 0xd7b6]
    mov rcx, r14
    call 0x14000ffe0
    test eax, eax
    jne 0x1400186e4
    xor r15d, r15d
    jmp 0x1400186af
    movabs rax, 0x7fffffffffffffff
    lea rcx, [rsp + 0x68]
    and rbx, rax
    xor r8d, r8d
    mov qword ptr [rsp + 0x50], rbx
    xor edx, edx
    mov ebx, 0x8001f
    mov dword ptr [rsp + 0x6c], ebx
    call 0x14001a348
    mov r8d, dword ptr [rsp + 0x6c]
    lea rcx, [rsp + 0x40]
    mov edx, ebx
    call 0x14001a348
    movsd xmm0, qword ptr [rsp + 0x50]
    inc esi
    mov r9d, 0x7ff
    movsd qword ptr [rsp + 0x58], xmm0
    mov rdx, qword ptr [rsp + 0x58]
    mov r8, rdx
    mov dword ptr [rsp + 0x60], esi
    shr r8, 0x34
    mov esi, 2
    mov rcx, r8
    and rcx, r9
    mov rax, rcx
    neg rax
    movabs rax, 0x10000000000000
    sbb rbx, rbx
    and rbx, rax
    movabs rax, 0xfffffffffffff
    and rdx, rax
    add rbx, rdx
    neg rcx
    sbb eax, eax
    and r8d, r9d
    lea r12d, [rsi + rax]
    add r12d, r8d
    call 0x14001a540
    call 0x14001a474
    cvttsd2si ecx, xmm0
    mov dword ptr [rbp - 0x5c], ebx
    lea eax, [rcx - 0x7fffffff]
    and eax, 0xfffffffe
    neg eax
    sbb eax, eax
    shr rbx, 0x20
    and eax, ecx
    mov dword ptr [rbp - 0x58], ebx
    mov dword ptr [rsp + 0x30], eax
    mov eax, ebx
    neg eax
    sbb edx, edx
    neg edx
    add edx, r15d
    mov dword ptr [rbp - 0x60], edx
    cmp r12d, 0x434
    jb 0x140017901
    xor eax, eax
    mov dword ptr [rbp + 0x348], 0x100000
    mov dword ptr [rbp + 0x344], eax
    mov dword ptr [rbp + 0x340], esi
    test ebx, ebx
    je 0x140017813
    xor r8d, r8d
    mov eax, dword ptr [rbp + r8*4 - 0x5c]
    cmp dword ptr [rbp + r8*4 + 0x344], eax
    jne 0x140017813
    add r8d, r15d
    cmp r8d, esi
    jne 0x14001770a
    and dword ptr [rsp + 0x40], 0
    lea r11d, [r12 - 0x432]
    mov r8d, r11d
    lea eax, [rdx - 1]
    and r11d, 0x1f
    shr r8d, 5
    mov esi, edi
    mov rbx, r15
    sub esi, r11d
    mov ecx, esi
    shl rbx, cl
    sub ebx, r15d
    bsr eax, dword ptr [rbp + rax*4 - 0x5c]
    mov r12d, ebx
    not r12d
    je 0x140017761
    inc eax
    jmp 0x140017763
    xor eax, eax
    sub edi, eax
    lea eax, [rdx + r8]
    cmp eax, 0x73
    ja 0x1400177f3
    xor r14d, r14d
    cmp r11d, edi
    seta r14b
    add r14d, edx
    add r14d, r8d
    cmp r14d, 0x73
    ja 0x1400177f3
    lea edi, [r8 - 1]
    lea r10d, [r14 - 1]
    cmp r10d, edi
    je 0x1400177dd
    mov eax, r10d
    sub eax, r8d
    lea ecx, [rax - 1]
    cmp eax, edx
    jae 0x1400177a9
    mov r9d, dword ptr [rbp + rax*4 - 0x5c]
    jmp 0x1400177ac
    xor r9d, r9d
    cmp ecx, edx
    jae 0x1400177b6
    mov edx, dword ptr [rbp + rcx*4 - 0x5c]
    jmp 0x1400177b8
    xor edx, edx
    and edx, r12d
    mov ecx, esi
    shr edx, cl
    and r9d, ebx
    mov ecx, r11d
    shl r9d, cl
    or edx, r9d
    mov dword ptr [rbp + r10*4 - 0x5c], edx
    dec r10d
    cmp r10d, edi
    je 0x1400177dd
    mov edx, dword ptr [rbp - 0x60]
    jmp 0x140017795
    xor ecx, ecx
    test r8d, r8d
    je 0x1400177f6
    and dword ptr [rbp + rcx*4 - 0x5c], 0
    add ecx, r15d
    cmp ecx, r8d
    jne 0x1400177e4
    jmp 0x1400177f6
    xor r14d, r14d
    mov dword ptr [rbp - 0x60], r14d
    mov r12d, r15d
    mov dword ptr [rbp + 0x170], r15d
    mov dword ptr [rbp + 0x174], 4
    jmp 0x140017b32
    and dword ptr [rsp + 0x40], 0
    lea r11d, [r12 - 0x433]
    mov r8d, r11d
    lea eax, [rdx - 1]
    and r11d, 0x1f
    shr r8d, 5
    mov esi, edi
    mov rbx, r15
    sub esi, r11d
    mov ecx, esi
    shl rbx, cl
    sub ebx, r15d
    bsr eax, dword ptr [rbp + rax*4 - 0x5c]
    mov r12d, ebx
    not r12d
    je 0x14001784f
    inc eax
    jmp 0x140017851
    xor eax, eax
    sub edi, eax
    lea eax, [rdx + r8]
    cmp eax, 0x73
    ja 0x1400178e1
    xor r14d, r14d
    cmp r11d, edi
    seta r14b
    add r14d, edx
    add r14d, r8d
    cmp r14d, 0x73
    ja 0x1400178e1
    lea edi, [r8 - 1]
    lea r10d, [r14 - 1]
    cmp r10d, edi
    je 0x1400178cb
    mov eax, r10d
    sub eax, r8d
    lea ecx, [rax - 1]
    cmp eax, edx
    jae 0x140017897
    mov r9d, dword ptr [rbp + rax*4 - 0x5c]
    jmp 0x14001789a
    xor r9d, r9d
    cmp ecx, edx
    jae 0x1400178a4
    mov edx, dword ptr [rbp + rcx*4 - 0x5c]
    jmp 0x1400178a6
    xor edx, edx
    and edx, r12d
    mov ecx, esi
    shr edx, cl
    and r9d, ebx
    mov ecx, r11d
    shl r9d, cl
    or edx, r9d
    mov dword ptr [rbp + r10*4 - 0x5c], edx
    dec r10d
    cmp r10d, edi
    je 0x1400178cb
    mov edx, dword ptr [rbp - 0x60]
    jmp 0x140017883
    xor ecx, ecx
    test r8d, r8d
    je 0x1400178e4
    and dword ptr [rbp + rcx*4 - 0x5c], 0
    add ecx, r15d
    cmp ecx, r8d
    jne 0x1400178d2
    jmp 0x1400178e4
    xor r14d, r14d
    mov dword ptr [rbp - 0x60], r14d
    mov r12d, r15d
    mov dword ptr [rbp + 0x170], r15d
    mov dword ptr [rbp + 0x174], 2
    jmp 0x140017b32
    cmp r12d, 0x36
    je 0x140017a4f
    xor eax, eax
    mov dword ptr [rbp + 0x348], 0x100000
    mov dword ptr [rbp + 0x344], eax
    mov dword ptr [rbp + 0x340], esi
    test ebx, ebx
    je 0x140017a4f
    xor r8d, r8d
    mov eax, dword ptr [rbp + r8*4 - 0x5c]
    cmp dword ptr [rbp + r8*4 + 0x344], eax
    jne 0x140017a4f
    add r8d, r15d
    cmp r8d, esi
    jne 0x14001792e
    and dword ptr [rsp + 0x40], 0
    bsr eax, ebx
    je 0x140017957
    inc eax
    jmp 0x140017959
    xor eax, eax
    xor r14d, r14d
    sub edi, eax
    cmp edi, esi
    setb r14b
    or r11d, 0xffffffff
    add r14d, edx
    cmp r14d, 0x73
    jbe 0x1400179fc
    xor r14d, r14d
    mov esi, 0x436
    mov dword ptr [rbp - 0x60], r14d
    sub esi, r12d
    lea rcx, [rbp + 0x344]
    mov edi, esi
    xor edx, edx
    shr edi, 5
    lea rbx, [rdi*4]
    mov r8, rbx
    call 0x14001cd80
    and esi, 0x1f
    mov eax, r15d
    mov cl, sil
    shl eax, cl
    mov dword ptr [rbp + rbx + 0x344], eax
    lea r12d, [rdi + 1]
    mov r8d, r12d
    shl r8, 2
    mov dword ptr [rbp + 0x340], r12d
    mov dword ptr [rbp + 0x170], r12d
    test r8, r8
    je 0x140017b32
    mov ebx, 0x1cc
    lea rcx, [rbp + 0x174]
    cmp r8, rbx
    ja 0x140017b11
    lea rdx, [rbp + 0x344]
    call 0x14001c6e0
    jmp 0x140017b2b
    lea eax, [r14 - 1]
    cmp eax, r11d
    je 0x140017978
    mov r10d, eax
    lea r8d, [rax - 1]
    cmp eax, edx
    jae 0x140017a1b
    mov r9d, dword ptr [rbp + r10*4 - 0x5c]
    jmp 0x140017a1e
    xor r9d, r9d
    cmp r8d, edx
    jae 0x140017a2a
    mov ecx, dword ptr [rbp + r8*4 - 0x5c]
    jmp 0x140017a2c
    xor ecx, ecx
    shr ecx, 0x1e
    lea eax, [r9*4]
    or ecx, eax
    mov eax, r8d
    mov dword ptr [rbp + r10*4 - 0x5c], ecx
    cmp r8d, r11d
    je 0x140017978
    mov edx, dword ptr [rbp - 0x60]
    jmp 0x140017a09
    neg ebx
    sbb rax, rax
    and dword ptr [rsp + 0x40], 0
    and eax, 4
    bsr eax, dword ptr [rbp + rax - 0x5c]
    je 0x140017a67
    inc eax
    jmp 0x140017a69
    xor eax, eax
    xor r14d, r14d
    sub edi, eax
    cmp edi, r15d
    setb r14b
    or r11d, 0xffffffff
    add r14d, edx
    cmp r14d, 0x73
    jbe 0x140017ac6
    xor r14d, r14d
    mov esi, 0x435
    mov dword ptr [rbp - 0x60], r14d
    sub esi, r12d
    lea rcx, [rbp + 0x344]
    mov edi, esi
    xor edx, edx
    shr edi, 5
    lea rbx, [rdi*4]
    mov r8, rbx
    call 0x14001cd80
    and esi, 0x1f
    mov eax, r15d
    mov cl, sil
    shl eax, cl
    mov dword ptr [rbp + rbx + 0x344], eax
    jmp 0x1400179b4
    lea eax, [r14 - 1]
    cmp eax, r11d
    je 0x140017a85
    mov r10d, eax
    lea r8d, [rax - 1]
    cmp eax, edx
    jae 0x140017ae1
    mov r9d, dword ptr [rbp + r10*4 - 0x5c]
    jmp 0x140017ae4
    xor r9d, r9d
    cmp r8d, edx
    jae 0x140017af0
    mov ecx, dword ptr [rbp + r8*4 - 0x5c]
    jmp 0x140017af2
    xor ecx, ecx
    shr ecx, 0x1f
    lea eax, [r9 + r9]
    or ecx, eax
    mov eax, r8d
    mov dword ptr [rbp + r10*4 - 0x5c], ecx
    cmp r8d, r11d
    je 0x140017a85
    mov edx, dword ptr [rbp - 0x60]
    jmp 0x140017acf
    mov r8, rbx
    xor edx, edx
    call 0x14001cd80
    call 0x140010908
    mov dword ptr [rax], 0x22
    call 0x14000b5bc
    mov r12d, dword ptr [rbp + 0x170]
    mov ecx, dword ptr [rsp + 0x30]
    mov eax, 0xcccccccd
    test ecx, ecx
    js 0x14001802b
    mul ecx
    mov eax, edx
    lea rdx, [rip - 0x17b4e]
    shr eax, 3
    mov dword ptr [rsp + 0x50], eax
    mov ecx, eax
    mov dword ptr [rsp + 0x38], eax
    test eax, eax
    je 0x140017f89
    mov r8d, 0x26
    cmp ecx, r8d
    mov eax, ecx
    cmova eax, r8d
    mov dword ptr [rsp + 0x48], eax
    dec eax
    mov edi, eax
    movzx ecx, byte ptr [rdx + rax*4 + 0x24ce2]
    movzx esi, byte ptr [rdx + rax*4 + 0x24ce3]
    xor edx, edx
    lea rbx, [rcx*4]
    lea eax, [rsi + rcx]
    mov r8, rbx
    lea rcx, [rbp + 0x344]
    mov dword ptr [rbp + 0x340], eax
    call 0x14001cd80
    lea rcx, [rip - 0x17bb3]
    shl rsi, 2
    movzx eax, word ptr [rcx + rdi*4 + 0x24ce0]
    lea rdx, [rcx + 0x243d0]
    lea rcx, [rbp + 0x344]
    mov r8, rsi
    add rcx, rbx
    lea rdx, [rdx + rax*4]
    call 0x14001c6e0
    mov r9d, dword ptr [rbp + 0x340]
    cmp r9d, r15d
    ja 0x140017c43
    mov eax, dword ptr [rbp + 0x344]
    test eax, eax
    jne 0x140017bfa
    xor r12d, r12d
    jmp 0x140017d12
    cmp eax, r15d
    je 0x140017d30
    test r12d, r12d
    je 0x140017d30
    xor r8d, r8d
    mov r10, rax
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 + 0x174]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 + 0x174], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r12d
    jne 0x140017c15
    jmp 0x140017cec
    cmp r12d, r15d
    ja 0x140017da0
    mov ebx, dword ptr [rbp + 0x174]
    mov r8, r9
    shl r8, 2
    mov r12d, r9d
    mov dword ptr [rbp + 0x170], r9d
    test r8, r8
    je 0x140017ca8
    mov eax, 0x1cc
    lea rcx, [rbp + 0x174]
    cmp r8, rax
    ja 0x140017c87
    lea rdx, [rbp + 0x344]
    call 0x14001c6e0
    jmp 0x140017ca1
    mov r8, rax
    xor edx, edx
    call 0x14001cd80
    call 0x140010908
    mov dword ptr [rax], 0x22
    call 0x14000b5bc
    mov r12d, dword ptr [rbp + 0x170]
    test ebx, ebx
    je 0x140017bf2
    cmp ebx, r15d
    je 0x140017d30
    test r12d, r12d
    je 0x140017d30
    xor r8d, r8d
    mov r10, rbx
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 + 0x174]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 + 0x174], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r12d
    jne 0x140017cc3
    test r8d, r8d
    je 0x140017d29
    cmp dword ptr [rbp + 0x170], 0x73
    jae 0x140017d1b
    mov eax, dword ptr [rbp + 0x170]
    mov dword ptr [rbp + rax*4 + 0x174], r8d
    mov r12d, dword ptr [rbp + 0x170]
    add r12d, r15d
    mov dword ptr [rbp + 0x170], r12d
    jmp 0x140017d30
    xor r12d, r12d
    xor al, al
    mov dword ptr [rbp + 0x170], r12d
    jmp 0x140017d33
    mov r12d, dword ptr [rbp + 0x170]
    mov al, r15b
    test al, al
    jne 0x140017f66
    xor r12d, r12d
    mov dword ptr [rbp + 0x170], r12d
    mov rsi, qword ptr [rbp - 0x78]
    mov rbx, rsi
    test r14d, r14d
    je 0x140018497
    xor r8d, r8d
    xor r9d, r9d
    mov eax, dword ptr [rbp + r9*4 - 0x5c]
    lea rcx, [rax + rax*4]
    mov eax, r8d
    lea r8, [rax + rcx*2]
    mov dword ptr [rbp + r9*4 - 0x5c], r8d
    add r9d, r15d
    shr r8, 0x20
    cmp r9d, r14d
    jne 0x140017d5b
    test r8d, r8d
    je 0x140018497
    cmp dword ptr [rbp - 0x60], 0x73
    jae 0x140018474
    mov eax, dword ptr [rbp - 0x60]
    mov dword ptr [rbp + rax*4 - 0x5c], r8d
    add dword ptr [rbp - 0x60], r15d
    jmp 0x140018497
    cmp r9d, r12d
    lea rdx, [rbp + 0x174]
    mov ebx, r12d
    lea rcx, [rbp + 0x344]
    cmovae rcx, rdx
    lea r8, [rbp + 0x344]
    cmovb ebx, r9d
    mov qword ptr [rsp + 0x58], rcx
    setb al
    mov dword ptr [rsp + 0x34], ebx
    lea rdx, [rbp + 0x174]
    cmovae rdx, r8
    test al, al
    mov qword ptr [rsp + 0x40], rdx
    cmovne r9d, r12d
    xor r12d, r12d
    xor r10d, r10d
    mov dword ptr [rbp + 0x510], r12d
    test ebx, ebx
    je 0x140017f13
    mov esi, dword ptr [rcx + r10*4]
    test esi, esi
    jne 0x140017e23
    cmp r10d, r12d
    jne 0x140017f07
    and dword ptr [rbp + r10*4 + 0x514], esi
    lea r12d, [r10 + 1]
    mov dword ptr [rbp + 0x510], r12d
    jmp 0x140017f07
    xor r11d, r11d
    mov r8d, r10d
    test r9d, r9d
    je 0x140017ef3
    mov ebx, r10d
    neg ebx
    cmp r8d, 0x73
    je 0x140017e9d
    mov edi, r8d
    mov ecx, ebx
    cmp r8d, r12d
    jne 0x140017e59
    and dword ptr [rbp + rdi*4 + 0x514], 0
    lea eax, [r8 + 1]
    mov dword ptr [rbp + 0x510], eax
    mov eax, r8d
    add r8d, r15d
    add eax, ecx
    mov edx, dword ptr [rdx + rax*4]
    mov eax, r11d
    imul rdx, rsi
    add rdx, rax
    mov eax, dword ptr [rbp + rdi*4 + 0x514]
    add rdx, rax
    lea eax, [r8 + rbx]
    mov r11, rdx
    mov dword ptr [rbp + rdi*4 + 0x514], edx
    mov r12d, dword ptr [rbp + 0x510]
    shr r11, 0x20
    cmp eax, r9d
    je 0x140017e9d
    mov rdx, qword ptr [rsp + 0x40]
    jmp 0x140017e37
    test r11d, r11d
    je 0x140017eef
    cmp r8d, 0x73
    je 0x140017d3b
    lea eax, [r8 + 1]
    mov edx, r8d
    cmp r8d, r12d
    mov r8d, eax
    jne 0x140017ec9
    and dword ptr [rbp + rdx*4 + 0x514], 0
    mov dword ptr [rbp + 0x510], eax
    mov eax, dword ptr [rbp + rdx*4 + 0x514]
    mov ecx, r11d
    add rcx, rax
    mov dword ptr [rbp + rdx*4 + 0x514], ecx
    mov r12d, dword ptr [rbp + 0x510]
    shr rcx, 0x20
    mov r11d, ecx
    test ecx, ecx
    jne 0x140017ea2
    mov ebx, dword ptr [rsp + 0x34]
    cmp r8d, 0x73
    je 0x140017d3b
    mov rcx, qword ptr [rsp + 0x58]
    mov rdx, qword ptr [rsp + 0x40]
    add r10d, r15d
    cmp r10d, ebx
    jne 0x140017dfa
    mov r8d, r12d
    shl r8, 2
    mov dword ptr [rbp + 0x170], r12d
    test r8, r8
    je 0x140017f66
    mov eax, 0x1cc
    lea rcx, [rbp + 0x174]
    cmp r8, rax
    ja 0x140017f45
    lea rdx, [rbp + 0x514]
    call 0x14001c6e0
    jmp 0x140017f5f
    mov r8, rax
    xor edx, edx
    call 0x14001cd80
    call 0x140010908
    mov dword ptr [rax], 0x22
    call 0x14000b5bc
    mov r12d, dword ptr [rbp + 0x170]
    mov ecx, dword ptr [rsp + 0x38]
    lea rdx, [rip - 0x17f71]
    sub ecx, dword ptr [rsp + 0x48]
    mov r8d, 0x26
    mov dword ptr [rsp + 0x38], ecx
    jne 0x140017b69
    mov eax, dword ptr [rsp + 0x50]
    mov ecx, dword ptr [rsp + 0x30]
    lea eax, [rax + rax*4]
    add eax, eax
    sub ecx, eax
    je 0x140017d45
    lea eax, [rcx - 1]
    mov eax, dword ptr [rdx + rax*4 + 0x24d78]
    test eax, eax
    je 0x140017d3b
    cmp eax, r15d
    je 0x140017d45
    test r12d, r12d
    je 0x140017d45
    xor r8d, r8d
    mov r10d, eax
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 + 0x174]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 + 0x174], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r12d
    jne 0x140017fc7
    test r8d, r8d
    je 0x14001801f
    cmp dword ptr [rbp + 0x170], 0x73
    jae 0x140017d3b
    mov eax, dword ptr [rbp + 0x170]
    mov dword ptr [rbp + rax*4 + 0x174], r8d
    mov r12d, dword ptr [rbp + 0x170]
    add r12d, r15d
    jmp 0x140017d3e
    mov r12d, dword ptr [rbp + 0x170]
    jmp 0x140017d45
    neg ecx
    lea r8, [rip - 0x18034]
    mul ecx
    mov dword ptr [rsp + 0x48], ecx
    mov eax, edx
    shr eax, 3
    mov dword ptr [rsp + 0x40], eax
    mov edx, eax
    mov dword ptr [rsp + 0x34], eax
    test eax, eax
    je 0x1400183e6
    mov ecx, 0x26
    cmp edx, ecx
    mov eax, edx
    cmova eax, ecx
    xor edx, edx
    mov dword ptr [rsp + 0x50], eax
    dec eax
    mov edi, eax
    movzx ecx, byte ptr [r8 + rax*4 + 0x24ce2]
    movzx esi, byte ptr [r8 + rax*4 + 0x24ce3]
    lea rbx, [rcx*4]
    lea eax, [rsi + rcx]
    mov r8, rbx
    lea rcx, [rbp + 0x344]
    mov dword ptr [rbp + 0x340], eax
    call 0x14001cd80
    lea rcx, [rip - 0x180a0]
    shl rsi, 2
    movzx eax, word ptr [rcx + rdi*4 + 0x24ce0]
    lea rdx, [rcx + 0x243d0]
    lea rcx, [rbp + 0x344]
    mov r8, rsi
    add rcx, rbx
    lea rdx, [rdx + rax*4]
    call 0x14001c6e0
    mov r9d, dword ptr [rbp + 0x340]
    cmp r9d, r15d
    ja 0x14001812a
    mov eax, dword ptr [rbp + 0x344]
    test eax, eax
    jne 0x1400180e7
    xor r14d, r14d
    jmp 0x1400181db
    cmp eax, r15d
    je 0x1400181f0
    test r14d, r14d
    je 0x1400181f0
    xor r8d, r8d
    mov r10, rax
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 - 0x5c]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 - 0x5c], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r14d
    jne 0x140018102
    jmp 0x1400181c1
    cmp r14d, r15d
    ja 0x14001820b
    mov ebx, dword ptr [rbp - 0x5c]
    mov r8, r9
    shl r8, 2
    mov r14d, r9d
    mov dword ptr [rbp - 0x60], r9d
    test r8, r8
    je 0x140018183
    mov eax, 0x1cc
    lea rcx, [rbp - 0x5c]
    cmp r8, rax
    ja 0x140018165
    lea rdx, [rbp + 0x344]
    call 0x14001c6e0
    jmp 0x14001817f
    mov r8, rax
    xor edx, edx
    call 0x14001cd80
    call 0x140010908
    mov dword ptr [rax], 0x22
    call 0x14000b5bc
    mov r14d, dword ptr [rbp - 0x60]
    test ebx, ebx
    je 0x1400180df
    cmp ebx, r15d
    je 0x1400181f0
    test r14d, r14d
    je 0x1400181f0
    xor r8d, r8d
    mov r10, rbx
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 - 0x5c]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 - 0x5c], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r14d
    jne 0x14001819e
    test r8d, r8d
    je 0x1400181ec
    cmp dword ptr [rbp - 0x60], 0x73
    jae 0x1400181e1
    mov eax, dword ptr [rbp - 0x60]
    mov dword ptr [rbp + rax*4 - 0x5c], r8d
    mov r14d, dword ptr [rbp - 0x60]
    add r14d, r15d
    mov dword ptr [rbp - 0x60], r14d
    jmp 0x1400181f0
    xor r14d, r14d
    xor al, al
    mov dword ptr [rbp - 0x60], r14d
    jmp 0x1400181f3
    mov r14d, dword ptr [rbp - 0x60]
    mov al, r15b
    test al, al
    jne 0x1400183c0
    mov rsi, qword ptr [rbp - 0x78]
    and dword ptr [rbp - 0x60], 0
    mov rbx, rsi
    jmp 0x140018497
    cmp r9d, r14d
    lea rdx, [rbp - 0x5c]
    mov r11d, r14d
    lea rcx, [rbp + 0x344]
    cmovae rcx, rdx
    lea r8, [rbp + 0x344]
    cmovb r11d, r9d
    mov qword ptr [rbp - 0x70], rcx
    setb al
    mov dword ptr [rsp + 0x38], r11d
    lea rdx, [rbp - 0x5c]
    cmovae rdx, r8
    test al, al
    mov qword ptr [rsp + 0x58], rdx
    cmovne r9d, r14d
    xor r14d, r14d
    xor r10d, r10d
    mov dword ptr [rbp + 0x510], r14d
    test r11d, r11d
    je 0x140018376
    mov esi, dword ptr [rcx + r10*4]
    test esi, esi
    jne 0x140018289
    cmp r10d, r14d
    jne 0x14001836a
    and dword ptr [rbp + r10*4 + 0x514], esi
    lea r14d, [r10 + 1]
    mov dword ptr [rbp + 0x510], r14d
    jmp 0x14001836a
    xor ebx, ebx
    mov r8d, r10d
    test r9d, r9d
    je 0x140018357
    mov r11d, r10d
    neg r11d
    cmp r8d, 0x73
    je 0x140018303
    mov edi, r8d
    mov ecx, r11d
    cmp r8d, r14d
    jne 0x1400182c0
    and dword ptr [rbp + rdi*4 + 0x514], 0
    lea eax, [r8 + 1]
    mov dword ptr [rbp + 0x510], eax
    mov eax, r8d
    add r8d, r15d
    add eax, ecx
    mov edx, dword ptr [rdx + rax*4]
    mov eax, dword ptr [rbp + rdi*4 + 0x514]
    imul rdx, rsi
    add rdx, rax
    mov eax, ebx
    add rdx, rax
    lea eax, [r11 + r8]
    mov rbx, rdx
    mov dword ptr [rbp + rdi*4 + 0x514], edx
    mov r14d, dword ptr [rbp + 0x510]
    shr rbx, 0x20
    cmp eax, r9d
    je 0x140018303
    mov rdx, qword ptr [rsp + 0x58]
    jmp 0x14001829d
    test ebx, ebx
    je 0x140018352
    cmp r8d, 0x73
    je 0x1400181fb
    lea eax, [r8 + 1]
    mov edx, r8d
    cmp r8d, r14d
    mov r8d, eax
    jne 0x14001832e
    and dword ptr [rbp + rdx*4 + 0x514], 0
    mov dword ptr [rbp + 0x510], eax
    mov ecx, dword ptr [rbp + rdx*4 + 0x514]
    mov eax, ebx
    add rcx, rax
    mov dword ptr [rbp + rdx*4 + 0x514], ecx
    mov r14d, dword ptr [rbp + 0x510]
    shr rcx, 0x20
    mov ebx, ecx
    test ecx, ecx
    jne 0x140018307
    mov r11d, dword ptr [rsp + 0x38]
    cmp r8d, 0x73
    je 0x1400181fb
    mov rcx, qword ptr [rbp - 0x70]
    mov rdx, qword ptr [rsp + 0x58]
    add r10d, r15d
    cmp r10d, r11d
    jne 0x140018260
    mov r8d, r14d
    shl r8, 2
    mov dword ptr [rbp - 0x60], r14d
    test r8, r8
    je 0x1400183c0
    mov eax, 0x1cc
    lea rcx, [rbp - 0x5c]
    cmp r8, rax
    ja 0x1400183a2
    lea rdx, [rbp + 0x514]
    call 0x14001c6e0
    jmp 0x1400183bc
    mov r8, rax
    xor edx, edx
    call 0x14001cd80
    call 0x140010908
    mov dword ptr [rax], 0x22
    call 0x14000b5bc
    mov r14d, dword ptr [rbp - 0x60]
    mov edx, dword ptr [rsp + 0x34]
    lea r8, [rip - 0x183cb]
    sub edx, dword ptr [rsp + 0x50]
    mov ecx, 0x26
    mov dword ptr [rsp + 0x34], edx
    jne 0x140018056
    mov ecx, dword ptr [rsp + 0x48]
    mov eax, dword ptr [rsp + 0x40]
    lea eax, [rax + rax*4]
    add eax, eax
    sub ecx, eax
    je 0x140017d45
    lea eax, [rcx - 1]
    mov eax, dword ptr [r8 + rax*4 + 0x24d78]
    test eax, eax
    je 0x1400181fb
    cmp eax, r15d
    je 0x140017d45
    test r14d, r14d
    je 0x140017d45
    xor r8d, r8d
    mov r10d, eax
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 - 0x5c]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 - 0x5c], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r14d
    jne 0x140018421
    test r8d, r8d
    je 0x14001846b
    cmp dword ptr [rbp - 0x60], 0x73
    jae 0x1400181fb
    mov eax, dword ptr [rbp - 0x60]
    mov dword ptr [rbp + rax*4 - 0x5c], r8d
    mov r14d, dword ptr [rbp - 0x60]
    add r14d, r15d
    mov dword ptr [rbp - 0x60], r14d
    jmp 0x140017d45
    mov r14d, dword ptr [rbp - 0x60]
    jmp 0x140017d45
    and dword ptr [rbp + 0x340], 0
    lea r8, [rbp + 0x344]
    and dword ptr [rbp - 0x60], 0
    lea rcx, [rbp - 0x5c]
    xor r9d, r9d
    mov edx, 0x1cc
    call 0x1400186fc
    lea rdx, [rbp + 0x170]
    lea rcx, [rbp - 0x60]
    call 0x140016fd0
    mov edi, dword ptr [rsp + 0x30]
    cmp eax, 0xa
    jne 0x140018544
    add edi, r15d
    mov byte ptr [rsi], 0x31
    lea rbx, [rsi + 1]
    test r12d, r12d
    je 0x140018555
    xor r8d, r8d
    xor r9d, r9d
    mov eax, dword ptr [rbp + r9*4 + 0x174]
    lea rcx, [rax + rax*4]
    mov eax, r8d
    lea r8, [rax + rcx*2]
    mov dword ptr [rbp + r9*4 + 0x174], r8d
    add r9d, r15d
    shr r8, 0x20
    cmp r9d, r12d
    jne 0x1400184cd
    test r8d, r8d
    je 0x140018555
    cmp dword ptr [rbp + 0x170], 0x73
    jae 0x140018519
    mov eax, dword ptr [rbp + 0x170]
    mov dword ptr [rbp + rax*4 + 0x174], r8d
    add dword ptr [rbp + 0x170], r15d
    jmp 0x140018555
    and dword ptr [rbp + 0x340], 0
    lea r8, [rbp + 0x344]
    and dword ptr [rbp + 0x170], 0
    lea rcx, [rbp + 0x174]
    xor r9d, r9d
    mov edx, 0x1cc
    call 0x1400186fc
    jmp 0x140018555
    test eax, eax
    jne 0x14001854d
    sub edi, r15d
    jmp 0x140018555
    add al, 0x30
    lea rbx, [rsi + 1]
    mov byte ptr [rsi], al
    mov rax, qword ptr [rbp - 0x68]
    mov dword ptr [rax + 4], edi
    mov eax, dword ptr [rsp + 0x60]
    test edi, edi
    js 0x140018574
    cmp eax, 0x7fffffff
    ja 0x140018574
    cmp dword ptr [rsp + 0x64], 0
    jne 0x140018574
    add eax, edi
    mov edi, eax
    mov rax, qword ptr [rbp + 0x758]
    dec rax
    cmp rax, rdi
    cmovb rdi, rax
    add rdi, rsi
    xor sil, sil
    cmp rbx, rdi
    je 0x140018688
    mov r14d, 9
    mov r9d, dword ptr [rbp - 0x60]
    test r9d, r9d
    je 0x14001868c
    xor r8d, r8d
    xor r10d, r10d
    mov eax, dword ptr [rbp + r10*4 - 0x5c]
    imul rcx, rax, 0x3b9aca00
    mov eax, r8d
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r10*4 - 0x5c], ecx
    shr r8, 0x20
    add r10d, r15d
    cmp r10d, r9d
    jne 0x1400185af
    test r8d, r8d
    je 0x140018611
    cmp dword ptr [rbp - 0x60], 0x73
    jae 0x1400185ee
    mov eax, dword ptr [rbp - 0x60]
    mov dword ptr [rbp + rax*4 - 0x5c], r8d
    add dword ptr [rbp - 0x60], r15d
    jmp 0x140018611
    and dword ptr [rbp + 0x340], 0
    lea r8, [rbp + 0x344]
    and dword ptr [rbp - 0x60], 0
    lea rcx, [rbp - 0x5c]
    xor r9d, r9d
    mov edx, 0x1cc
    call 0x1400186fc
    lea rdx, [rbp + 0x170]
    lea rcx, [rbp - 0x60]
    call 0x140016fd0
    mov r10d, edi
    mov r8, rax
    sub r10d, ebx
    mov r9d, 8
    mov eax, 0xcccccccd
    mul r8d
    shr edx, 3
    mov cl, dl
    shl cl, 2
    lea eax, [rcx + rdx]
    add al, al
    sub r8b, al
    lea ecx, [r8 + 0x30]
    mov r8d, edx
    cmp r10d, r9d
    ja 0x14001865e
    cmp cl, 0x30
    je 0x140018664
    mov sil, r15b
    jmp 0x140018664
    mov eax, r9d
    mov byte ptr [rax + rbx], cl
    or eax, 0xffffffff
    add r9d, eax
    cmp r9d, eax
    jne 0x140018630
    mov rax, rdi
    sub rax, rbx
    cmp rax, r14
    cmovg rax, r14
    add rbx, rax
    cmp rbx, rdi
    jne 0x14001859c
    mov r9d, dword ptr [rbp - 0x60]
    mov byte ptr [rbx], 0
    test r9d, r9d
    jne 0x140018699
    test sil, sil
    je 0x14001869c
    xor r15d, r15d
    mov r8d, dword ptr [rsp + 0x6c]
    lea rcx, [rsp + 0x64]
    mov edx, dword ptr [rsp + 0x68]
    call 0x14001a348
    cmp byte ptr [rsp + 0x78], 0
    je 0x1400186c0
    lea rcx, [rsp + 0x70]
    call 0x14001a3cc
    mov eax, r15d
    mov rcx, qword ptr [rbp + 0x6e0]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0x7f0
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x14000b60c
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rsi, r8
    mov rdi, rdx
    test r9, r9
    jne 0x14001871d
    xor eax, eax
    jmp 0x140018773
    test rcx, rcx
    jne 0x140018737
    call 0x140010908
    mov ebx, 0x16
    mov dword ptr [rax], ebx
    call 0x14000b5bc
    mov eax, ebx
    jmp 0x140018773
    test rsi, rsi
    je 0x14001874e
    cmp rdi, rbx
    jb 0x14001874e
    mov r8, rbx
    mov rdx, rsi
    call 0x14001c6e0
    jmp 0x140018719
    mov r8, rdi
    xor edx, edx
    call 0x14001cd80
    test rsi, rsi
    je 0x140018722
    cmp rdi, rbx
    jae 0x14001876e
    call 0x140010908
    mov ebx, 0x22
    jmp 0x14001872c
    mov eax, 0x16
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    sub rsp, 0x28
    call 0x14001aaf8
    mov ecx, eax
    add rsp, 0x28
    jmp 0x14001aaec
    xor eax, eax
    mov r10, rcx
    test rcx, rcx
    jne 0x1400187ab
    mov qword ptr [r8], rax
    mov eax, 1
    ret
    test edx, edx
    jne 0x1400187b3
    mov byte ptr [rcx], al
    jmp 0x1400187a2
    test edx, 0xffffff80
    jne 0x1400187bf
    mov byte ptr [rcx], dl
    jmp 0x1400187a5
    test edx, 0xfffff800
    jne 0x1400187d1
    mov ecx, 1
    mov r9b, 0xc0
    jmp 0x140018808
    test edx, 0xffff0000
    jne 0x1400187f0
    lea eax, [rdx - 0xd800]
    cmp eax, 0x7ff
    jbe 0x14001882f
    mov ecx, 2
    mov r9b, 0xe0
    jmp 0x140018808
    test edx, 0xffe00000
    jne 0x14001882f
    cmp edx, 0x10ffff
    ja 0x14001882f
    mov ecx, 3
    mov r9b, 0xf0
    mov r11, rcx
    mov al, dl
    shr edx, 6
    and al, 0x3f
    or al, 0x80
    mov byte ptr [r11 + r10], al
    sub r11, 1
    jne 0x14001880b
    or dl, r9b
    mov byte ptr [r10], dl
    inc rcx
    mov rdx, r8
    jmp 0x14001ade0
    mov rdx, r9
    mov rcx, r8
    jmp 0x14001ade8
    int3 
    int3 
    push rbx
    sub rsp, 0x40
    mov rax, qword ptr [rsp + 0x70]
    mov rbx, rcx
    lea rcx, [rsp + 0x30]
    mov qword ptr [rsp + 0x20], rax
    call 0x14001adfc
    cmp rax, 4
    ja 0x140018879
    mov edx, dword ptr [rsp + 0x30]
    mov ecx, 0xfffd
    cmp edx, 0xffff
    cmova edx, ecx
    test rbx, rbx
    je 0x140018879
    mov word ptr [rbx], dx
    add rsp, 0x40
    pop rbx
    ret
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov rdi, qword ptr [rdx]
    xor eax, eax
    mov r12, r9
    mov rbp, r8
    mov r15, rdx
    mov r14, rcx
    test rcx, rcx
    je 0x140018998
    mov rbx, rcx
    test r8, r8
    je 0x14001896d
    mov r13, qword ptr [rsp + 0x80]
    cmp byte ptr [rdi], al
    jne 0x1400188d1
    mov r8d, 1
    jmp 0x1400188ed
    cmp byte ptr [rdi + 1], al
    jne 0x1400188de
    mov r8d, 2
    jmp 0x1400188ed
    mov al, byte ptr [rdi + 2]
    neg al
    sbb r8, r8
    neg r8
    add r8, 3
    mov r9, r12
    mov qword ptr [rsp + 0x20], r13
    mov rdx, rdi
    lea rcx, [rsp + 0x60]
    call 0x14001adfc
    mov rdx, rax
    cmp rax, -1
    je 0x140018986
    xor eax, eax
    test rdx, rdx
    je 0x14001897e
    mov ecx, dword ptr [rsp + 0x60]
    cmp ecx, 0xffff
    jbe 0x140018959
    cmp rbp, 1
    jbe 0x14001896d
    add ecx, 0xffff0000
    mov r8d, 0xd800
    mov eax, ecx
    mov dword ptr [rsp + 0x60], ecx
    shr eax, 0xa
    dec rbp
    or ax, r8w
    mov word ptr [rbx], ax
    mov eax, 0x3ff
    and cx, ax
    add rbx, 2
    mov eax, 0xdc00
    or cx, ax
    xor eax, eax
    mov word ptr [rbx], cx
    add rdi, rdx
    add rbx, 2
    sub rbp, 1
    jne 0x1400188c5
    sub rbx, r14
    mov qword ptr [r15], rdi
    sar rbx, 1
    mov rax, rbx
    jmp 0x140018a0a
    mov rdi, rax
    mov word ptr [rbx], ax
    jmp 0x14001896d
    mov qword ptr [r15], rdi
    mov byte ptr [r13 + 0x30], 1
    mov dword ptr [r13 + 0x2c], 0x2a
    jmp 0x140018a06
    mov rbp, qword ptr [rsp + 0x80]
    mov rbx, rax
    cmp byte ptr [rdi], al
    jne 0x1400189af
    mov r8d, 1
    jmp 0x1400189cb
    cmp byte ptr [rdi + 1], al
    jne 0x1400189bc
    mov r8d, 2
    jmp 0x1400189cb
    mov al, byte ptr [rdi + 2]
    neg al
    sbb r8, r8
    neg r8
    add r8, 3
    mov r9, r12
    mov qword ptr [rsp + 0x20], rbp
    mov rdx, rdi
    xor ecx, ecx
    call 0x14001adfc
    cmp rax, -1
    je 0x1400189fb
    test rax, rax
    je 0x140018976
    cmp rax, 4
    jne 0x1400189f1
    inc rbx
    add rdi, rax
    inc rbx
    xor eax, eax
    jmp 0x1400189a3
    mov byte ptr [rbp + 0x30], 1
    mov dword ptr [rbp + 0x2c], 0x2a
    or rax, 0xffffffffffffffff
    mov rbx, qword ptr [rsp + 0x68]
    mov rbp, qword ptr [rsp + 0x70]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 0x18], rbp
    mov qword ptr [rax + 0x20], rsi
    mov byte ptr [rax + 8], cl
    push rdi
    sub rsp, 0x20
    mov rcx, rdx
    mov rsi, r8
    mov rbx, rdx
    call 0x140012b9c
    mov ecx, dword ptr [rbx + 0x14]
    nop 
    movsxd r10, eax
    test cl, 0xc0
    je 0x140018aea
    mov edi, dword ptr [rbx]
    xor ebp, ebp
    mov rdx, qword ptr [rbx + 8]
    sub edi, dword ptr [rbx + 8]
    lea rax, [rdx + 1]
    mov qword ptr [rbx], rax
    mov eax, dword ptr [rbx + 0x20]
    dec eax
    mov dword ptr [rbx + 0x10], eax
    test edi, edi
    jle 0x140018a95
    mov r9, rsi
    mov r8d, edi
    mov ecx, r10d
    call 0x1400169c8
    mov ebp, eax
    mov rcx, qword ptr [rbx + 8]
    cmp ebp, edi
    mov al, byte ptr [rsp + 0x30]
    mov byte ptr [rcx], al
    jmp 0x140018b03
    lea eax, [r10 + 2]
    cmp eax, 1
    jbe 0x140018ac0
    mov rcx, r10
    lea rdx, [rip + 0x12c88]
    mov rax, r10
    sar rax, 6
    and ecx, 0x3f
    mov rax, qword ptr [rdx + rax*8]
    lea rcx, [rcx + rcx*8]
    lea rdx, [rax + rcx*8]
    jmp 0x140018ac7
    lea rdx, [rip + 0x11859]
    test byte ptr [rdx + 0x38], 0x20
    je 0x140018a87
    xor edx, edx
    mov ecx, r10d
    lea r8d, [rdx + 2]
    call 0x14001a268
    cmp rax, -1
    jne 0x140018a87
    lock or dword ptr [rbx + 0x14], 0x10
    mov al, 1
    jmp 0x140018b06
    mov r9, rsi
    lea rdx, [rsp + 0x30]
    mov r8d, 1
    mov ecx, r10d
    call 0x1400169c8
    cmp eax, 1
    sete al
    mov rbx, qword ptr [rsp + 0x38]
    mov rbp, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    push rbx
    sub rsp, 0x20
    mov edx, dword ptr [rcx + 0x14]
    nop 
    shr edx, 3
    test dl, 1
    je 0x140018b32
    mov al, 1
    jmp 0x140018b92
    mov eax, dword ptr [rcx + 0x14]
    nop 
    test al, 0xc0
    je 0x140018b43
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx], rax
    je 0x140018b90
    mov ecx, dword ptr [rcx + 0x18]
    nop 
    call 0x1400150ac
    mov rbx, rax
    cmp rax, -1
    je 0x140018b90
    mov r9d, 1
    lea r8, [rsp + 0x38]
    xor edx, edx
    mov rcx, rax
    call qword ptr [rip + 0x56c5]
    test eax, eax
    je 0x140018b90
    lea rdx, [rsp + 0x30]
    mov rcx, rbx
    call qword ptr [rip + 0x56ab]
    test eax, eax
    je 0x140018b90
    mov rax, qword ptr [rsp + 0x30]
    cmp qword ptr [rsp + 0x38], rax
    sete al
    jmp 0x140018b92
    xor al, al
    add rsp, 0x20
    pop rbx
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov esi, ecx
    mov rdi, r8
    mov rcx, rdx
    mov rbx, rdx
    call 0x140012b9c
    mov eax, dword ptr [rbx + 0x14]
    nop 
    test al, 6
    jne 0x140018bd4
    mov dword ptr [rdi + 0x2c], 9
    mov byte ptr [rdi + 0x30], 1
    lock or dword ptr [rbx + 0x14], 0x10
    or eax, 0xffffffff
    jmp 0x140018c53
    mov eax, dword ptr [rbx + 0x14]
    nop 
    shr eax, 0xc
    test al, 1
    je 0x140018be8
    mov dword ptr [rdi + 0x2c], 0x22
    jmp 0x140018bc6
    mov eax, dword ptr [rbx + 0x14]
    nop 
    test al, 1
    je 0x140018c0c
    mov rcx, rbx
    call 0x140018b1c
    and dword ptr [rbx + 0x10], 0
    test al, al
    je 0x140018bca
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rbx], rax
    lock and dword ptr [rbx + 0x14], 0xfffffffe
    lock or dword ptr [rbx + 0x14], 2
    lock and dword ptr [rbx + 0x14], 0xfffffff7
    and dword ptr [rbx + 0x10], 0
    mov eax, dword ptr [rbx + 0x14]
    nop 
    test eax, 0x4c0
    jne 0x140018c39
    mov rcx, rbx
    call 0x140012bf4
    test al, al
    jne 0x140018c39
    mov rcx, rbx
    call 0x14001afd8
    mov r8, rdi
    mov rdx, rbx
    mov cl, sil
    call 0x140018a24
    test al, al
    je 0x140018bca
    movzx eax, sil
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    sub rsp, 0x28
    cmp ecx, -2
    jne 0x140018c7a
    call 0x140010908
    mov dword ptr [rax], 9
    jmp 0x140018cbc
    test ecx, ecx
    js 0x140018cac
    cmp ecx, dword ptr [rip + 0x12eac]
    jae 0x140018cac
    movsxd rcx, ecx
    lea rdx, [rip + 0x12aa0]
    mov rax, rcx
    and ecx, 0x3f
    shr rax, 6
    lea rcx, [rcx + rcx*8]
    mov rax, qword ptr [rdx + rax*8]
    movzx eax, byte ptr [rax + rcx*8 + 0x38]
    and eax, 0x40
    jmp 0x140018cbe
    call 0x140010908
    mov dword ptr [rax], 9
    call 0x14000b5bc
    xor eax, eax
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    push r12
    push r13
    push r14
    sub rsp, 0x450
    mov rax, qword ptr [rip + 0x1131c]
    xor rax, rsp
    mov qword ptr [rsp + 0x410], rax
    mov r12, r9
    mov r14, r8
    mov r13, rcx
    test rcx, rcx
    jne 0x140018d17
    test rdx, rdx
    je 0x140018d17
    call 0x140010908
    mov dword ptr [rax], 0x16
    call 0x14000b5bc
    jmp 0x1400190c0
    test r14, r14
    je 0x140018d02
    test r12, r12
    je 0x140018d02
    cmp rdx, 2
    jb 0x1400190c0
    mov qword ptr [rsp + 0x448], rbx
    mov qword ptr [rsp + 0x440], rbp
    mov qword ptr [rsp + 0x438], rsi
    mov qword ptr [rsp + 0x430], rdi
    mov qword ptr [rsp + 0x428], r15
    lea r15, [rdx - 1]
    imul r15, r14
    add r15, rcx
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rcx
    nop word ptr [rax + rax]
    xor edx, edx
    mov rax, r15
    sub rax, r13
    div r14
    lea rbx, [rax + 1]
    cmp rbx, 8
    ja 0x140018e24
    cmp r15, r13
    jbe 0x140018e03
    lea rsi, [r14 + r13]
    mov rbx, r13
    mov rdi, rsi
    cmp rsi, r15
    ja 0x140018dc7
    nop dword ptr [rax]
    movabs r10, 0x9375b7955ede8970
    mov rdx, rbx
    mov rcx, rdi
    mov rax, r12
    call qword ptr [rip + 0x54bf]
    test eax, eax
    cmovg rbx, rdi
    add rdi, r14
    cmp rdi, r15
    jbe 0x140018da0
    mov r8, r14
    mov rdx, r15
    cmp rbx, r15
    je 0x140018df6
    sub rbx, r15
    nop word ptr [rax + rax]
    movzx eax, byte ptr [rdx]
    movzx ecx, byte ptr [rbx + rdx]
    mov byte ptr [rbx + rdx], al
    mov byte ptr [rdx], cl
    lea rdx, [rdx + 1]
    sub r8, 1
    jne 0x140018de0
    sub r15, r14
    cmp r15, r13
    ja 0x140018d92
    mov rcx, qword ptr [rsp + 0x20]
    sub rcx, 1
    mov qword ptr [rsp + 0x20], rcx
    js 0x140019098
    mov r13, qword ptr [rsp + rcx*8 + 0x30]
    mov r15, qword ptr [rsp + rcx*8 + 0x220]
    jmp 0x140018d70
    shr rbx, 1
    imul rbx, r14
    lea rsi, [rbx + r13]
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, r13
    mov rax, r12
    call qword ptr [rip + 0x5430]
    test eax, eax
    jle 0x140018e7b
    mov r9, r14
    mov r8, rsi
    cmp r13, rsi
    je 0x140018e7b
    nop word ptr [rax + rax]
    movzx eax, byte ptr [r8]
    mov rdx, r8
    sub rdx, rbx
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rdx], al
    mov byte ptr [r8], cl
    inc r8
    sub r9, 1
    jne 0x140018e60
    movabs r10, 0x9375b7955ede8970
    mov rdx, r15
    mov rcx, r13
    mov rax, r12
    call qword ptr [rip + 0x53e4]
    test eax, eax
    jle 0x140018ec8
    mov r8, r14
    mov rdx, r15
    cmp r13, r15
    je 0x140018ec8
    mov r9, r13
    sub r9, r15
    nop dword ptr [rax]
    movzx eax, byte ptr [rdx]
    movzx ecx, byte ptr [r9 + rdx]
    mov byte ptr [r9 + rdx], al
    mov byte ptr [rdx], cl
    lea rdx, [rdx + 1]
    sub r8, 1
    jne 0x140018eb0
    movabs r10, 0x9375b7955ede8970
    mov rdx, r15
    mov rcx, rsi
    mov rax, r12
    call qword ptr [rip + 0x5397]
    test eax, eax
    jle 0x140018f18
    mov r8, r14
    mov rdx, r15
    cmp rsi, r15
    je 0x140018f18
    mov r9, rsi
    sub r9, r15
    nop word ptr [rax + rax]
    movzx eax, byte ptr [rdx]
    movzx ecx, byte ptr [r9 + rdx]
    mov byte ptr [r9 + rdx], al
    mov byte ptr [rdx], cl
    lea rdx, [rdx + 1]
    sub r8, 1
    jne 0x140018f00
    mov rbx, r13
    mov rdi, r15
    nop 
    cmp rsi, rbx
    jbe 0x140018f50
    add rbx, r14
    cmp rbx, rsi
    jae 0x140018f50
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rbx
    mov rax, r12
    call qword ptr [rip + 0x5332]
    test eax, eax
    jle 0x140018f25
    jmp 0x140018f75
    nop dword ptr [rax]
    add rbx, r14
    cmp rbx, r15
    ja 0x140018f75
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rbx
    mov rax, r12
    call qword ptr [rip + 0x5307]
    test eax, eax
    jle 0x140018f50
    mov rbp, rdi
    sub rdi, r14
    cmp rdi, rsi
    jbe 0x140018f9d
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rdi
    mov rax, r12
    call qword ptr [rip + 0x52df]
    test eax, eax
    jg 0x140018f75
    cmp rdi, rbx
    jb 0x140018fda
    mov r8, r14
    mov rdx, rdi
    je 0x140018fc8
    mov r9, rbx
    sub r9, rdi
    movzx eax, byte ptr [rdx]
    movzx ecx, byte ptr [r9 + rdx]
    mov byte ptr [r9 + rdx], al
    mov byte ptr [rdx], cl
    lea rdx, [rdx + 1]
    sub r8, 1
    jne 0x140018fb0
    cmp rsi, rdi
    mov rax, rbx
    cmovne rax, rsi
    mov rsi, rax
    jmp 0x140018f20
    cmp rsi, rbp
    jae 0x140019007
    nop 
    sub rbp, r14
    cmp rbp, rsi
    jbe 0x140019007
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rbp
    mov rax, r12
    call qword ptr [rip + 0x5277]
    test eax, eax
    je 0x140018fe0
    jmp 0x14001902c
    sub rbp, r14
    cmp rbp, r13
    jbe 0x14001902c
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rbp
    mov rax, r12
    call qword ptr [rip + 0x5250]
    test eax, eax
    je 0x140019007
    mov rcx, r15
    mov rax, rbp
    sub rcx, rbx
    sub rax, r13
    cmp rax, rcx
    mov rcx, qword ptr [rsp + 0x20]
    jl 0x14001906d
    cmp r13, rbp
    jae 0x14001905c
    mov qword ptr [rsp + rcx*8 + 0x30], r13
    mov qword ptr [rsp + rcx*8 + 0x220], rbp
    inc rcx
    mov qword ptr [rsp + 0x20], rcx
    cmp rbx, r15
    jae 0x140018e03
    mov r13, rbx
    jmp 0x140018d70
    cmp rbx, r15
    jae 0x140019087
    mov qword ptr [rsp + rcx*8 + 0x30], rbx
    mov qword ptr [rsp + rcx*8 + 0x220], r15
    inc rcx
    mov qword ptr [rsp + 0x20], rcx
    cmp r13, rbp
    jae 0x140018e03
    mov r15, rbp
    jmp 0x140018d70
    mov rdi, qword ptr [rsp + 0x430]
    mov rsi, qword ptr [rsp + 0x438]
    mov rbp, qword ptr [rsp + 0x440]
    mov rbx, qword ptr [rsp + 0x448]
    mov r15, qword ptr [rsp + 0x428]
    mov rcx, qword ptr [rsp + 0x410]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0x450
    pop r14
    pop r13
    pop r12
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    xor r10d, r10d
    mov rbx, r8
    mov r11, rdx
    test r9, r9
    jne 0x14001912e
    test rcx, rcx
    jne 0x140019133
    test rdx, rdx
    je 0x14001911b
    call 0x140010908
    mov ebx, 0x16
    mov dword ptr [rax], ebx
    call 0x14000b5bc
    mov r10d, ebx
    mov rbx, qword ptr [rsp + 0x30]
    mov eax, r10d
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    test rcx, rcx
    je 0x140019107
    test r11, r11
    je 0x140019107
    test r9, r9
    jne 0x140019142
    mov byte ptr [rcx], r10b
    jmp 0x14001911b
    test rbx, rbx
    jne 0x14001914c
    mov byte ptr [rcx], r10b
    jmp 0x140019107
    sub rbx, rcx
    mov rdx, rcx
    mov r8, r11
    mov rdi, r9
    cmp r9, -1
    jne 0x140019172
    mov al, byte ptr [rbx + rdx]
    mov byte ptr [rdx], al
    inc rdx
    test al, al
    je 0x14001911b
    sub r8, 1
    jne 0x14001915e
    jmp 0x1400191a0
    mov al, byte ptr [rbx + rdx]
    mov rsi, rdi
    mov byte ptr [rdx], al
    inc rdx
    test al, al
    je 0x14001911b
    sub r8, 1
    je 0x14001918d
    sub rdi, 1
    jne 0x140019172
    test r8, r8
    lea rax, [rsi - 1]
    cmove rax, rsi
    test rax, rax
    jne 0x1400191a0
    mov byte ptr [rdx], r10b
    test r8, r8
    jne 0x14001911b
    cmp r9, -1
    jne 0x1400191bd
    mov byte ptr [rcx + r11 - 1], r10b
    lea r10d, [r8 + 0x50]
    jmp 0x14001911b
    mov byte ptr [rcx], r10b
    call 0x140010908
    mov ebx, 0x22
    jmp 0x140019111
    int3 
    sub rsp, 0x58
    mov rax, qword ptr [rip + 0x10e25]
    xor rax, rsp
    mov qword ptr [rsp + 0x40], rax
    xor eax, eax
    mov r9, rdx
    cmp rax, 0x20
    mov r8, rcx
    jae 0x140019268
    mov byte ptr [rsp + rax + 0x20], 0
    inc rax
    cmp rax, 0x20
    jl 0x1400191ef
    mov al, byte ptr [rdx]
    jmp 0x140019222
    movzx edx, al
    shr rdx, 3
    movzx eax, al
    and eax, 7
    movzx ecx, byte ptr [rsp + rdx + 0x20]
    bts ecx, eax
    inc r9
    mov byte ptr [rsp + rdx + 0x20], cl
    mov al, byte ptr [r9]
    test al, al
    jne 0x140019203
    jmp 0x140019247
    movzx eax, r9b
    mov edx, 1
    movzx ecx, r9b
    and ecx, 7
    shr rax, 3
    shl edx, cl
    test byte ptr [rsp + rax + 0x20], dl
    jne 0x140019263
    inc r8
    mov r9b, byte ptr [r8]
    test r9b, r9b
    jne 0x140019228
    xor eax, eax
    mov rcx, qword ptr [rsp + 0x40]
    xor rcx, rsp
    call 0x140004a50
    add rsp, 0x58
    ret
    mov rax, r8
    jmp 0x140019251
    call 0x140004ed4
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    mov r10, rdx
    lea rsi, [rip - 0x19285]
    and r10d, 0xf
    mov rdi, rdx
    sub rdi, r10
    mov rbx, rdx
    mov r8, rcx
    xorps xmm3, xmm3
    lea rax, [r10 - 1]
    movdqu xmm1, xmmword ptr [rdi]
    cmp rax, 0xe
    ja 0x140019319
    mov eax, dword ptr [rsi + rax*4 + 0x1957c]
    add rax, rsi
    jmp rax
    psrldq xmm1, 1
    jmp 0x140019319
    psrldq xmm1, 2
    jmp 0x140019319
    psrldq xmm1, 3
    jmp 0x140019319
    psrldq xmm1, 4
    jmp 0x140019319
    psrldq xmm1, 5
    jmp 0x140019319
    psrldq xmm1, 6
    jmp 0x140019319
    psrldq xmm1, 7
    jmp 0x140019319
    psrldq xmm1, 8
    jmp 0x140019319
    psrldq xmm1, 9
    jmp 0x140019319
    psrldq xmm1, 0xa
    jmp 0x140019319
    psrldq xmm1, 0xb
    jmp 0x140019319
    psrldq xmm1, 0xc
    jmp 0x140019319
    psrldq xmm1, 0xd
    jmp 0x140019319
    psrldq xmm1, 0xe
    jmp 0x140019319
    psrldq xmm1, 0xf
    xorps xmm0, xmm0
    mov r9d, 0xf
    pcmpeqb xmm0, xmm1
    pmovmskb eax, xmm0
    test eax, eax
    je 0x140019465
    bsf edx, eax
    test r10, r10
    jne 0x140019340
    lea r11d, [r9 - 0xe]
    jmp 0x140019354
    xor r11d, r11d
    mov eax, edx
    mov ecx, 0x10
    sub rcx, r10
    cmp rax, rcx
    setb r11b
    mov eax, r9d
    sub eax, edx
    cmp eax, r9d
    ja 0x140019431
    mov ecx, dword ptr [rsi + rax*4 + 0x195b8]
    add rcx, rsi
    jmp rcx
    pslldq xmm1, 1
    psrldq xmm1, 1
    jmp 0x140019431
    pslldq xmm1, 2
    psrldq xmm1, 2
    jmp 0x140019431
    pslldq xmm1, 3
    psrldq xmm1, 3
    jmp 0x140019431
    pslldq xmm1, 4
    psrldq xmm1, 4
    jmp 0x140019431
    pslldq xmm1, 5
    psrldq xmm1, 5
    jmp 0x140019431
    pslldq xmm1, 6
    psrldq xmm1, 6
    jmp 0x140019431
    pslldq xmm1, 7
    psrldq xmm1, 7
    jmp 0x140019431
    pslldq xmm1, 8
    psrldq xmm1, 8
    jmp 0x140019431
    pslldq xmm1, 9
    psrldq xmm1, 9
    jmp 0x140019431
    pslldq xmm1, 0xa
    psrldq xmm1, 0xa
    jmp 0x140019431
    pslldq xmm1, 0xb
    psrldq xmm1, 0xb
    jmp 0x140019431
    pslldq xmm1, 0xc
    psrldq xmm1, 0xc
    jmp 0x140019431
    pslldq xmm1, 0xd
    psrldq xmm1, 0xd
    jmp 0x140019431
    pslldq xmm1, 0xe
    psrldq xmm1, 0xe
    jmp 0x140019431
    pslldq xmm1, 0xf
    psrldq xmm1, 0xf
    jmp 0x140019431
    xorps xmm1, xmm1
    test r11d, r11d
    jne 0x14001951c
    movdqu xmm2, xmmword ptr [rdi + 0x10]
    movdqa xmm0, xmm2
    pcmpeqb xmm0, xmm3
    pmovmskb eax, xmm0
    test eax, eax
    jne 0x140019484
    mov rdx, rbx
    mov rcx, r8
    mov rbx, qword ptr [rsp + 0x10]
    mov rsi, qword ptr [rsp + 0x18]
    pop rdi
    jmp 0x1400191d0
    test r10, r10
    jne 0x14001943a
    cmp byte ptr [rdi + 1], r10b
    je 0x14001951c
    mov rbx, qword ptr [rsp + 0x10]
    mov rsi, qword ptr [rsp + 0x18]
    pop rdi
    jmp 0x1400191d0
    bsf ecx, eax
    mov eax, ecx
    sub rax, r10
    add rax, 0x10
    cmp rax, 0x10
    ja 0x14001944f
    sub r9d, ecx
    cmp r9d, 0xf
    ja 0x140019518
    mov ecx, dword ptr [rsi + r9*4 + 0x195f8]
    add rcx, rsi
    jmp rcx
    pslldq xmm2, 1
    jmp 0x140019518
    pslldq xmm2, 2
    jmp 0x140019518
    pslldq xmm2, 3
    jmp 0x140019518
    pslldq xmm2, 4
    jmp 0x140019518
    pslldq xmm2, 5
    jmp 0x140019518
    pslldq xmm2, 6
    jmp 0x140019518
    pslldq xmm2, 7
    jmp 0x140019518
    pslldq xmm2, 8
    jmp 0x140019518
    pslldq xmm2, 9
    jmp 0x140019518
    pslldq xmm2, 0xa
    jmp 0x140019518
    pslldq xmm2, 0xb
    jmp 0x140019518
    pslldq xmm2, 0xc
    jmp 0x140019518
    pslldq xmm2, 0xd
    jmp 0x140019518
    pslldq xmm2, 0xe
    jmp 0x140019518
    pslldq xmm2, 0xf
    jmp 0x140019518
    xorps xmm2, xmm2
    por xmm1, xmm2
    movzx eax, byte ptr [r8]
    test al, al
    je 0x14001955c
    nop dword ptr [rax]
    nop dword ptr [rax + rax]
    movsx eax, al
    movd xmm0, eax
    punpcklbw xmm0, xmm0
    punpcklbw xmm0, xmm0
    pshufd xmm0, xmm0, 0
    pcmpeqb xmm0, xmm1
    pmovmskb eax, xmm0
    test eax, eax
    jne 0x14001956a
    movzx eax, byte ptr [r8 + 1]
    inc r8
    test al, al
    jne 0x140019530
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x10]
    mov rsi, qword ptr [rsp + 0x18]
    pop rdi
    ret
    mov rbx, qword ptr [rsp + 0x10]
    mov rax, r8
    mov rsi, qword ptr [rsp + 0x18]
    pop rdi
    ret
    nop dword ptr [rax]
    mov dl, 0x92
    add dword ptr [rax], eax
    mov ecx, 0xc0000192
    xchg edx, eax
    add dword ptr [rax], eax
    ; Ensure program exit
    push 0
    call ExitProcess@4

end start