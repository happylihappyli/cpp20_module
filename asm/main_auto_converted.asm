; Converted from disassembly file
; Addresses and machine codes removed

.code

extern ExitProcess: proc
extern GetStdHandle: proc
extern WriteConsoleA: proc
extern WriteConsoleW: proc

    sub         rsp,label_28
    lea         rcx,[label_000000014003D240]
    call        00000001400071B0
    lea         rcx,[label_000000014002B3B0]
    add         rsp,label_28
    jmp         0000000140009F04
    lea         rcx,[label_000000014002B418]
    jmp         0000000140009F04
    lea         rcx,[label_000000014002B3BC]
    jmp         0000000140009F04
    sub         rsp,label_28
    mov         r9d,1
    lea         rdx,[label_000000014003D480]
    xor         r8d,r8d
    lea         rcx,[label_000000014003D410]
    call        0000000140007D68
    lea         rcx,[label_000000014002B458]
    add         rsp,label_28
    jmp         0000000140009F04
    push        rbx
    sub         rsp,label_20
    mov         ecx,1
    call        0000000140013A2C
    lea         rcx,[label_000000014003D480]
    mov         rbx,rax
    call        0000000140007E08
    lea         rax,[label_000000014002D780]
    xor         r8d,r8d
    mov         rdx,rbx
    mov         qword ptr [label_000000014003D480],rax
    lea         rcx,[label_000000014003D480]
    call        0000000140008408
    lea         rcx,[label_000000014002B4AC]
    add         rsp,label_20
    pop         rbx
    jmp         0000000140009F04
    mov         rdx,qword ptr [label_000000014003D550]
    lea         r8,[label_000000014003D410]
    mov         qword ptr [label_000000014003D558],r8
    test        rdx,rdx
    je          00000001400010E5
    mov         rax,qword ptr [rdx]
    movsxd      rcx,dword ptr [rax+4]
    mov         qword ptr [rcx+rdx+label_50],r8
    mov         r8,qword ptr [label_000000014003D558]
    mov         rdx,qword ptr [label_000000014003D560]
    test        rdx,rdx
    je          00000001400010FD
    mov         rax,qword ptr [rdx]
    movsxd      rcx,dword ptr [rax+4]
    mov         qword ptr [rcx+rdx+label_50],r8
    ret
func_00000001400010FD_end:
    int         3
    int         3
    sub         rsp,label_28
    lea         rcx,[label_000000014003D400]
    call        00000001400071B0
    lea         rcx,[label_000000014002B4B8]
    add         rsp,label_28
    jmp         0000000140009F04
    sub         rsp,label_28
    lea         rcx,[label_000000014003D590]
    call        00000001400071B0
    lea         rcx,[label_000000014002B504]
    add         rsp,label_28
    jmp         0000000140009F04
    lea         rcx,[label_000000014002B4C4]
    jmp         0000000140009F04
    int         3
    int         3
    int         3
    int         3
    sub         rsp,label_4C8
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_00000000000004B0],rax
    lea         rax,[rsp+label_00000000000001F8]
    mov         qword ptr [rsp+label_50],rax
    lea         rdx,[label_000000014002C3C0]
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140002180
    mov         qword ptr [rsp+label_58],rax
    mov         rcx,qword ptr [rsp+label_58]
    call        00000001400038D0
    nop
    lea         rax,[rsp+label_0000000000000218]
    mov         qword ptr [rsp+label_60],rax
    lea         rdx,[label_000000014002C3E0]
    mov         rcx,qword ptr [rsp+label_60]
    call        0000000140002180
    mov         qword ptr [rsp+label_68],rax
    mov         rcx,qword ptr [rsp+label_68]
    call        00000001400038D0
    lea         rax,[rsp+label_00000000000001D8]
    mov         qword ptr [rsp+label_0000000000000080],rax
    mov         edx,5
    mov         ecx,label_0A
    call        00000001400034D0
    mov         dword ptr [rsp+label_30],eax
    mov         edx,dword ptr [rsp+label_30]
    lea         rcx,[rsp+label_0000000000000378]
    call        0000000140003920
    mov         qword ptr [rsp+label_70],rax
    mov         rax,qword ptr [rsp+label_70]
    mov         qword ptr [rsp+label_78],rax
    mov         r8,qword ptr [rsp+label_78]
    lea         rdx,[label_000000014002C3F8]
    mov         rcx,qword ptr [rsp+label_0000000000000080]
    call        0000000140001710
    mov         qword ptr [rsp+label_0000000000000088],rax
    mov         rcx,qword ptr [rsp+label_0000000000000088]
    call        00000001400038D0
    nop
    lea         rcx,[rsp+label_0000000000000378]
    call        0000000140002410
    lea         rax,[rsp+label_0000000000000258]
    mov         qword ptr [rsp+label_00000000000000A0],rax
    mov         edx,5
    mov         ecx,label_0A
    call        00000001400034F0
    mov         dword ptr [rsp+label_34],eax
    mov         edx,dword ptr [rsp+label_34]
    lea         rcx,[rsp+label_0000000000000478]
    call        0000000140003920
    mov         qword ptr [rsp+label_0000000000000090],rax
    mov         rax,qword ptr [rsp+label_0000000000000090]
    mov         qword ptr [rsp+label_0000000000000098],rax
    mov         r8,qword ptr [rsp+label_0000000000000098]
    lea         rdx,[label_000000014002C408]
    mov         rcx,qword ptr [rsp+label_00000000000000A0]
    call        0000000140001710
    mov         qword ptr [rsp+label_00000000000000A8],rax
    mov         rcx,qword ptr [rsp+label_00000000000000A8]
    call        00000001400038D0
    nop
    lea         rcx,[rsp+label_0000000000000478]
    call        0000000140002410
    lea         rax,[rsp+label_0000000000000278]
    mov         qword ptr [rsp+label_00000000000000C0],rax
    mov         edx,5
    mov         ecx,label_0A
    call        0000000140003510
    mov         dword ptr [rsp+label_38],eax
    mov         edx,dword ptr [rsp+label_38]
    lea         rcx,[rsp+label_0000000000000398]
    call        0000000140003920
    mov         qword ptr [rsp+label_00000000000000B0],rax
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         qword ptr [rsp+label_00000000000000B8],rax
    mov         r8,qword ptr [rsp+label_00000000000000B8]
    lea         rdx,[label_000000014002C418]
    mov         rcx,qword ptr [rsp+label_00000000000000C0]
    call        0000000140001710
    mov         qword ptr [rsp+label_00000000000000C8],rax
    mov         rcx,qword ptr [rsp+label_00000000000000C8]
    call        00000001400038D0
    nop
    lea         rcx,[rsp+label_0000000000000398]
    call        0000000140002410
    nop
    lea         rax,[rsp+label_0000000000000298]
    mov         qword ptr [rsp+label_00000000000000E8],rax
    movsd       xmm1,mmword ptr [label_000000014002C558]
    movsd       xmm0,mmword ptr [label_000000014002C560]
    call        0000000140003530
    movsd       mmword ptr [rsp+label_00000000000000D0],xmm0
    movsd       xmm1,mmword ptr [rsp+label_00000000000000D0]
    lea         rcx,[rsp+label_00000000000003B8]
    call        0000000140003960
    mov         qword ptr [rsp+label_00000000000000D8],rax
    mov         rax,qword ptr [rsp+label_00000000000000D8]
    mov         qword ptr [rsp+label_00000000000000E0],rax
    mov         r8,qword ptr [rsp+label_00000000000000E0]
    lea         rdx,[label_000000014002C428]
    mov         rcx,qword ptr [rsp+label_00000000000000E8]
    call        0000000140001710
    mov         qword ptr [rsp+label_00000000000000F0],rax
    mov         rcx,qword ptr [rsp+label_00000000000000F0]
    call        00000001400038D0
    nop
    lea         rcx,[rsp+label_00000000000003B8]
    call        0000000140002410
    nop
    jmp         00000001400013F8
    lea         rax,[rsp+label_00000000000002D8]
    mov         qword ptr [rsp+label_0000000000000120],rax
    lea         rdx,[label_000000014002C448]
    mov         rcx,qword ptr [rsp+label_0000000000000120]
    call        0000000140002180
    mov         qword ptr [rsp+label_0000000000000128],rax
    mov         rcx,qword ptr [rsp+label_0000000000000128]
    call        00000001400038D0
    lea         rax,[rsp+label_00000000000002F8]
    mov         qword ptr [rsp+label_0000000000000140],rax
    mov         ecx,5
    call        0000000140003630
    mov         dword ptr [rsp+label_3C],eax
    mov         edx,dword ptr [rsp+label_3C]
    lea         rcx,[rsp+label_00000000000003F8]
    call        0000000140003920
    mov         qword ptr [rsp+label_0000000000000130],rax
    mov         rax,qword ptr [rsp+label_0000000000000130]
    mov         qword ptr [rsp+label_0000000000000138],rax
    mov         r8,qword ptr [rsp+label_0000000000000138]
    lea         rdx,[label_000000014002C45C]
    mov         rcx,qword ptr [rsp+label_0000000000000140]
    call        0000000140001710
    mov         qword ptr [rsp+label_0000000000000148],rax
    mov         rcx,qword ptr [rsp+label_0000000000000148]
    call        00000001400038D0
    nop
    lea         rcx,[rsp+label_00000000000003F8]
    call        0000000140002410
    nop
    jmp         00000001400014BA
    mov         dword ptr [rsp+label_0000000000000498],2
    mov         dword ptr [rsp+label_000000000000049C],3
    mov         dword ptr [rsp+label_00000000000004A0],4
    mov         dword ptr [rsp+label_00000000000004A4],label_11
    mov         dword ptr [rsp+label_00000000000004A8],label_19
    mov         dword ptr [rsp+label_00000000000004AC],label_1D
    lea         rax,[rsp+label_0000000000000498]
    mov         qword ptr [rsp+label_40],rax
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_40]
    add         rax,label_18
    mov         qword ptr [rsp+label_0000000000000178],rax
    jmp         0000000140001534
    mov         rax,qword ptr [rsp+label_28]
    add         rax,4
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_0000000000000178]
    cmp         qword ptr [rsp+label_28],rax
    je          00000001400015FD
    mov         rax,qword ptr [rsp+label_28]
    mov         eax,dword ptr [rax]
    mov         dword ptr [rsp+label_24],eax
    lea         rax,[rsp+label_0000000000000338]
    mov         qword ptr [rsp+label_0000000000000190],rax
    mov         ecx,dword ptr [rsp+label_24]
    call        00000001400036C0
    mov         byte ptr [rsp+label_20],al
    movzx       eax,byte ptr [rsp+label_20]
    test        eax,eax
    je          0000000140001586
    lea         rax,[label_000000014002C478]
    mov         qword ptr [rsp+label_48],rax
    jmp         0000000140001592
    lea         rax,[label_000000014002C480]
    mov         qword ptr [rsp+label_48],rax
    mov         edx,dword ptr [rsp+label_24]
    lea         rcx,[rsp+label_0000000000000438]
    call        0000000140003920
    mov         qword ptr [rsp+label_0000000000000180],rax
    mov         rax,qword ptr [rsp+label_0000000000000180]
    mov         qword ptr [rsp+label_0000000000000188],rax
    mov         r8,qword ptr [rsp+label_48]
    mov         rdx,qword ptr [rsp+label_0000000000000188]
    mov         rcx,qword ptr [rsp+label_0000000000000190]
    call        00000001400016C0
    mov         qword ptr [rsp+label_0000000000000198],rax
    mov         rcx,qword ptr [rsp+label_0000000000000198]
    call        00000001400038D0
    nop
    lea         rcx,[rsp+label_0000000000000438]
    call        0000000140002410
    jmp         0000000140001526
    lea         rax,[rsp+label_0000000000000358]
    mov         qword ptr [rsp+label_00000000000001A0],rax
    lea         rdx,[label_000000014002C490]
    mov         rcx,qword ptr [rsp+label_00000000000001A0]
    call        0000000140002180
    mov         qword ptr [rsp+label_00000000000001A8],rax
    mov         rcx,qword ptr [rsp+label_00000000000001A8]
    call        00000001400038D0
    nop
    jmp         0000000140001639
    xor         eax,eax
    mov         rcx,qword ptr [rsp+label_00000000000004B0]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_4C8
    ret
func_0000000140001652_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001B10
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        00000001400020C0
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_000000014000168D_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        00000001400020C0
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400016B8_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         rdx,qword ptr [rsp+label_50]
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140002D50
    mov         rdx,rax
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140002100
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_000000014000170B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         r8,qword ptr [rsp+label_48]
    xor         edx,edx
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140003220
    mov         rdx,rax
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140002100
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_000000014000175D_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    jne         000000014000178C
    cmp         qword ptr [rsp+label_30],label_1000
    jb          000000014000178C
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001890
    jmp         00000001400017A2
    cmp         qword ptr [rsp+label_30],0
    je          00000001400017A0
    mov         rcx,qword ptr [rsp+label_30]
    call        00000001400027B0
    jmp         00000001400017A2
    xor         eax,eax
    add         rsp,label_28
    ret
func_00000001400017A6_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_38]
    mov         rdx,qword ptr [rax]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002D20
    add         rsp,label_28
    ret
func_00000001400017D4_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_58]
    mov         rax,qword ptr [rax]
    inc         rax
    mov         rcx,qword ptr [rsp+label_58]
    mov         qword ptr [rcx],rax
    mov         rdx,qword ptr [rsp+label_58]
    mov         rcx,qword ptr [rsp+label_50]
    call        00000001400017B0
    mov         qword ptr [rsp+label_28],rax
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140001871
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140001B10
    mov         qword ptr [rsp+label_30],rax
    mov         qword ptr [rsp+label_20],0
    jmp         0000000140001848
    mov         rax,qword ptr [rsp+label_20]
    inc         rax
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_58]
    mov         rax,qword ptr [rax]
    cmp         qword ptr [rsp+label_20],rax
    jae         0000000140001871
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_30]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        0000000140001F60
    jmp         000000014000183B
    mov         rax,qword ptr [rsp+label_58]
    mov         rax,qword ptr [rax]
    dec         rax
    mov         rcx,qword ptr [rsp+label_58]
    mov         qword ptr [rcx],rax
    mov         rax,qword ptr [rsp+label_28]
    add         rsp,label_48
    ret
func_000000014000188D_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_50]
    add         rax,label_27
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_50]
    cmp         qword ptr [rsp+label_28],rax
    ja          00000001400018B8
    call        0000000140002C00
    mov         rcx,qword ptr [rsp+label_28]
    call        00000001400027B0
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_20],0
    je          00000001400018D1
    jmp         00000001400018DC
    call        000000014001061C
    xor         eax,eax
    test        eax,eax
    jne         00000001400018D1
    xor         eax,eax
    test        eax,eax
    jne         00000001400018C7
    mov         rax,qword ptr [rsp+label_20]
    add         rax,label_27
    and         rax,label_0FFFFFFFFFFFFFFE0
    mov         qword ptr [rsp+label_30],rax
    mov         eax,8
    imul        rax,rax,label_0FFFFFFFFFFFFFFFF
    mov         rcx,qword ptr [rsp+label_30]
    mov         rdx,qword ptr [rsp+label_20]
    mov         qword ptr [rcx+rax],rdx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_48
    ret
func_0000000140001914_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_58
    mov         rax,qword ptr [rsp+label_60]
    mov         qword ptr [rsp+label_28],rax
    mov         rcx,qword ptr [rsp+label_60]
    call        00000001400032E0
    cmp         qword ptr [rsp+label_70],rax
    jbe         0000000140001953
    call        0000000140002CE0
    mov         rcx,qword ptr [rsp+label_60]
    call        0000000140002930
    mov         qword ptr [rsp+label_48],rax
    lea         rax,[label_000000014002C4E2]
    mov         qword ptr [rsp+label_40],rax
    mov         r8,qword ptr [rsp+label_28]
    mov         rdx,qword ptr [rsp+label_40]
    lea         rcx,[rsp+label_20]
    call        0000000140002200
    cmp         qword ptr [rsp+label_70],label_0F
    ja          00000001400019ED
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_70]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_18],label_0F
    mov         rax,qword ptr [rsp+label_28]
    mov         r8,qword ptr [rsp+label_70]
    mov         rdx,qword ptr [rsp+label_68]
    mov         rcx,rax
    call        0000000140002F10
    mov         byte ptr [rsp+label_21],0
    mov         rax,qword ptr [rsp+label_70]
    mov         rcx,qword ptr [rsp+label_28]
    add         rcx,rax
    mov         rax,rcx
    lea         rdx,[rsp+label_21]
    mov         rcx,rax
    call        0000000140002ED0
    lea         rcx,[rsp+label_20]
    call        0000000140001B80
    jmp         0000000140001A97
    mov         rcx,qword ptr [rsp+label_60]
    call        00000001400032E0
    mov         r8,rax
    mov         edx,label_0F
    mov         rcx,qword ptr [rsp+label_70]
    call        0000000140002820
    mov         qword ptr [rsp+label_38],rax
    lea         rdx,[rsp+label_38]
    mov         rcx,qword ptr [rsp+label_48]
    call        00000001400017E0
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rsp+label_28]
    lea         rdx,[rsp+label_30]
    mov         rcx,rax
    call        0000000140001AA0
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_70]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_38]
    mov         qword ptr [rax+label_18],rcx
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001B10
    mov         r8,qword ptr [rsp+label_70]
    mov         rdx,qword ptr [rsp+label_68]
    mov         rcx,rax
    call        0000000140002F10
    mov         byte ptr [rsp+label_22],0
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001B10
    add         rax,qword ptr [rsp+label_70]
    lea         rdx,[rsp+label_22]
    mov         rcx,rax
    call        0000000140002ED0
    lea         rcx,[rsp+label_20]
    call        0000000140001B80
    add         rsp,label_58
    ret
func_0000000140001A9B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140001AD3
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140001B10
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,rax
    call        0000000140001FE0
    jmp         0000000140001AFF
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140001B10
    mov         rdx,rax
    mov         ecx,8
    call        00000001400024B0
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rcx]
    mov         qword ptr [rax],rcx
    add         rsp,label_38
    ret
func_0000000140001B03_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    ret
func_0000000140001B1A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140001B46
    mov         rcx,qword ptr [rsp+label_30]
    call        00000001400098F8
    jmp         0000000140001B70
    cmp         qword ptr [rsp+label_38],label_1000
    jb          0000000140001B60
    lea         rdx,[rsp+label_38]
    lea         rcx,[rsp+label_30]
    call        0000000140002700
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    nop
    add         rsp,label_28
    ret
func_0000000140001B74_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    ret
func_0000000140001B85_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         byte ptr [rsp],0
    mov         rax,qword ptr [rsp+label_20]
    add         rsp,label_18
    ret
func_0000000140001BA6_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_20],r9
    mov         byte ptr [rsp+label_18],r8b
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_88
    mov         rax,qword ptr [rsp+label_0000000000000090]
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rax+label_10]
    mov         qword ptr [rsp+label_38],rax
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    call        00000001400032E0
    sub         rax,qword ptr [rsp+label_38]
    cmp         rax,qword ptr [rsp+label_0000000000000098]
    jae         0000000140001C07
    call        0000000140002CE0
    mov         rax,qword ptr [rsp+label_0000000000000098]
    mov         rcx,qword ptr [rsp+label_38]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_48],rax
    mov         rax,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rax+label_18]
    mov         qword ptr [rsp+label_58],rax
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    call        00000001400027D0
    mov         qword ptr [rsp+label_50],rax
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    call        0000000140002930
    mov         qword ptr [rsp+label_68],rax
    lea         rdx,[rsp+label_50]
    mov         rcx,qword ptr [rsp+label_68]
    call        00000001400017E0
    mov         qword ptr [rsp+label_40],rax
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001B80
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_48]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_50]
    mov         qword ptr [rax+label_18],rcx
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140001B10
    mov         qword ptr [rsp+label_70],rax
    cmp         qword ptr [rsp+label_58],label_0F
    jbe         0000000140001D15
    mov         rax,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp+label_60],rax
    mov         rcx,qword ptr [rsp+label_60]
    call        0000000140001B10
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    mov         qword ptr [rsp+label_28],rcx
    mov         rcx,qword ptr [rsp+label_00000000000000A8]
    mov         qword ptr [rsp+label_20],rcx
    mov         r9,qword ptr [rsp+label_38]
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_70]
    lea         rcx,[rsp+label_00000000000000A0]
    call        00000001400024C0
    mov         r8,qword ptr [rsp+label_58]
    mov         rdx,qword ptr [rsp+label_60]
    mov         rcx,qword ptr [rsp+label_68]
    call        00000001400028F0
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_40]
    mov         qword ptr [rax],rcx
    jmp         0000000140001D60
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    mov         qword ptr [rsp+label_28],rcx
    mov         rcx,qword ptr [rsp+label_00000000000000A8]
    mov         qword ptr [rsp+label_20],rcx
    mov         r9,qword ptr [rsp+label_38]
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_70]
    lea         rcx,[rsp+label_00000000000000A0]
    call        00000001400024C0
    mov         rax,qword ptr [rsp+label_30]
    lea         rdx,[rsp+label_40]
    mov         rcx,rax
    call        0000000140001AA0
    mov         rax,qword ptr [rsp+label_0000000000000090]
    add         rsp,label_88
    ret
func_0000000140001D6F_end:
    mov         qword ptr [rsp+label_20],r9
    mov         byte ptr [rsp+label_18],r8b
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_98
    mov         rax,qword ptr [rsp+label_00000000000000A0]
    mov         qword ptr [rsp+label_40],rax
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax+label_10]
    mov         qword ptr [rsp+label_48],rax
    mov         rcx,qword ptr [rsp+label_00000000000000A0]
    call        00000001400032E0
    sub         rax,qword ptr [rsp+label_48]
    cmp         rax,qword ptr [rsp+label_00000000000000A8]
    jae         0000000140001DC7
    call        0000000140002CE0
    mov         rax,qword ptr [rsp+label_00000000000000A8]
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_58],rax
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax+label_18]
    mov         qword ptr [rsp+label_68],rax
    mov         rdx,qword ptr [rsp+label_58]
    mov         rcx,qword ptr [rsp+label_00000000000000A0]
    call        00000001400027D0
    mov         qword ptr [rsp+label_60],rax
    mov         rcx,qword ptr [rsp+label_00000000000000A0]
    call        0000000140002930
    mov         qword ptr [rsp+label_78],rax
    lea         rdx,[rsp+label_60]
    mov         rcx,qword ptr [rsp+label_78]
    call        00000001400017E0
    mov         qword ptr [rsp+label_50],rax
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140001B80
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_58]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_60]
    mov         qword ptr [rax+label_18],rcx
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140001B10
    mov         qword ptr [rsp+label_0000000000000080],rax
    cmp         qword ptr [rsp+label_68],label_0F
    jbe         0000000140001EE8
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp+label_70],rax
    mov         rcx,qword ptr [rsp+label_70]
    call        0000000140001B10
    mov         rcx,qword ptr [rsp+label_00000000000000C8]
    mov         qword ptr [rsp+label_30],rcx
    mov         rcx,qword ptr [rsp+label_00000000000000C0]
    mov         qword ptr [rsp+label_28],rcx
    mov         rcx,qword ptr [rsp+label_00000000000000B8]
    mov         qword ptr [rsp+label_20],rcx
    mov         r9,qword ptr [rsp+label_48]
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_0000000000000080]
    lea         rcx,[rsp+label_00000000000000B0]
    call        0000000140002540
    mov         r8,qword ptr [rsp+label_68]
    mov         rdx,qword ptr [rsp+label_70]
    mov         rcx,qword ptr [rsp+label_78]
    call        00000001400028F0
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_50]
    mov         qword ptr [rax],rcx
    jmp         0000000140001F43
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_00000000000000C8]
    mov         qword ptr [rsp+label_30],rcx
    mov         rcx,qword ptr [rsp+label_00000000000000C0]
    mov         qword ptr [rsp+label_28],rcx
    mov         rcx,qword ptr [rsp+label_00000000000000B8]
    mov         qword ptr [rsp+label_20],rcx
    mov         r9,qword ptr [rsp+label_48]
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_0000000000000080]
    lea         rcx,[rsp+label_00000000000000B0]
    call        0000000140002540
    mov         rax,qword ptr [rsp+label_40]
    lea         rdx,[rsp+label_50]
    mov         rcx,rax
    call        0000000140001AA0
    mov         rax,qword ptr [rsp+label_00000000000000A0]
    add         rsp,label_98
    ret
func_0000000140001F52_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    push        rdi
    sub         rsp,label_30
    mov         qword ptr [rsp+label_20],1
    mov         rdx,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_20]
    call        00000001400024B0
    mov         qword ptr [rsp+label_28],rax
    mov         rdi,qword ptr [rsp+label_28]
    xor         eax,eax
    mov         rcx,qword ptr [rsp+label_20]
    rep stos    byte ptr [rdi]
    mov         rax,qword ptr [rsp+label_28]
    add         rsp,label_30
    pop         rdi
    ret
func_0000000140001F9F_end:
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rdx,qword ptr [rsp+label_40]
    mov         ecx,1
    call        00000001400024B0
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_48]
    movzx       ecx,byte ptr [rcx]
    mov         byte ptr [rax],cl
    mov         rax,qword ptr [rsp+label_20]
    add         rsp,label_38
    ret
func_0000000140001FDA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rdx,qword ptr [rsp+label_40]
    mov         ecx,8
    call        00000001400024B0
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rcx]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_20]
    add         rsp,label_38
    ret
func_000000014000201B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rcx]
    cmp         qword ptr [rax],rcx
    jae         000000014000204B
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rsp],rax
    jmp         0000000140002054
    mov         rax,qword ptr [rsp+label_20]
    mov         qword ptr [rsp],rax
    mov         rax,qword ptr [rsp]
    mov         qword ptr [rsp+8],rax
    mov         rax,qword ptr [rsp+8]
    add         rsp,label_18
    ret
func_0000000140002066_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rcx]
    cmp         qword ptr [rax],rcx
    jae         000000014000209B
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rsp],rax
    jmp         00000001400020A4
    mov         rax,qword ptr [rsp+label_20]
    mov         qword ptr [rsp],rax
    mov         rax,qword ptr [rsp]
    mov         qword ptr [rsp+8],rax
    mov         rax,qword ptr [rsp+8]
    add         rsp,label_18
    ret
func_00000001400020B6_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        00000001400021E0
    mov         rax,qword ptr [rsp+label_30]
    mov         qword ptr [rax+label_10],0
    mov         rax,qword ptr [rsp+label_30]
    mov         qword ptr [rax+label_18],0
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400020F9_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_50]
    mov         qword ptr [rsp+label_30],rax
    mov         rcx,qword ptr [rsp+label_58]
    call        0000000140002930
    mov         qword ptr [rsp+label_28],rax
    movzx       eax,byte ptr [rsp+label_21]
    mov         byte ptr [rsp+label_20],al
    mov         r8,qword ptr [rsp+label_28]
    movzx       edx,byte ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001690
    mov         rax,qword ptr [rsp+label_50]
    mov         qword ptr [rsp+label_38],rax
    lea         rdx,[label_000000014002C4E2]
    mov         rcx,qword ptr [rsp+label_38]
    call        00000001400027A0
    mov         rdx,qword ptr [rsp+label_58]
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140002A50
    mov         rax,qword ptr [rsp+label_50]
    add         rsp,label_48
    ret
func_0000000140002177_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_28],rax
    movzx       edx,byte ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140001660
    nop
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140003280
    mov         rcx,rax
    call        0000000140001B10
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140001920
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_00000001400021D6_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    push        rdi
    mov         rax,qword ptr [rsp+label_10]
    mov         rdi,qword ptr [rsp+label_10]
    xor         eax,eax
    mov         ecx,label_10
    rep stos    byte ptr [rdi]
    mov         rax,qword ptr [rsp+label_10]
    pop         rdi
    ret
func_00000001400021FF_end:
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    ret
func_0000000140002214_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         r8d,1
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002380
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C518]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_000000014000225B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002320
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C518]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140002295_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002260
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C530]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400022D5_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    lea         rdx,[label_000000014002C540]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002220
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C530]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140002312_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rdi
    sub         rsp,label_20
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C4C0]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rax,8
    mov         rdi,rax
    xor         eax,eax
    mov         ecx,label_10
    rep stos    byte ptr [rdi]
    mov         rax,qword ptr [rsp+label_30]
    add         rax,8
    mov         rcx,qword ptr [rsp+label_38]
    add         rcx,8
    mov         rdx,rax
    call        000000014000A7B0
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140002377_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_18],r8d
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rdi
    mov         rax,qword ptr [rsp+label_10]
    lea         rcx,[label_000000014002C4C0]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_10]
    add         rax,8
    mov         rdi,rax
    xor         eax,eax
    mov         ecx,label_10
    rep stos    byte ptr [rdi]
    mov         rax,qword ptr [rsp+label_10]
    mov         rcx,qword ptr [rsp+label_18]
    mov         qword ptr [rax+8],rcx
    mov         rax,qword ptr [rsp+label_10]
    pop         rdi
    ret
func_00000001400023C8_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        00000001400023F0
    add         rsp,label_28
    ret
func_00000001400023EA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        0000000140001B80
    add         rsp,label_28
    ret
func_000000014000240A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002C30
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        00000001400023D0
    add         rsp,label_28
    ret
func_0000000140002434_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002480
    add         rsp,label_28
    ret
func_0000000140002457_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002440
    add         rsp,label_28
    ret
func_0000000140002477_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C4C0]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rax,8
    mov         rcx,rax
    call        000000014000A840
    add         rsp,label_28
    ret
func_00000001400024AD_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+label_10]
    ret
func_00000001400024BF_end:
    mov         qword ptr [rsp+label_20],r9
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         r8,qword ptr [rsp+label_58]
    mov         rdx,qword ptr [rsp+label_50]
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140002F10
    mov         rax,qword ptr [rsp+label_58]
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,rax
    mov         rax,rcx
    mov         r8,qword ptr [rsp+label_68]
    mov         rdx,qword ptr [rsp+label_60]
    mov         rcx,rax
    call        0000000140002F10
    mov         byte ptr [rsp+label_20],0
    mov         rax,qword ptr [rsp+label_68]
    mov         rcx,qword ptr [rsp+label_58]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,rax
    mov         rax,rcx
    lea         rdx,[rsp+label_20]
    mov         rcx,rax
    call        0000000140002ED0
    add         rsp,label_38
    ret
func_000000014000253F_end:
    mov         qword ptr [rsp+label_20],r9
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         r8,qword ptr [rsp+label_60]
    mov         rdx,qword ptr [rsp+label_50]
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140002F10
    mov         rax,qword ptr [rsp+label_60]
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,rax
    mov         rax,rcx
    mov         r8,qword ptr [rsp+label_70]
    mov         rdx,qword ptr [rsp+label_68]
    mov         rcx,rax
    call        0000000140002F10
    mov         rax,qword ptr [rsp+label_60]
    mov         rcx,qword ptr [rsp+label_58]
    sub         rcx,rax
    mov         rax,rcx
    inc         rax
    mov         rcx,qword ptr [rsp+label_60]
    mov         rdx,qword ptr [rsp+label_50]
    add         rdx,rcx
    mov         rcx,rdx
    mov         rdx,qword ptr [rsp+label_60]
    mov         r8,qword ptr [rsp+label_48]
    add         r8,rdx
    mov         rdx,r8
    add         rdx,qword ptr [rsp+label_70]
    mov         qword ptr [rsp+label_20],rdx
    mov         r8,rax
    mov         rdx,rcx
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,rax
    call        0000000140002F10
    add         rsp,label_38
    ret
func_00000001400025E2_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002440
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          0000000140002621
    mov         edx,label_18
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_000000014000262A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002460
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          0000000140002661
    mov         edx,label_18
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_000000014000266A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002480
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          00000001400026A1
    mov         edx,label_18
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400026AA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          00000001400026FA
    mov         qword ptr [rsp+label_20],0
    jmp         00000001400026DD
    mov         rax,qword ptr [rsp+label_20]
    inc         rax
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_20],label_10
    jae         00000001400026FA
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    mov         byte ptr [rax],0
    jmp         00000001400026D0
    add         rsp,label_38
    ret
func_00000001400026FE_end:
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_58]
    mov         rax,qword ptr [rax]
    add         rax,label_27
    mov         rcx,qword ptr [rsp+label_58]
    mov         qword ptr [rcx],rax
    mov         rax,qword ptr [rsp+label_50]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp+label_30],rax
    mov         eax,8
    imul        rax,rax,label_0FFFFFFFFFFFFFFFF
    mov         rcx,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rcx+rax]
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_38],8
    mov         rax,qword ptr [rsp+label_50]
    mov         rcx,qword ptr [rsp+label_28]
    mov         rax,qword ptr [rax]
    sub         rax,rcx
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_20],8
    jb          0000000140002776
    cmp         qword ptr [rsp+label_20],label_27
    ja          0000000140002776
    jmp         0000000140002781
    call        000000014001061C
    xor         eax,eax
    test        eax,eax
    jne         0000000140002776
    xor         eax,eax
    test        eax,eax
    jne         0000000140002764
    mov         rax,qword ptr [rsp+label_50]
    mov         rcx,qword ptr [rsp+label_28]
    mov         qword ptr [rax],rcx
    add         rsp,label_48
    ret
func_0000000140002798_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    ret
func_00000001400027AA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        00000001400098BC
    add         rsp,label_28
    ret
func_00000001400027C7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rcx,qword ptr [rsp+label_40]
    call        00000001400032E0
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax+label_18]
    mov         qword ptr [rsp+label_28],rax
    mov         r8,qword ptr [rsp+label_20]
    mov         rdx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140002820
    add         rsp,label_38
    ret
func_0000000140002813_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    or          rax,label_0F
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_50]
    cmp         qword ptr [rsp+label_20],rax
    jbe         0000000140002854
    mov         rax,qword ptr [rsp+label_50]
    jmp         00000001400028AD
    xor         edx,edx
    mov         rax,qword ptr [rsp+label_48]
    mov         ecx,2
    div         rax,rcx
    mov         rcx,qword ptr [rsp+label_50]
    sub         rcx,rax
    mov         rax,rcx
    cmp         qword ptr [rsp+label_48],rax
    jbe         000000014000287C
    mov         rax,qword ptr [rsp+label_50]
    jmp         00000001400028AD
    xor         edx,edx
    mov         rax,qword ptr [rsp+label_48]
    mov         ecx,2
    div         rax,rcx
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_28],rax
    lea         rdx,[rsp+label_28]
    lea         rcx,[rsp+label_20]
    call        0000000140002020
    mov         rax,qword ptr [rax]
    add         rsp,label_38
    ret
func_00000001400028B1_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_38]
    cmp         qword ptr [rax+label_10],rcx
    jae         00000001400028E3
    call        0000000140002D00
    add         rsp,label_28
    ret
func_00000001400028E7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_40]
    inc         rax
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002FA0
    nop
    add         rsp,label_28
    ret
func_0000000140002922_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        0000000140001B10
    add         rsp,label_28
    ret
func_000000014000294A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    cmp         qword ptr [rax+label_18],label_0F
    jbe         000000014000296E
    mov         dword ptr [rsp],1
    jmp         0000000140002975
    mov         dword ptr [rsp],0
    movzx       eax,byte ptr [rsp]
    add         rsp,label_18
    ret
func_000000014000297D_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_20],rax
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140002950
    movzx       eax,al
    test        eax,eax
    je          00000001400029B6
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rax]
    call        0000000140001B10
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_20]
    add         rsp,label_38
    ret
func_00000001400029BF_end:
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_48]
    mov         rdx,rax
    mov         rcx,qword ptr [rsp+label_20]
    call        00000001400027A0
    add         rsp,label_38
    ret
func_00000001400029EE_end:
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,rax
    call        0000000140001B80
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140002A47
    mov         qword ptr [rsp+label_20],0
    jmp         0000000140002A2A
    mov         rax,qword ptr [rsp+label_20]
    inc         rax
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_20],label_10
    jae         0000000140002A47
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    mov         byte ptr [rax],0
    jmp         0000000140002A1D
    add         rsp,label_38
    ret
func_0000000140002A4B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_58
    mov         rax,qword ptr [rsp+label_60]
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rsp+label_68]
    mov         qword ptr [rsp+label_28],rax
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    jne         0000000140002B0A
    mov         rax,qword ptr [rsp+label_60]
    mov         rcx,rax
    call        0000000140001B10
    mov         qword ptr [rsp+label_40],rax
    mov         rax,qword ptr [rsp+label_68]
    mov         rcx,rax
    call        0000000140001B10
    mov         qword ptr [rsp+label_38],rax
    mov         r8d,label_20
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140029A70
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_10],0
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_18],label_0F
    mov         rcx,qword ptr [rsp+label_28]
    call        00000001400026B0
    mov         byte ptr [rsp+label_20],0
    mov         eax,1
    imul        rax,rax,0
    mov         rcx,qword ptr [rsp+label_28]
    add         rcx,rax
    mov         rax,rcx
    lea         rdx,[rsp+label_20]
    mov         rcx,rax
    call        0000000140002ED0
    jmp         0000000140002BF1
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140002950
    movzx       eax,al
    test        eax,eax
    je          0000000140002B4B
    mov         rdx,qword ptr [rsp+label_68]
    mov         rcx,qword ptr [rsp+label_60]
    call        00000001400029C0
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_30]
    mov         rdx,rax
    call        0000000140001AA0
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,rax
    call        00000001400029F0
    jmp         0000000140002B8D
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140001B80
    mov         rcx,qword ptr [rsp+label_30]
    call        00000001400026B0
    mov         rax,qword ptr [rsp+label_28]
    mov         rax,qword ptr [rax+label_10]
    inc         rax
    mov         rcx,qword ptr [rsp+label_28]
    mov         rdx,qword ptr [rsp+label_30]
    mov         qword ptr [rsp+label_48],rdx
    mov         r8,rax
    mov         rdx,rcx
    mov         rax,qword ptr [rsp+label_48]
    mov         rcx,rax
    call        0000000140002F10
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rcx+label_18]
    mov         qword ptr [rax+label_18],rcx
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rcx+label_10]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_10],0
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_18],label_0F
    mov         byte ptr [rsp+label_21],0
    mov         eax,1
    imul        rax,rax,0
    mov         rcx,qword ptr [rsp+label_28]
    add         rcx,rax
    mov         rax,rcx
    lea         rdx,[rsp+label_21]
    mov         rcx,rax
    call        0000000140002ED0
    add         rsp,label_58
    ret
func_0000000140002BF5_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    sub         rsp,label_48
    lea         rcx,[rsp+label_20]
    call        00000001400022E0
    lea         rdx,[label_000000014003AEE0]
    lea         rcx,[rsp+label_20]
    call        000000014000A870
    add         rsp,label_48
    ret
func_0000000140002C23_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_50]
    mov         qword ptr [rsp+label_28],rax
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140001B80
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140002950
    movzx       eax,al
    test        eax,eax
    je          0000000140002C95
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140002930
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rsp+label_28]
    mov         r8,qword ptr [rax+label_18]
    mov         rax,qword ptr [rsp+label_28]
    mov         rdx,qword ptr [rax]
    mov         rcx,qword ptr [rsp+label_30]
    call        00000001400028F0
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,rax
    call        00000001400029F0
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_10],0
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_18],label_0F
    mov         byte ptr [rsp+label_20],0
    mov         eax,1
    imul        rax,rax,0
    mov         rcx,qword ptr [rsp+label_28]
    add         rcx,rax
    mov         rax,rcx
    lea         rdx,[rsp+label_20]
    mov         rcx,rax
    call        0000000140002ED0
    add         rsp,label_48
    ret
func_0000000140002CD9_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    sub         rsp,label_28
    lea         rcx,[label_000000014002C4E8]
    call        0000000140007144
    add         rsp,label_28
    ret
func_0000000140002CF4_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    sub         rsp,label_28
    lea         rcx,[label_000000014002C4F8]
    call        0000000140007168
    add         rsp,label_28
    ret
func_0000000140002D14_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140001B90
    mov         rcx,rax
    call        0000000140001760
    add         rsp,label_28
    ret
func_0000000140002D44_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140003280
    mov         rcx,rax
    call        0000000140001B10
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002D90
    add         rsp,label_28
    ret
func_0000000140002D86_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_58
    mov         rax,qword ptr [rsp+label_60]
    mov         rax,qword ptr [rax+label_10]
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_60]
    mov         rcx,qword ptr [rsp+label_38]
    mov         rax,qword ptr [rax+label_18]
    sub         rax,rcx
    cmp         qword ptr [rsp+label_70],rax
    ja          0000000140002E4E
    mov         rax,qword ptr [rsp+label_70]
    mov         rcx,qword ptr [rsp+label_38]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,qword ptr [rsp+label_60]
    mov         qword ptr [rcx+label_10],rax
    mov         rax,qword ptr [rsp+label_60]
    mov         rcx,rax
    call        0000000140002980
    mov         qword ptr [rsp+label_40],rax
    mov         rax,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    mov         r8,qword ptr [rsp+label_70]
    mov         rdx,qword ptr [rsp+label_68]
    mov         rcx,rax
    call        0000000140003350
    mov         byte ptr [rsp+label_30],0
    mov         rax,qword ptr [rsp+label_70]
    mov         rcx,qword ptr [rsp+label_38]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    lea         rdx,[rsp+label_30]
    mov         rcx,rax
    call        0000000140002ED0
    mov         rax,qword ptr [rsp+label_60]
    jmp         0000000140002E72
    mov         rax,qword ptr [rsp+label_70]
    mov         qword ptr [rsp+label_20],rax
    mov         r9,qword ptr [rsp+label_68]
    movzx       r8d,byte ptr [rsp+label_31]
    mov         rdx,qword ptr [rsp+label_70]
    mov         rcx,qword ptr [rsp+label_60]
    call        0000000140001BB0
    add         rsp,label_58
    ret
func_0000000140002E76_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140002EB3
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001B10
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,rax
    call        0000000140001FA0
    jmp         0000000140002EC2
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_38]
    movzx       ecx,byte ptr [rcx]
    mov         byte ptr [rax],cl
    add         rsp,label_28
    ret
func_0000000140002EC6_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140002EFB
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002E80
    jmp         0000000140002F0A
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_38]
    movzx       ecx,byte ptr [rcx]
    mov         byte ptr [rax],cl
    add         rsp,label_28
    ret
func_0000000140002F0E_end:
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140002F81
    mov         qword ptr [rsp+label_20],0
    jmp         0000000140002F47
    mov         rax,qword ptr [rsp+label_20]
    inc         rax
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_50]
    cmp         qword ptr [rsp+label_20],rax
    je          0000000140002F7A
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,qword ptr [rsp+label_20]
    mov         rdx,qword ptr [rsp+label_48]
    add         rdx,rcx
    mov         rcx,rdx
    movzx       ecx,byte ptr [rcx]
    mov         byte ptr [rax],cl
    jmp         0000000140002F3A
    mov         rax,qword ptr [rsp+label_40]
    jmp         0000000140002F9A
    mov         r8,qword ptr [rsp+label_50]
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140029A70
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140002F9E_end:
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140001B20
    add         rsp,label_28
    ret
func_0000000140002FC6_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_20],r9
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_78
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rsp+label_58],rax
    mov         rdx,qword ptr [rsp+label_0000000000000088]
    mov         rcx,qword ptr [rsp+label_58]
    call        00000001400028C0
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         rax,qword ptr [rax+label_10]
    mov         qword ptr [rsp+label_48],rax
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         rcx,qword ptr [rsp+label_48]
    mov         rax,qword ptr [rax+label_18]
    sub         rax,rcx
    cmp         qword ptr [rsp+label_0000000000000098],rax
    ja          0000000140003049
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    jne         0000000140003049
    mov         byte ptr [rsp+label_30],1
    jmp         000000014000304E
    mov         byte ptr [rsp+label_30],0
    movzx       eax,byte ptr [rsp+label_30]
    mov         byte ptr [rsp+label_31],al
    movzx       eax,byte ptr [rsp+label_31]
    test        eax,eax
    je          00000001400031D5
    mov         rax,qword ptr [rsp+label_0000000000000098]
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rcx+label_10],rax
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         rcx,rax
    call        0000000140002980
    mov         qword ptr [rsp+label_50],rax
    mov         rax,qword ptr [rsp+label_0000000000000088]
    mov         rcx,qword ptr [rsp+label_50]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_0000000000000098]
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    add         rcx,rax
    mov         rax,rcx
    cmp         rax,qword ptr [rsp+label_38]
    jbe         00000001400030E7
    mov         rax,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_50]
    add         rcx,rax
    mov         rax,rcx
    cmp         qword ptr [rsp+label_0000000000000090],rax
    jbe         00000001400030F6
    mov         rax,qword ptr [rsp+label_0000000000000098]
    mov         qword ptr [rsp+label_40],rax
    jmp         0000000140003128
    mov         rax,qword ptr [rsp+label_0000000000000090]
    cmp         qword ptr [rsp+label_38],rax
    ja          0000000140003110
    mov         qword ptr [rsp+label_40],0
    jmp         0000000140003128
    mov         rax,qword ptr [rsp+label_0000000000000090]
    mov         rcx,qword ptr [rsp+label_38]
    sub         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_40],rax
    mov         rax,qword ptr [rsp+label_0000000000000088]
    mov         rcx,qword ptr [rsp+label_48]
    sub         rcx,rax
    mov         rax,rcx
    inc         rax
    mov         rcx,qword ptr [rsp+label_0000000000000098]
    mov         rdx,qword ptr [rsp+label_38]
    add         rdx,rcx
    mov         rcx,rdx
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_38]
    call        0000000140003350
    mov         r8,qword ptr [rsp+label_40]
    mov         rdx,qword ptr [rsp+label_0000000000000090]
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140002F10
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_0000000000000098]
    sub         rcx,rax
    mov         rax,rcx
    mov         rcx,qword ptr [rsp+label_0000000000000098]
    mov         rdx,qword ptr [rsp+label_0000000000000090]
    add         rdx,rcx
    mov         rcx,rdx
    add         rcx,qword ptr [rsp+label_40]
    mov         rdx,qword ptr [rsp+label_40]
    mov         r8,qword ptr [rsp+label_38]
    add         r8,rdx
    mov         rdx,r8
    mov         qword ptr [rsp+label_60],rdx
    mov         r8,rax
    mov         rdx,rcx
    mov         rax,qword ptr [rsp+label_60]
    mov         rcx,rax
    call        0000000140002F10
    mov         rax,qword ptr [rsp+label_0000000000000080]
    jmp         0000000140003212
    mov         rax,qword ptr [rsp+label_0000000000000098]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_0000000000000090]
    mov         qword ptr [rsp+label_20],rax
    mov         r9,qword ptr [rsp+label_0000000000000088]
    movzx       r8d,byte ptr [rsp+label_32]
    mov         rdx,qword ptr [rsp+label_0000000000000098]
    mov         rcx,qword ptr [rsp+label_0000000000000080]
    call        0000000140001D70
    add         rsp,label_78
    ret
func_0000000140003216_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140003280
    mov         rcx,rax
    call        0000000140001B10
    mov         r9,rax
    mov         r8,qword ptr [rsp+label_40]
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002FD0
    add         rsp,label_28
    ret
func_0000000140003260_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    xor         al,al
    ret
func_0000000140003272_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    mov         qword ptr [rsp+8],rax
    mov         qword ptr [rsp],label_0FFFFFFFFFFFFFFFF
    inc         qword ptr [rsp]
    mov         rax,qword ptr [rsp+8]
    mov         rcx,qword ptr [rsp]
    cmp         byte ptr [rax+rcx],0
    jne         000000014000329B
    mov         rax,qword ptr [rsp]
    add         rsp,label_18
    ret
func_00000001400032B6_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         rax,label_7FFFFFFFFFFFFFFF
    ret
func_00000001400032CA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,label_0FFFFFFFFFFFFFFFF
    ret
func_00000001400032DC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_58
    mov         rcx,qword ptr [rsp+label_60]
    call        0000000140002930
    mov         rcx,rax
    call        00000001400032D0
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_20],label_10
    lea         rdx,[rsp+label_20]
    lea         rcx,[rsp+label_28]
    call        0000000140002020
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rsp+label_30]
    dec         rax
    mov         qword ptr [rsp+label_38],rax
    call        00000001400032C0
    mov         qword ptr [rsp+label_40],rax
    lea         rdx,[rsp+label_38]
    lea         rcx,[rsp+label_40]
    call        0000000140002070
    mov         rax,qword ptr [rax]
    add         rsp,label_58
    ret
func_000000014000334D_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140003464
    mov         byte ptr [rsp+label_20],1
    mov         rax,qword ptr [rsp+label_58]
    mov         qword ptr [rsp+label_38],rax
    jmp         0000000140003391
    mov         rax,qword ptr [rsp+label_38]
    inc         rax
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_60]
    mov         rcx,qword ptr [rsp+label_58]
    add         rcx,rax
    mov         rax,rcx
    cmp         qword ptr [rsp+label_38],rax
    je          00000001400033BD
    mov         rax,qword ptr [rsp+label_38]
    cmp         qword ptr [rsp+label_50],rax
    jne         00000001400033BB
    mov         byte ptr [rsp+label_20],0
    jmp         00000001400033BD
    jmp         0000000140003384
    movzx       eax,byte ptr [rsp+label_20]
    test        eax,eax
    je          0000000140003413
    mov         qword ptr [rsp+label_28],0
    jmp         00000001400033DE
    mov         rax,qword ptr [rsp+label_28]
    inc         rax
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_60]
    cmp         qword ptr [rsp+label_28],rax
    je          0000000140003411
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_50]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,qword ptr [rsp+label_28]
    mov         rdx,qword ptr [rsp+label_58]
    add         rdx,rcx
    mov         rcx,rdx
    movzx       ecx,byte ptr [rcx]
    mov         byte ptr [rax],cl
    jmp         00000001400033D1
    jmp         000000014000345D
    mov         rax,qword ptr [rsp+label_60]
    mov         qword ptr [rsp+label_30],rax
    jmp         000000014000342C
    mov         rax,qword ptr [rsp+label_30]
    dec         rax
    mov         qword ptr [rsp+label_30],rax
    cmp         qword ptr [rsp+label_30],0
    je          000000014000345D
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_50]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,qword ptr [rsp+label_30]
    mov         rdx,qword ptr [rsp+label_58]
    add         rdx,rcx
    mov         rcx,rdx
    movzx       ecx,byte ptr [rcx-1]
    mov         byte ptr [rax-1],cl
    jmp         000000014000341F
    mov         rax,qword ptr [rsp+label_50]
    jmp         000000014000347D
    mov         r8,qword ptr [rsp+label_60]
    mov         rdx,qword ptr [rsp+label_58]
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140029A70
    mov         rax,qword ptr [rsp+label_50]
    add         rsp,label_48
    ret
func_0000000140003481_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    cmp         qword ptr [rax+8],0
    je          00000001400034B4
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax+8]
    mov         qword ptr [rsp],rax
    jmp         00000001400034BF
    lea         rax,[label_000000014002C4D0]
    mov         qword ptr [rsp],rax
    mov         rax,qword ptr [rsp]
    add         rsp,label_18
    ret
func_00000001400034C7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         dword ptr [rsp+8],ecx
    mov         eax,dword ptr [rsp+label_10]
    mov         ecx,dword ptr [rsp+8]
    add         ecx,eax
    mov         eax,ecx
    ret
func_00000001400034E4_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         dword ptr [rsp+8],ecx
    mov         eax,dword ptr [rsp+label_10]
    mov         ecx,dword ptr [rsp+8]
    sub         ecx,eax
    mov         eax,ecx
    ret
func_0000000140003504_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         dword ptr [rsp+8],ecx
    mov         eax,dword ptr [rsp+8]
    imul        eax,dword ptr [rsp+label_10]
    ret
func_0000000140003521_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    movsd       mmword ptr [rsp+label_10],xmm1
    movsd       mmword ptr [rsp+8],xmm0
    sub         rsp,label_48
    movsd       xmm0,mmword ptr [rsp+label_58]
    ucomisd     xmm0,mmword ptr [label_000000014002C5D8]
    jp          0000000140003574
    jne         0000000140003574
    lea         rdx,[label_000000014002C568]
    lea         rcx,[rsp+label_20]
    call        0000000140003810
    lea         rdx,[label_000000014003AF98]
    lea         rcx,[rsp+label_20]
    call        000000014000A870
    movsd       xmm0,mmword ptr [rsp+label_50]
    divsd       xmm0,mmword ptr [rsp+label_58]
    add         rsp,label_48
    ret
func_0000000140003584_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    movsd       mmword ptr [rsp+8],xmm0
    sub         rsp,label_38
    cmp         dword ptr [rsp+label_48],0
    jne         00000001400035AF
    movsd       xmm0,mmword ptr [label_000000014002C5E0]
    jmp         0000000140003620
    cmp         dword ptr [rsp+label_48],0
    jge         00000001400035DA
    mov         eax,dword ptr [rsp+label_48]
    neg         eax
    mov         edx,eax
    movsd       xmm0,mmword ptr [rsp+label_40]
    call        0000000140003590
    movsd       xmm1,mmword ptr [label_000000014002C5E0]
    divsd       xmm1,xmm0
    movaps      xmm0,xmm1
    jmp         0000000140003620
    movsd       xmm0,mmword ptr [label_000000014002C5E0]
    movsd       mmword ptr [rsp+label_28],xmm0
    mov         dword ptr [rsp+label_20],0
    jmp         00000001400035FC
    mov         eax,dword ptr [rsp+label_20]
    inc         eax
    mov         dword ptr [rsp+label_20],eax
    mov         eax,dword ptr [rsp+label_48]
    cmp         dword ptr [rsp+label_20],eax
    jge         000000014000361A
    movsd       xmm0,mmword ptr [rsp+label_28]
    mulsd       xmm0,mmword ptr [rsp+label_40]
    movsd       mmword ptr [rsp+label_28],xmm0
    jmp         00000001400035F2
    movsd       xmm0,mmword ptr [rsp+label_28]
    add         rsp,label_38
    ret
func_0000000140003624_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+8],ecx
    sub         rsp,label_48
    cmp         dword ptr [rsp+label_50],0
    jge         0000000140003661
    lea         rdx,[label_000000014002C580]
    lea         rcx,[rsp+label_28]
    call        0000000140003810
    lea         rdx,[label_000000014003AF98]
    lea         rcx,[rsp+label_28]
    call        000000014000A870
    cmp         dword ptr [rsp+label_50],0
    je          000000014000366F
    cmp         dword ptr [rsp+label_50],1
    jne         0000000140003676
    mov         eax,1
    jmp         00000001400036AF
    mov         dword ptr [rsp+label_24],1
    mov         dword ptr [rsp+label_20],2
    jmp         0000000140003692
    mov         eax,dword ptr [rsp+label_20]
    inc         eax
    mov         dword ptr [rsp+label_20],eax
    mov         eax,dword ptr [rsp+label_50]
    cmp         dword ptr [rsp+label_20],eax
    jg          00000001400036AB
    mov         eax,dword ptr [rsp+label_24]
    imul        eax,dword ptr [rsp+label_20]
    mov         dword ptr [rsp+label_24],eax
    jmp         0000000140003688
    mov         eax,dword ptr [rsp+label_24]
    add         rsp,label_48
    ret
func_00000001400036B3_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+8],ecx
    sub         rsp,label_18
    cmp         dword ptr [rsp+label_20],1
    jg          00000001400036D6
    xor         al,al
    jmp         0000000140003757
    cmp         dword ptr [rsp+label_20],3
    jg          00000001400036E1
    mov         al,1
    jmp         0000000140003757
    mov         eax,dword ptr [rsp+label_20]
    cdq
    and         eax,1
    xor         eax,edx
    sub         eax,edx
    test        eax,eax
    je          0000000140003703
    mov         eax,dword ptr [rsp+label_20]
    cdq
    mov         ecx,3
    idiv        eax,ecx
    mov         eax,edx
    test        eax,eax
    jne         0000000140003707
    xor         al,al
    jmp         0000000140003757
    mov         dword ptr [rsp],5
    jmp         0000000140003719
    mov         eax,dword ptr [rsp]
    add         eax,6
    mov         dword ptr [rsp],eax
    mov         eax,dword ptr [rsp]
    imul        eax,dword ptr [rsp]
    cmp         eax,dword ptr [rsp+label_20]
    jg          0000000140003755
    mov         eax,dword ptr [rsp+label_20]
    cdq
    idiv        eax,dword ptr [rsp]
    mov         eax,edx
    test        eax,eax
    je          000000014000374F
    mov         eax,dword ptr [rsp]
    add         eax,2
    mov         dword ptr [rsp+4],eax
    mov         eax,dword ptr [rsp+label_20]
    cdq
    mov         ecx,dword ptr [rsp+4]
    idiv        eax,ecx
    mov         eax,edx
    test        eax,eax
    jne         0000000140003753
    xor         al,al
    jmp         0000000140003757
    jmp         0000000140003710
    mov         al,1
    add         rsp,label_18
    ret
func_000000014000375B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rdi
    sub         rsp,label_30
    mov         rax,qword ptr [rsp+label_40]
    lea         rcx,[label_000000014002C4C0]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_40]
    add         rax,8
    mov         rdi,rax
    xor         eax,eax
    mov         ecx,label_10
    rep stos    byte ptr [rdi]
    mov         rax,qword ptr [rsp+label_48]
    mov         qword ptr [rsp+label_20],rax
    mov         byte ptr [rsp+label_28],1
    mov         rax,qword ptr [rsp+label_40]
    add         rax,8
    mov         rdx,rax
    lea         rcx,[rsp+label_20]
    call        000000014000A7B0
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_30
    pop         rdi
    ret
func_00000001400037C2_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140003850
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C5C8]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140003805_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140003890
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C5C8]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140003845_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002320
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C5B0]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140003885_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140003760
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C5B0]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400038C5_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rdx,qword ptr [rsp+label_40]
    lea         rcx,[label_000000014003D410]
    call        0000000140003C70
    mov         qword ptr [rsp+label_20],rax
    lea         rdx,[label_00000001400046A0]
    mov         rcx,qword ptr [rsp+label_20]
    call        00000001400054A0
    nop
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140002410
    add         rsp,label_38
    ret
func_000000014000390F_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         edx,dword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006B30
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140003957_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    movsd       mmword ptr [rsp+label_10],xmm1
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    movsd       xmm1,mmword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006BB0
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_000000014000399B_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    movss       dword ptr [rsp+label_10],xmm1
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    movss       xmm1,dword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006B70
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_00000001400039EB_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         edx,dword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006B30
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140003A37_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006C50
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140003A79_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006C90
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140003AB9_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140002180
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140003AF9_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        00000001400048A0
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140003B39_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         rcx,qword ptr [rsp+label_18]
    mov         rcx,qword ptr [rcx]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+8]
    ret
func_0000000140003B63_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_20],r9
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_50]
    mov         qword ptr [rsp+label_38],rax
    mov         r8,qword ptr [rsp+label_68]
    movzx       edx,byte ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140001690
    nop
    lea         rdx,[rsp+label_60]
    lea         rcx,[rsp+label_58]
    call        00000001400027A0
    lea         rcx,[rsp+label_58]
    call        0000000140003FC0
    mov         qword ptr [rsp+label_28],rax
    lea         rcx,[rsp+label_60]
    call        0000000140003FC0
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rsp+label_30]
    cmp         qword ptr [rsp+label_28],rax
    jne         0000000140003BEC
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140005900
    jmp         0000000140003C17
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_30]
    sub         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        0000000140001B10
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140001920
    nop
    mov         rax,qword ptr [rsp+label_50]
    add         rsp,label_48
    ret
func_0000000140003C20_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_28],rax
    lea         r8,[rsp+label_48]
    movzx       edx,byte ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140003B40
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140003C65_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140006A40
    mov         qword ptr [rsp+label_20],rax
    mov         rcx,qword ptr [rsp+label_48]
    call        00000001400060D0
    mov         qword ptr [rsp+label_28],rax
    mov         r8,qword ptr [rsp+label_20]
    mov         rdx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140003FE0
    add         rsp,label_38
    ret
func_0000000140003CB4_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp],rax
    mov         rax,qword ptr [rsp]
    add         rsp,label_18
    ret
func_0000000140003CDD_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_68
    mov         rax,qword ptr [rsp+label_70]
    mov         qword ptr [rsp+label_28],rax
    mov         rcx,qword ptr [rsp+label_70]
    call        00000001400032E0
    cmp         qword ptr [rsp+label_0000000000000080],rax
    jbe         0000000140003D16
    call        0000000140002CE0
    mov         rcx,qword ptr [rsp+label_70]
    call        0000000140002930
    mov         qword ptr [rsp+label_48],rax
    lea         rax,[label_000000014002C4E2]
    mov         qword ptr [rsp+label_40],rax
    mov         r8,qword ptr [rsp+label_28]
    mov         rdx,qword ptr [rsp+label_40]
    lea         rcx,[rsp+label_20]
    call        0000000140002200
    cmp         qword ptr [rsp+label_0000000000000080],label_0F
    ja          0000000140003D95
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_18],label_0F
    mov         rax,qword ptr [rsp+label_28]
    mov         r8d,label_10
    mov         rdx,qword ptr [rsp+label_78]
    mov         rcx,rax
    call        0000000140002F10
    lea         rcx,[rsp+label_20]
    call        0000000140001B80
    jmp         0000000140003E37
    mov         rcx,qword ptr [rsp+label_70]
    call        00000001400032E0
    mov         r8,rax
    mov         edx,label_0F
    mov         rcx,qword ptr [rsp+label_0000000000000080]
    call        0000000140002820
    mov         qword ptr [rsp+label_30],rax
    lea         rdx,[rsp+label_30]
    mov         rcx,qword ptr [rsp+label_48]
    call        00000001400017E0
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_28]
    lea         rdx,[rsp+label_38]
    mov         rcx,rax
    call        0000000140001AA0
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_30]
    mov         qword ptr [rax+label_18],rcx
    mov         rax,qword ptr [rsp+label_0000000000000080]
    inc         rax
    mov         qword ptr [rsp+label_50],rax
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140001B10
    mov         rcx,qword ptr [rsp+label_50]
    mov         r8,rcx
    mov         rdx,qword ptr [rsp+label_78]
    mov         rcx,rax
    call        0000000140002F10
    lea         rcx,[rsp+label_20]
    call        0000000140001B80
    add         rsp,label_68
    ret
func_0000000140003E3B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_58
    mov         rax,qword ptr [rsp+label_60]
    mov         qword ptr [rsp+label_28],rax
    mov         rcx,qword ptr [rsp+label_60]
    call        00000001400032E0
    cmp         qword ptr [rsp+label_70],rax
    jbe         0000000140003E72
    call        0000000140002CE0
    mov         rcx,qword ptr [rsp+label_60]
    call        0000000140002930
    mov         qword ptr [rsp+label_48],rax
    lea         rax,[label_000000014002C4E2]
    mov         qword ptr [rsp+label_40],rax
    mov         r8,qword ptr [rsp+label_28]
    mov         rdx,qword ptr [rsp+label_40]
    lea         rcx,[rsp+label_20]
    call        0000000140002200
    cmp         qword ptr [rsp+label_70],label_0F
    ja          0000000140003F0D
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_70]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_18],label_0F
    mov         rax,qword ptr [rsp+label_28]
    movzx       r8d,byte ptr [rsp+label_68]
    mov         rdx,qword ptr [rsp+label_70]
    mov         rcx,rax
    call        0000000140006030
    mov         byte ptr [rsp+label_21],0
    mov         rax,qword ptr [rsp+label_70]
    mov         rcx,qword ptr [rsp+label_28]
    add         rcx,rax
    mov         rax,rcx
    lea         rdx,[rsp+label_21]
    mov         rcx,rax
    call        0000000140002ED0
    lea         rcx,[rsp+label_20]
    call        0000000140001B80
    jmp         0000000140003FB8
    mov         rcx,qword ptr [rsp+label_60]
    call        00000001400032E0
    mov         r8,rax
    mov         edx,label_0F
    mov         rcx,qword ptr [rsp+label_70]
    call        0000000140002820
    mov         qword ptr [rsp+label_38],rax
    lea         rdx,[rsp+label_38]
    mov         rcx,qword ptr [rsp+label_48]
    call        00000001400017E0
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rsp+label_28]
    lea         rdx,[rsp+label_30]
    mov         rcx,rax
    call        0000000140001AA0
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_70]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_38]
    mov         qword ptr [rax+label_18],rcx
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001B10
    movzx       r8d,byte ptr [rsp+label_68]
    mov         rdx,qword ptr [rsp+label_70]
    mov         rcx,rax
    call        0000000140006030
    mov         byte ptr [rsp+label_22],0
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001B10
    add         rax,qword ptr [rsp+label_70]
    lea         rdx,[rsp+label_22]
    mov         rcx,rax
    call        0000000140002ED0
    lea         rcx,[rsp+label_20]
    call        0000000140001B80
    add         rsp,label_58
    ret
func_0000000140003FBC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         rax,qword ptr [rax]
    ret
func_0000000140003FCD_end:
    int         3
    int         3
    lea         rax,[label_000000014003C000]
    ret
func_0000000140003FD7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_0A8
    mov         dword ptr [rsp+label_20],0
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        0000000140006DD0
    test        rax,rax
    jle         0000000140004057
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        0000000140006DD0
    cmp         rax,qword ptr [rsp+label_00000000000000C0]
    ja          0000000140004062
    mov         qword ptr [rsp+label_28],0
    jmp         0000000140004094
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        0000000140006DD0
    sub         rax,qword ptr [rsp+label_00000000000000C0]
    mov         qword ptr [rsp+label_28],rax
    mov         rdx,qword ptr [rsp+label_00000000000000B0]
    lea         rcx,[rsp+label_0000000000000088]
    call        0000000140004FB0
    nop
    lea         rcx,[rsp+label_0000000000000088]
    call        0000000140005640
    movzx       eax,al
    test        eax,eax
    jne         00000001400040CE
    mov         eax,dword ptr [rsp+label_20]
    or          eax,4
    mov         dword ptr [rsp+label_20],eax
    jmp         0000000140004311
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400065E0
    and         eax,label_1C0
    cmp         eax,label_40
    je          00000001400041B9
    jmp         0000000140004110
    mov         rax,qword ptr [rsp+label_28]
    dec         rax
    mov         qword ptr [rsp+label_28],rax
    cmp         qword ptr [rsp+label_28],0
    jbe         00000001400041B9
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400069A0
    mov         qword ptr [rsp+label_48],rax
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400065D0
    mov         byte ptr [rsp+label_24],al
    movzx       edx,byte ptr [rsp+label_24]
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140006A50
    mov         dword ptr [rsp+label_30],eax
    mov         eax,dword ptr [rsp+label_30]
    mov         dword ptr [rsp+label_34],eax
    call        00000001400064E0
    mov         dword ptr [rsp+label_38],eax
    mov         edx,dword ptr [rsp+label_34]
    mov         ecx,dword ptr [rsp+label_38]
    call        00000001400064F0
    movzx       eax,al
    test        eax,eax
    je          00000001400041B4
    mov         eax,dword ptr [rsp+label_20]
    or          eax,4
    mov         dword ptr [rsp+label_20],eax
    jmp         00000001400041B9
    jmp         0000000140004103
    cmp         dword ptr [rsp+label_20],0
    jne         0000000140004228
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400069A0
    mov         qword ptr [rsp+label_50],rax
    mov         r8,qword ptr [rsp+label_00000000000000C0]
    mov         rdx,qword ptr [rsp+label_00000000000000B8]
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140006AD0
    mov         qword ptr [rsp+label_58],rax
    mov         rax,qword ptr [rsp+label_00000000000000C0]
    cmp         qword ptr [rsp+label_58],rax
    je          0000000140004228
    mov         eax,dword ptr [rsp+label_20]
    or          eax,4
    mov         dword ptr [rsp+label_20],eax
    jmp         00000001400042E0
    jmp         0000000140004237
    mov         rax,qword ptr [rsp+label_28]
    dec         rax
    mov         qword ptr [rsp+label_28],rax
    cmp         qword ptr [rsp+label_28],0
    jbe         00000001400042E0
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400069A0
    mov         qword ptr [rsp+label_60],rax
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400065D0
    mov         byte ptr [rsp+label_25],al
    movzx       edx,byte ptr [rsp+label_25]
    mov         rcx,qword ptr [rsp+label_60]
    call        0000000140006A50
    mov         dword ptr [rsp+label_3C],eax
    mov         eax,dword ptr [rsp+label_3C]
    mov         dword ptr [rsp+label_40],eax
    call        00000001400064E0
    mov         dword ptr [rsp+label_44],eax
    mov         edx,dword ptr [rsp+label_40]
    mov         ecx,dword ptr [rsp+label_44]
    call        00000001400064F0
    movzx       eax,al
    test        eax,eax
    je          00000001400042DB
    mov         eax,dword ptr [rsp+label_20]
    or          eax,4
    mov         dword ptr [rsp+label_20],eax
    jmp         00000001400042E0
    jmp         000000014000422A
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_68],rax
    xor         edx,edx
    mov         rcx,qword ptr [rsp+label_68]
    call        0000000140006D90
    nop
    jmp         0000000140004311
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_78],rax
    xor         r8d,r8d
    mov         edx,dword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_78]
    call        0000000140006A00
    mov         rax,qword ptr [rsp+label_00000000000000B0]
    mov         qword ptr [rsp+label_0000000000000080],rax
    lea         rcx,[rsp+label_0000000000000088]
    call        0000000140005430
    mov         rax,qword ptr [rsp+label_0000000000000080]
    add         rsp,label_0A8
    ret
func_0000000140004370_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_68
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_58],rax
    mov         dword ptr [rsp+label_30],0
    lea         rcx,[rsp+label_40]
    call        0000000140004690
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_38]
    mov         qword ptr [rsp+label_20],rax
    mov         eax,dword ptr [rsp+label_78]
    mov         dword ptr [rsp+label_2C],eax
    cmp         dword ptr [rsp+label_78],0
    jge         00000001400043FA
    xor         eax,eax
    sub         eax,dword ptr [rsp+label_2C]
    mov         edx,eax
    mov         rcx,qword ptr [rsp+label_20]
    call        0000000140004530
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_20]
    dec         rax
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_20]
    mov         byte ptr [rax],label_2D
    jmp         000000014000440D
    mov         edx,dword ptr [rsp+label_2C]
    mov         rcx,qword ptr [rsp+label_20]
    call        0000000140004530
    mov         qword ptr [rsp+label_20],rax
    lea         rcx,[rsp+label_28]
    call        0000000140001B10
    mov         r9,rax
    mov         r8,qword ptr [rsp+label_38]
    mov         rdx,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_70]
    call        0000000140003B70
    mov         eax,dword ptr [rsp+label_30]
    or          eax,1
    mov         dword ptr [rsp+label_30],eax
    mov         rax,qword ptr [rsp+label_70]
    mov         rcx,qword ptr [rsp+label_58]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_68
    ret
func_000000014000444F_end:
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_68
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_58],rax
    mov         dword ptr [rsp+label_2C],0
    lea         rcx,[rsp+label_40]
    call        0000000140004690
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_38]
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_78]
    mov         qword ptr [rsp+label_30],rax
    cmp         qword ptr [rsp+label_78],0
    jge         00000001400044D0
    xor         eax,eax
    sub         rax,qword ptr [rsp+label_30]
    mov         rdx,rax
    mov         rcx,qword ptr [rsp+label_20]
    call        0000000140004590
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_20]
    dec         rax
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_20]
    mov         byte ptr [rax],label_2D
    jmp         00000001400044E4
    mov         rdx,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_20]
    call        0000000140004590
    mov         qword ptr [rsp+label_20],rax
    lea         rcx,[rsp+label_28]
    call        0000000140001B10
    mov         r9,rax
    mov         r8,qword ptr [rsp+label_38]
    mov         rdx,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_70]
    call        0000000140003B70
    mov         eax,dword ptr [rsp+label_2C]
    or          eax,1
    mov         dword ptr [rsp+label_2C],eax
    mov         rax,qword ptr [rsp+label_70]
    mov         rcx,qword ptr [rsp+label_58]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_68
    ret
func_0000000140004526_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         eax,dword ptr [rsp+label_28]
    mov         dword ptr [rsp],eax
    mov         rax,qword ptr [rsp+label_20]
    dec         rax
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    mov         eax,dword ptr [rsp]
    mov         ecx,label_0A
    div         eax,ecx
    mov         eax,edx
    add         eax,label_30
    mov         rcx,qword ptr [rsp+label_20]
    mov         byte ptr [rcx],al
    xor         edx,edx
    mov         eax,dword ptr [rsp]
    mov         ecx,label_0A
    div         eax,ecx
    mov         dword ptr [rsp],eax
    cmp         dword ptr [rsp],0
    jne         0000000140004544
    mov         rax,qword ptr [rsp+label_20]
    add         rsp,label_18
    ret
func_0000000140004587_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rsp],rax
    mov         rax,qword ptr [rsp+label_20]
    dec         rax
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    mov         rax,qword ptr [rsp]
    mov         ecx,label_0A
    div         rax,rcx
    mov         rax,rdx
    add         rax,label_30
    mov         rcx,qword ptr [rsp+label_20]
    mov         byte ptr [rcx],al
    xor         edx,edx
    mov         rax,qword ptr [rsp]
    mov         ecx,label_0A
    div         rax,rcx
    mov         qword ptr [rsp],rax
    cmp         qword ptr [rsp],0
    jne         00000001400045A7
    mov         rax,qword ptr [rsp+label_20]
    add         rsp,label_18
    ret
func_00000001400045F2_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_68
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_50],rax
    mov         dword ptr [rsp+label_24],0
    lea         rcx,[rsp+label_38]
    call        0000000140004690
    mov         qword ptr [rsp+label_28],rax
    mov         rdx,qword ptr [rsp+label_78]
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140004590
    mov         qword ptr [rsp+label_30],rax
    lea         rcx,[rsp+label_20]
    call        0000000140001B10
    mov         r9,rax
    mov         r8,qword ptr [rsp+label_28]
    mov         rdx,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_70]
    call        0000000140003B70
    mov         eax,dword ptr [rsp+label_24]
    or          eax,1
    mov         dword ptr [rsp+label_24],eax
    mov         rax,qword ptr [rsp+label_70]
    mov         rcx,qword ptr [rsp+label_50]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_68
    ret
func_000000014000468A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    add         rax,label_15
    ret
func_000000014000469E_end:
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_20],rax
    mov         dl,label_0A
    mov         rcx,qword ptr [rsp+label_20]
    call        0000000140006CE0
    movzx       edx,al
    mov         rcx,qword ptr [rsp+label_40]
    call        00000001400068A0
    mov         rcx,qword ptr [rsp+label_40]
    call        00000001400065F0
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_00000001400046F1_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp],rax
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rcx]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp]
    add         rsp,label_18
    ret
func_0000000140004732_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_68
    xor         edx,edx
    lea         rcx,[rsp+label_20]
    call        00000001400071F4
    nop
    mov         rax,qword ptr [label_000000014003D238]
    mov         qword ptr [rsp+label_28],rax
    lea         rcx,[label_000000014003D3A8]
    call        00000001400055E0
    mov         qword ptr [rsp+label_48],rax
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_70]
    call        0000000140005AF0
    mov         qword ptr [rsp+label_38],rax
    cmp         qword ptr [rsp+label_38],0
    jne         0000000140004823
    cmp         qword ptr [rsp+label_28],0
    je          00000001400047A7
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rsp+label_38],rax
    jmp         0000000140004823
    mov         rdx,qword ptr [rsp+label_70]
    lea         rcx,[rsp+label_28]
    call        00000001400059B0
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    jne         00000001400047C4
    call        0000000140005E60
    nop
    jmp         0000000140004823
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rsp+label_30],rax
    mov         rdx,qword ptr [rsp+label_30]
    lea         rcx,[rsp+label_40]
    call        0000000140003C30
    nop
    mov         rcx,qword ptr [rsp+label_30]
    call        000000014000742C
    mov         rax,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rax]
    mov         rcx,qword ptr [rsp+label_30]
    call rax+8
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [label_000000014003D238],rax
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rsp+label_38],rax
    lea         rcx,[rsp+label_40]
    call        00000001400069C0
    nop
    lea         rcx,[rsp+label_40]
    call        00000001400051C0
    mov         rax,qword ptr [rsp+label_38]
    mov         qword ptr [rsp+label_50],rax
    lea         rcx,[rsp+label_20]
    call        000000014000726C
    mov         rax,qword ptr [rsp+label_50]
    add         rsp,label_68
    ret
func_0000000140004840_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         qword ptr [rax],0
    mov         rax,qword ptr [rsp+8]
    mov         byte ptr [rax+8],0
    mov         rax,qword ptr [rsp+8]
    ret
func_000000014000486F_end:
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         qword ptr [rax],0
    xor         eax,eax
    mov         rcx,qword ptr [rsp+8]
    mov         word ptr [rcx+8],ax
    mov         rax,qword ptr [rsp+8]
    ret
func_0000000140004891_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_58
    mov         rax,qword ptr [rsp+label_60]
    mov         qword ptr [rsp+label_30],rax
    mov         rcx,qword ptr [rsp+label_68]
    call        0000000140002930
    mov         rdx,rax
    lea         rcx,[rsp+label_21]
    call        00000001400069F0
    mov         qword ptr [rsp+label_28],rax
    movzx       eax,byte ptr [rsp+label_22]
    mov         byte ptr [rsp+label_20],al
    mov         r8,qword ptr [rsp+label_28]
    movzx       edx,byte ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001690
    nop
    mov         rax,qword ptr [rsp+label_68]
    mov         rax,qword ptr [rax+label_10]
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_68]
    mov         rcx,rax
    call        0000000140002980
    mov         qword ptr [rsp+label_40],rax
    mov         r8,qword ptr [rsp+label_38]
    mov         rdx,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_60]
    call        0000000140003CE0
    nop
    mov         rax,qword ptr [rsp+label_60]
    add         rsp,label_58
    ret
func_0000000140004930_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_28],rax
    movzx       edx,byte ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140001660
    nop
    mov         r8,qword ptr [rsp+label_50]
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140001920
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_000000014000498B_end:
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_18],r8b
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_28],rax
    movzx       edx,byte ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140001660
    nop
    mov         r8,qword ptr [rsp+label_48]
    movzx       edx,byte ptr [rsp+label_50]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140003E40
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_00000001400049DB_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140004D90
    nop
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C748]
    mov         qword ptr [rax],rcx
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005BC0
    nop
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140004A2B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    lea         rcx,[label_000000014002C6D0]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+8]
    ret
func_0000000140004A49_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    mov         rcx,qword ptr [rsp+label_20]
    call        00000001400071F4
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rax,8
    mov         rcx,rax
    call        0000000140004850
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rax,label_18
    mov         rcx,rax
    call        0000000140004850
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rax,label_28
    mov         rcx,rax
    call        0000000140004870
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rax,label_38
    mov         rcx,rax
    call        0000000140004870
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rax,label_48
    mov         rcx,rax
    call        0000000140004850
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rax,label_58
    mov         rcx,rax
    call        0000000140004850
    nop
    cmp         qword ptr [rsp+label_48],0
    je          0000000140004AFA
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        00000001400075DC
    jmp         0000000140004B07
    lea         rcx,[label_000000014002C6E8]
    call        000000014000718C
    nop
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140004B10_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_48]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_28]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_28]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400069A0
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_20],0
    je          0000000140004B84
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax]
    mov         rcx,qword ptr [rsp+label_20]
    call rax+8
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140004B8D_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rsi
    push        rdi
    sub         rsp,label_0C8
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_00000000000000B0],rax
    lea         rax,[rsp+label_70]
    mov         qword ptr [rsp+label_20],rax
    mov         rdx,qword ptr [rsp+label_00000000000000F0]
    mov         rcx,qword ptr [rsp+label_20]
    call        00000001400048A0
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rsp+label_30],rax
    lea         rax,[rsp+label_48]
    mov         rdi,rax
    mov         rsi,qword ptr [rsp+label_00000000000000E8]
    mov         ecx,label_10
    rep movs    byte ptr [rdi],byte ptr [rsi]
    lea         rax,[rsp+label_60]
    lea         rcx,[rsp+label_48]
    mov         rdi,rax
    mov         rsi,rcx
    mov         ecx,label_10
    rep movs    byte ptr [rdi],byte ptr [rsi]
    mov         r8,qword ptr [rsp+label_30]
    lea         rdx,[rsp+label_60]
    lea         rcx,[rsp+label_0000000000000090]
    call        0000000140005C00
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_38]
    mov         qword ptr [rsp+label_40],rax
    mov         rdx,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_00000000000000E0]
    call        0000000140004F70
    nop
    lea         rcx,[rsp+label_0000000000000090]
    call        0000000140002410
    mov         rax,qword ptr [rsp+label_00000000000000E0]
    lea         rcx,[label_000000014002C638]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_00000000000000E0]
    lea         rdi,[rax+label_18]
    mov         rsi,qword ptr [rsp+label_00000000000000E8]
    mov         ecx,label_10
    rep movs    byte ptr [rdi],byte ptr [rsi]
    mov         rax,qword ptr [rsp+label_00000000000000E0]
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_0C8
    pop         rdi
    pop         rsi
    ret
func_0000000140004CA7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rsi
    push        rdi
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140004F30
    mov         rax,qword ptr [rsp+label_40]
    lea         rcx,[label_000000014002C638]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_48]
    lea         rdi,[rax+label_18]
    lea         rsi,[rcx+label_18]
    mov         ecx,label_10
    rep movs    byte ptr [rdi],byte ptr [rsi]
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_28
    pop         rdi
    pop         rsi
    ret
func_0000000140004D02_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002320
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C5F8]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140004D45_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         r8d,1
    lea         rdx,[label_000000014002C608]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002380
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C5F8]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140004D88_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140004E00
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C728]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140004DC5_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         ecx,dword ptr [rsp+label_10]
    mov         dword ptr [rax],ecx
    mov         rax,qword ptr [rsp+8]
    mov         rcx,qword ptr [rsp+label_18]
    mov         qword ptr [rax+8],rcx
    mov         rax,qword ptr [rsp+8]
    ret
func_0000000140004DFC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140004A30
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C700]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    mov         ecx,dword ptr [rsp+label_38]
    mov         dword ptr [rax+8],ecx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140004E3C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005080
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C7A8]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140004E75_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rsi
    push        rdi
    sub         rsp,label_38
    lea         rax,[rsp+label_20]
    mov         rdi,rax
    mov         rsi,qword ptr [rsp+label_60]
    mov         ecx,label_10
    rep movs    byte ptr [rdi],byte ptr [rsi]
    mov         r8,qword ptr [rsp+label_58]
    lea         rdx,[rsp+label_20]
    mov         rcx,qword ptr [rsp+label_50]
    call        00000001400050C0
    mov         rax,qword ptr [rsp+label_50]
    lea         rcx,[label_000000014002C7A8]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_50]
    add         rsp,label_38
    pop         rdi
    pop         rsi
    ret
func_0000000140004ED7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rcx+8]
    mov         qword ptr [rax+8],rcx
    mov         rax,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rax+8]
    mov         rcx,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rcx+8]
    mov         rax,qword ptr [rax]
    call rax+8
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140004F21_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002320
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C620]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140004F65_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_38]
    call        00000001400060D0
    mov         rdx,rax
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140003760
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C620]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_0000000140004FAD_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140004B20
    nop
    mov         rax,qword ptr [rsp+label_48]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400066F0
    movzx       eax,al
    test        eax,eax
    jne         0000000140004FFF
    mov         rax,qword ptr [rsp+label_40]
    mov         byte ptr [rax+8],0
    jmp         0000000140005073
    mov         rax,qword ptr [rsp+label_48]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        0000000140006B10
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_20],0
    je          0000000140005037
    mov         rax,qword ptr [rsp+label_48]
    cmp         qword ptr [rsp+label_20],rax
    jne         0000000140005042
    mov         rax,qword ptr [rsp+label_40]
    mov         byte ptr [rax+8],1
    jmp         0000000140005073
    mov         rcx,qword ptr [rsp+label_20]
    call        00000001400065F0
    mov         rax,qword ptr [rsp+label_48]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400066F0
    mov         rcx,qword ptr [rsp+label_40]
    mov         byte ptr [rcx+8],al
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_000000014000507C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140004CB0
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C658]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400050B5_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rsi
    push        rdi
    sub         rsp,label_68
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_50],rax
    mov         rdx,qword ptr [rsp+label_0000000000000090]
    lea         rcx,[rsp+label_30]
    call        0000000140002180
    nop
    lea         rax,[rsp+label_20]
    mov         rdi,rax
    mov         rsi,qword ptr [rsp+label_0000000000000088]
    mov         ecx,label_10
    rep movs    byte ptr [rdi],byte ptr [rsi]
    lea         r8,[rsp+label_30]
    lea         rdx,[rsp+label_20]
    mov         rcx,qword ptr [rsp+label_0000000000000080]
    call        0000000140004B90
    nop
    lea         rcx,[rsp+label_30]
    call        0000000140002410
    mov         rax,qword ptr [rsp+label_0000000000000080]
    lea         rcx,[label_000000014002C658]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         rcx,qword ptr [rsp+label_50]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_68
    pop         rdi
    pop         rsi
    ret
func_000000014000515D_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005E90
    add         rsp,label_28
    ret
func_0000000140005177_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C748]
    mov         qword ptr [rax],rcx
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005ED0
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005340
    add         rsp,label_28
    ret
func_00000001400051B0_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    cmp         qword ptr [rax],0
    je          0000000140005202
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,rax
    call        0000000140001B10
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp+label_20],rax
    mov         rdx,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140005650
    add         rsp,label_38
    ret
func_0000000140005206_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    lea         rcx,[label_000000014002C6D0]
    mov         qword ptr [rax],rcx
    ret
func_0000000140005224_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140001B80
    add         rsp,label_28
    ret
func_0000000140005247_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140007648
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_58
    mov         rcx,rax
    call        0000000140005160
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_48
    mov         rcx,rax
    call        0000000140005160
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_38
    mov         rcx,rax
    call        0000000140005160
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_28
    mov         rcx,rax
    call        0000000140005160
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_18
    mov         rcx,rax
    call        0000000140005160
    mov         rax,qword ptr [rsp+label_30]
    add         rax,8
    mov         rcx,rax
    call        0000000140005160
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        000000014000726C
    nop
    add         rsp,label_28
    ret
func_00000001400052DB_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_28]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_28]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400069A0
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_20],0
    je          0000000140005333
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax]
    mov         rcx,qword ptr [rsp+label_20]
    call rax+label_10
    nop
    add         rsp,label_38
    ret
func_0000000140005337_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C728]
    mov         qword ptr [rax],rcx
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005370
    add         rsp,label_28
    ret
func_0000000140005366_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    lea         rcx,[label_000000014002C700]
    mov         qword ptr [rax],rcx
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005210
    add         rsp,label_28
    ret
func_0000000140005396_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005480
    add         rsp,label_28
    ret
func_00000001400053B7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_50]
    cmp         qword ptr [rax+8],0
    je          0000000140005428
    mov         rax,qword ptr [rsp+label_50]
    mov         rax,qword ptr [rax+8]
    mov         rcx,qword ptr [rsp+label_50]
    mov         rcx,qword ptr [rcx+8]
    mov         rax,qword ptr [rax]
    call rax+label_10
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_20],0
    je          000000014000541F
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp+label_28],rax
    mov         edx,1
    mov         rcx,qword ptr [rsp+label_20]
    call rsp+label_28
    mov         qword ptr [rsp+label_30],rax
    jmp         0000000140005428
    mov         qword ptr [rsp+label_30],0
    add         rsp,label_48
    ret
func_000000014000542C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    call        00000001400072A0
    test        eax,eax
    jne         0000000140005449
    mov         byte ptr [rsp+label_20],1
    jmp         000000014000544E
    mov         byte ptr [rsp+label_20],0
    movzx       eax,byte ptr [rsp+label_20]
    mov         byte ptr [rsp+label_21],al
    movzx       eax,byte ptr [rsp+label_21]
    test        eax,eax
    je          000000014000546D
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rax]
    call        0000000140005CF0
    mov         rcx,qword ptr [rsp+label_40]
    call        00000001400052E0
    add         rsp,label_38
    ret
func_000000014000547B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002460
    add         rsp,label_28
    ret
func_0000000140005497_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_48]
    mov         qword ptr [rsp+label_20],rax
    mov         rcx,qword ptr [rsp+label_40]
    call rsp+label_20
    add         rsp,label_38
    ret
func_00000001400054C5_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    add         rax,8
    mov         rcx,rax
    call        0000000140003CC0
    mov         qword ptr [rsp+label_28],rax
    mov         rcx,qword ptr [rsp+label_48]
    add         rcx,8
    call        0000000140003CC0
    mov         rcx,qword ptr [rsp+label_28]
    cmp         rcx,rax
    jne         0000000140005516
    mov         dword ptr [rsp+label_20],1
    jmp         000000014000551E
    mov         dword ptr [rsp+label_20],0
    movzx       eax,byte ptr [rsp+label_20]
    add         rsp,label_38
    ret
func_0000000140005527_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rcx,qword ptr [rsp+label_50]
    call        00000001400060F0
    mov         qword ptr [rsp+label_30],rax
    mov         rcx,qword ptr [rsp+label_58]
    call        00000001400060F0
    mov         qword ptr [rsp+label_28],rax
    mov         rdx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_30]
    call        00000001400054D0
    movzx       eax,al
    test        eax,eax
    je          000000014000559C
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140006CD0
    mov         dword ptr [rsp+label_24],eax
    mov         rcx,qword ptr [rsp+label_58]
    call        0000000140006CD0
    mov         ecx,dword ptr [rsp+label_24]
    cmp         ecx,eax
    jne         000000014000559C
    mov         dword ptr [rsp+label_20],1
    jmp         00000001400055A4
    mov         dword ptr [rsp+label_20],0
    movzx       eax,byte ptr [rsp+label_20]
    add         rsp,label_48
    ret
func_00000001400055AD_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        0000000140002980
    add         rax,qword ptr [rsp+label_38]
    add         rsp,label_28
    ret
func_00000001400055D4_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    cmp         qword ptr [rax],0
    jne         0000000140005632
    xor         edx,edx
    lea         rcx,[rsp+label_20]
    call        00000001400071F4
    mov         rax,qword ptr [rsp+label_40]
    cmp         qword ptr [rax],0
    jne         0000000140005628
    mov         eax,dword ptr [label_000000014003D390]
    inc         eax
    mov         dword ptr [label_000000014003D390],eax
    movsxd      rax,dword ptr [label_000000014003D390]
    mov         rcx,qword ptr [rsp+label_40]
    mov         qword ptr [rcx],rax
    lea         rcx,[rsp+label_20]
    call        000000014000726C
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    add         rsp,label_38
    ret
func_000000014000563E_end:
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    movzx       eax,byte ptr [rax+8]
    ret
func_000000014000564E_end:
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_58]
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_20],0
    je          0000000140005695
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp+label_28],rax
    mov         edx,1
    mov         rcx,qword ptr [rsp+label_20]
    call rsp+label_28
    mov         qword ptr [rsp+label_30],rax
    jmp         000000014000569E
    mov         qword ptr [rsp+label_30],0
    add         rsp,label_48
    ret
func_00000001400056A2_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005180
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          00000001400056E1
    mov         edx,label_30
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400056EA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005210
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          0000000140005721
    mov         edx,8
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_000000014000572A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005230
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          0000000140005761
    mov         edx,label_10
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_000000014000576A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140002460
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          00000001400057A1
    mov         edx,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400057AA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005340
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          00000001400057E1
    mov         edx,label_10
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400057EA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005370
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          0000000140005821
    mov         edx,label_10
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_000000014000582A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        00000001400053A0
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          0000000140005861
    mov         edx,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_000000014000586A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005480
    mov         eax,dword ptr [rsp+label_38]
    and         eax,1
    test        eax,eax
    je          00000001400058A1
    mov         edx,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_00000001400058AA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    cmp         qword ptr [rax+8],0
    je          00000001400058E1
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax+8]
    add         rax,label_28
    mov         rcx,rax
    call        0000000140006090
    mov         qword ptr [rsp+label_20],rax
    jmp         00000001400058ED
    lea         rax,[label_000000014002C718]
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_20]
    add         rsp,label_38
    ret
func_00000001400058F6_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_28],rax
    lea         rdx,[label_000000014002C4E2]
    mov         rcx,qword ptr [rsp+label_28]
    call        00000001400027A0
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_10],0
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_18],label_0F
    mov         rcx,qword ptr [rsp+label_28]
    call        00000001400026B0
    mov         byte ptr [rsp+label_20],0
    mov         eax,1
    imul        rax,rax,0
    mov         rcx,qword ptr [rsp+label_28]
    add         rcx,rax
    mov         rax,rcx
    lea         rdx,[rsp+label_20]
    mov         rcx,rax
    call        0000000140002ED0
    add         rsp,label_38
    ret
func_0000000140005972_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    add         rax,8
    mov         ecx,label_0FFFFFFFF
    lock xadd   dword ptr [rax],ecx
    dec         ecx
    mov         eax,ecx
    test        eax,eax
    jne         00000001400059A6
    mov         rax,qword ptr [rsp+8]
    jmp         00000001400059A8
    xor         eax,eax
    ret
func_00000001400059A8_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_0C8
    mov         dword ptr [rsp+label_20],0
    cmp         qword ptr [rsp+label_00000000000000D0],0
    je          0000000140005A95
    mov         rax,qword ptr [rsp+label_00000000000000D0]
    cmp         qword ptr [rax],0
    jne         0000000140005A95
    mov         ecx,label_30
    call        00000001400098BC
    mov         qword ptr [rsp+label_28],rax
    cmp         qword ptr [rsp+label_28],0
    je          0000000140005A58
    mov         rcx,qword ptr [rsp+label_00000000000000D8]
    call        00000001400058B0
    mov         rdx,rax
    lea         rcx,[rsp+label_58]
    call        0000000140004A50
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_38]
    mov         qword ptr [rsp+label_40],rax
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_48],rax
    xor         r8d,r8d
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_28]
    call        00000001400049E0
    mov         qword ptr [rsp+label_30],rax
    jmp         0000000140005A61
    mov         qword ptr [rsp+label_30],0
    mov         rax,qword ptr [rsp+label_30]
    mov         qword ptr [rsp+label_50],rax
    mov         rax,qword ptr [rsp+label_00000000000000D0]
    mov         rcx,qword ptr [rsp+label_50]
    mov         qword ptr [rax],rcx
    mov         eax,dword ptr [rsp+label_20]
    and         eax,1
    test        eax,eax
    je          0000000140005A95
    and         dword ptr [rsp+label_20],label_0FFFFFFFE
    lea         rcx,[rsp+label_58]
    call        0000000140005250
    mov         eax,2
    add         rsp,label_0C8
    ret
func_0000000140005AA1_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rsi
    push        rdi
    sub         rsp,label_48
    lea         rcx,[rsp+label_20]
    call        0000000140007738
    mov         rdi,qword ptr [rsp+label_68]
    mov         rsi,rax
    mov         ecx,label_20
    rep movs    byte ptr [rdi],byte ptr [rsi]
    mov         rax,qword ptr [rsp+label_68]
    add         rsp,label_48
    pop         rdi
    pop         rsi
    ret
func_0000000140005AE4_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_50]
    mov         rax,qword ptr [rax+8]
    mov         rax,qword ptr [rax+label_18]
    cmp         qword ptr [rsp+label_58],rax
    jae         0000000140005B2F
    mov         rax,qword ptr [rsp+label_50]
    mov         rax,qword ptr [rax+8]
    mov         rax,qword ptr [rax+label_10]
    mov         rcx,qword ptr [rsp+label_58]
    mov         rax,qword ptr [rax+rcx*8]
    mov         qword ptr [rsp+label_20],rax
    jmp         0000000140005B38
    mov         qword ptr [rsp+label_20],0
    mov         rax,qword ptr [rsp+label_20]
    mov         qword ptr [rsp+label_28],rax
    cmp         qword ptr [rsp+label_28],0
    jne         0000000140005B5B
    mov         rax,qword ptr [rsp+label_50]
    mov         rax,qword ptr [rax+8]
    movzx       eax,byte ptr [rax+label_24]
    test        eax,eax
    jne         0000000140005B62
    mov         rax,qword ptr [rsp+label_28]
    jmp         0000000140005B92
    call        0000000140007464
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rax+label_18]
    cmp         qword ptr [rsp+label_58],rax
    jae         0000000140005B90
    mov         rax,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rax+label_10]
    mov         rcx,qword ptr [rsp+label_58]
    mov         rax,qword ptr [rax+rcx*8]
    jmp         0000000140005B92
    xor         eax,eax
    add         rsp,label_48
    ret
func_0000000140005B96_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    add         rax,8
    lock inc    dword ptr [rax]
    ret
func_0000000140005BB1_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rsi
    push        rdi
    sub         rsp,label_48
    lea         rdx,[rsp+label_20]
    mov         rcx,qword ptr [rsp+label_68]
    call        0000000140005AB0
    mov         rcx,qword ptr [rsp+label_60]
    lea         rdi,[rcx+label_10]
    mov         rsi,rax
    mov         ecx,label_20
    rep movs    byte ptr [rdi],byte ptr [rsi]
    add         rsp,label_48
    pop         rdi
    pop         rsi
    ret
func_0000000140005BF8_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_78
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_60],rax
    mov         dword ptr [rsp+label_20],0
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    call        00000001400064B0
    movzx       eax,al
    test        eax,eax
    jne         0000000140005C52
    lea         rdx,[label_000000014002C648]
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    call        0000000140002D50
    lea         rdx,[rsp+label_40]
    mov         rcx,qword ptr [rsp+label_0000000000000088]
    call        0000000140006800
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rsp+label_30]
    mov         qword ptr [rsp+label_38],rax
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    call        0000000140005F30
    nop
    lea         rcx,[rsp+label_40]
    call        0000000140002410
    mov         rdx,qword ptr [rsp+label_0000000000000090]
    mov         rcx,qword ptr [rsp+label_0000000000000080]
    call        0000000140002100
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    call        0000000140002410
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         rcx,qword ptr [rsp+label_60]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_78
    ret
func_0000000140005CE0_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400066F0
    movzx       eax,al
    test        eax,eax
    je          0000000140005DAA
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400065E0
    and         eax,2
    test        eax,eax
    je          0000000140005DAA
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400069A0
    mov         rcx,rax
    call        0000000140006880
    mov         dword ptr [rsp+label_20],eax
    cmp         dword ptr [rsp+label_20],label_0FFFFFFFF
    jne         0000000140005DAA
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_40]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_28],rax
    xor         r8d,r8d
    mov         edx,4
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140006A00
    nop
    jmp         0000000140005DAC
    add         rsp,label_38
    ret
func_0000000140005DB0_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax+label_40]
    cmp         qword ptr [rax],0
    je          0000000140005DE8
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax+label_58]
    mov         eax,dword ptr [rax]
    mov         dword ptr [rsp],eax
    jmp         0000000140005DEF
    mov         dword ptr [rsp],0
    movsxd      rax,dword ptr [rsp]
    add         rsp,label_18
    ret
func_0000000140005DF7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax+label_58]
    mov         eax,dword ptr [rax]
    dec         eax
    mov         rcx,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rcx+label_58]
    mov         dword ptr [rcx],eax
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax+label_40]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp],rax
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax+label_40]
    mov         rax,qword ptr [rax]
    inc         rax
    mov         rcx,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rcx+label_40]
    mov         qword ptr [rcx],rax
    mov         rax,qword ptr [rsp]
    add         rsp,label_18
    ret
func_0000000140005E54_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    sub         rsp,label_48
    lea         rcx,[rsp+label_20]
    call        0000000140004D50
    lea         rdx,[label_000000014003B028]
    lea         rcx,[rsp+label_20]
    call        000000014000A870
    add         rsp,label_48
    ret
func_0000000140005E83_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    cmp         qword ptr [rax],0
    je          0000000140005EB1
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,qword ptr [rax]
    call        0000000140012C04
    mov         rax,qword ptr [rsp+label_30]
    mov         qword ptr [rax],0
    add         rsp,label_28
    ret
func_0000000140005EC1_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    cmp         dword ptr [rax+label_20],0
    jle         0000000140005EF4
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rax+label_18]
    call        0000000140012C04
    jmp         0000000140005F17
    mov         rax,qword ptr [rsp+label_40]
    cmp         dword ptr [rax+label_20],0
    jge         0000000140005F17
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax+label_18]
    mov         qword ptr [rsp+label_20],rax
    mov         rcx,qword ptr [rsp+label_20]
    call        0000000140009900
    mov         rax,qword ptr [rsp+label_40]
    mov         rcx,qword ptr [rax+label_28]
    call        0000000140012C04
    add         rsp,label_38
    ret
func_0000000140005F29_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_48]
    mov         rax,qword ptr [rax+label_10]
    mov         qword ptr [rsp+label_20],rax
    mov         rax,qword ptr [rsp+label_48]
    mov         rcx,rax
    call        0000000140002980
    mov         qword ptr [rsp+label_28],rax
    mov         r8,qword ptr [rsp+label_20]
    mov         rdx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140002D90
    add         rsp,label_38
    ret
func_0000000140005F76_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_18],r8b
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140005FE0
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_20],rax
    jmp         0000000140005FC5
    mov         rax,qword ptr [rsp+label_48]
    dec         rax
    mov         qword ptr [rsp+label_48],rax
    mov         rax,qword ptr [rsp+label_20]
    inc         rax
    mov         qword ptr [rsp+label_20],rax
    cmp         qword ptr [rsp+label_48],0
    jbe         0000000140005FDE
    lea         rdx,[rsp+label_50]
    mov         rcx,qword ptr [rsp+label_20]
    call        0000000140001FA0
    jmp         0000000140005FAB
    jmp         000000014000601C
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [rsp+label_28],rax
    jmp         0000000140006006
    mov         rax,qword ptr [rsp+label_48]
    dec         rax
    mov         qword ptr [rsp+label_48],rax
    mov         rax,qword ptr [rsp+label_28]
    inc         rax
    mov         qword ptr [rsp+label_28],rax
    cmp         qword ptr [rsp+label_48],0
    jbe         000000014000601C
    mov         rax,qword ptr [rsp+label_28]
    movzx       ecx,byte ptr [rsp+label_50]
    mov         byte ptr [rax],cl
    jmp         0000000140005FEC
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140006025_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_18],r8b
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    call        0000000140003270
    movzx       eax,al
    test        eax,eax
    je          0000000140006066
    movzx       r8d,byte ptr [rsp+label_40]
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140005F80
    jmp         000000014000607C
    movsx       eax,byte ptr [rsp+label_40]
    mov         r8,qword ptr [rsp+label_38]
    mov         edx,eax
    mov         rcx,qword ptr [rsp+label_30]
    call        000000014002A110
    add         rsp,label_28
    ret
func_0000000140006080_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    cmp         qword ptr [rax],0
    je          00000001400060B2
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax]
    mov         qword ptr [rsp],rax
    jmp         00000001400060BF
    mov         rax,qword ptr [rsp+label_20]
    add         rax,8
    mov         qword ptr [rsp],rax
    mov         rax,qword ptr [rsp]
    add         rsp,label_18
    ret
func_00000001400060C7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rcx,rax
    call        0000000140002980
    add         rsp,label_28
    ret
func_00000001400060EA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         rax,qword ptr [rax+8]
    ret
func_00000001400060FE_end:
    int         3
    mov         byte ptr [rsp+label_18],r8b
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    movzx       eax,byte ptr [rsp+label_50]
    mov         byte ptr [rsp+label_20],al
    mov         rax,qword ptr [rsp+label_40]
    cmp         qword ptr [rax+label_48],0
    je          0000000140006131
    mov         dword ptr [rsp+label_24],0
    jmp         0000000140006139
    mov         dword ptr [rsp+label_24],4
    mov         eax,dword ptr [rsp+label_24]
    mov         ecx,dword ptr [rsp+label_48]
    or          ecx,eax
    mov         eax,ecx
    movzx       r8d,byte ptr [rsp+label_20]
    mov         edx,eax
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006160
    add         rsp,label_38
    ret
func_000000014000615B_end:
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_18],r8b
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_78
    mov         eax,dword ptr [rsp+label_0000000000000088]
    and         eax,label_17
    mov         dword ptr [rsp+label_0000000000000088],eax
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         ecx,dword ptr [rsp+label_0000000000000088]
    mov         dword ptr [rax+label_10],ecx
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         eax,dword ptr [rax+label_14]
    mov         ecx,dword ptr [rsp+label_0000000000000088]
    and         ecx,eax
    mov         eax,ecx
    mov         dword ptr [rsp+label_20],eax
    cmp         dword ptr [rsp+label_20],0
    je          000000014000623F
    movzx       eax,byte ptr [rsp+label_0000000000000090]
    test        eax,eax
    je          00000001400061CF
    xor         edx,edx
    xor         ecx,ecx
    call        000000014000A870
    mov         eax,dword ptr [rsp+label_20]
    and         eax,4
    test        eax,eax
    je          00000001400061E8
    lea         rax,[label_000000014002C7B8]
    mov         qword ptr [rsp+label_28],rax
    jmp         000000014000620D
    mov         eax,dword ptr [rsp+label_20]
    and         eax,2
    test        eax,eax
    je          0000000140006201
    lea         rax,[label_000000014002C7D0]
    mov         qword ptr [rsp+label_28],rax
    jmp         000000014000620D
    lea         rax,[label_000000014002C7E8]
    mov         qword ptr [rsp+label_28],rax
    mov         edx,1
    lea         rcx,[rsp+label_30]
    call        0000000140006740
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_28]
    lea         rcx,[rsp+label_40]
    call        0000000140004E80
    lea         rdx,[label_000000014003B100]
    lea         rcx,[rsp+label_40]
    call        000000014000A870
    add         rsp,label_78
    ret
func_0000000140006243_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_18],r8d
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         r8,qword ptr [rsp+label_30]
    mov         edx,dword ptr [rsp+label_40]
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140004DD0
    mov         rax,qword ptr [rsp+label_38]
    add         rsp,label_28
    ret
func_000000014000627F_end:
    mov         byte ptr [rsp+label_18],r8b
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    movzx       eax,byte ptr [rsp+label_10]
    ret
func_0000000140006293_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_20],r9b
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    lea         rdx,[rsp+label_40]
    lea         rcx,[rsp+label_38]
    call        00000001400027A0
    mov         rax,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_40]
    sub         rcx,rax
    mov         rax,rcx
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140029A70
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_28
    ret
func_00000001400062F2_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_10
    movzx       ecx,byte ptr [rsp+label_38]
    mov         rdx,rax
    call        00000001400077F8
    add         rsp,label_28
    ret
func_0000000140006327_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    lea         rdx,[rsp+label_40]
    lea         rcx,[rsp+label_38]
    call        00000001400027A0
    jmp         0000000140006361
    mov         rax,qword ptr [rsp+label_38]
    inc         rax
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_40]
    cmp         qword ptr [rsp+label_38],rax
    je          000000014000638F
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_10
    mov         rcx,qword ptr [rsp+label_38]
    movzx       ecx,byte ptr [rcx]
    mov         rdx,rax
    call        00000001400077F8
    mov         rcx,qword ptr [rsp+label_38]
    mov         byte ptr [rcx],al
    jmp         0000000140006354
    mov         rax,qword ptr [rsp+label_38]
    add         rsp,label_28
    ret
func_0000000140006398_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_10
    movzx       ecx,byte ptr [rsp+label_38]
    mov         rdx,rax
    call        000000014000792C
    add         rsp,label_28
    ret
func_00000001400063C7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    lea         rdx,[rsp+label_40]
    lea         rcx,[rsp+label_38]
    call        00000001400027A0
    jmp         0000000140006401
    mov         rax,qword ptr [rsp+label_38]
    inc         rax
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_40]
    cmp         qword ptr [rsp+label_38],rax
    je          000000014000642F
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_10
    mov         rcx,qword ptr [rsp+label_38]
    movzx       ecx,byte ptr [rcx]
    mov         rdx,rax
    call        000000014000792C
    mov         rcx,qword ptr [rsp+label_38]
    mov         byte ptr [rcx],al
    jmp         00000001400063F4
    mov         rax,qword ptr [rsp+label_38]
    add         rsp,label_28
    ret
func_0000000140006438_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    movzx       eax,byte ptr [rsp+label_10]
    ret
func_000000014000644E_end:
    int         3
    mov         qword ptr [rsp+label_20],r9
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    lea         rdx,[rsp+label_40]
    lea         rcx,[rsp+label_38]
    call        00000001400027A0
    mov         rax,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_40]
    sub         rcx,rax
    mov         rax,rcx
    mov         r8,rax
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140029A70
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_28
    ret
func_00000001400064A2_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    cmp         qword ptr [rax+label_10],0
    jne         00000001400064CE
    mov         dword ptr [rsp],1
    jmp         00000001400064D5
    mov         dword ptr [rsp],0
    movzx       eax,byte ptr [rsp]
    add         rsp,label_18
    ret
func_00000001400064DD_end:
    int         3
    int         3
    mov         eax,label_0FFFFFFFF
    ret
func_00000001400064E5_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         dword ptr [rsp+8],ecx
    sub         rsp,label_18
    mov         eax,dword ptr [rsp+label_28]
    cmp         dword ptr [rsp+label_20],eax
    jne         000000014000650F
    mov         dword ptr [rsp],1
    jmp         0000000140006516
    mov         dword ptr [rsp],0
    movzx       eax,byte ptr [rsp]
    add         rsp,label_18
    ret
func_000000014000651E_end:
    int         3
    mov         dword ptr [rsp+label_18],r8d
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rcx,qword ptr [rsp+label_48]
    call        00000001400060F0
    mov         rdx,rax
    mov         rcx,qword ptr [rsp+label_40]
    call        00000001400054D0
    movzx       eax,al
    test        eax,eax
    je          000000014000656B
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140006CD0
    cmp         eax,dword ptr [rsp+label_50]
    jne         000000014000656B
    mov         dword ptr [rsp+label_20],1
    jmp         0000000140006573
    mov         dword ptr [rsp+label_20],0
    movzx       eax,byte ptr [rsp+label_20]
    add         rsp,label_38
    ret
func_000000014000657C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         rax,qword ptr [rsp+label_50]
    mov         rax,qword ptr [rax]
    mov         rax,qword ptr [rax+label_18]
    mov         qword ptr [rsp+label_20],rax
    mov         r8d,dword ptr [rsp+label_58]
    lea         rdx,[rsp+label_28]
    mov         rcx,qword ptr [rsp+label_50]
    call rsp+label_20
    mov         rdx,qword ptr [rsp+label_60]
    mov         rcx,rax
    call        0000000140005530
    add         rsp,label_48
    ret
func_00000001400065C7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    movzx       eax,byte ptr [rax+label_58]
    ret
func_00000001400065DE_end:
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         eax,dword ptr [rax+label_18]
    ret
func_00000001400065ED_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_58
    mov         rax,qword ptr [rsp+label_60]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_60]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400069A0
    mov         qword ptr [rsp+label_28],rax
    cmp         qword ptr [rsp+label_28],0
    je          00000001400066AC
    mov         rdx,qword ptr [rsp+label_60]
    lea         rcx,[rsp+label_40]
    call        0000000140004FB0
    nop
    lea         rcx,[rsp+label_40]
    call        0000000140005640
    movzx       eax,al
    test        eax,eax
    je          00000001400066A2
    mov         dword ptr [rsp+label_20],0
    mov         rcx,qword ptr [rsp+label_28]
    call        0000000140006880
    mov         dword ptr [rsp+label_24],eax
    cmp         dword ptr [rsp+label_24],label_0FFFFFFFF
    jne         0000000140006672
    mov         eax,dword ptr [rsp+label_20]
    or          eax,4
    mov         dword ptr [rsp+label_20],eax
    jmp         0000000140006674
    mov         rax,qword ptr [rsp+label_60]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_60]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_38],rax
    xor         r8d,r8d
    mov         edx,dword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140006A00
    nop
    lea         rcx,[rsp+label_40]
    call        0000000140005430
    mov         rax,qword ptr [rsp+label_60]
    add         rsp,label_58
    ret
func_00000001400066B5_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rdx,qword ptr [rax+label_40]
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140004EE0
    mov         rax,qword ptr [rsp+label_38]
    add         rsp,label_28
    ret
func_00000001400066EA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rcx,qword ptr [rsp+label_40]
    call        00000001400069B0
    test        eax,eax
    jne         0000000140006711
    mov         dword ptr [rsp+label_20],1
    jmp         0000000140006719
    mov         dword ptr [rsp+label_20],0
    movzx       eax,byte ptr [rsp+label_20]
    add         rsp,label_38
    ret
func_0000000140006722_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call        0000000140003FD0
    add         rsp,label_28
    ret
func_000000014000673D_end:
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    call        0000000140006730
    mov         r8,rax
    mov         edx,dword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140004DD0
    mov         rax,qword ptr [rsp+label_30]
    add         rsp,label_28
    ret
func_000000014000676C_end:
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_18],r8d
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    cmp         dword ptr [rsp+label_50],1
    jne         00000001400067C6
    mov         qword ptr [rsp+label_28],label_15
    mov         r8d,label_15
    lea         rdx,[label_000000014002C6B0]
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140004940
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_48]
    jmp         00000001400067EC
    jmp         00000001400067EC
    mov         ecx,dword ptr [rsp+label_50]
    call        00000001400072A8
    mov         rdx,rax
    mov         rcx,qword ptr [rsp+label_48]
    call        0000000140002180
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_48]
    add         rsp,label_38
    ret
func_00000001400067F0_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         dword ptr [rsp+label_20],0
    mov         rcx,qword ptr [rsp+label_50]
    call        00000001400060F0
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_28]
    mov         rax,qword ptr [rax]
    mov         rax,qword ptr [rax+label_10]
    mov         qword ptr [rsp+label_30],rax
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140006CD0
    mov         dword ptr [rsp+label_24],eax
    mov         r8d,dword ptr [rsp+label_24]
    mov         rdx,qword ptr [rsp+label_58]
    mov         rcx,qword ptr [rsp+label_28]
    call rsp+label_30
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_58]
    add         rsp,label_48
    ret
func_000000014000686B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    lea         rax,[label_000000014002C6A0]
    ret
func_000000014000687C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rax,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rax]
    mov         rcx,qword ptr [rsp+label_30]
    call rax+label_68
    add         rsp,label_28
    ret
func_000000014000689D_end:
    int         3
    int         3
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_68
    mov         dword ptr [rsp+label_20],0
    mov         rdx,qword ptr [rsp+label_70]
    lea         rcx,[rsp+label_50]
    call        0000000140004FB0
    nop
    lea         rcx,[rsp+label_50]
    call        0000000140005640
    movzx       eax,al
    test        eax,eax
    jne         00000001400068E3
    mov         eax,dword ptr [rsp+label_20]
    or          eax,4
    mov         dword ptr [rsp+label_20],eax
    jmp         000000014000694C
    mov         rax,qword ptr [rsp+label_70]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_70]
    add         rcx,rax
    mov         rax,rcx
    mov         rcx,rax
    call        00000001400069A0
    mov         qword ptr [rsp+label_30],rax
    movzx       edx,byte ptr [rsp+label_78]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140006A50
    mov         dword ptr [rsp+label_24],eax
    mov         eax,dword ptr [rsp+label_24]
    mov         dword ptr [rsp+label_28],eax
    call        00000001400064E0
    mov         dword ptr [rsp+label_2C],eax
    mov         edx,dword ptr [rsp+label_28]
    mov         ecx,dword ptr [rsp+label_2C]
    call        00000001400064F0
    movzx       eax,al
    test        eax,eax
    je          000000014000694A
    mov         eax,dword ptr [rsp+label_20]
    or          eax,4
    mov         dword ptr [rsp+label_20],eax
    jmp         000000014000694C
    mov         rax,qword ptr [rsp+label_70]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rsp+label_70]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rsp+label_40],rax
    xor         r8d,r8d
    mov         edx,dword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006A00
    mov         rax,qword ptr [rsp+label_70]
    mov         qword ptr [rsp+label_48],rax
    lea         rcx,[rsp+label_50]
    call        0000000140005430
    mov         rax,qword ptr [rsp+label_48]
    add         rsp,label_68
    ret
func_0000000140006996_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         rax,qword ptr [rax+label_48]
    ret
func_00000001400069AE_end:
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         eax,dword ptr [rax+label_10]
    ret
func_00000001400069BD_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         qword ptr [rsp+label_20],0
    mov         rax,qword ptr [rsp+label_40]
    lea         rdx,[rsp+label_20]
    mov         rcx,rax
    call        0000000140004700
    add         rsp,label_38
    ret
func_00000001400069E8_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    ret
func_00000001400069FF_end:
    mov         byte ptr [rsp+label_18],r8b
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    mov         rcx,qword ptr [rsp+label_30]
    call        00000001400069B0
    or          eax,dword ptr [rsp+label_38]
    movzx       r8d,byte ptr [rsp+label_40]
    mov         edx,eax
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140006100
    add         rsp,label_28
    ret
func_0000000140006A36_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         rax,qword ptr [rax+label_10]
    ret
func_0000000140006A4E_end:
    int         3
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140005DC0
    test        rax,rax
    jle         0000000140006A8D
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140005E00
    movzx       ecx,byte ptr [rsp+label_48]
    mov         byte ptr [rax],cl
    movzx       ecx,byte ptr [rsp+label_48]
    call        0000000140006B20
    mov         dword ptr [rsp+label_20],eax
    jmp         0000000140006ABD
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    mov         rax,qword ptr [rax+label_18]
    mov         qword ptr [rsp+label_28],rax
    movzx       ecx,byte ptr [rsp+label_48]
    call        0000000140006B20
    mov         dword ptr [rsp+label_24],eax
    mov         edx,dword ptr [rsp+label_24]
    mov         rcx,qword ptr [rsp+label_40]
    call rsp+label_28
    mov         dword ptr [rsp+label_20],eax
    mov         eax,dword ptr [rsp+label_20]
    add         rsp,label_38
    ret
func_0000000140006AC5_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    mov         rax,qword ptr [rax+label_48]
    mov         qword ptr [rsp+label_20],rax
    mov         r8,qword ptr [rsp+label_50]
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call rsp+label_20
    add         rsp,label_38
    ret
func_0000000140006B0B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         rax,qword ptr [rax+label_50]
    ret
func_0000000140006B1E_end:
    int         3
    mov         byte ptr [rsp+8],cl
    movzx       eax,byte ptr [rsp+8]
    ret
func_0000000140006B29_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],edx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         edx,dword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140004380
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140006B67_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    movss       dword ptr [rsp+label_10],xmm1
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    cvtss2sd    xmm0,dword ptr [rsp+label_48]
    movaps      xmm1,xmm0
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006BB0
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140006BAE_end:
    int         3
    movsd       mmword ptr [rsp+label_10],xmm1
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    mov         dword ptr [rsp+label_20],0
    movsd       xmm1,mmword ptr [rsp+label_58]
    movq        rdx,xmm1
    lea         rcx,[label_000000014002C5E8]
    call        0000000140006DF0
    cdqe
    mov         qword ptr [rsp+label_28],rax
    xor         r8d,r8d
    mov         rdx,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140004990
    mov         qword ptr [rsp+label_38],rax
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_28]
    inc         rax
    mov         qword ptr [rsp+label_30],rax
    xor         edx,edx
    mov         rcx,qword ptr [rsp+label_50]
    call        00000001400055B0
    movsd       xmm3,mmword ptr [rsp+label_58]
    movq        r9,xmm3
    lea         r8,[label_000000014002C5E8]
    mov         rcx,qword ptr [rsp+label_30]
    mov         rdx,rcx
    mov         rcx,rax
    call        0000000140006F20
    mov         rax,qword ptr [rsp+label_50]
    add         rsp,label_48
    ret
func_0000000140006C4B_end:
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140004450
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140006C89_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         dword ptr [rsp+label_20],0
    mov         rdx,qword ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140004600
    mov         eax,dword ptr [rsp+label_20]
    or          eax,1
    mov         dword ptr [rsp+label_20],eax
    mov         rax,qword ptr [rsp+label_40]
    add         rsp,label_38
    ret
func_0000000140006CC9_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         eax,dword ptr [rax]
    ret
func_0000000140006CDC_end:
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_58
    lea         rdx,[rsp+label_40]
    mov         rcx,qword ptr [rsp+label_60]
    call        00000001400066C0
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rsp+label_30],rax
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140004740
    mov         qword ptr [rsp+label_38],rax
    movzx       edx,byte ptr [rsp+label_68]
    mov         rcx,qword ptr [rsp+label_38]
    call        0000000140006D50
    mov         byte ptr [rsp+label_20],al
    lea         rcx,[rsp+label_40]
    call        00000001400053C0
    movzx       eax,byte ptr [rsp+label_20]
    add         rsp,label_58
    ret
func_0000000140006D40_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         byte ptr [rsp+label_10],dl
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         rax,qword ptr [rsp+label_40]
    mov         rax,qword ptr [rax]
    mov         rax,qword ptr [rax+label_40]
    mov         qword ptr [rsp+label_20],rax
    movzx       edx,byte ptr [rsp+label_48]
    mov         rcx,qword ptr [rsp+label_40]
    call rsp+label_20
    add         rsp,label_38
    ret
func_0000000140006D80_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_18
    mov         rax,qword ptr [rsp+label_20]
    mov         rax,qword ptr [rax+label_28]
    mov         qword ptr [rsp],rax
    mov         rax,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_28]
    mov         qword ptr [rax+label_28],rcx
    mov         rax,qword ptr [rsp]
    add         rsp,label_18
    ret
func_0000000140006DC1_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         rax,qword ptr [rsp+8]
    mov         rax,qword ptr [rax+label_28]
    ret
func_0000000140006DDE_end:
    int         3
    lea         rax,[label_000000014003D230]
    ret
func_0000000140006DE7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_20],r9
    sub         rsp,label_38
    lea         rax,[rsp+label_48]
    mov         qword ptr [rsp+label_28],rax
    mov         r8,qword ptr [rsp+label_28]
    xor         edx,edx
    mov         rcx,qword ptr [rsp+label_40]
    call        0000000140006E40
    mov         dword ptr [rsp+label_20],eax
    mov         qword ptr [rsp+label_28],0
    mov         eax,dword ptr [rsp+label_20]
    add         rsp,label_38
    ret
func_0000000140006E38_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    call        0000000140006DE0
    mov         rax,qword ptr [rax]
    or          rax,2
    mov         rcx,qword ptr [rsp+label_60]
    mov         qword ptr [rsp+label_28],rcx
    mov         rcx,qword ptr [rsp+label_58]
    mov         qword ptr [rsp+label_20],rcx
    mov         r9,qword ptr [rsp+label_50]
    xor         r8d,r8d
    xor         edx,edx
    mov         rcx,rax
    call        000000014001289C
    mov         dword ptr [rsp+label_30],eax
    cmp         dword ptr [rsp+label_30],0
    jge         0000000140006E9A
    mov         dword ptr [rsp+label_34],label_0FFFFFFFF
    jmp         0000000140006EA2
    mov         eax,dword ptr [rsp+label_30]
    mov         dword ptr [rsp+label_34],eax
    mov         eax,dword ptr [rsp+label_34]
    add         rsp,label_48
    ret
func_0000000140006EAA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_20],r9
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_48
    call        0000000140006DE0
    mov         rcx,qword ptr [rsp+label_70]
    mov         qword ptr [rsp+label_28],rcx
    mov         rcx,qword ptr [rsp+label_68]
    mov         qword ptr [rsp+label_20],rcx
    mov         r9,qword ptr [rsp+label_60]
    mov         r8,qword ptr [rsp+label_58]
    mov         rdx,qword ptr [rsp+label_50]
    mov         rcx,qword ptr [rax]
    call        0000000140012AF0
    mov         dword ptr [rsp+label_30],eax
    cmp         dword ptr [rsp+label_30],0
    jge         0000000140006F0D
    mov         dword ptr [rsp+label_34],label_0FFFFFFFF
    jmp         0000000140006F15
    mov         eax,dword ptr [rsp+label_30]
    mov         dword ptr [rsp+label_34],eax
    mov         eax,dword ptr [rsp+label_34]
    add         rsp,label_48
    ret
func_0000000140006F1D_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    mov         qword ptr [rsp+label_20],r9
    sub         rsp,label_48
    lea         rax,[rsp+label_68]
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_38]
    mov         qword ptr [rsp+label_20],rax
    xor         r9d,r9d
    mov         r8,qword ptr [rsp+label_60]
    mov         rdx,qword ptr [rsp+label_58]
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140006EB0
    mov         dword ptr [rsp+label_30],eax
    mov         qword ptr [rsp+label_38],0
    mov         eax,dword ptr [rsp+label_30]
    add         rsp,label_48
    ret
func_0000000140006F78_end:
    int         3
    int         3
    int         3
    and         qword ptr [rcx+label_10],0
    lea         rax,[label_000000014002C800]
    mov         qword ptr [rcx+8],rax
    lea         rax,[label_000000014002C518]
    mov         qword ptr [rcx],rax
    mov         rax,rcx
    ret
func_0000000140006F99_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         rax,rdx
    lea         rcx,[label_000000014002C4C0]
    xorps       xmm0,xmm0
    mov         qword ptr [rbx],rcx
    lea         rdx,[rbx+8]
    lea         rcx,[rax+8]
    movups      xmmword ptr [rdx],xmm0
    call        000000014000A7B0
    lea         rax,[label_000000014002C818]
    mov         qword ptr [rbx],rax
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140006FD7_end:
    push        rbx
    sub         rsp,label_30
    mov         rbx,rcx
    mov         byte ptr [rsp+label_28],1
    mov         rax,rdx
    lea         rcx,[label_000000014002C4C0]
    xorps       xmm0,xmm0
    mov         qword ptr [rsp+label_20],rax
    mov         qword ptr [rbx],rcx
    lea         rdx,[rbx+8]
    lea         rcx,[rsp+label_20]
    movups      xmmword ptr [rdx],xmm0
    call        000000014000A7B0
    lea         rax,[label_000000014002C818]
    mov         qword ptr [rbx],rax
    mov         rax,rbx
    add         rsp,label_30
    pop         rbx
    ret
func_000000014000701E_end:
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         rax,rdx
    lea         rcx,[label_000000014002C4C0]
    xorps       xmm0,xmm0
    mov         qword ptr [rbx],rcx
    lea         rdx,[rbx+8]
    lea         rcx,[rax+8]
    movups      xmmword ptr [rdx],xmm0
    call        000000014000A7B0
    lea         rax,[label_000000014002C830]
    mov         qword ptr [rbx],rax
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000705B_end:
    push        rbx
    sub         rsp,label_30
    mov         rbx,rcx
    mov         byte ptr [rsp+label_28],1
    mov         rax,rdx
    lea         rcx,[label_000000014002C4C0]
    xorps       xmm0,xmm0
    mov         qword ptr [rsp+label_20],rax
    mov         qword ptr [rbx],rcx
    lea         rdx,[rbx+8]
    lea         rcx,[rsp+label_20]
    movups      xmmword ptr [rdx],xmm0
    call        000000014000A7B0
    lea         rax,[label_000000014002C830]
    mov         qword ptr [rbx],rax
    mov         rax,rbx
    add         rsp,label_30
    pop         rbx
    ret
func_00000001400070A2_end:
    int         3
    push        rbx
    sub         rsp,label_30
    mov         rbx,rcx
    mov         byte ptr [rsp+label_28],1
    mov         rax,rdx
    lea         rcx,[label_000000014002C4C0]
    xorps       xmm0,xmm0
    mov         qword ptr [rsp+label_20],rax
    mov         qword ptr [rbx],rcx
    lea         rdx,[rbx+8]
    lea         rcx,[rsp+label_20]
    movups      xmmword ptr [rdx],xmm0
    call        000000014000A7B0
    lea         rax,[label_000000014002C620]
    mov         qword ptr [rbx],rax
    mov         rax,rbx
    add         rsp,label_30
    pop         rbx
    ret
func_00000001400070EA_end:
    int         3
    lea         rax,[label_000000014002C4C0]
    mov         qword ptr [rcx],rax
    add         rcx,8
    jmp         000000014000A840
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    lea         rax,[label_000000014002C4C0]
    mov         rdi,rcx
    mov         qword ptr [rcx],rax
    mov         ebx,edx
    add         rcx,8
    call        000000014000A840
    test        bl,1
    je          0000000140007134
    mov         edx,label_18
    mov         rcx,rdi
    call        0000000140009900
    mov         rbx,qword ptr [rsp+label_30]
    mov         rax,rdi
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140007141_end:
    int         3
    int         3
    sub         rsp,label_48
    mov         rdx,rcx
    lea         rcx,[rsp+label_20]
    call        0000000140006FD8
    lea         rdx,[label_000000014003B1B0]
    lea         rcx,[rsp+label_20]
    call        000000014000A870
    int         3
    int         3
    sub         rsp,label_48
    mov         rdx,rcx
    lea         rcx,[rsp+label_20]
    call        000000014000705C
    lea         rdx,[label_000000014003B218]
    lea         rcx,[rsp+label_20]
    call        000000014000A870
    int         3
    int         3
    sub         rsp,label_48
    mov         rdx,rcx
    lea         rcx,[rsp+label_20]
    call        00000001400070A4
    lea         rdx,[label_000000014003B280]
    lea         rcx,[rsp+label_20]
    call        000000014000A870
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,rcx
    lock inc    dword ptr [label_000000014003C010]
    jne         00000001400071E5
    lea         rbx,[label_000000014003D250]
    mov         rcx,rbx
    call        00000001400093F4
    lea         rax,[label_000000014003D390]
    add         rbx,label_28
    cmp         rbx,rax
    jne         00000001400071CD
    mov         rbx,qword ptr [rsp+label_30]
    mov         rax,rdi
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400071F2_end:
    int         3
    push        rbx
    sub         rsp,label_20
    mov         dword ptr [rcx],edx
    mov         rbx,rcx
    test        edx,edx
    jne         000000014000720A
    call        0000000140012CD0
    jmp         0000000140007226
    cmp         edx,8
    jge         0000000140007226
    movsxd      rax,edx
    lea         rcx,[rax+rax*4]
    lea         rax,[label_000000014003D250]
    lea         rcx,[rax+rcx*8]
    call        0000000140009404
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000722E_end:
    int         3
    push        rbx
    sub         rsp,label_20
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [label_000000014003C010],eax
    cmp         eax,1
    jns         0000000140007265
    lea         rbx,[label_000000014003D250]
    mov         rcx,rbx
    call        00000001400093EC
    lea         rax,[label_000000014003D390]
    add         rbx,label_28
    cmp         rbx,rax
    jne         000000014000724D
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000726A_end:
    int         3
    sub         rsp,label_28
    movsxd      rax,dword ptr [rcx]
    test        eax,eax
    jne         0000000140007280
    add         rsp,label_28
    jmp         0000000140012CEC
    cmp         eax,8
    jge         0000000140007299
    lea         rcx,[rax+rax*4]
    lea         rax,[label_000000014003D250]
    lea         rcx,[rax+rcx*8]
    call        000000014000940C
    add         rsp,label_28
    ret
func_000000014000729D_end:
    int         3
    int         3
    jmp         000000014000B600
    int         3
    int         3
    int         3
    lea         rax,[label_000000014002CAE0]
    cmp         dword ptr [rax],ecx
    je          00000001400072CB
    add         rax,label_10
    lea         rdx,[label_000000014002CFD0]
    cmp         rax,rdx
    jne         00000001400072AF
    lea         rax,[label_000000014002D688]
    ret
func_00000001400072CA_end:
    mov         rax,qword ptr [rax+8]
    ret
func_00000001400072CF_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    push        rdi
    sub         rsp,label_20
    and         qword ptr [rcx+label_10],0
    lea         rax,[label_000000014002D6A0]
    and         qword ptr [rcx+label_18],0
    lea         rbp,[label_000000014002D6B8]
    and         dword ptr [rcx+label_20],0
    mov         rbx,rcx
    mov         qword ptr [rcx],rax
    mov         rdi,rbp
    mov         dword ptr [rcx+8],1
    mov         byte ptr [rcx+label_24],dl
    and         qword ptr [rcx+label_28],0
    mov         byte ptr [rcx+label_30],0
    inc         rdi
    cmp         byte ptr [rdi],0
    jne         0000000140007317
    sub         rdi,rbp
    lea         rcx,[rdi+1]
    call        0000000140012CFC
    mov         qword ptr [rbx+label_28],rax
    test        rax,rax
    je          0000000140007343
    lea         r8,[rdi+1]
    mov         rdx,rbp
    mov         rcx,rax
    call        0000000140029A70
    mov         rbp,qword ptr [rsp+label_38]
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140007355_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         rsi,rcx
    mov         rdi,rdx
    mov         rcx,qword ptr [rcx]
    cmp         rcx,rdx
    je          00000001400073BB
    test        rcx,rcx
    je          000000014000737F
    call        0000000140012C04
    and         qword ptr [rsi],0
    test        rdi,rdi
    je          00000001400073BB
    cmp         byte ptr [rdi],0
    mov         rbx,rdi
    je          0000000140007398
    inc         rbx
    cmp         byte ptr [rbx],0
    jne         0000000140007390
    sub         rbx,rdi
    lea         rcx,[rbx+1]
    call        0000000140012CFC
    mov         qword ptr [rsi],rax
    test        rax,rax
    je          00000001400073BB
    lea         r8,[rbx+1]
    mov         rdx,rdi
    mov         rcx,rax
    call        0000000140029A70
    mov         rbx,qword ptr [rsp+label_30]
    mov         rax,rsi
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400073CD_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    lea         rax,[label_000000014002D6A0]
    mov         edi,edx
    mov         qword ptr [rcx],rax
    mov         rbx,rcx
    call        0000000140007560
    mov         rcx,qword ptr [rbx+label_28]
    test        rcx,rcx
    je          00000001400073FC
    call        0000000140012C04
    and         qword ptr [rbx+label_28],0
    lea         rax,[label_000000014002C6D0]
    mov         qword ptr [rbx],rax
    test        dil,1
    je          000000014000741E
    mov         edx,label_38
    mov         rcx,rbx
    call        0000000140009900
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000742B_end:
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         ecx,label_10
    call        00000001400098BC
    mov         qword ptr [rsp+label_38],rax
    test        rax,rax
    je          0000000140007457
    mov         rdx,qword ptr [label_000000014003D3D8]
    mov         qword ptr [rax],rdx
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [label_000000014003D3D8],rax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140007463_end:
    mov         rax,qword ptr [label_000000014003D3E8]
    ret
func_000000014000746B_end:
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+label_18],rbp
    mov         qword ptr [rax+label_20],rsi
    push        rdi
    sub         rsp,label_20
    mov         sil,cl
    xor         edx,edx
    lea         rcx,[rax+8]
    call        00000001400071F4
    nop
    mov         rbx,qword ptr [label_000000014003D3E8]
    test        rbx,rbx
    jne         0000000140007526
    xor         ecx,ecx
    call        0000000140007664
    mov         rbx,rax
    mov         rcx,rax
    call        0000000140007694
    mov         dword ptr [rbx+label_20],label_3F
    mov         rcx,qword ptr [rbx+label_28]
    lea         rbp,[label_000000014002D6BC]
    cmp         rcx,rbp
    je          0000000140007507
    test        rcx,rcx
    je          00000001400074D2
    call        0000000140012C04
    and         qword ptr [rbx+label_28],0
    mov         rdi,rbp
    inc         rdi
    cmp         byte ptr [rdi],0
    jne         00000001400074DA
    inc         rdi
    sub         rdi,rbp
    mov         rcx,rdi
    call        0000000140012CFC
    mov         qword ptr [rbx+label_28],rax
    test        rax,rax
    je          0000000140007507
    mov         r8,rdi
    mov         rdx,rbp
    mov         rcx,rax
    call        0000000140029A70
    mov         rax,qword ptr [rbx]
    mov         rcx,rbx
    mov         rax,qword ptr [rax+8]
    call label_000000014002C2B8
    mov         qword ptr [label_000000014003D3C8],rbx
    nop
    mov         qword ptr [label_000000014003D398],rbx
    test        sil,sil
    je          000000014000753C
    mov         rax,qword ptr [rbx]
    mov         rcx,rbx
    mov         rax,qword ptr [rax+8]
    call label_000000014002C2B8
    nop
    lea         rcx,[rsp+label_30]
    call        000000014000726C
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_38]
    mov         rbp,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000755D_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    xor         edx,edx
    lea         rcx,[rsp+label_30]
    call        00000001400071F4
    mov         rdi,qword ptr [rbx+label_18]
    jmp         00000001400075B8
    mov         rax,qword ptr [rbx+label_10]
    dec         rdi
    mov         rcx,qword ptr [rax+rdi*8]
    test        rcx,rcx
    je          00000001400075B8
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    mov         r8,rax
    test        rax,rax
    je          00000001400075B8
    mov         rcx,qword ptr [rax]
    mov         edx,1
    mov         rax,qword ptr [rcx]
    mov         rcx,r8
    call label_000000014002C2B8
    test        rdi,rdi
    jne         000000014000757F
    mov         rcx,qword ptr [rbx+label_10]
    call        0000000140012C04
    lea         rcx,[rsp+label_30]
    call        000000014000726C
    mov         rbx,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400075DA_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rdx
    mov         rdi,rcx
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140012FE0
    test        rax,rax
    lea         rcx,[label_000000014002C718]
    cmove       rax,rcx
    lea         rcx,[rdi+label_48]
    mov         rdx,rax
    call        0000000140007358
    test        rbx,rbx
    je          0000000140007621
    mov         rdx,rbx
    xor         ecx,ecx
    call        0000000140012FE0
    mov         rbx,rax
    test        rbx,rbx
    lea         rax,[label_000000014002D6B8]
    lea         rcx,[rdi+label_58]
    cmove       rbx,rax
    mov         rdx,rbx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    jmp         0000000140007358
    int         3
    int         3
    int         3
    sub         rsp,label_28
    mov         rdx,qword ptr [rcx+label_48]
    test        rdx,rdx
    je          000000014000765C
    xor         ecx,ecx
    call        0000000140012FE0
    add         rsp,label_28
    ret
func_0000000140007660_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         bl,cl
    mov         ecx,label_38
    call        00000001400098BC
    mov         rcx,rax
    mov         qword ptr [rsp+label_38],rax
    xor         eax,eax
    test        rcx,rcx
    je          000000014000768C
    mov         dl,bl
    call        00000001400072D0
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140007691_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    cmp         byte ptr [label_000000014003D3F0],0
    mov         rbx,rcx
    jne         00000001400076B9
    lea         rcx,[label_0000000140007704]
    mov         byte ptr [label_000000014003D3F0],1
    call        0000000140009414
    mov         qword ptr [label_000000014003D3E8],rbx
    add         rsp,label_20
    pop         rbx
    ret
func_00000001400076C5_end:
    int         3
    int         3
    sub         rsp,label_28
    mov         rcx,qword ptr [rcx]
    test        rcx,rcx
    je          00000001400076FD
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    mov         r8,rax
    test        rax,rax
    je          00000001400076FD
    mov         rcx,qword ptr [rax]
    mov         edx,1
    mov         rax,qword ptr [rcx]
    mov         rcx,r8
    call label_000000014002C2B8
    add         rsp,label_28
    ret
func_0000000140007701_end:
    int         3
    int         3
    sub         rsp,label_28
    xor         edx,edx
    lea         rcx,[rsp+label_30]
    call        00000001400071F4
    lea         rcx,[label_000000014003D3E8]
    call        00000001400076C8
    and         qword ptr [label_000000014003D3E8],0
    lea         rcx,[rsp+label_30]
    call        000000014000726C
    add         rsp,label_28
    ret
func_0000000140007736_end:
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    call        00000001400131B8
    mov         edx,2
    mov         dword ptr [rbx],eax
    mov         ecx,label_100
    call        0000000140013880
    mov         qword ptr [rbx+8],rax
    test        rax,rax
    je          00000001400077C5
    call        000000014001302C
    mov         rcx,qword ptr [rbx+8]
    mov         edx,4
    lea         r8d,[rdx+label_7C]
    movups      xmm0,xmmword ptr [rax]
    movups      xmmword ptr [rcx],xmm0
    movups      xmm1,xmmword ptr [rax+label_10]
    movups      xmmword ptr [rcx+label_10],xmm1
    movups      xmm0,xmmword ptr [rax+label_20]
    movups      xmmword ptr [rcx+label_20],xmm0
    movups      xmm1,xmmword ptr [rax+label_30]
    movups      xmmword ptr [rcx+label_30],xmm1
    movups      xmm0,xmmword ptr [rax+label_40]
    movups      xmmword ptr [rcx+label_40],xmm0
    movups      xmm1,xmmword ptr [rax+label_50]
    movups      xmmword ptr [rcx+label_50],xmm1
    movups      xmm0,xmmword ptr [rax+label_60]
    movups      xmmword ptr [rcx+label_60],xmm0
    add         rcx,r8
    movups      xmm1,xmmword ptr [rax+label_70]
    add         rax,r8
    movups      xmmword ptr [rcx-label_10],xmm1
    sub         rdx,1
    jne         0000000140007772
    mov         dword ptr [rbx+label_10],1
    jmp         00000001400077D2
    call        000000014001302C
    and         dword ptr [rbx+label_10],0
    mov         qword ptr [rbx+8],rax
    call        00000001400131E8
    mov         rcx,qword ptr [rax+8]
    mov         qword ptr [rbx+label_18],rcx
    test        rcx,rcx
    je          00000001400077ED
    call        0000000140013888
    mov         qword ptr [rbx+label_18],rax
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_00000001400077F5_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rbp
    push        rsi
    push        rdi
    sub         rsp,label_40
    movsxd      rbx,ecx
    mov         rdi,rdx
    test        rdx,rdx
    jne         0000000140007821
    call        00000001400131E8
    mov         rsi,qword ptr [rax+label_10]
    call        00000001400131B8
    mov         ebp,eax
    jmp         0000000140007827
    mov         rsi,qword ptr [rdx+label_18]
    mov         ebp,dword ptr [rdx]
    test        rsi,rsi
    jne         000000014000783E
    lea         eax,[rbx-label_41]
    cmp         eax,label_19
    ja          0000000140007837
    add         ebx,label_20
    mov         eax,ebx
    jmp         000000014000791C
    cmp         ebx,label_100
    jae         000000014000789B
    test        rdi,rdi
    jne         0000000140007858
    mov         ecx,ebx
    call        0000000140013110
    test        eax,eax
    je          0000000140007837
    jmp         00000001400078A7
    lea         rdx,[rdi+8]
    mov         rcx,rbx
    mov         rax,qword ptr [rdx]
    test        byte ptr [rax+rbx*2],1
    je          0000000140007837
    mov         rax,qword ptr [rdx]
    mov         edi,ebx
    sar         rcx,8
    movzx       ecx,cl
    movsx       edx,word ptr [rax+rcx*2]
    shr         edx,label_0F
    and         edx,1
    sar         edi,8
    test        edx,edx
    je          00000001400078C1
    mov         byte ptr [rsp+label_68],dil
    mov         r9d,2
    mov         byte ptr [rsp+label_69],bl
    mov         byte ptr [rsp+label_6A],0
    jmp         00000001400078D0
    lea         rdx,[rdi+8]
    mov         rcx,rbx
    test        rdi,rdi
    jne         0000000140007868
    mov         edi,ebx
    sar         edi,8
    call        000000014001302C
    movzx       ecx,dil
    movzx       edx,word ptr [rax+rcx*2]
    and         edx,label_8000
    jmp         0000000140007881
    mov         byte ptr [rsp+label_68],bl
    mov         r9d,1
    mov         byte ptr [rsp+label_69],0
    mov         dword ptr [rsp+label_38],1
    lea         rax,[rsp+label_70]
    mov         dword ptr [rsp+label_30],ebp
    lea         r8,[rsp+label_68]
    mov         dword ptr [rsp+label_28],3
    mov         edx,label_100
    mov         rcx,rsi
    mov         qword ptr [rsp+label_20],rax
    call        0000000140009450
    test        eax,eax
    je          0000000140007837
    cmp         eax,1
    movzx       eax,byte ptr [rsp+label_70]
    je          000000014000791C
    movzx       ecx,byte ptr [rsp+label_71]
    shl         eax,8
    or          eax,ecx
    mov         rbx,qword ptr [rsp+label_60]
    add         rsp,label_40
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_0000000140007928_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],rbp
    push        rsi
    push        rdi
    push        r14
    sub         rsp,label_40
    movsxd      rbx,ecx
    mov         rdi,rdx
    test        rdx,rdx
    jne         000000014000795C
    call        00000001400131E8
    mov         rsi,qword ptr [rax+label_10]
    call        00000001400131B8
    mov         r14d,eax
    jmp         0000000140007963
    mov         rsi,qword ptr [rdx+label_18]
    mov         r14d,dword ptr [rdx]
    test        rsi,rsi
    jne         000000014000797A
    lea         eax,[rbx-label_61]
    cmp         eax,label_19
    ja          0000000140007973
    sub         ebx,label_20
    mov         eax,ebx
    jmp         0000000140007A5A
    mov         ebp,2
    cmp         ebx,label_100
    jae         00000001400079D6
    test        rdi,rdi
    jne         0000000140007999
    mov         ecx,ebx
    call        0000000140013060
    test        eax,eax
    je          0000000140007973
    jmp         00000001400079E2
    lea         rdx,[rdi+8]
    mov         rcx,rbx
    mov         rax,qword ptr [rdx]
    test        byte ptr [rax+rbx*2],bpl
    je          0000000140007973
    mov         rax,qword ptr [rdx]
    mov         edi,ebx
    sar         rcx,8
    movzx       ecx,cl
    movsx       edx,word ptr [rax+rcx*2]
    shr         edx,label_0F
    and         edx,1
    sar         edi,8
    test        edx,edx
    je          00000001400079FC
    mov         byte ptr [rsp+label_68],dil
    mov         byte ptr [rsp+label_69],bl
    mov         byte ptr [rsp+label_6A],0
    jmp         0000000140007A0A
    lea         rdx,[rdi+8]
    mov         rcx,rbx
    test        rdi,rdi
    jne         00000001400079A9
    mov         edi,ebx
    sar         edi,8
    call        000000014001302C
    movzx       ecx,dil
    movzx       edx,word ptr [rax+rcx*2]
    and         edx,label_8000
    jmp         00000001400079C2
    mov         byte ptr [rsp+label_68],bl
    mov         ebp,1
    mov         byte ptr [rsp+label_69],0
    mov         dword ptr [rsp+label_38],1
    lea         rax,[rsp+label_70]
    mov         dword ptr [rsp+label_30],r14d
    lea         r8,[rsp+label_68]
    mov         dword ptr [rsp+label_28],3
    mov         r9d,ebp
    mov         edx,label_200
    mov         qword ptr [rsp+label_20],rax
    mov         rcx,rsi
    call        0000000140009450
    test        eax,eax
    je          0000000140007973
    cmp         eax,1
    movzx       eax,byte ptr [rsp+label_70]
    je          0000000140007A5A
    movzx       ecx,byte ptr [rsp+label_71]
    shl         eax,8
    or          eax,ecx
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_78]
    add         rsp,label_40
    pop         r14
    pop         rdi
    pop         rsi
    ret
func_0000000140007A6C_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_20
    mov         r14,qword ptr [rcx+label_10]
    mov         rdi,label_7FFFFFFFFFFFFFFF
    mov         rax,rdi
    mov         r15b,r9b
    sub         rax,r14
    mov         rbx,rcx
    cmp         rax,rdx
    jb          0000000140007C47
    mov         rbp,qword ptr [rcx+label_18]
    lea         r12,[r14+rdx]
    mov         rcx,r12
    or          rcx,label_0F
    cmp         rcx,rdi
    jbe         0000000140007AD0
    mov         rcx,label_8000000000000000
    jmp         0000000140007AFC
    mov         rdx,rbp
    mov         rax,rdi
    shr         rdx,1
    sub         rax,rdx
    cmp         rbp,rax
    ja          0000000140007AC4
    lea         rax,[rdx+rbp]
    mov         rdi,rcx
    cmp         rcx,rax
    cmovb       rdi,rax
    lea         rcx,[rdi+1]
    cmp         rcx,label_1000
    jb          0000000140007B06
    call        0000000140001890
    mov         rsi,rax
    jmp         0000000140007B14
    test        rcx,rcx
    je          0000000140007B12
    call        00000001400098BC
    jmp         0000000140007B01
    xor         esi,esi
    mov         rcx,qword ptr [rbx+label_18]
    mov         rax,qword ptr [rbx+label_10]
    cmp         rcx,label_0F
    jbe         0000000140007B63
    cmp         byte ptr [label_0000000140037140],0
    mov         r11,qword ptr [rbx]
    je          0000000140007B63
    lea         r10,[rax+1]
    add         r10,r11
    lea         rdx,[rcx+8]
    add         rdx,r11
    lea         rax,[rcx+1]
    and         rdx,label_0FFFFFFFFFFFFFFF8
    add         rax,r11
    cmp         rax,rdx
    mov         r9,rdx
    mov         r8,rdx
    mov         rcx,r11
    cmovbe      r9,rax
    cmp         r10,rdx
    cmovbe      r8,r10
    call        00000001400085EC
    mov         qword ptr [rbx+label_10],r12
    mov         r8,r14
    mov         qword ptr [rbx+label_18],rdi
    mov         rcx,rsi
    cmp         rbp,label_0F
    jbe         0000000140007BBF
    mov         rdi,qword ptr [rbx]
    mov         rdx,rdi
    call        0000000140029A70
    lea         rdx,[rbp+1]
    mov         byte ptr [r14+rsi],r15b
    mov         byte ptr [r14+rsi+1],0
    cmp         rdx,label_1000
    jb          0000000140007BB5
    mov         rcx,qword ptr [rdi-8]
    add         rdx,label_27
    sub         rdi,rcx
    lea         rax,[rdi-8]
    cmp         rax,label_1F
    ja          0000000140007C41
    mov         rdi,rcx
    mov         rcx,rdi
    call        0000000140009900
    jmp         0000000140007BD1
    mov         rdx,rbx
    call        0000000140029A70
    mov         byte ptr [r14+rsi],r15b
    mov         byte ptr [r14+rsi+1],0
    mov         qword ptr [rbx],rsi
    mov         rdx,qword ptr [rbx+label_18]
    mov         rax,qword ptr [rbx+label_10]
    cmp         rdx,label_0F
    jbe         0000000140007C1F
    cmp         byte ptr [label_0000000140037140],0
    je          0000000140007C1F
    lea         rcx,[rdx+1]
    inc         rax
    add         rdx,8
    add         rcx,rsi
    add         rdx,rsi
    add         rax,rsi
    and         rdx,label_0FFFFFFFFFFFFFFF8
    cmp         rax,rdx
    mov         r9,rdx
    mov         r8,rdx
    cmovbe      r9,rax
    cmp         rcx,rdx
    cmovbe      r8,rcx
    mov         rcx,rsi
    call        00000001400085EC
    mov         rbp,qword ptr [rsp+label_48]
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r12
    ret
func_0000000140007C40_end:
    call        000000014001061C
    int         3
    call        0000000140002CE0
    int         3
    int         3
    int         3
    int         3
    push        rbx
    push        rbp
    push        rsi
    push        rdi
    push        r14
    sub         rsp,label_20
    mov         rbp,rcx
    xor         edx,edx
    lea         rcx,[rsp+label_58]
    call        00000001400071F4
    nop
    mov         rsi,qword ptr [label_000000014003D528]
    mov         qword ptr [rsp+label_60],rsi
    mov         rdi,qword ptr [label_000000014003D518]
    test        rdi,rdi
    jne         0000000140007CC0
    xor         edx,edx
    lea         rcx,[rsp+label_50]
    call        00000001400071F4
    cmp         qword ptr [label_000000014003D518],rdi
    jne         0000000140007CAF
    mov         eax,dword ptr [label_000000014003D390]
    inc         eax
    mov         dword ptr [label_000000014003D390],eax
    cdqe
    mov         qword ptr [label_000000014003D518],rax
    lea         rcx,[rsp+label_50]
    call        000000014000726C
    mov         rdi,qword ptr [label_000000014003D518]
    mov         rcx,qword ptr [rbp+8]
    lea         r14,[rdi*8+label_0000000000000000]
    cmp         rdi,qword ptr [rcx+label_18]
    jae         0000000140007CE1
    mov         rax,qword ptr [rcx+label_10]
    mov         rbx,qword ptr [r14+rax]
    test        rbx,rbx
    jne         0000000140007D47
    jmp         0000000140007CE3
    xor         ebx,ebx
    cmp         byte ptr [rcx+label_24],0
    je          0000000140007CFC
    call        0000000140007464
    cmp         rdi,qword ptr [rax+label_18]
    jae         0000000140007D01
    mov         rax,qword ptr [rax+label_10]
    mov         rbx,qword ptr [r14+rax]
    test        rbx,rbx
    jne         0000000140007D47
    test        rsi,rsi
    je          0000000140007D0B
    mov         rbx,rsi
    jmp         0000000140007D47
    mov         rdx,rbp
    lea         rcx,[rsp+label_60]
    call        000000014000834C
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          0000000140007D5F
    mov         rbx,qword ptr [rsp+label_60]
    mov         qword ptr [rsp+label_50],rbx
    mov         rcx,rbx
    call        000000014000742C
    mov         rcx,qword ptr [rbx]
    mov         rax,qword ptr [rcx+8]
    mov         rcx,rbx
    call label_000000014002C2B8
    mov         qword ptr [label_000000014003D528],rbx
    lea         rcx,[rsp+label_58]
    call        000000014000726C
    mov         rax,rbx
    add         rsp,label_20
    pop         r14
    pop         rdi
    pop         rsi
    pop         rbp
    pop         rbx
    ret
func_0000000140007D5E_end:
    call        0000000140005E60
    nop
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rcx
    push        rbx
    sub         rsp,label_20
    mov         r10,rdx
    mov         rbx,rcx
    xor         ecx,ecx
    mov         dword ptr [rsp+label_48],ecx
    test        r9d,r9d
    je          0000000140007DCA
    lea         rax,[label_000000014002D6F0]
    mov         qword ptr [rbx],rax
    mov         qword ptr [rbx+label_18],rcx
    mov         qword ptr [rbx+label_20],rcx
    mov         dword ptr [rbx+label_28],ecx
    mov         qword ptr [rbx+label_30],rcx
    mov         qword ptr [rbx+label_38],rcx
    mov         qword ptr [rbx+label_40],rcx
    mov         qword ptr [rbx+label_48],rcx
    mov         qword ptr [rbx+label_50],rcx
    lea         rax,[label_000000014002D6D8]
    mov         qword ptr [rbx+label_10],rax
    mov         qword ptr [rbx+label_58],rcx
    mov         qword ptr [rbx+label_60],rcx
    mov         byte ptr [rbx+label_68],cl
    mov         dword ptr [rsp+label_48],1
    mov         rax,qword ptr [rbx]
    movsxd      rcx,dword ptr [rax+4]
    lea         rax,[label_000000014002D6E8]
    mov         qword ptr [rcx+rbx],rax
    mov         rax,qword ptr [rbx]
    movsxd      rcx,dword ptr [rax+4]
    lea         edx,[rcx-label_10]
    mov         dword ptr [rcx+rbx-4],edx
    mov         rax,qword ptr [rbx]
    movsxd      rcx,dword ptr [rax+4]
    add         rcx,rbx
    mov         rdx,r10
    call        0000000140008780
    nop
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140007E05_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_20
    mov         rbx,rcx
    lea         rax,[label_000000014002D700]
    mov         qword ptr [rcx],rax
    lea         rsi,[rcx+8]
    xor         eax,eax
    mov         qword ptr [rsi],rax
    lea         r14,[rcx+label_10]
    mov         qword ptr [r14],rax
    mov         qword ptr [rcx+label_18],rax
    mov         qword ptr [rcx+label_20],rax
    lea         r15,[rcx+label_28]
    mov         qword ptr [r15],rax
    lea         rbp,[rcx+label_30]
    mov         qword ptr [rbp],rax
    mov         qword ptr [rcx+label_38],rax
    mov         qword ptr [rcx+label_40],rax
    lea         r12,[rcx+label_48]
    mov         dword ptr [r12],eax
    lea         r13,[rcx+label_4C]
    mov         dword ptr [r13],eax
    mov         qword ptr [rcx+label_50],rax
    mov         qword ptr [rcx+label_58],rax
    lea         ecx,[rax+label_10]
    call        00000001400098BC
    mov         rdi,rax
    xor         eax,eax
    test        rdi,rdi
    je          0000000140007E99
    mov         cl,1
    call        000000014000746C
    mov         qword ptr [rdi+8],rax
    xor         eax,eax
    jmp         0000000140007E9C
    mov         rdi,rax
    mov         qword ptr [rbx+label_60],rdi
    mov         qword ptr [rbx+label_18],rsi
    mov         qword ptr [rbx+label_20],r14
    mov         qword ptr [rbx+label_38],r15
    mov         qword ptr [rbx+label_40],rbp
    mov         qword ptr [rbx+label_50],r12
    mov         qword ptr [rbx+label_58],r13
    mov         qword ptr [r14],rax
    mov         qword ptr [rbp],rax
    mov         dword ptr [r13],eax
    mov         qword ptr [rsi],rax
    mov         qword ptr [r15],rax
    mov         dword ptr [r12],eax
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_0000000140007EEC_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    lea         rax,[label_000000014002D780]
    mov         qword ptr [rcx],rax
    cmp         qword ptr [rcx+label_0000000000000080],0
    je          0000000140007F3C
    mov         rcx,qword ptr [rcx+label_18]
    lea         rax,[rbx+label_70]
    cmp         qword ptr [rcx],rax
    jne         0000000140007F3C
    mov         r8,qword ptr [rbx+label_0000000000000090]
    mov         rdx,qword ptr [rbx+label_0000000000000088]
    mov         qword ptr [rcx],rdx
    mov         rax,qword ptr [rbx+label_38]
    mov         qword ptr [rax],rdx
    sub         r8d,edx
    mov         rax,qword ptr [rbx+label_50]
    mov         dword ptr [rax],r8d
    cmp         byte ptr [rbx+label_7C],0
    je          0000000140007F4A
    mov         rcx,rbx
    call        0000000140008678
    lea         rax,[label_000000014002D700]
    mov         qword ptr [rbx],rax
    mov         rbx,qword ptr [rbx+label_60]
    test        rbx,rbx
    je          0000000140007F9A
    mov         rcx,qword ptr [rbx+8]
    test        rcx,rcx
    je          0000000140007F8C
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    mov         rcx,rax
    test        rax,rax
    je          0000000140007F8C
    mov         rdx,qword ptr [rax]
    mov         rax,qword ptr [rdx]
    mov         edx,1
    call label_000000014002C2B8
    mov         edx,label_10
    mov         rcx,rbx
    call        0000000140009900
    nop
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140007F9F_end:
    sub         rsp,label_28
    lea         rax,[label_000000014002D6C8]
    mov         qword ptr [rcx],rax
    call        00000001400097C4
    nop
    add         rsp,label_28
    ret
func_0000000140007FB8_end:
    int         3
    int         3
    int         3
    movsxd      rax,dword ptr [rcx-4]
    sub         rcx,rax
    jmp         000000014000803C
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         ebx,edx
    mov         rdi,rcx
    call        0000000140007EF0
    test        bl,1
    je          0000000140007FEE
    mov         edx,label_98
    mov         rcx,rdi
    call        0000000140009900
    mov         rbx,qword ptr [rsp+label_30]
    mov         rax,rdi
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140007FFB_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         ebx,edx
    mov         rdi,rcx
    lea         rax,[label_000000014002D6C8]
    mov         qword ptr [rcx],rax
    call        00000001400097C4
    nop
    test        bl,1
    je          000000014000802D
    mov         edx,label_60
    mov         rcx,rdi
    call        0000000140009900
    mov         rax,rdi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000803A_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         ebx,edx
    lea         rdi,[rcx-label_10]
    mov         rax,qword ptr [rdi]
    movsxd      r8,dword ptr [rax+4]
    lea         rax,[label_000000014002D6E8]
    mov         qword ptr [r8+rcx-label_10],rax
    mov         rax,qword ptr [rdi]
    movsxd      r8,dword ptr [rax+4]
    lea         r9d,[r8-label_10]
    mov         dword ptr [r8+rcx-label_14],r9d
    lea         rax,[label_000000014002D6C8]
    mov         qword ptr [rcx],rax
    call        00000001400097C4
    nop
    test        bl,1
    je          0000000140008091
    mov         edx,label_70
    mov         rcx,rdi
    call        0000000140009900
    mov         rax,rdi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000809E_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         rdi,qword ptr [rcx+label_60]
    lea         rax,[label_000000014002D700]
    mov         qword ptr [rcx],rax
    mov         esi,edx
    mov         rbx,rcx
    test        rdi,rdi
    je          0000000140008103
    mov         rcx,qword ptr [rdi+8]
    test        rcx,rcx
    je          00000001400080F6
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    mov         rcx,rax
    test        rax,rax
    je          00000001400080F6
    mov         rdx,qword ptr [rax]
    mov         rax,qword ptr [rdx]
    mov         edx,1
    call label_000000014002C2B8
    mov         edx,label_10
    mov         rcx,rdi
    call        0000000140009900
    test        sil,1
    je          0000000140008116
    mov         edx,label_68
    mov         rcx,rbx
    call        0000000140009900
    mov         rsi,qword ptr [rsp+label_38]
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140008128_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    lea         rax,[label_000000014002C6D0]
    mov         rbx,rcx
    mov         qword ptr [rcx],rax
    test        dl,1
    je          000000014000814E
    mov         edx,label_10
    call        0000000140009900
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140008156_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         ebx,edx
    mov         rdi,rcx
    lea         rax,[label_000000014002D6C8]
    mov         qword ptr [rcx],rax
    call        00000001400097C4
    nop
    test        bl,1
    je          0000000140008189
    mov         edx,label_48
    mov         rcx,rdi
    call        0000000140009900
    mov         rax,rdi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140008196_end:
    int         3
    mov         qword ptr [rsp+label_10],rbx
    push        rdi
    sub         rsp,label_60
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_58],rax
    cmp         qword ptr [rcx+label_68],0
    mov         rbx,rcx
    je          0000000140008215
    cmp         byte ptr [rcx+label_71],0
    je          0000000140008215
    mov         rax,qword ptr [rcx]
    or          edx,label_0FFFFFFFF
    mov         rax,qword ptr [rax+label_18]
    call label_000000014002C2B8
    cmp         eax,label_0FFFFFFFF
    je          0000000140008269
    mov         rcx,qword ptr [rbx+label_68]
    lea         r8,[rsp+label_30]
    mov         qword ptr [rsp+label_20],r8
    lea         rdx,[rbx+label_74]
    lea         r9,[rsp+label_58]
    lea         r8,[rsp+label_38]
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_40]
    call label_000000014002C2B8
    test        eax,eax
    je          000000014000822F
    sub         eax,1
    je          0000000140008233
    cmp         eax,2
    jne         0000000140008269
    mov         byte ptr [rbx+label_71],0
    mov         al,1
    mov         rcx,qword ptr [rsp+label_58]
    xor         rcx,rsp
    call        00000001400099A0
    mov         rbx,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rdi
    ret
func_000000014000822E_end:
    mov         byte ptr [rbx+label_71],0
    mov         rdi,qword ptr [rsp+label_30]
    lea         rax,[rsp+label_38]
    sub         rdi,rax
    je          0000000140008260
    mov         r9,qword ptr [rbx+label_0000000000000080]
    lea         rcx,[rsp+label_38]
    mov         r8,rdi
    mov         edx,1
    call        0000000140014E24
    cmp         rdi,rax
    jne         0000000140008269
    cmp         byte ptr [rbx+label_71],0
    sete        al
    jmp         0000000140008217
    xor         al,al
    jmp         0000000140008217
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    lea         rsi,[rcx+label_10]
    mov         r9,r8
    mov         r14,qword ptr [rsi]
    mov         rbx,rcx
    mov         rax,r14
    sub         rax,rdx
    cmp         rax,r8
    cmovb       r9,rax
    cmp         qword ptr [rcx+label_18],label_0F
    mov         rax,rcx
    jbe         00000001400082B6
    mov         rax,qword ptr [rcx]
    lea         rdi,[rcx+label_10]
    jmp         00000001400082B9
    mov         rdi,rsi
    lea         rcx,[rax+rdx]
    mov         rbp,r14
    sub         rbp,r9
    mov         r8,rbp
    sub         r8,rdx
    lea         rdx,[rcx+r9]
    inc         r8
    call        0000000140029A70
    cmp         r14,rbp
    je          0000000140008328
    mov         rcx,qword ptr [rbx+label_18]
    mov         rdi,rsi
    cmp         rcx,label_0F
    jbe         0000000140008328
    cmp         byte ptr [label_0000000140037140],0
    mov         r11,qword ptr [rbx]
    je          0000000140008328
    lea         rdx,[rcx+8]
    mov         rcx,r11
    add         rdx,r11
    lea         r10,[r11+1]
    and         rdx,label_0FFFFFFFFFFFFFFF8
    lea         rax,[r11+1]
    add         r10,r14
    add         rax,rbp
    cmp         rax,rdx
    mov         r9,rdx
    mov         r8,rdx
    cmovbe      r9,rax
    cmp         r10,rdx
    cmovbe      r8,r10
    call        00000001400085EC
    mov         rsi,qword ptr [rsp+label_40]
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_30]
    mov         qword ptr [rdi],rbp
    mov         rbp,qword ptr [rsp+label_38]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_0000000140008348_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rbp
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    sub         rsp,label_90
    mov         rbp,rdx
    mov         rdi,rcx
    xor         esi,esi
    mov         dword ptr [rsp+label_00000000000000A0],esi
    test        rcx,rcx
    je          00000001400083E7
    cmp         qword ptr [rcx],rsi
    jne         00000001400083E7
    lea         ecx,[rsi+label_10]
    call        00000001400098BC
    mov         rbx,rax
    mov         qword ptr [rsp+label_00000000000000A0],rax
    test        rax,rax
    je          00000001400083D2
    mov         rax,qword ptr [rbp+8]
    test        rax,rax
    je          00000001400083AC
    mov         rdx,qword ptr [rax+label_28]
    test        rdx,rdx
    jne         00000001400083B3
    lea         rdx,[rax+label_30]
    jmp         00000001400083B3
    lea         rdx,[label_000000014002C718]
    lea         rcx,[rsp+label_20]
    call        0000000140004A50
    mov         esi,1
    and         dword ptr [rbx+8],0
    lea         rax,[label_000000014002D800]
    mov         qword ptr [rbx],rax
    jmp         00000001400083D4
    xor         ebx,ebx
    mov         qword ptr [rdi],rbx
    test        sil,1
    je          00000001400083E7
    lea         rcx,[rsp+label_20]
    call        0000000140005250
    mov         eax,2
    lea         r11,[rsp+label_0000000000000090]
    mov         rbx,qword ptr [r11+label_18]
    mov         rbp,qword ptr [r11+label_20]
    mov         rsi,qword ptr [r11+label_28]
    mov         rsp,r11
    pop         rdi
    ret
func_0000000140008404_end:
    int         3
    int         3
    int         3
    mov         r11,rsp
    mov         qword ptr [r11+label_18],rbx
    push        rdi
    sub         rsp,label_20
    mov         byte ptr [rcx+label_71],0
    lea         r10,[rcx+8]
    mov         qword ptr [rcx+label_18],r10
    lea         r9,[rcx+label_28]
    mov         qword ptr [rcx+label_38],r9
    mov         rbx,rcx
    cmp         r8d,1
    mov         rdi,rdx
    lea         r8,[rcx+label_10]
    sete        al
    mov         qword ptr [rcx+label_20],r8
    mov         byte ptr [rcx+label_7C],al
    lea         rdx,[rbx+label_48]
    mov         qword ptr [rbx+label_50],rdx
    lea         rax,[rbx+label_4C]
    mov         qword ptr [rbx+label_58],rax
    add         rcx,label_30
    mov         qword ptr [rbx+label_40],rcx
    and         qword ptr [r8],0
    and         qword ptr [rcx],0
    and         dword ptr [rax],0
    and         qword ptr [r10],0
    and         qword ptr [r9],0
    and         dword ptr [rdx],0
    test        rdi,rdi
    je          00000001400084BD
    and         qword ptr [r11+8],0
    lea         r9,[r11+label_20]
    and         qword ptr [r11+label_10],0
    lea         r8,[r11+label_10]
    and         qword ptr [r11+label_20],0
    lea         rdx,[r11+8]
    mov         rcx,rdi
    call        0000000140013A9C
    mov         rax,qword ptr [rsp+label_30]
    mov         qword ptr [rbx+label_18],rax
    mov         qword ptr [rbx+label_20],rax
    mov         rax,qword ptr [rsp+label_38]
    mov         qword ptr [rbx+label_38],rax
    mov         qword ptr [rbx+label_40],rax
    mov         rax,qword ptr [rsp+label_48]
    mov         qword ptr [rbx+label_50],rax
    mov         qword ptr [rbx+label_58],rax
    mov         qword ptr [rbx+label_0000000000000080],rdi
    mov         rax,qword ptr [label_000000014003D520]
    and         qword ptr [rbx+label_68],0
    mov         qword ptr [rbx+label_74],rax
    mov         rbx,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400084DE_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    and         qword ptr [rcx+label_40],0
    and         qword ptr [rcx+8],0
    and         dword ptr [rcx+label_14],0
    mov         dword ptr [rcx+label_18],label_201
    mov         qword ptr [rcx+label_20],6
    and         qword ptr [rcx+label_28],0
    and         qword ptr [rcx+label_30],0
    and         qword ptr [rcx+label_38],0
    xor         edx,edx
    call        000000014000860C
    mov         ecx,label_10
    call        00000001400098BC
    mov         rdi,rax
    test        rax,rax
    je          000000014000853F
    mov         cl,1
    call        000000014000746C
    mov         qword ptr [rdi+8],rax
    jmp         0000000140008541
    xor         edi,edi
    mov         qword ptr [rbx+label_40],rdi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000854F_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rax,qword ptr [rdx]
    mov         rbx,rcx
    mov         rcx,rdx
    mov         rdi,rdx
    mov         rax,qword ptr [rax+label_18]
    call label_000000014002C2B8
    xor         r11d,r11d
    test        al,al
    je          000000014000857D
    mov         qword ptr [rbx+label_68],r11
    jmp         00000001400085C3
    mov         qword ptr [rbx+label_68],rdi
    lea         r10,[rbx+8]
    mov         qword ptr [rbx+label_18],r10
    lea         r8,[rbx+label_10]
    mov         qword ptr [rbx+label_20],r8
    lea         r9,[rbx+label_28]
    mov         qword ptr [rbx+label_38],r9
    lea         rcx,[rbx+label_30]
    mov         qword ptr [rbx+label_40],rcx
    lea         rdx,[rbx+label_48]
    mov         qword ptr [rbx+label_50],rdx
    lea         rax,[rbx+label_4C]
    mov         qword ptr [rbx+label_58],rax
    mov         qword ptr [r8],r11
    mov         qword ptr [rcx],r11
    mov         dword ptr [rax],r11d
    mov         qword ptr [r10],r11
    mov         qword ptr [r9],r11
    mov         dword ptr [rdx],r11d
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400085CD_end:
    int         3
    int         3
    sub         rsp,label_28
    mov         rcx,qword ptr [rcx+label_0000000000000080]
    test        rcx,rcx
    je          00000001400085E5
    call        0000000140013AE4
    add         rsp,label_28
    ret
func_00000001400085E9_end:
    int         3
    int         3
    ret         0
    int         3
    sub         rsp,label_28
    mov         rcx,qword ptr [rcx+label_0000000000000080]
    test        rcx,rcx
    je          0000000140008605
    call        0000000140013AF0
    add         rsp,label_28
    ret
func_0000000140008609_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_60
    and         edx,label_17
    mov         dword ptr [rcx+label_10],edx
    and         edx,dword ptr [rcx+label_14]
    jne         0000000140008623
    add         rsp,label_60
    pop         rbx
    ret
func_0000000140008622_end:
    test        dl,4
    je          0000000140008631
    lea         rbx,[label_000000014002C7B8]
    jmp         0000000140008646
    test        dl,2
    lea         rbx,[label_000000014002C7D0]
    lea         rax,[label_000000014002C7E8]
    cmove       rbx,rax
    mov         edx,1
    lea         rcx,[rsp+label_20]
    call        0000000140006740
    mov         r8,rax
    lea         rcx,[rsp+label_30]
    mov         rdx,rbx
    call        0000000140004E80
    lea         rdx,[label_000000014003B100]
    lea         rcx,[rsp+label_30]
    call        000000014000A870
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    xor         esi,esi
    mov         rdi,rcx
    cmp         qword ptr [rcx+label_0000000000000080],rsi
    je          00000001400086E6
    mov         rcx,qword ptr [rcx+label_18]
    lea         rax,[rdi+label_70]
    cmp         qword ptr [rcx],rax
    jne         00000001400086C4
    mov         rdx,qword ptr [rdi+label_0000000000000088]
    mov         r8,qword ptr [rdi+label_0000000000000090]
    mov         qword ptr [rcx],rdx
    sub         r8d,edx
    mov         rax,qword ptr [rdi+label_38]
    mov         qword ptr [rax],rdx
    mov         rax,qword ptr [rdi+label_50]
    mov         dword ptr [rax],r8d
    mov         rcx,rdi
    call        0000000140008198
    mov         rcx,qword ptr [rdi+label_0000000000000080]
    neg         al
    sbb         rbx,rbx
    and         rbx,rdi
    call        0000000140013C20
    test        eax,eax
    cmove       rsi,rbx
    xor         edx,edx
    mov         rcx,rdi
    lea         r8d,[rdx+2]
    call        0000000140008408
    mov         rbx,qword ptr [rsp+label_30]
    mov         rax,rsi
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140008706_end:
    int         3
    mov         al,1
    ret
func_000000014000870A_end:
    int         3
    mov         eax,1
    ret
func_0000000140008711_end:
    int         3
    int         3
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rsp+label_40]
    mov         qword ptr [rax],r8
    mov         rax,qword ptr [rsp+label_30]
    mov         qword ptr [rcx],rax
    mov         eax,3
    ret
func_000000014000872E_end:
    int         3
    sub         r9,r8
    mov         eax,label_7FFFFFFF
    cmp         r9,rax
    cmovg       r9,rax
    mov         rax,qword ptr [rsp+label_28]
    cmp         r9,rax
    cmovb       eax,r9d
    ret
func_000000014000874B_end:
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [rax],r8
    mov         eax,3
    ret
func_0000000140008759_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         rcx,rdx
    call        0000000140007C50
    mov         rdx,rax
    mov         rcx,rbx
    add         rsp,label_20
    pop         rbx
    jmp         0000000140008550
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_60
    mov         sil,r8b
    mov         rbx,rdx
    mov         rdi,rcx
    call        00000001400084E0
    and         qword ptr [rdi+label_50],0
    mov         dl,label_20
    mov         rcx,rdi
    mov         qword ptr [rdi+label_48],rbx
    call        0000000140006CE0
    cmp         qword ptr [rdi+label_48],0
    mov         byte ptr [rdi+label_58],al
    jne         00000001400087CB
    mov         eax,dword ptr [rdi+label_10]
    and         eax,label_13
    or          eax,4
    mov         dword ptr [rdi+label_10],eax
    and         eax,dword ptr [rdi+label_14]
    jne         00000001400087E8
    test        sil,sil
    je          00000001400087D8
    mov         rcx,rdi
    call        000000014000974C
    mov         rbx,qword ptr [rsp+label_70]
    mov         rsi,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rdi
    ret
func_00000001400087E7_end:
    test        al,4
    je          00000001400087F5
    lea         rbx,[label_000000014002C7B8]
    jmp         0000000140008809
    test        al,2
    lea         rbx,[label_000000014002C7D0]
    lea         rax,[label_000000014002C7E8]
    cmove       rbx,rax
    mov         edx,1
    lea         rcx,[rsp+label_20]
    call        0000000140006740
    mov         r8,rax
    lea         rcx,[rsp+label_30]
    mov         rdx,rbx
    call        0000000140004E80
    lea         rdx,[label_000000014003B100]
    lea         rcx,[rsp+label_30]
    call        000000014000A870
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_20],rsi
    push        rbp
    push        rdi
    push        r14
    lea         rbp,[rsp-label_47]
    sub         rsp,label_90
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_3F],rax
    or          edi,label_0FFFFFFFF
    mov         esi,edx
    mov         rbx,rcx
    cmp         edx,edi
    jne         0000000140008877
    xor         eax,eax
    jmp         000000014000899C
    mov         rax,qword ptr [rcx+label_40]
    cmp         qword ptr [rax],0
    je          00000001400088B1
    mov         rdx,qword ptr [rcx+label_58]
    movsxd      r8,dword ptr [rdx]
    mov         rcx,r8
    add         rcx,qword ptr [rax]
    cmp         qword ptr [rax],rcx
    jae         00000001400088B1
    lea         ecx,[r8-1]
    mov         eax,esi
    mov         dword ptr [rdx],ecx
    mov         rdx,qword ptr [rbx+label_40]
    mov         r8,qword ptr [rdx]
    lea         rcx,[r8+1]
    mov         qword ptr [rdx],rcx
    mov         byte ptr [r8],sil
    jmp         000000014000899C
    cmp         qword ptr [rbx+label_0000000000000080],0
    je          000000014000899A
    mov         r8,qword ptr [rbx+label_18]
    lea         rax,[rbx+label_70]
    cmp         qword ptr [r8],rax
    jne         00000001400088EC
    mov         rcx,qword ptr [rbx+label_0000000000000088]
    mov         rdx,qword ptr [rbx+label_0000000000000090]
    mov         qword ptr [r8],rcx
    sub         edx,ecx
    mov         rax,qword ptr [rbx+label_38]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rbx+label_50]
    mov         dword ptr [rax],edx
    mov         rcx,qword ptr [rbx+label_68]
    test        rcx,rcx
    jne         000000014000890C
    movsx       ecx,sil
    mov         rdx,qword ptr [rbx+label_0000000000000080]
    call        00000001400143B4
    cmp         eax,edi
    jmp         0000000140008997
    lea         r8,[rbp+label_0F]
    mov         byte ptr [rbp+7],sil
    mov         rax,qword ptr [rcx]
    lea         rdx,[rbx+label_74]
    mov         qword ptr [rsp+label_38],r8
    lea         r9,[rbp+8]
    lea         r8,[rbp+label_3F]
    mov         qword ptr [rsp+label_30],r8
    lea         r8,[rbp+label_1F]
    mov         rax,qword ptr [rax+label_38]
    mov         qword ptr [rsp+label_28],r8
    lea         r8,[rbp+label_17]
    mov         qword ptr [rsp+label_20],r8
    lea         r8,[rbp+7]
    call label_000000014002C2B8
    test        eax,eax
    je          0000000140008961
    sub         eax,1
    je          0000000140008961
    cmp         eax,2
    jne         000000014000899A
    movsx       ecx,byte ptr [rbp+7]
    jmp         00000001400088F9
    mov         r14,qword ptr [rbp+label_0F]
    lea         rax,[rbp+label_1F]
    sub         r14,rax
    je          000000014000898B
    mov         r9,qword ptr [rbx+label_0000000000000080]
    lea         rcx,[rbp+label_1F]
    mov         r8,r14
    mov         edx,1
    call        0000000140014E24
    cmp         r14,rax
    jne         000000014000899A
    lea         rax,[rbp+7]
    mov         byte ptr [rbx+label_71],1
    cmp         qword ptr [rbp+label_17],rax
    cmovne      edi,esi
    mov         eax,edi
    mov         rcx,qword ptr [rbp+label_3F]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000000090]
    mov         rbx,qword ptr [r11+label_30]
    mov         rsi,qword ptr [r11+label_38]
    mov         rsp,r11
    pop         r14
    pop         rdi
    pop         rbp
    ret
func_00000001400089BF_end:
    or          eax,label_0FFFFFFFF
    ret
func_00000001400089C3_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rax,qword ptr [rcx+label_38]
    mov         rbx,rcx
    xor         r8d,r8d
    mov         edi,edx
    mov         rcx,qword ptr [rax]
    test        rcx,rcx
    je          0000000140008A10
    mov         rax,qword ptr [rbx+label_18]
    cmp         qword ptr [rax],rcx
    jae         0000000140008A10
    cmp         edx,label_0FFFFFFFF
    je          00000001400089F8
    movzx       eax,byte ptr [rcx-1]
    cmp         eax,edx
    jne         0000000140008A10
    mov         rax,qword ptr [rbx+label_50]
    inc         dword ptr [rax]
    mov         rax,qword ptr [rbx+label_38]
    dec         qword ptr [rax]
    cmp         edi,label_0FFFFFFFF
    cmove       edi,r8d
    mov         eax,edi
    jmp         0000000140008A85
    mov         rdx,qword ptr [rbx+label_0000000000000080]
    test        rdx,rdx
    je          0000000140008A82
    cmp         edi,label_0FFFFFFFF
    je          0000000140008A82
    cmp         qword ptr [rbx+label_68],r8
    jne         0000000140008A35
    movzx       ecx,dil
    call        0000000140015248
    cmp         eax,label_0FFFFFFFF
    jne         0000000140008A0C
    mov         r9,qword ptr [rbx+label_38]
    lea         rdx,[rbx+label_70]
    cmp         qword ptr [r9],rdx
    je          0000000140008A82
    mov         r10,qword ptr [rbx+label_18]
    lea         r8,[rbx+label_50]
    mov         byte ptr [rdx],dil
    mov         rax,qword ptr [r10]
    cmp         rax,rdx
    je          0000000140008A6C
    mov         qword ptr [rbx+label_0000000000000088],rax
    mov         rax,qword ptr [r8]
    movsxd      rcx,dword ptr [rax]
    add         rcx,qword ptr [r9]
    mov         qword ptr [rbx+label_0000000000000090],rcx
    mov         qword ptr [r10],rdx
    mov         rax,qword ptr [rbx+label_38]
    sub         ebx,edx
    add         ebx,label_71
    mov         qword ptr [rax],rdx
    mov         rax,qword ptr [r8]
    mov         dword ptr [rax],ebx
    jmp         0000000140008A0C
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140008A8F_end:
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rbp
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    sub         rsp,label_20
    mov         rdi,qword ptr [rcx+label_10]
    mov         rbx,rcx
    mov         rcx,qword ptr [rcx+label_18]
    mov         bpl,dl
    cmp         rdi,rcx
    jae         0000000140008B20
    lea         rsi,[rdi+1]
    cmp         rdi,rsi
    je          0000000140008B07
    cmp         rcx,label_0F
    jbe         0000000140008B07
    cmp         byte ptr [label_0000000140037140],0
    mov         r11,qword ptr [rbx]
    je          0000000140008B07
    lea         rdx,[rcx+8]
    mov         rcx,r11
    add         rdx,r11
    lea         rax,[r11+1]
    and         rdx,label_0FFFFFFFFFFFFFFF8
    lea         r10,[rdi+1]
    add         r10,r11
    add         rax,rsi
    cmp         rax,rdx
    mov         r9,rdx
    mov         r8,rdx
    cmovbe      r9,rax
    cmp         r10,rdx
    cmovbe      r8,r10
    call        00000001400085EC
    mov         qword ptr [rbx+label_10],rsi
    cmp         qword ptr [rbx+label_18],label_0F
    jbe         0000000140008B15
    mov         rbx,qword ptr [rbx]
    mov         byte ptr [rbx+rdi],bpl
    mov         byte ptr [rbx+rdi+1],0
    jmp         0000000140008B35
    mov         r8b,byte ptr [rsp+label_30]
    mov         r9b,bpl
    mov         edx,1
    mov         rcx,rbx
    call        0000000140007A70
    mov         rbx,qword ptr [rsp+label_38]
    mov         rbp,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140008B49_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rbp
    push        rsi
    push        rdi
    push        r14
    sub         rsp,label_20
    mov         rax,qword ptr [rcx+label_38]
    lea         r14,[rcx+label_70]
    mov         ebp,r9d
    mov         rsi,r8
    mov         rbx,rdx
    mov         rdi,rcx
    cmp         qword ptr [rax],r14
    jne         0000000140008B87
    cmp         r9d,1
    jne         0000000140008B87
    cmp         qword ptr [rcx+label_68],0
    jne         0000000140008B87
    dec         rsi
    cmp         qword ptr [rcx+label_0000000000000080],0
    je          0000000140008C0B
    call        0000000140008198
    test        al,al
    je          0000000140008C0B
    test        rsi,rsi
    jne         0000000140008BA4
    cmp         ebp,1
    je          0000000140008BBA
    mov         rcx,qword ptr [rdi+label_0000000000000080]
    mov         r8d,ebp
    mov         rdx,rsi
    call        0000000140014A1C
    test        eax,eax
    jne         0000000140008C0B
    mov         rcx,qword ptr [rdi+label_0000000000000080]
    lea         rdx,[rsp+label_40]
    call        0000000140014200
    test        eax,eax
    jne         0000000140008C0B
    mov         rax,qword ptr [rdi+label_18]
    cmp         qword ptr [rax],r14
    jne         0000000140008BF8
    mov         rcx,qword ptr [rdi+label_0000000000000088]
    mov         rdx,qword ptr [rdi+label_0000000000000090]
    mov         qword ptr [rax],rcx
    sub         edx,ecx
    mov         rax,qword ptr [rdi+label_38]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rdi+label_50]
    mov         dword ptr [rax],edx
    mov         rax,qword ptr [rdi+label_74]
    mov         rcx,qword ptr [rsp+label_40]
    and         qword ptr [rbx+8],0
    mov         qword ptr [rbx],rcx
    jmp         0000000140008C16
    or          qword ptr [rbx],label_0FFFFFFFFFFFFFFFF
    and         qword ptr [rbx+8],0
    xor         eax,eax
    mov         rbp,qword ptr [rsp+label_50]
    mov         qword ptr [rbx+label_10],rax
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    pop         rdi
    pop         rsi
    ret
func_0000000140008C2F_end:
    or          qword ptr [rdx],label_0FFFFFFFFFFFFFFFF
    xor         eax,eax
    and         qword ptr [rdx+8],0
    mov         qword ptr [rdx+label_10],rax
    mov         rax,rdx
    ret
func_0000000140008C42_end:
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         rax,qword ptr [r8+8]
    mov         rsi,r8
    add         rax,qword ptr [r8]
    mov         rbx,rdx
    cmp         qword ptr [rcx+label_0000000000000080],0
    mov         rdi,rcx
    mov         qword ptr [rsp+label_30],rax
    je          0000000140008CD8
    call        0000000140008198
    test        al,al
    je          0000000140008CD8
    mov         rcx,qword ptr [rdi+label_0000000000000080]
    lea         rdx,[rsp+label_30]
    call        0000000140014774
    test        eax,eax
    jne         0000000140008CD8
    mov         rax,qword ptr [rsi+label_10]
    mov         r8,qword ptr [rdi+label_18]
    mov         qword ptr [rdi+label_74],rax
    lea         rax,[rdi+label_70]
    cmp         qword ptr [r8],rax
    jne         0000000140008CC5
    mov         rcx,qword ptr [rdi+label_0000000000000088]
    mov         rdx,qword ptr [rdi+label_0000000000000090]
    mov         qword ptr [r8],rcx
    sub         edx,ecx
    mov         rax,qword ptr [rdi+label_38]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rdi+label_50]
    mov         dword ptr [rax],edx
    mov         rax,qword ptr [rdi+label_74]
    mov         rcx,qword ptr [rsp+label_30]
    and         qword ptr [rbx+8],0
    mov         qword ptr [rbx],rcx
    jmp         0000000140008CE3
    or          qword ptr [rbx],label_0FFFFFFFFFFFFFFFF
    and         qword ptr [rbx+8],0
    xor         eax,eax
    mov         rsi,qword ptr [rsp+label_40]
    mov         qword ptr [rbx+label_10],rax
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140008CF9_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         r9,r8
    mov         rbx,rcx
    test        rdx,rdx
    jne         0000000140008D18
    test        r8,r8
    jne         0000000140008D18
    lea         r8d,[r9+4]
    jmp         0000000140008D1B
    xor         r8d,r8d
    mov         rcx,qword ptr [rcx+label_0000000000000080]
    test        rcx,rcx
    je          0000000140008D48
    call        0000000140014FF0
    test        eax,eax
    jne         0000000140008D48
    mov         rdx,qword ptr [rbx+label_0000000000000080]
    lea         r8d,[rax+1]
    mov         rcx,rbx
    call        0000000140008408
    mov         rax,rbx
    jmp         0000000140008D4A
    xor         eax,eax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140008D4F_end:
    mov         rax,rcx
    ret
func_0000000140008D53_end:
    xor         eax,eax
    ret
func_0000000140008D56_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    xor         ebx,ebx
    mov         rdi,rcx
    cmp         qword ptr [rcx+label_0000000000000080],rbx
    je          0000000140008D9B
    mov         rax,qword ptr [rcx]
    or          edx,label_0FFFFFFFF
    mov         rax,qword ptr [rax+label_18]
    call label_000000014002C2B8
    cmp         eax,label_0FFFFFFFF
    je          0000000140008D9B
    mov         rcx,qword ptr [rdi+label_0000000000000080]
    call        0000000140014040
    test        eax,eax
    setns       bl
    lea         eax,[rbx-1]
    jmp         0000000140008D9D
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140008DA7_end:
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        rbp
    lea         rbp,[rax-label_5F]
    sub         rsp,label_90
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_4F],rax
    mov         rdi,rcx
    mov         rax,qword ptr [rcx+label_38]
    mov         rcx,qword ptr [rax]
    test        rcx,rcx
    je          0000000140008E0C
    mov         rdx,qword ptr [rdi+label_50]
    movsxd      r9,dword ptr [rdx]
    lea         rax,[rcx+r9]
    cmp         rcx,rax
    jae         0000000140008E0C
    lea         eax,[r9-1]
    mov         dword ptr [rdx],eax
    mov         rcx,qword ptr [rdi+label_38]
    mov         rdx,qword ptr [rcx]
    lea         rax,[rdx+1]
    mov         qword ptr [rcx],rax
    movzx       eax,byte ptr [rdx]
    jmp         0000000140008FAB
    cmp         qword ptr [rdi+label_0000000000000080],0
    jne         0000000140008E1E
    or          eax,label_0FFFFFFFF
    jmp         0000000140008FAB
    mov         r9,qword ptr [rdi+label_18]
    lea         rax,[rdi+label_70]
    cmp         qword ptr [r9],rax
    jne         0000000140008E4B
    mov         rdx,qword ptr [rdi+label_0000000000000090]
    mov         rcx,qword ptr [rdi+label_0000000000000088]
    mov         qword ptr [r9],rcx
    mov         rax,qword ptr [rdi+label_38]
    mov         qword ptr [rax],rcx
    sub         edx,ecx
    mov         rax,qword ptr [rdi+label_50]
    mov         dword ptr [rax],edx
    mov         rcx,qword ptr [rdi+label_0000000000000080]
    cmp         qword ptr [rdi+label_68],0
    jne         0000000140008E71
    call        00000001400140EC
    or          ebx,label_0FFFFFFFF
    cmp         eax,ebx
    je          0000000140008FA9
    movzx       ebx,al
    jmp         0000000140008FA9
    xorps       xmm0,xmm0
    movups      xmmword ptr [rbp+label_2F],xmm0
    and         qword ptr [rbp+label_3F],0
    mov         qword ptr [rbp+label_47],label_0F
    mov         byte ptr [rbp+label_2F],0
    call        00000001400140EC
    or          ebx,label_0FFFFFFFF
    jmp         0000000140008F3F
    mov         dl,al
    lea         rcx,[rbp+label_2F]
    call        0000000140008A90
    mov         r10,qword ptr [rdi+label_68]
    lea         rcx,[rbp+label_2F]
    cmp         qword ptr [rbp+label_47],label_0F
    seta        dl
    cmova       rcx,qword ptr [rbp+label_2F]
    mov         r9,qword ptr [rbp+label_3F]
    add         r9,rcx
    lea         r8,[rbp+label_2F]
    test        dl,dl
    cmovne      r8,qword ptr [rbp+label_2F]
    mov         rax,qword ptr [r10]
    lea         rcx,[rbp+label_27]
    mov         qword ptr [rsp+label_38],rcx
    lea         rcx,[rbp+label_18]
    mov         qword ptr [rsp+label_30],rcx
    lea         rcx,[rbp+label_17]
    mov         qword ptr [rsp+label_28],rcx
    lea         rcx,[rbp+label_1F]
    mov         qword ptr [rsp+label_20],rcx
    lea         rdx,[rdi+label_74]
    mov         rcx,r10
    mov         rax,qword ptr [rax+label_30]
    call label_000000014002C2B8
    test        eax,eax
    je          0000000140008F09
    sub         eax,1
    jne         0000000140008F49
    lea         rax,[rbp+label_17]
    cmp         qword ptr [rbp+label_27],rax
    lea         rax,[rbp+label_2F]
    jne         0000000140008F61
    cmp         qword ptr [rbp+label_47],label_0F
    cmova       rax,qword ptr [rbp+label_2F]
    mov         r8,qword ptr [rbp+label_1F]
    sub         r8,rax
    xor         edx,edx
    lea         rcx,[rbp+label_2F]
    call        0000000140008270
    mov         rcx,qword ptr [rdi+label_0000000000000080]
    call        00000001400140EC
    cmp         eax,ebx
    jne         0000000140008E96
    jmp         0000000140008FA0
    cmp         eax,2
    jne         0000000140008FA0
    lea         rax,[rbp+label_2F]
    cmp         qword ptr [rbp+label_47],label_0F
    cmova       rax,qword ptr [rbp+label_2F]
    movsx       ebx,byte ptr [rax]
    jmp         0000000140008FA0
    cmp         qword ptr [rbp+label_47],label_0F
    cmova       rax,qword ptr [rbp+label_2F]
    mov         rbx,qword ptr [rbp+label_3F]
    mov         rcx,qword ptr [rbp+label_1F]
    sub         rbx,rcx
    add         rbx,rax
    test        rbx,rbx
    jle         0000000140008F9C
    dec         rbx
    movsx       ecx,byte ptr [rbx+rcx]
    mov         rdx,qword ptr [rdi+label_0000000000000080]
    call        0000000140015248
    test        rbx,rbx
    jle         0000000140008F9C
    mov         rcx,qword ptr [rbp+label_1F]
    jmp         0000000140008F7E
    movzx       ebx,byte ptr [rbp+label_17]
    lea         rcx,[rbp+label_2F]
    call        0000000140002C30
    mov         eax,ebx
    mov         rcx,qword ptr [rbp+label_4F]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000000090]
    mov         rbx,qword ptr [r11+label_18]
    mov         rsi,qword ptr [r11+label_20]
    mov         rdi,qword ptr [r11+label_28]
    mov         rsp,r11
    pop         rbp
    ret
func_0000000140008FCF_end:
    push        rbx
    sub         rsp,label_20
    mov         rax,qword ptr [rcx]
    mov         rbx,rcx
    mov         rax,qword ptr [rax+label_30]
    call label_000000014002C2B8
    or          edx,label_0FFFFFFFF
    cmp         eax,edx
    je          0000000140009004
    mov         rax,qword ptr [rbx+label_50]
    add         dword ptr [rax],edx
    mov         rcx,qword ptr [rbx+label_38]
    mov         rdx,qword ptr [rcx]
    lea         rax,[rdx+1]
    mov         qword ptr [rcx],rax
    movzx       edx,byte ptr [rdx]
    mov         eax,edx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000900B_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rax,qword ptr [rcx+label_38]
    mov         rbx,rcx
    mov         r8,qword ptr [rax]
    test        r8,r8
    je          000000014000903A
    mov         rax,qword ptr [rcx+label_50]
    movsxd      rdx,dword ptr [rax]
    add         rdx,r8
    cmp         r8,rdx
    jae         000000014000903A
    movzx       eax,byte ptr [r8]
    jmp         0000000140009064
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_38]
    call label_000000014002C2B8
    mov         edi,eax
    or          eax,label_0FFFFFFFF
    cmp         edi,eax
    je          0000000140009064
    mov         rax,qword ptr [rbx]
    mov         edx,edi
    mov         rcx,rbx
    mov         rax,qword ptr [rax+label_20]
    call label_000000014002C2B8
    mov         eax,edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000906E_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    mov         rbp,r8
    mov         r14,rdx
    mov         rdi,rcx
    test        r8,r8
    jg          000000014000909E
    xor         eax,eax
    jmp         0000000140009184
    cmp         qword ptr [rcx+label_68],0
    je          00000001400090AF
    call        00000001400091A0
    jmp         0000000140009184
    mov         rax,qword ptr [rcx+label_38]
    mov         rsi,rbp
    mov         rdx,qword ptr [rax]
    test        rdx,rdx
    je          00000001400090C6
    mov         rax,qword ptr [rcx+label_50]
    mov         ecx,dword ptr [rax]
    jmp         00000001400090C8
    xor         ecx,ecx
    movsxd      rax,ecx
    test        ecx,ecx
    je          00000001400090FA
    cmp         rax,rbp
    mov         rbx,rbp
    mov         rcx,r14
    cmovb       rbx,rax
    mov         r8,rbx
    call        0000000140029A70
    mov         rax,qword ptr [rdi+label_50]
    add         r14,rbx
    sub         rsi,rbx
    sub         dword ptr [rax],ebx
    mov         rcx,qword ptr [rdi+label_38]
    movsxd      rax,ebx
    add         qword ptr [rcx],rax
    cmp         qword ptr [rdi+label_0000000000000080],0
    je          000000014000917E
    mov         r8,qword ptr [rdi+label_18]
    lea         rax,[rdi+label_70]
    cmp         qword ptr [r8],rax
    jne         0000000140009131
    mov         rcx,qword ptr [rdi+label_0000000000000088]
    mov         rdx,qword ptr [rdi+label_0000000000000090]
    mov         qword ptr [r8],rcx
    sub         edx,ecx
    mov         rax,qword ptr [rdi+label_38]
    mov         qword ptr [rax],rcx
    mov         rax,qword ptr [rdi+label_50]
    mov         dword ptr [rax],edx
    mov         ebx,label_0FFF
    jmp         000000014000915A
    mov         r9,qword ptr [rdi+label_0000000000000080]
    mov         r8,rbx
    mov         edx,1
    mov         rcx,r14
    call        00000001400146AC
    add         r14,rax
    sub         rsi,rax
    cmp         rax,rbx
    jne         000000014000917E
    cmp         rsi,rbx
    ja          0000000140009138
    test        rsi,rsi
    je          000000014000917E
    mov         r9,qword ptr [rdi+label_0000000000000080]
    mov         r8,rsi
    mov         edx,1
    mov         rcx,r14
    call        00000001400146AC
    sub         rsi,rax
    sub         rbp,rsi
    mov         rax,rbp
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_000000014000919E_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_20
    mov         rbx,r8
    mov         r14,rdx
    mov         rdi,rcx
    mov         rsi,r8
    test        r8,r8
    jle         000000014000923F
    mov         rax,qword ptr [rdi+label_38]
    lea         r15,[rdi+label_50]
    mov         rdx,qword ptr [rax]
    test        rdx,rdx
    je          00000001400091E5
    mov         rax,qword ptr [r15]
    mov         ecx,dword ptr [rax]
    jmp         00000001400091E7
    xor         ecx,ecx
    movsxd      rax,ecx
    test        ecx,ecx
    jle         0000000140009217
    cmp         rbx,rax
    mov         rbp,rbx
    mov         rcx,r14
    cmovge      rbp,rax
    mov         r8,rbp
    call        0000000140029A70
    mov         rax,qword ptr [r15]
    sub         rbx,rbp
    sub         dword ptr [rax],ebp
    mov         rcx,qword ptr [rdi+label_38]
    movsxd      rax,ebp
    add         qword ptr [rcx],rax
    jmp         0000000140009237
    mov         rax,qword ptr [rdi]
    mov         rcx,rdi
    mov         rax,qword ptr [rax+label_38]
    call label_000000014002C2B8
    cmp         eax,label_0FFFFFFFF
    je          000000014000923F
    mov         byte ptr [r14],al
    dec         rbx
    mov         ebp,1
    add         r14,rbp
    test        rbx,rbx
    jg          00000001400091CE
    mov         rbp,qword ptr [rsp+label_48]
    sub         rsi,rbx
    mov         rbx,qword ptr [rsp+label_40]
    mov         rax,rsi
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r12
    ret
func_0000000140009263_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_20
    cmp         qword ptr [rcx+label_68],0
    mov         rbx,r8
    mov         r15,rdx
    mov         rdi,rcx
    je          0000000140009293
    call        0000000140009324
    jmp         000000014000930A
    mov         rax,qword ptr [rcx+label_40]
    mov         rsi,rbx
    mov         r9,qword ptr [rax]
    test        r9,r9
    je          00000001400092AA
    mov         rax,qword ptr [rcx+label_58]
    mov         ecx,dword ptr [rax]
    jmp         00000001400092AC
    xor         ecx,ecx
    movsxd      rbp,ecx
    test        rbx,rbx
    jle         0000000140009304
    test        ecx,ecx
    jle         00000001400092E5
    cmp         rbx,rbp
    mov         rcx,r9
    cmovl       rbp,rbx
    mov         r8,rbp
    call        0000000140029A70
    mov         rax,qword ptr [rdi+label_58]
    add         r15,rbp
    sub         rbx,rbp
    sub         dword ptr [rax],ebp
    mov         rcx,qword ptr [rdi+label_40]
    movsxd      rax,ebp
    add         qword ptr [rcx],rax
    test        rbx,rbx
    jle         0000000140009304
    mov         r9,qword ptr [rdi+label_0000000000000080]
    test        r9,r9
    je          0000000140009304
    mov         r8,rbx
    mov         edx,1
    mov         rcx,r15
    call        0000000140014E24
    sub         rbx,rax
    sub         rsi,rbx
    mov         rax,rsi
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_58]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         rdi
    ret
func_0000000140009322_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_20
    mov         rbx,r8
    mov         r14,rdx
    mov         rdi,rcx
    mov         rsi,r8
    test        r8,r8
    jle         00000001400093C7
    mov         rax,qword ptr [rdi+label_40]
    lea         r15,[rdi+label_58]
    mov         r9,qword ptr [rax]
    test        r9,r9
    je          0000000140009369
    mov         rax,qword ptr [r15]
    mov         ecx,dword ptr [rax]
    jmp         000000014000936B
    xor         ecx,ecx
    movsxd      rax,ecx
    test        ecx,ecx
    jle         000000014000939E
    cmp         rbx,rax
    mov         rbp,rbx
    mov         rdx,r14
    mov         rcx,r9
    cmovge      rbp,rax
    mov         r8,rbp
    call        0000000140029A70
    mov         rax,qword ptr [r15]
    sub         rbx,rbp
    sub         dword ptr [rax],ebp
    mov         rcx,qword ptr [rdi+label_40]
    movsxd      rax,ebp
    add         qword ptr [rcx],rax
    jmp         00000001400093BF
    mov         rax,qword ptr [rdi]
    mov         rcx,rdi
    movzx       edx,byte ptr [r14]
    mov         rax,qword ptr [rax+label_18]
    call label_000000014002C2B8
    cmp         eax,label_0FFFFFFFF
    je          00000001400093C7
    dec         rbx
    mov         ebp,1
    add         r14,rbp
    test        rbx,rbx
    jg          0000000140009352
    mov         rbp,qword ptr [rsp+label_48]
    sub         rsi,rbx
    mov         rbx,qword ptr [rsp+label_40]
    mov         rax,rsi
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r12
    ret
func_00000001400093EB_end:
    jmp         qword ptr [label_000000014002C018]
    int         3
    xor         r8d,r8d
    mov         edx,label_0FA0
    jmp         qword ptr [label_000000014002C010]
    int         3
    jmp         qword ptr [label_000000014002C000]
    int         3
    jmp         qword ptr [label_000000014002C008]
    int         3
    sub         rsp,label_28
    cmp         qword ptr [label_000000014003C018],0
    je          0000000140009449
    call label_000000014002C020
    mov         rcx,qword ptr [label_000000014003C018]
    lea         rdx,[label_000000014003D5A0]
    dec         rcx
    mov         qword ptr [label_000000014003C018],rcx
    mov         qword ptr [rdx+rcx*8],rax
    add         rsp,label_28
    ret
func_0000000140009448_end:
    call        0000000140015954
    int         3
    int         3
    push        rbp
    push        r14
    push        r15
    sub         rsp,label_60
    lea         rbp,[rsp+label_50]
    mov         qword ptr [rbp+label_30],rbx
    mov         qword ptr [rbp+label_38],rsi
    mov         qword ptr [rbp+label_40],rdi
    mov         qword ptr [rbp+label_48],r13
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rbp
    mov         qword ptr [rbp],rax
    movsxd      rdi,r9d
    mov         rsi,r8
    mov         r15d,edx
    mov         r13,rcx
    test        r9d,r9d
    jle         00000001400094A2
    mov         rdx,rdi
    mov         rcx,r8
    call        00000001400159AC
    cmp         eax,edi
    lea         edi,[rax+1]
    jl          00000001400094A2
    mov         edi,eax
    neg         dword ptr [rbp+label_68]
    mov         r9d,edi
    mov         ecx,dword ptr [rbp+label_60]
    mov         r8,rsi
    sbb         edx,edx
    and         dword ptr [rsp+label_28],0
    and         qword ptr [rsp+label_20],0
    and         edx,8
    inc         edx
    call label_000000014002C030
    movsxd      r14,eax
    test        eax,eax
    je          000000014000957B
    mov         rdx,r14
    add         rdx,rdx
    lea         rcx,[rdx+label_10]
    cmp         rdx,rcx
    sbb         rdx,rdx
    and         rdx,rcx
    je          000000014000957B
    mov         rcx,label_0FFFFFFFFFFFFFF0
    cmp         rdx,label_400
    ja          0000000140009527
    lea         rax,[rdx+label_0F]
    cmp         rax,rdx
    ja          0000000140009509
    mov         rax,rcx
    and         rax,label_0FFFFFFFFFFFFFFF0
    call        0000000140009F30
    sub         rsp,rax
    lea         rbx,[rsp+label_50]
    test        rbx,rbx
    je          000000014000957B
    mov         dword ptr [rbx],label_0CCCC
    jmp         000000014000953D
    mov         rcx,rdx
    call        0000000140012CFC
    mov         rbx,rax
    test        rax,rax
    je          0000000140009541
    mov         dword ptr [rax],label_0DDDD
    add         rbx,label_10
    test        rbx,rbx
    je          000000014000957B
    mov         ecx,dword ptr [rbp+label_60]
    mov         r9d,edi
    mov         dword ptr [rsp+label_28],r14d
    mov         r8,rsi
    mov         edx,1
    mov         qword ptr [rsp+label_20],rbx
    call label_000000014002C030
    xor         edi,edi
    test        eax,eax
    jne         00000001400095A3
    lea         rcx,[rbx-label_10]
    cmp         dword ptr [rcx],label_0DDDD
    jne         000000014000957B
    call        0000000140012C04
    xor         eax,eax
    mov         rcx,qword ptr [rbp]
    xor         rcx,rbp
    call        00000001400099A0
    mov         rbx,qword ptr [rbp+label_30]
    mov         rsi,qword ptr [rbp+label_38]
    mov         rdi,qword ptr [rbp+label_40]
    mov         r13,qword ptr [rbp+label_48]
    lea         rsp,[rbp+label_10]
    pop         r15
    pop         r14
    pop         rbp
    ret
func_00000001400095A2_end:
    mov         qword ptr [rsp+label_40],rdi
    mov         r9d,r14d
    mov         qword ptr [rsp+label_38],rdi
    mov         r8,rbx
    mov         qword ptr [rsp+label_30],rdi
    mov         edx,r15d
    mov         dword ptr [rsp+label_28],edi
    mov         rcx,r13
    mov         qword ptr [rsp+label_20],rdi
    call label_000000014002C040
    movsxd      rsi,eax
    test        eax,eax
    je          000000014000956A
    mov         edx,label_400
    test        edx,r15d
    je          0000000140009624
    mov         eax,dword ptr [rbp+label_58]
    test        eax,eax
    je          0000000140009731
    cmp         esi,eax
    jg          0000000140009731
    mov         qword ptr [rsp+label_40],rdi
    mov         r9d,r14d
    mov         qword ptr [rsp+label_38],rdi
    mov         r8,rbx
    mov         qword ptr [rsp+label_30],rdi
    mov         edx,r15d
    mov         dword ptr [rsp+label_28],eax
    mov         rcx,r13
    mov         rax,qword ptr [rbp+label_50]
    mov         qword ptr [rsp+label_20],rax
    call label_000000014002C040
    jmp         0000000140009731
    mov         rcx,rsi
    add         rcx,rcx
    lea         rax,[rcx+label_10]
    cmp         rcx,rax
    sbb         rcx,rcx
    and         rcx,rax
    je          0000000140009731
    cmp         rcx,rdx
    ja          0000000140009677
    lea         rax,[rcx+label_0F]
    cmp         rax,rcx
    ja          0000000140009655
    mov         rax,label_0FFFFFFFFFFFFFF0
    and         rax,label_0FFFFFFFFFFFFFFF0
    call        0000000140009F30
    sub         rsp,rax
    lea         rdi,[rsp+label_50]
    test        rdi,rdi
    je          0000000140009731
    mov         dword ptr [rdi],label_0CCCC
    jmp         000000014000968A
    call        0000000140012CFC
    mov         rdi,rax
    test        rax,rax
    je          000000014000968E
    mov         dword ptr [rax],label_0DDDD
    add         rdi,label_10
    test        rdi,rdi
    je          0000000140009731
    and         qword ptr [rsp+label_40],0
    mov         r9d,r14d
    and         qword ptr [rsp+label_38],0
    mov         r8,rbx
    and         qword ptr [rsp+label_30],0
    mov         edx,r15d
    mov         dword ptr [rsp+label_28],esi
    mov         rcx,r13
    mov         qword ptr [rsp+label_20],rdi
    call label_000000014002C040
    xor         ecx,ecx
    test        eax,eax
    jne         00000001400096E4
    lea         rcx,[rdi-label_10]
    mov         edi,label_0DDDD
    cmp         dword ptr [rcx],edi
    jne         00000001400096DC
    call        0000000140012C04
    lea         rcx,[rbx-label_10]
    cmp         dword ptr [rcx],edi
    jmp         000000014000973B
    mov         eax,dword ptr [rbp+label_58]
    xor         edx,edx
    mov         qword ptr [rsp+label_38],rcx
    mov         r9d,esi
    mov         qword ptr [rsp+label_30],rcx
    mov         r8,rdi
    test        eax,eax
    jne         0000000140009708
    mov         dword ptr [rsp+label_28],ecx
    mov         qword ptr [rsp+label_20],rcx
    jmp         0000000140009715
    mov         dword ptr [rsp+label_28],eax
    mov         rax,qword ptr [rbp+label_50]
    mov         qword ptr [rsp+label_20],rax
    mov         ecx,dword ptr [rbp+label_60]
    call label_000000014002C038
    lea         rcx,[rdi-label_10]
    mov         esi,eax
    cmp         dword ptr [rcx],label_0DDDD
    jne         0000000140009731
    call        0000000140012C04
    lea         rcx,[rbx-label_10]
    cmp         dword ptr [rcx],label_0DDDD
    jne         0000000140009742
    call        0000000140012C04
    mov         eax,esi
    jmp         000000014000957D
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         edx,2
    lea         rcx,[rsp+label_30]
    call        00000001400071F4
    mov         r9d,1
    lea         r10,[label_0000000140000000]
    mov         qword ptr [rbx+8],r9
    mov         eax,r9d
    mov         edx,r9d
    mov         r8,qword ptr [r10+rax*8+label_000000000003D600]
    mov         rcx,rdx
    test        r8,r8
    je          00000001400097A3
    cmp         r8,rbx
    je          00000001400097A3
    inc         rax
    mov         qword ptr [rbx+8],rax
    mov         rdx,rax
    mov         rcx,rax
    cmp         rax,8
    jb          000000014000977B
    add         byte ptr [rcx+r10+label_000000000003D650],r9b
    mov         qword ptr [r10+rcx*8+label_000000000003D600],rbx
    lea         rcx,[rsp+label_30]
    call        000000014000726C
    add         rsp,label_20
    pop         rbx
    ret
func_00000001400097C2_end:
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rax,qword ptr [rcx+8]
    mov         rbx,rcx
    test        rax,rax
    je          00000001400097E6
    lea         rcx,[label_000000014003D650]
    dec         byte ptr [rax+rcx]
    cmp         byte ptr [rax+rcx],0
    jg          0000000140009833
    mov         rcx,rbx
    call        000000014000983C
    mov         rbx,qword ptr [rbx+label_40]
    test        rbx,rbx
    je          0000000140009833
    mov         rcx,qword ptr [rbx+8]
    test        rcx,rcx
    je          0000000140009826
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    mov         rcx,rax
    test        rax,rax
    je          0000000140009826
    mov         rdx,qword ptr [rax]
    mov         rax,qword ptr [rdx]
    mov         edx,1
    call label_000000014002C2B8
    mov         edx,label_10
    mov         rcx,rbx
    call        0000000140009900
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140009838_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,rcx
    mov         rbx,qword ptr [rcx+label_38]
    jmp         0000000140009865
    mov         r8d,dword ptr [rbx+8]
    mov         rdx,rdi
    xor         ecx,ecx
    mov         rax,qword ptr [rbx+label_10]
    call label_000000014002C2B8
    mov         rbx,qword ptr [rbx]
    test        rbx,rbx
    jne         000000014000984F
    mov         rcx,qword ptr [rdi+label_30]
    test        rcx,rcx
    je          0000000140009888
    mov         rbx,qword ptr [rcx]
    mov         edx,label_18
    call        0000000140009900
    mov         rcx,rbx
    test        rbx,rbx
    jne         0000000140009873
    and         qword ptr [rdi+label_30],0
    mov         rcx,qword ptr [rdi+label_38]
    test        rcx,rcx
    je          00000001400098AB
    mov         rbx,qword ptr [rcx]
    mov         edx,label_18
    call        0000000140009900
    mov         rcx,rbx
    test        rbx,rbx
    jne         0000000140009896
    and         qword ptr [rdi+label_38],0
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400098BA_end:
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    jmp         00000001400098D6
    mov         rcx,rbx
    call        0000000140015F8C
    test        eax,eax
    je          00000001400098E6
    mov         rcx,rbx
    call        0000000140012CFC
    test        rax,rax
    je          00000001400098C7
    add         rsp,label_20
    pop         rbx
    ret
func_00000001400098E5_end:
    cmp         rbx,label_0FFFFFFFFFFFFFFFF
    je          00000001400098F2
    call        000000014000A12C
    int         3
    call        000000014000A14C
    int         3
    jmp         0000000140012C04
    int         3
    int         3
    int         3
    jmp         00000001400098F8
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    mov         rbx,qword ptr [r9+label_38]
    mov         rsi,rdx
    mov         r14,r8
    mov         rbp,rcx
    mov         rdx,r9
    mov         rcx,rsi
    mov         rdi,r9
    lea         r8,[rbx+4]
    call        0000000140009A0C
    mov         eax,dword ptr [rbp+4]
    and         al,label_66
    neg         al
    mov         eax,1
    sbb         r8d,r8d
    neg         r8d
    add         r8d,eax
    test        dword ptr [rbx+4],r8d
    je          000000014000996C
    mov         r9,rdi
    mov         r8,r14
    mov         rdx,rsi
    mov         rcx,rbp
    call        000000014000B510
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_0000000140009986_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    cmp         rcx,qword ptr [label_000000014003C040]
    jne         00000001400099B9
    rol         rcx,label_10
    test        cx,label_0FFFF
    jne         00000001400099B5
    ret
func_00000001400099B4_end:
    ror         rcx,label_10
    jmp         000000014000A1A0
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    lea         rax,[label_000000014002DA28]
    mov         rbx,rcx
    mov         qword ptr [rcx],rax
    test        dl,1
    je          00000001400099E2
    mov         edx,label_18
    call        0000000140009900
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_00000001400099EA_end:
    int         3
    sub         rsp,label_28
    mov         r8,qword ptr [r9+label_38]
    mov         rcx,rdx
    mov         rdx,r9
    call        0000000140009A0C
    mov         eax,1
    add         rsp,label_28
    ret
func_0000000140009A08_end:
    int         3
    int         3
    int         3
    push        rbx
    mov         r11d,dword ptr [r8]
    mov         rbx,rdx
    and         r11d,label_0FFFFFFF8
    mov         r9,rcx
    test        byte ptr [r8],4
    mov         r10,rcx
    je          0000000140009A37
    mov         eax,dword ptr [r8+8]
    movsxd      r10,dword ptr [r8+4]
    neg         eax
    add         r10,rcx
    movsxd      rcx,eax
    and         r10,rcx
    movsxd      rax,r11d
    mov         rdx,qword ptr [rax+r10]
    mov         rax,qword ptr [rbx+label_10]
    mov         ecx,dword ptr [rax+8]
    mov         rax,qword ptr [rbx+8]
    test        byte ptr [rcx+rax+3],label_0F
    je          0000000140009A5B
    movzx       eax,byte ptr [rcx+rax+3]
    and         eax,label_0FFFFFFF0
    add         r9,rax
    xor         r9,rdx
    mov         rcx,r9
    pop         rbx
    jmp         00000001400099A0
    int         3
    push        rbx
    sub         rsp,label_20
    mov         ecx,1
    call        0000000140016190
    call        000000014000A4B4
    mov         ecx,eax
    call        0000000140016D2C
    call        0000000140008D54
    mov         ebx,eax
    call        00000001400186C4
    mov         ecx,1
    mov         dword ptr [rax],ebx
    call        0000000140009D54
    test        al,al
    je          0000000140009B13
    call        000000014000A724
    lea         rcx,[label_000000014000A760]
    call        0000000140009F04
    call        000000014000870C
    mov         ecx,eax
    call        000000014001644C
    test        eax,eax
    jne         0000000140009B13
    call        000000014000A4BC
    call        000000014000A4F0
    test        eax,eax
    je          0000000140009ADB
    lea         rcx,[label_0000000140008D54]
    call        00000001400161FC
    call        00000001400085EC
    call        00000001400085EC
    call        0000000140008D54
    mov         ecx,eax
    call        0000000140017350
    call        0000000140008708
    test        al,al
    je          0000000140009AFF
    call        0000000140016984
    call        0000000140008D54
    call        000000014000A65C
    test        eax,eax
    jne         0000000140009B13
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140009B12_end:
    mov         ecx,7
    call        000000014000A514
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call        000000014000A4D4
    xor         eax,eax
    add         rsp,label_28
    ret
func_0000000140009B2F_end:
    sub         rsp,label_28
    call        000000014000A6B8
    call        0000000140008D54
    mov         ecx,eax
    add         rsp,label_28
    jmp         0000000140018698
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_30
    mov         ecx,1
    call        0000000140009D18
    test        al,al
    je          0000000140009CA3
    xor         sil,sil
    mov         byte ptr [rsp+label_20],sil
    call        0000000140009CDC
    mov         bl,al
    mov         ecx,dword ptr [label_000000014003D750]
    cmp         ecx,1
    je          0000000140009CAE
    test        ecx,ecx
    jne         0000000140009BD9
    mov         dword ptr [label_000000014003D750],1
    lea         rdx,[label_000000014002C380]
    lea         rcx,[label_000000014002C340]
    call        00000001400169D0
    test        eax,eax
    je          0000000140009BBA
    mov         eax,label_0FF
    jmp         0000000140009C93
    lea         rdx,[label_000000014002C338]
    lea         rcx,[label_000000014002C2E0]
    call        000000014001698C
    mov         dword ptr [label_000000014003D750],2
    jmp         0000000140009BE1
    mov         sil,1
    mov         byte ptr [rsp+label_20],sil
    mov         cl,bl
    call        0000000140009E78
    call        000000014000A4FC
    mov         rbx,rax
    cmp         qword ptr [rax],0
    je          0000000140009C14
    mov         rcx,rax
    call        0000000140009DE0
    test        al,al
    je          0000000140009C14
    xor         r8d,r8d
    lea         edx,[r8+2]
    xor         ecx,ecx
    mov         rax,qword ptr [rbx]
    call label_000000014002C2B8
    call        000000014000A504
    mov         rbx,rax
    cmp         qword ptr [rax],0
    je          0000000140009C36
    mov         rcx,rax
    call        0000000140009DE0
    test        al,al
    je          0000000140009C36
    mov         rcx,qword ptr [rbx]
    call        0000000140016CE0
    call        0000000140016934
    mov         rdi,rax
    call        0000000140016D9C
    mov         rbx,qword ptr [rax]
    call        0000000140016D94
    mov         r8,rdi
    mov         rdx,rbx
    mov         ecx,dword ptr [rax]
    call        0000000140001150
    mov         ebx,eax
    call        000000014000A664
    test        al,al
    je          0000000140009CB8
    test        sil,sil
    jne         0000000140009C6D
    call        0000000140016CC4
    xor         edx,edx
    mov         cl,1
    call        0000000140009E9C
    mov         eax,ebx
    jmp         0000000140009C93
    mov         ebx,eax
    call        000000014000A664
    test        al,al
    je          0000000140009CC0
    cmp         byte ptr [rsp+label_20],0
    jne         0000000140009C91
    call        0000000140016CB4
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_30
    pop         rdi
    ret
func_0000000140009CA2_end:
    mov         ecx,7
    call        000000014000A514
    nop
    mov         ecx,7
    call        000000014000A514
    mov         ecx,ebx
    call        0000000140016D20
    nop
    mov         ecx,ebx
    call        0000000140016CD4
    nop
    sub         rsp,label_28
    call        000000014000A408
    add         rsp,label_28
    jmp         0000000140009B4C
    int         3
    int         3
    sub         rsp,label_28
    call        000000014000A79C
    test        eax,eax
    je          0000000140009D0A
    mov         rax,qword ptr gs:[label_0000000000000030]
    mov         rcx,qword ptr [rax+8]
    jmp         0000000140009CFD
    cmp         rcx,rax
    je          0000000140009D11
    xor         eax,eax
    lock cmpxchg qword ptr [label_000000014003D758],rcx
    jne         0000000140009CF8
    xor         al,al
    add         rsp,label_28
    ret
func_0000000140009D10_end:
    mov         al,1
    jmp         0000000140009D0C
    int         3
    int         3
    int         3
    sub         rsp,label_28
    test        ecx,ecx
    jne         0000000140009D27
    mov         byte ptr [label_000000014003D760],1
    call        0000000140009F80
    call        000000014000B998
    test        al,al
    jne         0000000140009D39
    xor         al,al
    jmp         0000000140009D4D
    call        0000000140018C04
    test        al,al
    jne         0000000140009D4B
    xor         ecx,ecx
    call        000000014000B9C0
    jmp         0000000140009D35
    mov         al,1
    add         rsp,label_28
    ret
func_0000000140009D51_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    cmp         byte ptr [label_000000014003D761],0
    mov         ebx,ecx
    jne         0000000140009DCC
    cmp         ecx,1
    ja          0000000140009DD4
    call        000000014000A79C
    test        eax,eax
    je          0000000140009D9B
    test        ebx,ebx
    jne         0000000140009D9B
    lea         rcx,[label_000000014003D768]
    call        0000000140018A68
    test        eax,eax
    jne         0000000140009D97
    lea         rcx,[label_000000014003D780]
    call        0000000140018A68
    test        eax,eax
    je          0000000140009DC5
    xor         al,al
    jmp         0000000140009DCE
    movdqa      xmm0,xmmword ptr [label_000000014002D960]
    or          rax,label_0FFFFFFFFFFFFFFFF
    movdqu      xmmword ptr [label_000000014003D768],xmm0
    mov         qword ptr [label_000000014003D778],rax
    movdqu      xmmword ptr [label_000000014003D780],xmm0
    mov         qword ptr [label_000000014003D790],rax
    mov         byte ptr [label_000000014003D761],1
    mov         al,1
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140009DD3_end:
    mov         ecx,5
    call        000000014000A514
    int         3
    int         3
    sub         rsp,label_18
    mov         r8,rcx
    mov         eax,label_5A4D
    cmp         word ptr [label_0000000140000000],ax
    jne         0000000140009E6D
    movsxd      rcx,dword ptr [label_000000014000003C]
    lea         rdx,[label_0000000140000000]
    add         rcx,rdx
    cmp         dword ptr [rcx],label_4550
    jne         0000000140009E6D
    mov         eax,label_20B
    cmp         word ptr [rcx+label_18],ax
    jne         0000000140009E6D
    sub         r8,rdx
    movzx       edx,word ptr [rcx+label_14]
    add         rdx,label_18
    add         rdx,rcx
    movzx       eax,word ptr [rcx+6]
    lea         rcx,[rax+rax*4]
    lea         r9,[rdx+rcx*8]
    mov         qword ptr [rsp],rdx
    cmp         rdx,r9
    je          0000000140009E54
    mov         ecx,dword ptr [rdx+label_0C]
    cmp         r8,rcx
    jb          0000000140009E4E
    mov         eax,dword ptr [rdx+8]
    add         eax,ecx
    cmp         r8,rax
    jb          0000000140009E56
    add         rdx,label_28
    jmp         0000000140009E33
    xor         edx,edx
    test        rdx,rdx
    jne         0000000140009E5F
    xor         al,al
    jmp         0000000140009E73
    cmp         dword ptr [rdx+label_24],0
    jge         0000000140009E69
    xor         al,al
    jmp         0000000140009E73
    mov         al,1
    jmp         0000000140009E73
    xor         al,al
    jmp         0000000140009E73
    xor         al,al
    add         rsp,label_18
    ret
func_0000000140009E77_end:
    push        rbx
    sub         rsp,label_20
    mov         bl,cl
    call        000000014000A79C
    xor         edx,edx
    test        eax,eax
    je          0000000140009E96
    test        bl,bl
    jne         0000000140009E96
    xchg        rdx,qword ptr [label_000000014003D758]
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140009E9B_end:
    push        rbx
    sub         rsp,label_20
    cmp         byte ptr [label_000000014003D760],0
    mov         bl,cl
    je          0000000140009EB1
    test        dl,dl
    jne         0000000140009EBD
    call        0000000140018C18
    mov         cl,bl
    call        000000014000B9C0
    mov         al,1
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140009EC4_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    cmp         qword ptr [label_000000014003D768],label_0FFFFFFFFFFFFFFFF
    mov         rbx,rcx
    jne         0000000140009EE2
    call        0000000140018A14
    jmp         0000000140009EF1
    mov         rdx,rbx
    lea         rcx,[label_000000014003D768]
    call        0000000140018A90
    xor         edx,edx
    test        eax,eax
    cmove       rdx,rbx
    mov         rax,rdx
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140009F01_end:
    int         3
    int         3
    sub         rsp,label_28
    call        0000000140009EC8
    neg         rax
    sbb         eax,eax
    neg         eax
    dec         eax
    add         rsp,label_28
    ret
func_0000000140009F1A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    sub         rsp,label_10
    mov         qword ptr [rsp],r10
    mov         qword ptr [rsp+8],r11
    xor         r11,r11
    lea         r10,[rsp+label_18]
    sub         r10,rax
    cmovb       r10,r11
    mov         r11,qword ptr gs:[label_0000000000000010]
    cmp         r10,r11
    jae         0000000140009F70
    and         r10w,label_0F000
    lea         r11,[r11+label_FFFFFFFFFFFFF000]
    mov         byte ptr [r11],0
    cmp         r10,r11
    jne         0000000140009F60
    mov         r10,qword ptr [rsp]
    mov         r11,qword ptr [rsp+8]
    add         rsp,label_10
    ret
func_0000000140009F7D_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_10
    xor         eax,eax
    xor         ecx,ecx
    cpuid
    mov         r8d,ecx
    xor         r11d,r11d
    mov         r10d,edx
    xor         r8d,label_6C65746E
    xor         r10d,label_49656E69
    mov         r9d,ebx
    mov         esi,eax
    xor         ecx,ecx
    lea         eax,[r11+1]
    or          r10d,r8d
    cpuid
    xor         r9d,label_756E6547
    mov         dword ptr [rsp],eax
    or          r10d,r9d
    mov         dword ptr [rsp+4],ebx
    mov         edi,ecx
    mov         dword ptr [rsp+8],ecx
    mov         dword ptr [rsp+label_0C],edx
    jne         000000014000A034
    or          qword ptr [label_000000014003C0A0],label_0FFFFFFFFFFFFFFFF
    and         eax,label_0FFF3FF0
    mov         qword ptr [label_000000014003C098],label_8000
    cmp         eax,label_106C0
    je          000000014000A020
    cmp         eax,label_20660
    je          000000014000A020
    cmp         eax,label_20670
    je          000000014000A020
    add         eax,label_0FFFCF9B0
    cmp         eax,label_20
    ja          000000014000A034
    mov         rcx,label_100010001
    bt          rcx,rax
    jae         000000014000A034
    mov         r8d,dword ptr [label_000000014003D798]
    or          r8d,1
    mov         dword ptr [label_000000014003D798],r8d
    jmp         000000014000A03B
    mov         r8d,dword ptr [label_000000014003D798]
    mov         eax,7
    lea         r9d,[rax-5]
    cmp         esi,eax
    jl          000000014000A06E
    xor         ecx,ecx
    cpuid
    mov         dword ptr [rsp],eax
    mov         r11d,ebx
    mov         dword ptr [rsp+4],ebx
    mov         dword ptr [rsp+8],ecx
    mov         dword ptr [rsp+label_0C],edx
    bt          ebx,9
    jae         000000014000A06E
    or          r8d,r9d
    mov         dword ptr [label_000000014003D798],r8d
    mov         dword ptr [label_000000014003C090],1
    mov         dword ptr [label_000000014003C094],r9d
    bt          edi,label_14
    jae         000000014000A11A
    mov         dword ptr [label_000000014003C090],r9d
    mov         ebx,6
    mov         dword ptr [label_000000014003C094],ebx
    bt          edi,label_1B
    jae         000000014000A11A
    bt          edi,label_1C
    jae         000000014000A11A
    xor         ecx,ecx
    xgetbv
    shl         rdx,label_20
    or          rdx,rax
    mov         qword ptr [rsp+label_20],rdx
    mov         rax,qword ptr [rsp+label_20]
    and         al,bl
    cmp         al,bl
    jne         000000014000A11A
    mov         eax,dword ptr [label_000000014003C094]
    or          eax,8
    mov         dword ptr [label_000000014003C090],3
    mov         dword ptr [label_000000014003C094],eax
    test        r11b,label_20
    je          000000014000A11A
    or          eax,label_20
    mov         dword ptr [label_000000014003C090],5
    mov         dword ptr [label_000000014003C094],eax
    mov         eax,label_0D0030000
    and         r11d,eax
    cmp         r11d,eax
    jne         000000014000A11A
    mov         rax,qword ptr [rsp+label_20]
    and         al,label_0E0
    cmp         al,label_0E0
    jne         000000014000A11A
    or          dword ptr [label_000000014003C094],label_40
    mov         dword ptr [label_000000014003C090],ebx
    mov         rbx,qword ptr [rsp+label_28]
    xor         eax,eax
    mov         rsi,qword ptr [rsp+label_30]
    add         rsp,label_10
    pop         rdi
    ret
func_000000014000A12B_end:
    sub         rsp,label_48
    lea         rcx,[rsp+label_20]
    call        0000000140006F7C
    lea         rdx,[label_000000014003B178]
    lea         rcx,[rsp+label_20]
    call        000000014000A870
    int         3
    sub         rsp,label_48
    lea         rcx,[rsp+label_20]
    call        00000001400022E0
    lea         rdx,[label_000000014003AEE0]
    lea         rcx,[rsp+label_20]
    call        000000014000A870
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    xor         ecx,ecx
    call label_000000014002C078
    mov         rcx,rbx
    call label_000000014002C070
    call label_000000014002C080
    mov         rcx,rax
    mov         edx,label_0C0000409
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C088]
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_38
    mov         ecx,label_17
    call label_000000014002C090
    test        eax,eax
    je          000000014000A1BF
    mov         ecx,2
    int         label_29
    lea         rcx,[label_000000014003D840]
    call        000000014000A394
    mov         rax,qword ptr [rsp+label_38]
    mov         qword ptr [label_000000014003D938],rax
    lea         rax,[rsp+label_38]
    add         rax,8
    mov         qword ptr [label_000000014003D8D8],rax
    mov         rax,qword ptr [label_000000014003D938]
    mov         qword ptr [label_000000014003D7B0],rax
    mov         rax,qword ptr [rsp+label_40]
    mov         qword ptr [label_000000014003D8C0],rax
    mov         dword ptr [label_000000014003D7A0],label_0C0000409
    mov         dword ptr [label_000000014003D7A4],1
    mov         dword ptr [label_000000014003D7B8],1
    mov         eax,8
    imul        rax,rax,0
    lea         rcx,[label_000000014003D7C0]
    mov         qword ptr [rcx+rax],2
    mov         eax,8
    imul        rax,rax,0
    mov         rcx,qword ptr [label_000000014003C040]
    mov         qword ptr [rsp+rax+label_20],rcx
    mov         eax,8
    imul        rax,rax,1
    mov         rcx,qword ptr [label_000000014003C080]
    mov         qword ptr [rsp+rax+label_20],rcx
    lea         rcx,[label_000000014002DA30]
    call        000000014000A16C
    add         rsp,label_38
    ret
func_000000014000A271_end:
    int         3
    int         3
    sub         rsp,label_28
    mov         ecx,8
    call        000000014000A288
    add         rsp,label_28
    ret
func_000000014000A286_end:
    int         3
    mov         dword ptr [rsp+8],ecx
    sub         rsp,label_28
    mov         ecx,label_17
    call label_000000014002C090
    test        eax,eax
    je          000000014000A2A7
    mov         eax,dword ptr [rsp+label_30]
    mov         ecx,eax
    int         label_29
    lea         rcx,[label_000000014003D840]
    call        000000014000A324
    mov         rax,qword ptr [rsp+label_28]
    mov         qword ptr [label_000000014003D938],rax
    lea         rax,[rsp+label_28]
    add         rax,8
    mov         qword ptr [label_000000014003D8D8],rax
    mov         rax,qword ptr [label_000000014003D938]
    mov         qword ptr [label_000000014003D7B0],rax
    mov         dword ptr [label_000000014003D7A0],label_0C0000409
    mov         dword ptr [label_000000014003D7A4],1
    mov         dword ptr [label_000000014003D7B8],1
    mov         eax,8
    imul        rax,rax,0
    lea         rcx,[label_000000014003D7C0]
    mov         edx,dword ptr [rsp+label_30]
    mov         qword ptr [rcx+rax],rdx
    lea         rcx,[label_000000014002DA30]
    call        000000014000A16C
    add         rsp,label_28
    ret
func_000000014000A323_end:
    mov         qword ptr [rsp+label_20],rbx
    push        rdi
    sub         rsp,label_40
    mov         rbx,rcx
    call label_000000014002C058
    mov         rdi,qword ptr [rbx+label_00000000000000F8]
    lea         rdx,[rsp+label_50]
    mov         rcx,rdi
    xor         r8d,r8d
    call label_000000014002C060
    test        rax,rax
    je          000000014000A386
    and         qword ptr [rsp+label_38],0
    lea         rcx,[rsp+label_58]
    mov         rdx,qword ptr [rsp+label_50]
    mov         r9,rax
    mov         qword ptr [rsp+label_30],rcx
    mov         r8,rdi
    lea         rcx,[rsp+label_60]
    mov         qword ptr [rsp+label_28],rcx
    xor         ecx,ecx
    mov         qword ptr [rsp+label_20],rbx
    call label_000000014002C068
    mov         rbx,qword ptr [rsp+label_68]
    add         rsp,label_40
    pop         rdi
    ret
func_000000014000A390_end:
    int         3
    int         3
    int         3
    push        rbx
    push        rsi
    push        rdi
    sub         rsp,label_40
    mov         rbx,rcx
    call label_000000014002C058
    mov         rsi,qword ptr [rbx+label_00000000000000F8]
    xor         edi,edi
    xor         r8d,r8d
    lea         rdx,[rsp+label_60]
    mov         rcx,rsi
    call label_000000014002C060
    test        rax,rax
    je          000000014000A3FD
    and         qword ptr [rsp+label_38],0
    lea         rcx,[rsp+label_68]
    mov         rdx,qword ptr [rsp+label_60]
    mov         r9,rax
    mov         qword ptr [rsp+label_30],rcx
    mov         r8,rsi
    lea         rcx,[rsp+label_70]
    mov         qword ptr [rsp+label_28],rcx
    xor         ecx,ecx
    mov         qword ptr [rsp+label_20],rbx
    call label_000000014002C068
    inc         edi
    cmp         edi,2
    jl          000000014000A3AE
    add         rsp,label_40
    pop         rdi
    pop         rsi
    pop         rbx
    ret
func_000000014000A404_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_30
    mov         rax,qword ptr [label_000000014003C040]
    mov         rbx,label_2B992DDFA232
    cmp         rax,rbx
    jne         000000014000A49F
    and         qword ptr [rbp+label_10],0
    lea         rcx,[rbp+label_10]
    call label_000000014002C0B0
    mov         rax,qword ptr [rbp+label_10]
    mov         qword ptr [rbp-label_10],rax
    call label_000000014002C0A8
    mov         eax,eax
    xor         qword ptr [rbp-label_10],rax
    call label_000000014002C0A0
    mov         eax,eax
    lea         rcx,[rbp+label_18]
    xor         qword ptr [rbp-label_10],rax
    call label_000000014002C098
    mov         eax,dword ptr [rbp+label_18]
    lea         rcx,[rbp-label_10]
    shl         rax,label_20
    xor         rax,qword ptr [rbp+label_18]
    xor         rax,qword ptr [rbp-label_10]
    xor         rax,rcx
    mov         rcx,label_0FFFFFFFFFFFF
    and         rax,rcx
    mov         rcx,label_2B992DDFA233
    cmp         rax,rbx
    cmove       rax,rcx
    mov         qword ptr [label_000000014003C040],rax
    mov         rbx,qword ptr [rsp+label_50]
    not         rax
    mov         qword ptr [label_000000014003C080],rax
    add         rsp,label_30
    pop         rbp
    ret
func_000000014000A4B3_end:
    mov         eax,label_4000
    ret
func_000000014000A4B9_end:
    int         3
    int         3
    lea         rcx,[label_000000014003DD10]
    jmp         qword ptr [label_000000014002C0B8]
    int         3
    int         3
    lea         rax,[label_000000014003DD20]
    ret
func_000000014000A4D3_end:
    sub         rsp,label_28
    call        0000000140006DE0
    or          qword ptr [rax],label_24
    call        000000014000A4CC
    or          qword ptr [rax],2
    add         rsp,label_28
    ret
func_000000014000A4EE_end:
    int         3
    xor         eax,eax
    cmp         dword ptr [label_000000014003C0A8],eax
    sete        al
    ret
func_000000014000A4FB_end:
    lea         rax,[label_000000014003EA18]
    ret
func_000000014000A503_end:
    lea         rax,[label_000000014003EA10]
    ret
func_000000014000A50B_end:
    and         dword ptr [label_000000014003DD28],0
    ret
func_000000014000A513_end:
    mov         qword ptr [rsp+8],rbx
    push        rbp
    lea         rbp,[rsp+label_FFFFFFFFFFFFFB40]
    sub         rsp,label_5C0
    mov         ebx,ecx
    mov         ecx,label_17
    call label_000000014002C090
    test        eax,eax
    je          000000014000A53E
    mov         ecx,ebx
    int         label_29
    mov         ecx,3
    call        000000014000A50C
    xor         edx,edx
    lea         rcx,[rbp-label_10]
    mov         r8d,label_4D0
    call        000000014002A110
    lea         rcx,[rbp-label_10]
    call label_000000014002C058
    mov         rbx,qword ptr [rbp+label_00000000000000E8]
    lea         rdx,[rbp+label_00000000000004D8]
    mov         rcx,rbx
    xor         r8d,r8d
    call label_000000014002C060
    test        rax,rax
    je          000000014000A5BE
    and         qword ptr [rsp+label_38],0
    lea         rcx,[rbp+label_00000000000004E0]
    mov         rdx,qword ptr [rbp+label_00000000000004D8]
    mov         r9,rax
    mov         qword ptr [rsp+label_30],rcx
    mov         r8,rbx
    lea         rcx,[rbp+label_00000000000004E8]
    mov         qword ptr [rsp+label_28],rcx
    lea         rcx,[rbp-label_10]
    mov         qword ptr [rsp+label_20],rcx
    xor         ecx,ecx
    call label_000000014002C068
    mov         rax,qword ptr [rbp+label_00000000000004C8]
    lea         rcx,[rsp+label_50]
    mov         qword ptr [rbp+label_00000000000000E8],rax
    xor         edx,edx
    lea         rax,[rbp+label_00000000000004C8]
    mov         r8d,label_98
    add         rax,8
    mov         qword ptr [rbp+label_0000000000000088],rax
    call        000000014002A110
    mov         rax,qword ptr [rbp+label_00000000000004C8]
    mov         qword ptr [rsp+label_60],rax
    mov         dword ptr [rsp+label_50],label_40000015
    mov         dword ptr [rsp+label_54],1
    call label_000000014002C0C0
    mov         ebx,eax
    xor         ecx,ecx
    lea         rax,[rsp+label_50]
    mov         qword ptr [rsp+label_40],rax
    lea         rax,[rbp-label_10]
    mov         qword ptr [rsp+label_48],rax
    call label_000000014002C078
    lea         rcx,[rsp+label_40]
    call label_000000014002C070
    test        eax,eax
    jne         000000014000A64B
    cmp         ebx,1
    je          000000014000A64B
    lea         ecx,[rax+3]
    call        000000014000A50C
    mov         rbx,qword ptr [rsp+label_00000000000005D0]
    add         rsp,label_5C0
    pop         rbp
    ret
func_000000014000A65B_end:
    jmp         0000000140008D54
    int         3
    int         3
    int         3
    sub         rsp,label_28
    xor         ecx,ecx
    call label_000000014002C0D0
    test        rax,rax
    je          000000014000A6AE
    mov         ecx,label_5A4D
    cmp         word ptr [rax],cx
    jne         000000014000A6AE
    movsxd      rcx,dword ptr [rax+label_3C]
    add         rcx,rax
    cmp         dword ptr [rcx],label_4550
    jne         000000014000A6AE
    mov         eax,label_20B
    cmp         word ptr [rcx+label_18],ax
    jne         000000014000A6AE
    cmp         dword ptr [rcx+label_0000000000000084],label_0E
    jbe         000000014000A6AE
    cmp         dword ptr [rcx+label_00000000000000F8],0
    setne       al
    jmp         000000014000A6B0
    xor         al,al
    add         rsp,label_28
    ret
func_000000014000A6B4_end:
    int         3
    int         3
    int         3
    lea         rcx,[label_000000014000A6C8]
    jmp         qword ptr [label_000000014002C078]
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,qword ptr [rcx]
    mov         rdi,rcx
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014000A6FC
    cmp         dword ptr [rbx+label_18],4
    jne         000000014000A6FC
    mov         edx,dword ptr [rbx+label_20]
    lea         eax,[rdx+label_FFFFFFFFE66CFAE0]
    cmp         eax,2
    jbe         000000014000A709
    cmp         edx,label_1994000
    je          000000014000A709
    mov         rbx,qword ptr [rsp+label_30]
    xor         eax,eax
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000A708_end:
    call        000000014000B74C
    mov         qword ptr [rax],rbx
    mov         rbx,qword ptr [rdi+8]
    call        000000014000B760
    mov         qword ptr [rax],rbx
    call        0000000140018C50
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    lea         rbx,[label_0000000140038BD0]
    lea         rdi,[label_0000000140038BD0]
    jmp         000000014000A750
    mov         rax,qword ptr [rbx]
    test        rax,rax
    je          000000014000A74C
    call label_000000014002C2B8
    add         rbx,8
    cmp         rbx,rdi
    jb          000000014000A73E
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000A75F_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    lea         rbx,[label_0000000140038BE0]
    lea         rdi,[label_0000000140038BE0]
    jmp         000000014000A78C
    mov         rax,qword ptr [rbx]
    test        rax,rax
    je          000000014000A788
    call label_000000014002C2B8
    add         rbx,8
    cmp         rbx,rdi
    jb          000000014000A77A
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000A79B_end:
    xor         eax,eax
    cmp         dword ptr [label_000000014003EA08],eax
    setne       al
    ret
func_000000014000A7A7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r14
    sub         rsp,label_20
    cmp         byte ptr [rcx+8],0
    mov         r14,rdx
    mov         rsi,rcx
    je          000000014000A81D
    mov         rax,qword ptr [rcx]
    test        rax,rax
    je          000000014000A81D
    or          rdi,label_0FFFFFFFFFFFFFFFF
    inc         rdi
    cmp         byte ptr [rax+rdi],0
    jne         000000014000A7DD
    lea         rcx,[rdi+1]
    call        0000000140012CFC
    mov         rbx,rax
    test        rax,rax
    je          000000014000A813
    mov         r8,qword ptr [rsi]
    lea         rdx,[rdi+1]
    mov         rcx,rax
    call        0000000140018C7C
    mov         rax,rbx
    mov         byte ptr [r14+8],1
    mov         qword ptr [r14],rax
    xor         ebx,ebx
    mov         rcx,rbx
    call        0000000140012C04
    jmp         000000014000A827
    mov         rax,qword ptr [rcx]
    mov         qword ptr [rdx],rax
    mov         byte ptr [rdx+8],0
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    mov         rdi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         r14
    ret
func_000000014000A83C_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    cmp         byte ptr [rcx+8],0
    mov         rbx,rcx
    je          000000014000A857
    mov         rcx,qword ptr [rcx]
    call        0000000140012C04
    and         qword ptr [rbx],0
    mov         byte ptr [rbx+8],0
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000A864_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    sub         rsp,label_50
    mov         rbx,rdx
    mov         rsi,rcx
    mov         edi,label_19930520
    test        rdx,rdx
    je          000000014000A8AC
    test        byte ptr [rdx],label_10
    je          000000014000A8AC
    mov         rcx,qword ptr [rcx]
    sub         rcx,8
    mov         rax,qword ptr [rcx]
    mov         rbx,qword ptr [rax+label_30]
    mov         rax,qword ptr [rax+label_40]
    call label_000000014002C2B8
    xor         eax,eax
    mov         qword ptr [rsp+label_20],rax
    test        rbx,rbx
    je          000000014000A8DA
    lea         rdx,[rsp+label_20]
    mov         rcx,rbx
    call label_000000014002C0E0
    mov         qword ptr [rsp+label_20],rax
    test        byte ptr [rbx],8
    jne         000000014000A8D5
    test        rax,rax
    jne         000000014000A8DA
    mov         edi,label_1994000
    mov         edx,1
    mov         qword ptr [rsp+label_28],rdi
    lea         r9,[rsp+label_28]
    mov         qword ptr [rsp+label_30],rsi
    mov         ecx,label_0E06D7363
    mov         qword ptr [rsp+label_38],rbx
    mov         qword ptr [rsp+label_40],rax
    lea         r8d,[rdx+3]
    call label_000000014002C0E8
    mov         rbx,qword ptr [rsp+label_70]
    mov         rsi,qword ptr [rsp+label_78]
    add         rsp,label_50
    pop         rdi
    ret
func_000000014000A916_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_20],r9
    mov         qword ptr [rax+label_18],r8
    mov         qword ptr [rax+label_10],rdx
    mov         qword ptr [rax+8],rcx
    push        rbx
    sub         rsp,label_70
    mov         rbx,rcx
    and         dword ptr [rax-label_38],0
    mov         qword ptr [rax-label_20],rcx
    mov         qword ptr [rax-label_18],r8
    call        000000014000BA24
    lea         rdx,[rsp+label_58]
    mov         ecx,dword ptr [rbx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    mov         dword ptr [rsp+label_40],0
    jmp         000000014000A95F
    mov         eax,dword ptr [rsp+label_40]
    add         rsp,label_70
    pop         rbx
    ret
func_000000014000A968_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_20],r9
    mov         qword ptr [rax+label_18],r8
    mov         qword ptr [rax+label_10],rdx
    mov         qword ptr [rax+8],rcx
    push        rbx
    sub         rsp,label_70
    mov         rbx,rcx
    and         dword ptr [rax-label_38],0
    mov         qword ptr [rax-label_20],rcx
    mov         qword ptr [rax-label_18],r8
    call        000000014000BA24
    lea         rdx,[rsp+label_58]
    mov         ecx,dword ptr [rbx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    mov         dword ptr [rsp+label_40],0
    jmp         000000014000A9B3
    mov         eax,dword ptr [rsp+label_40]
    add         rsp,label_70
    pop         rbx
    ret
func_000000014000A9BC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         edi,dword ptr [rcx+label_0C]
    mov         esi,edx
    mov         rbp,rcx
    test        edi,edi
    je          000000014000AA0B
    lea         ebx,[rdi-1]
    mov         edi,ebx
    call        000000014000BA24
    lea         rdx,[rbx+rbx*4]
    mov         rax,qword ptr [rax+label_60]
    lea         rcx,[rax+rdx*4]
    movsxd      rax,dword ptr [rbp+label_10]
    add         rax,rcx
    cmp         esi,dword ptr [rax+4]
    jle         000000014000AA07
    cmp         esi,dword ptr [rax+8]
    jle         000000014000AA0D
    test        ebx,ebx
    jne         000000014000A9E0
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000AA21_end:
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    mov         bl,byte ptr [rcx]
    lea         r10,[rcx+1]
    mov         byte ptr [rdx],bl
    mov         esi,r9d
    lea         r14,[label_0000000140000000]
    mov         rbp,r8
    mov         r11,rdx
    mov         rdi,rcx
    test        bl,4
    je          000000014000AA7D
    movzx       ecx,byte ptr [r10]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r14+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r14+label_000000000002DA50]
    sub         r10,rax
    mov         eax,dword ptr [r10-4]
    shr         eax,cl
    mov         dword ptr [rdx+4],eax
    test        bl,8
    je          000000014000AA8C
    mov         eax,dword ptr [r10]
    add         r10,4
    mov         dword ptr [rdx+8],eax
    test        bl,label_10
    je          000000014000AA9B
    mov         eax,dword ptr [r10]
    add         r10,4
    mov         dword ptr [rdx+label_0C],eax
    xor         r9d,r9d
    lea         r8,[r10+4]
    cmp         byte ptr [rsp+label_30],r9b
    jne         000000014000AB09
    test        bl,2
    je          000000014000AB09
    mov         dword ptr [rdx+label_10],r9d
    cmp         dword ptr [r10],r9d
    je          000000014000AB00
    movsxd      rdx,dword ptr [r10]
    add         rdx,rbp
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r14+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r14+label_000000000002DA50]
    sub         rdx,rax
    mov         r10d,dword ptr [rdx-4]
    shr         r10d,cl
    test        r10d,r10d
    je          000000014000AB0F
    mov         eax,dword ptr [rdx]
    mov         ecx,dword ptr [rdx+4]
    lea         rdx,[rdx+8]
    cmp         eax,esi
    je          000000014000AAFA
    inc         r9d
    cmp         r9d,r10d
    jb          000000014000AAE3
    jmp         000000014000AB0F
    mov         dword ptr [r11+label_10],ecx
    jmp         000000014000AB0F
    mov         ecx,7
    int         label_29
    jmp         000000014000AB0F
    mov         eax,dword ptr [r10]
    mov         dword ptr [rdx+label_10],eax
    test        bl,1
    je          000000014000AB39
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rdx,byte ptr [rcx+r14+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r14+label_000000000002DA50]
    sub         r8,rdx
    mov         edx,dword ptr [r8-4]
    shr         edx,cl
    mov         dword ptr [r11+label_14],edx
    mov         rbx,qword ptr [rsp+label_10]
    sub         r8,rdi
    mov         rbp,qword ptr [rsp+label_18]
    mov         rax,r8
    mov         rsi,qword ptr [rsp+label_20]
    mov         rdi,qword ptr [rsp+label_28]
    pop         r14
    ret
func_000000014000AB55_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rdx
    mov         rdx,rcx
    mov         rcx,rbx
    call        000000014000BC58
    mov         edx,eax
    mov         rcx,rbx
    call        000000014000A9C0
    test        rax,rax
    setne       al
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000AB81_end:
    int         3
    int         3
    mov         al,byte ptr [rdx]
    and         al,1
    ret
func_000000014000AB88_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    lea         r9,[rsp+label_48]
    mov         rbx,r8
    mov         rdi,rdx
    call        000000014000AC24
    mov         rdx,rdi
    mov         rcx,rbx
    mov         rsi,rax
    call        000000014000BC58
    mov         edx,eax
    mov         rcx,rbx
    call        000000014000A9C0
    test        rax,rax
    jne         000000014000ABCE
    or          r9d,label_0FFFFFFFF
    jmp         000000014000ABD2
    mov         r9d,dword ptr [rax+4]
    mov         r8,rbx
    mov         rdx,rdi
    mov         rcx,rsi
    call        000000014000E41C
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000ABEF_end:
    sub         rsp,label_28
    test        byte ptr [r8],1
    mov         rcx,qword ptr [rcx]
    mov         qword ptr [rsp+label_30],rcx
    je          000000014000AC0F
    mov         eax,dword ptr [r8+label_14]
    mov         rcx,qword ptr [rax+rcx]
    mov         qword ptr [rsp+label_30],rcx
    or          r9d,label_0FFFFFFFF
    lea         rcx,[rsp+label_30]
    call        000000014000E5A8
    add         rsp,label_28
    ret
func_000000014000AC21_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rbp
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_20
    mov         esi,dword ptr [r8+label_0C]
    mov         r12,rcx
    mov         rcx,r8
    mov         rdi,r9
    mov         r14,r8
    mov         r15,rdx
    call        000000014000BC58
    mov         r10,qword ptr [r12]
    mov         ebp,eax
    mov         qword ptr [rdi],r10
    jmp         000000014000ACC0
    movsxd      rax,dword ptr [r14+label_10]
    lea         ecx,[rsi-1]
    mov         esi,ecx
    lea         rcx,[rcx+rcx*4]
    lea         rbx,[rax+rcx*4]
    add         rbx,qword ptr [r15+8]
    cmp         ebp,dword ptr [rbx+4]
    jle         000000014000ACC0
    cmp         ebp,dword ptr [rbx+8]
    jg          000000014000ACC0
    mov         rcx,qword ptr [r15]
    lea         rdx,[rsp+label_50]
    xor         r8d,r8d
    call label_000000014002C060
    movsxd      r8,dword ptr [rbx+label_10]
    xor         ecx,ecx
    add         r8,qword ptr [rsp+label_50]
    mov         r9d,dword ptr [rbx+label_0C]
    mov         r10d,dword ptr [rax]
    test        r9d,r9d
    je          000000014000ACBB
    lea         rdx,[r8+label_0C]
    movsxd      rax,dword ptr [rdx]
    cmp         rax,r10
    je          000000014000ACBB
    inc         ecx
    add         rdx,label_14
    cmp         ecx,r9d
    jb          000000014000ACA8
    cmp         ecx,r9d
    jb          000000014000ACC6
    test        esi,esi
    jne         000000014000AC5D
    jmp         000000014000ACDA
    mov         rax,qword ptr [r12]
    lea         rcx,[rcx+rcx*4]
    movsxd      rcx,dword ptr [r8+rcx*4+label_10]
    mov         rcx,qword ptr [rcx+rax]
    mov         qword ptr [rdi],rcx
    mov         rbx,qword ptr [rsp+label_58]
    mov         rax,rdi
    mov         rbp,qword ptr [rsp+label_60]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    ret
func_000000014000ACF3_end:
    mov         rax,qword ptr [rcx]
    mov         rdx,rcx
    mov         qword ptr [r9],rax
    test        byte ptr [r8],1
    je          000000014000AD11
    mov         ecx,dword ptr [r8+label_14]
    mov         rax,qword ptr [rdx]
    mov         rcx,qword ptr [rcx+rax]
    mov         qword ptr [r9],rcx
    mov         rax,r9
    ret
func_000000014000AD14_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_40
    mov         rbx,qword ptr [rsp+label_0000000000000090]
    mov         r15,rdx
    mov         rsi,rcx
    mov         rdx,r9
    mov         rcx,rbx
    mov         rdi,r9
    mov         r14d,r8d
    mov         ebp,dword ptr [rbx+label_0C]
    call        000000014000BC58
    xor         r10d,r10d
    mov         r9d,eax
    test        ebp,ebp
    je          000000014000AE43
    mov         r11,qword ptr [rdi+8]
    or          r12d,label_0FFFFFFFF
    movsxd      rbx,dword ptr [rbx+label_10]
    mov         r8d,r12d
    mov         r13d,r12d
    mov         edx,ebp
    lea         edi,[rdx-1]
    lea         rcx,[rdi+rdi*4]
    lea         rax,[r11+rcx*4]
    cmp         r9d,dword ptr [rax+rbx+4]
    jle         000000014000AD91
    cmp         r9d,dword ptr [rax+rbx+8]
    jle         000000014000AD97
    mov         edx,edi
    test        edi,edi
    jne         000000014000AD78
    test        edx,edx
    je          000000014000ADAB
    lea         eax,[rdx-1]
    lea         rax,[rax+rax*4]
    lea         r9,[r11+rax*4]
    add         r9,rbx
    jmp         000000014000ADAE
    mov         r9,r10
    mov         edx,r10d
    lea         rcx,[r11+rbx]
    test        r9,r9
    je          000000014000ADCB
    mov         eax,dword ptr [r9+4]
    cmp         dword ptr [rcx],eax
    jle         000000014000ADE0
    mov         eax,dword ptr [r9+8]
    cmp         dword ptr [rcx+4],eax
    jg          000000014000ADE0
    cmp         r14d,dword ptr [rcx]
    jl          000000014000ADE0
    cmp         r14d,dword ptr [rcx+4]
    jg          000000014000ADE0
    cmp         r8d,r12d
    mov         r13d,edx
    cmove       r8d,edx
    inc         edx
    add         rcx,label_14
    cmp         edx,ebp
    jb          000000014000ADB5
    mov         eax,r10d
    mov         qword ptr [rsp+label_20],r15
    lea         r11,[rsp+label_40]
    mov         qword ptr [rsp+label_30],r15
    mov         rbx,qword ptr [r11+label_30]
    cmp         r8d,r12d
    mov         rbp,qword ptr [r11+label_38]
    cmovne      eax,r8d
    mov         dword ptr [rsp+label_28],eax
    lea         eax,[r13+1]
    movups      xmm0,xmmword ptr [rsp+label_20]
    cmovne      r10d,eax
    mov         rax,rsi
    mov         dword ptr [rsp+label_38],r10d
    movups      xmm1,xmmword ptr [rsp+label_30]
    movdqu      xmmword ptr [rsi],xmm0
    movdqu      xmmword ptr [rsi+label_10],xmm1
    mov         rsi,qword ptr [r11+label_40]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_000000014000AE42_end:
    call        0000000140015954
    int         3
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_60
    mov         qword ptr [rsp+label_20],rdx
    mov         rdi,rdx
    movaps      xmmword ptr [rax-label_18],xmm6
    mov         rbp,rcx
    mov         qword ptr [rsp+label_30],rdx
    xor         ebx,ebx
    mov         dword ptr [rsp+label_28],ebx
    lea         rdx,[rax-label_28]
    movaps      xmm6,xmmword ptr [rsp+label_20]
    mov         rcx,rdi
    movdqa      xmmword ptr [rax-label_28],xmm6
    mov         r14d,r8d
    xor         esi,esi
    call        000000014000B1DC
    mov         r9d,dword ptr [rdi]
    xor         edx,edx
    test        r9d,r9d
    je          000000014000AF6A
    mov         r8,qword ptr [rdi+8]
    lea         r10,[label_0000000140000000]
    mov         rax,qword ptr [rdi+label_18]
    mov         ecx,ebx
    cmp         r14d,eax
    jl          000000014000AED9
    shr         rax,label_20
    cmp         r14d,eax
    jg          000000014000AED9
    test        ecx,ecx
    mov         ebx,edx
    mov         esi,edx
    cmove       ebx,ecx
    mov         dword ptr [rsp+label_28],ebx
    movaps      xmm6,xmmword ptr [rsp+label_20]
    movzx       ecx,byte ptr [r8]
    inc         edx
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r10+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r10+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    shr         eax,cl
    mov         qword ptr [rdi+8],r8
    mov         dword ptr [rdi+label_18],eax
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r10+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r10+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    shr         eax,cl
    mov         qword ptr [rdi+8],r8
    mov         dword ptr [rdi+label_1C],eax
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r10+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r10+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    shr         eax,cl
    mov         qword ptr [rdi+8],r8
    mov         dword ptr [rdi+label_20],eax
    mov         eax,dword ptr [r8]
    add         r8,4
    mov         qword ptr [rdi+8],r8
    mov         dword ptr [rdi+label_24],eax
    cmp         edx,r9d
    jne         000000014000AEB3
    inc         esi
    movdqa      xmmword ptr [rsp+label_40],xmm6
    lea         rdx,[rsp+label_40]
    mov         dword ptr [rsp+label_38],esi
    mov         rcx,rdi
    call        000000014000B1DC
    movups      xmm0,xmmword ptr [rsp+label_30]
    lea         r11,[rsp+label_60]
    mov         rax,rbp
    mov         rbx,qword ptr [r11+label_10]
    mov         rsi,qword ptr [r11+label_20]
    mov         rdi,qword ptr [r11+label_28]
    movdqu      xmmword ptr [rbp],xmm6
    movaps      xmm6,xmmword ptr [rsp+label_50]
    movdqu      xmmword ptr [rbp+label_10],xmm0
    mov         rbp,qword ptr [r11+label_18]
    mov         rsp,r11
    pop         r14
    ret
func_000000014000AFB4_end:
    int         3
    int         3
    int         3
    push        rbp
    lea         rbp,[rsp-label_1F]
    sub         rsp,label_0E0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_0F],rax
    mov         r10,qword ptr [rbp+label_77]
    lea         rax,[label_000000014002DB00]
    movups      xmm0,xmmword ptr [rax]
    mov         r11,rcx
    lea         rcx,[rsp+label_30]
    movups      xmm1,xmmword ptr [rax+label_10]
    movups      xmmword ptr [rcx],xmm0
    movups      xmm0,xmmword ptr [rax+label_20]
    movups      xmmword ptr [rcx+label_10],xmm1
    movups      xmm1,xmmword ptr [rax+label_30]
    movups      xmmword ptr [rcx+label_20],xmm0
    movups      xmm0,xmmword ptr [rax+label_40]
    movups      xmmword ptr [rcx+label_30],xmm1
    movups      xmm1,xmmword ptr [rax+label_50]
    movups      xmmword ptr [rcx+label_40],xmm0
    movups      xmm0,xmmword ptr [rax+label_60]
    movups      xmmword ptr [rcx+label_50],xmm1
    movups      xmm1,xmmword ptr [rax+label_0000000000000080]
    movups      xmmword ptr [rcx+label_60],xmm0
    movups      xmm0,xmmword ptr [rax+label_70]
    mov         rax,qword ptr [rax+label_0000000000000090]
    movups      xmmword ptr [rcx+label_70],xmm0
    movups      xmmword ptr [rcx+label_0000000000000080],xmm1
    mov         qword ptr [rcx+label_0000000000000090],rax
    lea         rax,[label_000000014000DD98]
    mov         rcx,qword ptr [r11]
    mov         qword ptr [rbp-label_71],rax
    mov         rax,qword ptr [rbp+label_4F]
    mov         qword ptr [rbp-label_61],rax
    movsxd      rax,dword ptr [rbp+label_5F]
    mov         qword ptr [rbp-label_59],rax
    mov         rax,qword ptr [rbp+label_57]
    mov         qword ptr [rbp-label_49],rax
    movzx       eax,byte ptr [rbp+label_7F]
    mov         qword ptr [rbp-label_39],rax
    mov         rax,qword ptr [r10+label_40]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [r10+label_28]
    mov         qword ptr [rbp-label_69],r9
    xor         r9d,r9d
    mov         qword ptr [rbp-label_51],r8
    lea         r8,[rsp+label_30]
    mov         qword ptr [rbp-label_41],rdx
    mov         rdx,qword ptr [r10]
    mov         qword ptr [rsp+label_20],rax
    mov         qword ptr [rbp-label_31],label_19930520
    call label_000000014002C0F0
    mov         rcx,qword ptr [rbp+label_0F]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_0E0
    pop         rbp
    ret
func_000000014000B0BA_end:
    int         3
    push        rbp
    lea         rbp,[rsp-label_1F]
    sub         rsp,label_0E0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_0F],rax
    mov         r10,qword ptr [rbp+label_77]
    lea         rax,[label_000000014002DA60]
    movups      xmm0,xmmword ptr [rax]
    mov         r11,rcx
    lea         rcx,[rsp+label_30]
    movups      xmm1,xmmword ptr [rax+label_10]
    movups      xmmword ptr [rcx],xmm0
    movups      xmm0,xmmword ptr [rax+label_20]
    movups      xmmword ptr [rcx+label_10],xmm1
    movups      xmm1,xmmword ptr [rax+label_30]
    movups      xmmword ptr [rcx+label_20],xmm0
    movups      xmm0,xmmword ptr [rax+label_40]
    movups      xmmword ptr [rcx+label_30],xmm1
    movups      xmm1,xmmword ptr [rax+label_50]
    movups      xmmword ptr [rcx+label_40],xmm0
    movups      xmm0,xmmword ptr [rax+label_60]
    movups      xmmword ptr [rcx+label_50],xmm1
    movups      xmm1,xmmword ptr [rax+label_0000000000000080]
    movups      xmmword ptr [rcx+label_60],xmm0
    movups      xmm0,xmmword ptr [rax+label_70]
    mov         rax,qword ptr [rax+label_0000000000000090]
    movups      xmmword ptr [rcx+label_70],xmm0
    movups      xmmword ptr [rcx+label_0000000000000080],xmm1
    mov         qword ptr [rcx+label_0000000000000090],rax
    lea         rax,[label_000000014000DF84]
    mov         qword ptr [rbp-label_71],rax
    mov         rax,qword ptr [rbp+label_4F]
    mov         qword ptr [rbp-label_61],rax
    movsxd      rax,dword ptr [rbp+label_5F]
    mov         qword ptr [rbp-label_51],r8
    mov         r8,qword ptr [rbp+label_6F]
    mov         qword ptr [rbp-label_59],rax
    movzx       eax,byte ptr [rbp+label_7F]
    mov         qword ptr [rbp-label_39],rax
    mov         rcx,qword ptr [r8+label_18]
    mov         r8,qword ptr [r8+label_20]
    add         rcx,qword ptr [r10+8]
    add         r8,qword ptr [r10+8]
    movsxd      rax,dword ptr [rbp+label_67]
    mov         qword ptr [rbp-label_19],rax
    mov         rax,qword ptr [r10+label_40]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [r10+label_28]
    mov         qword ptr [rbp-label_69],r9
    xor         r9d,r9d
    mov         qword ptr [rbp-label_49],rcx
    mov         rcx,qword ptr [r11]
    mov         qword ptr [rbp-label_41],rdx
    mov         rdx,qword ptr [r10]
    mov         qword ptr [rbp-label_29],r8
    lea         r8,[rsp+label_30]
    mov         qword ptr [rsp+label_20],rax
    mov         qword ptr [rbp-label_31],label_19930520
    call label_000000014002C0F0
    mov         rcx,qword ptr [rbp+label_0F]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_0E0
    pop         rbp
    ret
func_000000014000B1DA_end:
    int         3
    mov         r8,qword ptr [rcx+label_10]
    lea         r11,[label_0000000140000000]
    mov         qword ptr [rcx+8],r8
    mov         r9,rcx
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    shr         eax,cl
    mov         qword ptr [r9+8],r8
    mov         dword ptr [r9+label_18],eax
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    mov         qword ptr [r9+8],r8
    shr         eax,cl
    mov         dword ptr [r9+label_1C],eax
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [r11+rcx+label_000000000002DA40]
    mov         cl,byte ptr [r11+rcx+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    mov         qword ptr [r9+8],r8
    shr         eax,cl
    mov         dword ptr [r9+label_20],eax
    mov         eax,dword ptr [r8]
    add         r8,4
    cmp         dword ptr [rdx+8],0
    mov         qword ptr [r9+8],r8
    mov         dword ptr [r9+label_24],eax
    je          000000014000B39D
    mov         r10d,dword ptr [rdx+8]
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    mov         qword ptr [r9+8],r8
    shr         eax,cl
    mov         dword ptr [r9+label_18],eax
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    mov         qword ptr [r9+8],r8
    shr         eax,cl
    mov         dword ptr [r9+label_1C],eax
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    lea         rdx,[r8+4]
    mov         qword ptr [r9+8],r8
    shr         eax,cl
    mov         dword ptr [r9+label_20],eax
    mov         eax,dword ptr [r8]
    mov         qword ptr [r9+8],rdx
    mov         dword ptr [r9+label_24],eax
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         qword ptr [r9+8],rdx
    mov         dword ptr [r9+label_18],eax
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         qword ptr [r9+8],rdx
    mov         dword ptr [r9+label_1C],eax
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    lea         r8,[rdx+4]
    shr         eax,cl
    mov         qword ptr [r9+8],rdx
    mov         dword ptr [r9+label_20],eax
    mov         eax,dword ptr [rdx]
    mov         qword ptr [r9+8],r8
    mov         dword ptr [r9+label_24],eax
    sub         r10,1
    jne         000000014000B286
    ret
func_000000014000B39D_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         qword ptr [rcx],rdx
    call        000000014000BA24
    cmp         rbx,qword ptr [rax+label_58]
    jae         000000014000B3C2
    call        000000014000BA24
    mov         rcx,qword ptr [rax+label_58]
    jmp         000000014000B3C4
    xor         ecx,ecx
    mov         qword ptr [rbx+8],rcx
    call        000000014000BA24
    mov         qword ptr [rax+label_58],rbx
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000B3D9_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,rcx
    call        000000014000BA24
    cmp         rdi,qword ptr [rax+label_58]
    jne         000000014000B429
    call        000000014000BA24
    mov         rdx,qword ptr [rax+label_58]
    test        rdx,rdx
    je          000000014000B429
    mov         rbx,qword ptr [rdx+8]
    cmp         rdi,rdx
    je          000000014000B415
    mov         rdx,rbx
    test        rbx,rbx
    je          000000014000B429
    jmp         000000014000B402
    call        000000014000BA24
    mov         qword ptr [rax+label_58],rbx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000B428_end:
    call        0000000140015954
    int         3
    int         3
    sub         rsp,label_28
    call        000000014000BA24
    mov         rax,qword ptr [rax+label_60]
    add         rsp,label_28
    ret
func_000000014000B441_end:
    int         3
    int         3
    sub         rsp,label_28
    call        000000014000BA24
    mov         rax,qword ptr [rax+label_68]
    add         rsp,label_28
    ret
func_000000014000B455_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    call        000000014000BA24
    mov         qword ptr [rax+label_60],rbx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000B46F_end:
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    call        000000014000BA24
    mov         qword ptr [rax+label_68],rbx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000B487_end:
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+label_18],rbp
    mov         qword ptr [rax+label_20],rsi
    push        rdi
    sub         rsp,label_40
    mov         rbx,qword ptr [r9+8]
    mov         rdi,r9
    mov         rsi,r8
    mov         qword ptr [rax+8],rdx
    mov         rbp,rcx
    call        000000014000BA24
    mov         qword ptr [rax+label_60],rbx
    mov         rbx,qword ptr [rbp+label_38]
    call        000000014000BA24
    mov         qword ptr [rax+label_68],rbx
    call        000000014000BA24
    mov         rcx,qword ptr [rdi+label_38]
    mov         r9,rdi
    mov         r8,rsi
    mov         edx,dword ptr [rcx]
    mov         rcx,rbp
    add         rdx,qword ptr [rax+label_60]
    xor         eax,eax
    mov         byte ptr [rsp+label_38],al
    mov         qword ptr [rsp+label_30],rax
    mov         dword ptr [rsp+label_28],eax
    mov         qword ptr [rsp+label_20],rdx
    lea         rdx,[rsp+label_50]
    call        000000014000DB80
    mov         rbx,qword ptr [rsp+label_58]
    mov         rbp,qword ptr [rsp+label_60]
    mov         rsi,qword ptr [rsp+label_68]
    add         rsp,label_40
    pop         rdi
    ret
func_000000014000B50D_end:
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+label_18],rbp
    mov         qword ptr [rax+label_20],rsi
    push        rdi
    sub         rsp,label_60
    and         dword ptr [rax-label_24],0
    mov         rdi,r9
    and         dword ptr [rax-label_20],0
    mov         rsi,r8
    and         dword ptr [rax-label_1C],0
    mov         rbp,rcx
    and         dword ptr [rax-label_18],0
    and         dword ptr [rax-label_14],0
    mov         rbx,qword ptr [r9+8]
    mov         byte ptr [rax-label_28],0
    mov         qword ptr [rax+8],rdx
    call        000000014000BA24
    mov         qword ptr [rax+label_60],rbx
    mov         rbx,qword ptr [rbp+label_38]
    call        000000014000BA24
    mov         qword ptr [rax+label_68],rbx
    call        000000014000BA24
    mov         rcx,qword ptr [rdi+label_38]
    lea         rdx,[rsp+label_40]
    mov         r9,qword ptr [rdi+label_10]
    mov         r8,qword ptr [rdi+8]
    mov         byte ptr [rsp+label_20],0
    mov         ecx,dword ptr [rcx]
    add         rcx,qword ptr [rax+label_60]
    mov         r9d,dword ptr [r9]
    call        000000014000AA24
    mov         byte ptr [rsp+label_38],0
    lea         rax,[rsp+label_40]
    and         qword ptr [rsp+label_30],0
    lea         rdx,[rsp+label_70]
    and         dword ptr [rsp+label_28],0
    mov         r9,rdi
    mov         r8,rsi
    mov         qword ptr [rsp+label_20],rax
    mov         rcx,rbp
    call        000000014000DB88
    lea         r11,[rsp+label_60]
    mov         rbx,qword ptr [r11+label_18]
    mov         rbp,qword ptr [r11+label_20]
    mov         rsi,qword ptr [r11+label_28]
    mov         rsp,r11
    pop         rdi
    ret
func_000000014000B5CE_end:
    int         3
    mov         rax,qword ptr [label_000000014003DDC0]
    nop
    ret
func_000000014000B5D8_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call        000000014000B5D0
    test        rax,rax
    je          000000014000B5F0
    call label_000000014002C2B8
    call        0000000140015954
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call        000000014000BB00
    mov         rcx,rax
    xor         eax,eax
    test        rcx,rcx
    je          000000014000B616
    mov         eax,dword ptr [rcx+label_30]
    add         rsp,label_28
    ret
func_000000014000B61A_end:
    int         3
    test        rcx,rcx
    je          000000014000B688
    mov         byte ptr [rsp+label_10],dl
    sub         rsp,label_48
    cmp         dword ptr [rcx],label_0E06D7363
    jne         000000014000B684
    cmp         dword ptr [rcx+label_18],4
    jne         000000014000B684
    mov         eax,dword ptr [rcx+label_20]
    sub         eax,label_19930520
    cmp         eax,2
    ja          000000014000B684
    mov         rax,qword ptr [rcx+label_30]
    test        rax,rax
    je          000000014000B684
    movsxd      rdx,dword ptr [rax+4]
    test        edx,edx
    je          000000014000B666
    add         rdx,qword ptr [rcx+label_38]
    mov         rcx,qword ptr [rcx+label_28]
    call        000000014000B68C
    jmp         000000014000B684
    jmp         000000014000B684
    test        byte ptr [rax],label_10
    je          000000014000B684
    mov         rax,qword ptr [rcx+label_28]
    mov         rcx,qword ptr [rax]
    test        rcx,rcx
    je          000000014000B684
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    add         rsp,label_48
    ret
func_000000014000B688_end:
    int         3
    int         3
    int         3
    jmp         rdx
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    call        000000014000BA24
    mov         rdx,qword ptr [rax+label_58]
    jmp         000000014000B6AD
    cmp         qword ptr [rdx],rbx
    je          000000014000B6BB
    mov         rdx,qword ptr [rdx+8]
    test        rdx,rdx
    jne         000000014000B6A4
    lea         eax,[rdx+1]
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000B6BA_end:
    xor         eax,eax
    jmp         000000014000B6B5
    int         3
    movsxd      rax,dword ptr [rdx]
    add         rax,rcx
    cmp         dword ptr [rdx+4],0
    jl          000000014000B6E2
    movsxd      r9,dword ptr [rdx+4]
    movsxd      rdx,dword ptr [rdx+8]
    mov         rcx,qword ptr [r9+rcx]
    movsxd      r8,dword ptr [rdx+rcx]
    add         r8,r9
    add         rax,r8
    ret
func_000000014000B6E2_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,qword ptr [rcx]
    mov         rbx,rcx
    cmp         dword ptr [rdi],label_0E0434352
    je          000000014000B70E
    cmp         dword ptr [rdi],label_0E0434F4D
    je          000000014000B70E
    cmp         dword ptr [rdi],label_0E06D7363
    je          000000014000B72E
    jmp         000000014000B721
    call        000000014000BA24
    cmp         dword ptr [rax+label_30],0
    jle         000000014000B721
    call        000000014000BA24
    dec         dword ptr [rax+label_30]
    mov         rbx,qword ptr [rsp+label_30]
    xor         eax,eax
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000B72D_end:
    call        000000014000BA24
    mov         qword ptr [rax+label_20],rdi
    mov         rbx,qword ptr [rbx+8]
    call        000000014000BA24
    mov         qword ptr [rax+label_28],rbx
    call        0000000140018C50
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call        000000014000BA24
    add         rax,label_20
    add         rsp,label_28
    ret
func_000000014000B75D_end:
    int         3
    int         3
    sub         rsp,label_28
    call        000000014000BA24
    add         rax,label_28
    add         rsp,label_28
    ret
func_000000014000B771_end:
    int         3
    int         3
    sub         rsp,label_28
    call        0000000140018C50
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_40
    mov         rsi,rcx
    mov         r15,r9
    mov         rcx,r8
    mov         rbp,r8
    mov         r13,rdx
    call        000000014000ED64
    mov         r12,qword ptr [r15+8]
    mov         r14,qword ptr [r15]
    mov         rbx,qword ptr [r15+label_38]
    sub         r14,r12
    test        byte ptr [rsi+4],label_66
    mov         edi,dword ptr [r15+label_48]
    jne         000000014000B8BD
    mov         qword ptr [rsp+label_30],rsi
    mov         qword ptr [rsp+label_38],rbp
    jmp         000000014000B8A9
    mov         ecx,edi
    add         rcx,rcx
    mov         ebp,edi
    mov         eax,dword ptr [rbx+rcx*8+4]
    cmp         r14,rax
    jb          000000014000B8A7
    mov         eax,dword ptr [rbx+rcx*8+8]
    cmp         r14,rax
    jae         000000014000B8A7
    cmp         dword ptr [rbx+rcx*8+label_10],0
    je          000000014000B8A7
    cmp         dword ptr [rbx+rcx*8+label_0C],1
    je          000000014000B829
    mov         eax,dword ptr [rbx+rcx*8+label_0C]
    mov         rdx,r13
    add         rax,r12
    lea         rcx,[rsp+label_30]
    call        rax
    test        eax,eax
    js          000000014000B8B6
    jle         000000014000B8A7
    cmp         dword ptr [rsi],label_0E06D7363
    jne         000000014000B859
    cmp         qword ptr [label_000000014002DB98],0
    je          000000014000B859
    lea         rcx,[label_000000014002DB98]
    call        00000001400295D0
    test        eax,eax
    je          000000014000B859
    mov         edx,1
    mov         rcx,rsi
    call label_000000014002DB98
    lea         rax,[rbp+1]
    mov         r8d,1
    add         rax,rax
    mov         rdx,r13
    mov         ecx,dword ptr [rbx+rax*8]
    add         rcx,r12
    call        000000014000ED30
    mov         r9d,dword ptr [rsi]
    lea         rax,[rbp+1]
    add         rax,rax
    mov         r8,rsi
    mov         rcx,r13
    mov         edx,dword ptr [rbx+rax*8]
    mov         rax,qword ptr [r15+label_40]
    add         rdx,r12
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [r15+label_28]
    mov         qword ptr [rsp+label_20],rax
    call label_000000014002C0F0
    call        000000014000ED60
    inc         edi
    cmp         edi,dword ptr [rbx]
    jb          000000014000B7DB
    jmp         000000014000B974
    xor         eax,eax
    jmp         000000014000B979
    mov         rbp,qword ptr [r15+label_20]
    sub         rbp,r12
    jmp         000000014000B968
    mov         r9d,edi
    add         r9,r9
    mov         eax,dword ptr [rbx+r9*8+4]
    cmp         r14,rax
    jb          000000014000B966
    mov         eax,dword ptr [rbx+r9*8+8]
    cmp         r14,rax
    jae         000000014000B966
    test        byte ptr [rsi+4],label_20
    je          000000014000B92C
    xor         edx,edx
    test        r8d,r8d
    je          000000014000B928
    mov         ecx,edx
    add         rcx,rcx
    mov         eax,dword ptr [rbx+rcx*8+4]
    cmp         rbp,rax
    jb          000000014000B921
    mov         eax,dword ptr [rbx+rcx*8+8]
    cmp         rbp,rax
    jae         000000014000B921
    mov         eax,dword ptr [rbx+r9*8+label_10]
    cmp         dword ptr [rbx+rcx*8+label_10],eax
    jne         000000014000B921
    mov         eax,dword ptr [rbx+r9*8+label_0C]
    cmp         dword ptr [rbx+rcx*8+label_0C],eax
    je          000000014000B928
    inc         edx
    cmp         edx,r8d
    jb          000000014000B8F4
    cmp         edx,dword ptr [rbx]
    jne         000000014000B974
    mov         eax,edi
    inc         rax
    mov         ecx,edi
    add         rax,rax
    add         rcx,rcx
    cmp         dword ptr [rbx+rax*8],0
    je          000000014000B94F
    mov         eax,dword ptr [rbx+rax*8]
    cmp         rbp,rax
    jne         000000014000B966
    test        byte ptr [rsi+4],label_20
    jne         000000014000B974
    jmp         000000014000B966
    lea         eax,[rdi+1]
    mov         rdx,r13
    mov         dword ptr [r15+label_48],eax
    mov         r8d,dword ptr [rbx+rcx*8+label_0C]
    mov         cl,1
    add         r8,r12
    call        r8
    inc         edi
    mov         r8d,dword ptr [rbx]
    cmp         edi,r8d
    jb          000000014000B8C9
    mov         eax,1
    lea         r11,[rsp+label_40]
    mov         rbx,qword ptr [r11+label_30]
    mov         rbp,qword ptr [r11+label_38]
    mov         rsi,qword ptr [r11+label_40]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_000000014000B996_end:
    int         3
    sub         rsp,label_28
    call        000000014000ED9C
    test        al,al
    jne         000000014000B9A9
    xor         al,al
    jmp         000000014000B9BB
    call        000000014000BB50
    test        al,al
    jne         000000014000B9B9
    call        000000014000EDE4
    jmp         000000014000B9A5
    mov         al,1
    add         rsp,label_28
    ret
func_000000014000B9BF_end:
    sub         rsp,label_28
    test        cl,cl
    jne         000000014000B9D2
    call        000000014000BB98
    call        000000014000EDE4
    mov         al,1
    add         rsp,label_28
    ret
func_000000014000B9D8_end:
    int         3
    int         3
    int         3
    cmp         rcx,rdx
    je          000000014000B9FA
    add         rdx,9
    lea         rax,[rcx+9]
    sub         rdx,rax
    mov         cl,byte ptr [rax]
    cmp         cl,byte ptr [rax+rdx]
    jne         000000014000B9FD
    inc         rax
    test        cl,cl
    jne         000000014000B9EC
    xor         eax,eax
    ret
func_000000014000B9FC_end:
    sbb         eax,eax
    or          eax,1
    ret
func_000000014000BA02_end:
    int         3
    sub         rsp,label_28
    test        rcx,rcx
    je          000000014000BA1E
    lea         rax,[label_000000014003DD40]
    cmp         rcx,rax
    je          000000014000BA1E
    call        0000000140012C04
    add         rsp,label_28
    ret
func_000000014000BA22_end:
    int         3
    sub         rsp,label_28
    call        000000014000BA40
    test        rax,rax
    je          000000014000BA37
    add         rsp,label_28
    ret
func_000000014000BA36_end:
    call        0000000140015954
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    cmp         dword ptr [label_000000014003C0B0],label_0FFFFFFFF
    jne         000000014000BA5F
    xor         eax,eax
    jmp         000000014000BAEF
    call label_000000014002C0F8
    mov         ecx,dword ptr [label_000000014003C0B0]
    mov         edi,eax
    call        000000014000FDB8
    or          rdx,label_0FFFFFFFFFFFFFFFF
    xor         esi,esi
    cmp         rax,rdx
    je          000000014000BAE4
    test        rax,rax
    je          000000014000BA87
    mov         rsi,rax
    jmp         000000014000BAE4
    mov         ecx,dword ptr [label_000000014003C0B0]
    call        000000014000FE00
    test        eax,eax
    je          000000014000BAE4
    mov         edx,label_80
    lea         ecx,[rdx-label_7F]
    call        0000000140013880
    mov         ecx,dword ptr [label_000000014003C0B0]
    mov         rbx,rax
    test        rax,rax
    je          000000014000BAD5
    mov         rdx,rax
    call        000000014000FE00
    test        eax,eax
    je          000000014000BACF
    mov         rax,rbx
    mov         dword ptr [rbx+label_78],label_0FFFFFFFE
    mov         rbx,rsi
    mov         rsi,rax
    jmp         000000014000BADC
    mov         ecx,dword ptr [label_000000014003C0B0]
    xor         edx,edx
    call        000000014000FE00
    mov         rcx,rbx
    call        0000000140012C04
    mov         ecx,edi
    call label_000000014002C100
    mov         rax,rsi
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000BAFE_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    cmp         dword ptr [label_000000014003C0B0],label_0FFFFFFFF
    jne         000000014000BB17
    xor         eax,eax
    jmp         000000014000BB42
    call label_000000014002C0F8
    mov         ecx,dword ptr [label_000000014003C0B0]
    mov         ebx,eax
    call        000000014000FDB8
    mov         ecx,ebx
    mov         rdi,rax
    call label_000000014002C100
    xor         eax,eax
    cmp         rdi,label_0FFFFFFFFFFFFFFFF
    cmove       rdi,rax
    mov         rax,rdi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000BB4C_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    lea         rcx,[label_000000014000BA04]
    call        000000014000FD28
    mov         dword ptr [label_000000014003C0B0],eax
    cmp         eax,label_0FFFFFFFF
    je          000000014000BB90
    lea         rdx,[label_000000014003DD40]
    mov         ecx,eax
    call        000000014000FE00
    test        eax,eax
    je          000000014000BB8B
    mov         dword ptr [label_000000014003DDB8],label_0FFFFFFFE
    mov         al,1
    jmp         000000014000BB92
    call        000000014000BB98
    xor         al,al
    add         rsp,label_28
    ret
func_000000014000BB96_end:
    int         3
    sub         rsp,label_28
    mov         ecx,dword ptr [label_000000014003C0B0]
    cmp         ecx,label_0FFFFFFFF
    je          000000014000BBB3
    call        000000014000FD70
    or          dword ptr [label_000000014003C0B0],label_0FFFFFFFF
    mov         al,1
    add         rsp,label_28
    ret
func_000000014000BBB9_end:
    int         3
    int         3
    sub         rsp,label_28
    movsxd      r9,dword ptr [r8+label_1C]
    mov         r10,r8
    mov         rax,qword ptr [rcx]
    mov         eax,dword ptr [r9+rax]
    cmp         eax,label_0FFFFFFFE
    jne         000000014000BBDE
    mov         r8,qword ptr [rdx]
    mov         rcx,r10
    call        000000014000BC68
    add         rsp,label_28
    ret
func_000000014000BBE2_end:
    int         3
    push        rbx
    sub         rsp,label_20
    lea         r9,[rsp+label_40]
    mov         rbx,r8
    call        000000014000AC24
    mov         rcx,qword ptr [rax]
    movsxd      rax,dword ptr [rbx+label_1C]
    mov         qword ptr [rsp+label_40],rcx
    mov         eax,dword ptr [rax+rcx+4]
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000BC0C_end:
    int         3
    int         3
    int         3
    movsxd      rdx,dword ptr [rdx+label_1C]
    mov         rax,qword ptr [rcx]
    mov         dword ptr [rdx+rax],r8d
    ret
func_000000014000BC1B_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         edi,r9d
    mov         rbx,r8
    lea         r9,[rsp+label_40]
    call        000000014000AC24
    mov         rcx,qword ptr [rax]
    movsxd      rax,dword ptr [rbx+label_1C]
    mov         qword ptr [rsp+label_40],rcx
    cmp         edi,dword ptr [rax+rcx+4]
    jle         000000014000BC4C
    mov         dword ptr [rax+rcx+4],edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000BC56_end:
    int         3
    mov         r8,qword ptr [rdx]
    jmp         000000014000BC68
    mov         r8,qword ptr [rdx]
    jmp         000000014000BCD0
    push        rbx
    sub         rsp,label_20
    mov         rbx,r8
    test        rcx,rcx
    je          000000014000BCC8
    movsxd      r11,dword ptr [rcx+label_18]
    mov         r10,qword ptr [rdx+8]
    lea         rax,[r10+r11]
    test        rax,rax
    je          000000014000BCC8
    mov         r8d,dword ptr [rcx+label_14]
    xor         r9d,r9d
    test        r8d,r8d
    je          000000014000BCC3
    lea         rcx,[r11+r9*8]
    movsxd      rdx,dword ptr [rcx+r10]
    add         rdx,r10
    cmp         rbx,rdx
    jb          000000014000BCAB
    inc         r9d
    cmp         r9d,r8d
    jb          000000014000BC93
    test        r9d,r9d
    je          000000014000BCC3
    lea         ecx,[r9-1]
    lea         rax,[r10+rcx*8]
    mov         eax,dword ptr [rax+r11+4]
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000BCC2_end:
    or          eax,label_0FFFFFFFF
    jmp         000000014000BCBD
    call        0000000140015954
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    or          ebp,label_0FFFFFFFF
    mov         rbx,r8
    cmp         dword ptr [rcx+label_10],0
    mov         r10,rdx
    je          000000014000BDA4
    movsxd      r9,dword ptr [rcx+label_10]
    lea         r14,[label_0000000140000000]
    mov         rdi,qword ptr [rdx+8]
    xor         esi,esi
    add         r9,rdi
    xor         r8d,r8d
    mov         edx,ebp
    movzx       ecx,byte ptr [r9]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r14+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r14+label_000000000002DA50]
    sub         r9,rax
    mov         r11d,dword ptr [r9-4]
    shr         r11d,cl
    test        r11d,r11d
    je          000000014000BDA4
    mov         rax,qword ptr [r10+label_10]
    mov         r10d,dword ptr [rax]
    movzx       ecx,byte ptr [r9]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r14+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r14+label_000000000002DA50]
    sub         r9,rax
    mov         eax,dword ptr [r9-4]
    shr         eax,cl
    add         esi,eax
    mov         eax,esi
    add         rax,r10
    add         rax,rdi
    cmp         rbx,rax
    jb          000000014000BD9A
    movzx       ecx,byte ptr [r9]
    inc         r8d
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r14+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r14+label_000000000002DA50]
    sub         r9,rax
    mov         edx,dword ptr [r9-4]
    shr         edx,cl
    dec         edx
    cmp         r8d,r11d
    jb          000000014000BD3F
    test        r8d,r8d
    cmove       edx,ebp
    mov         eax,edx
    jmp         000000014000BDA6
    mov         eax,ebp
    mov         rbx,qword ptr [rsp+label_10]
    mov         rbp,qword ptr [rsp+label_18]
    mov         rsi,qword ptr [rsp+label_20]
    mov         rdi,qword ptr [rsp+label_28]
    pop         r14
    ret
func_000000014000BDBC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         r14,r9
    mov         rbx,r8
    mov         rsi,rdx
    mov         r13,rcx
    xor         edi,edi
    cmp         dword ptr [r8+4],edi
    je          000000014000BDFC
    movsxd      r15,dword ptr [r8+4]
    call        000000014000B430
    lea         rdx,[r15+rax]
    jmp         000000014000BE02
    mov         rdx,rdi
    mov         r15d,edi
    test        rdx,rdx
    je          000000014000BF82
    test        r15d,r15d
    je          000000014000BE21
    call        000000014000B430
    mov         rcx,rax
    movsxd      rax,dword ptr [rbx+4]
    add         rcx,rax
    jmp         000000014000BE24
    mov         rcx,rdi
    cmp         byte ptr [rcx+label_10],dil
    je          000000014000BF82
    cmp         dword ptr [rbx+8],edi
    jne         000000014000BE3B
    cmp         dword ptr [rbx],edi
    jge         000000014000BF82
    cmp         dword ptr [rbx],edi
    jl          000000014000BE49
    movsxd      rax,dword ptr [rbx+8]
    add         rax,qword ptr [rsi]
    mov         rsi,rax
    test        byte ptr [rbx],label_80
    je          000000014000BE80
    test        byte ptr [r14],label_10
    je          000000014000BE80
    mov         rax,qword ptr [label_000000014003DD30]
    test        rax,rax
    je          000000014000BE80
    call label_000000014002C2B8
    test        rax,rax
    je          000000014000BF9E
    test        rsi,rsi
    je          000000014000BF9E
    mov         qword ptr [rsi],rax
    mov         rcx,rax
    jmp         000000014000BEDF
    test        byte ptr [rbx],8
    je          000000014000BEA0
    mov         rcx,qword ptr [r13+label_28]
    test        rcx,rcx
    je          000000014000BFA3
    test        rsi,rsi
    je          000000014000BFA3
    mov         qword ptr [rsi],rcx
    jmp         000000014000BEDF
    test        byte ptr [r14],1
    je          000000014000BEF0
    mov         rdx,qword ptr [r13+label_28]
    test        rdx,rdx
    je          000000014000BFA8
    test        rsi,rsi
    je          000000014000BFA8
    movsxd      r8,dword ptr [r14+label_14]
    mov         rcx,rsi
    call        0000000140029A70
    cmp         dword ptr [r14+label_14],8
    jne         000000014000BF7E
    cmp         qword ptr [rsi],rdi
    je          000000014000BF7E
    mov         rcx,qword ptr [rsi]
    lea         rdx,[r14+8]
    call        000000014000B6C0
    mov         qword ptr [rsi],rax
    jmp         000000014000BF7E
    cmp         dword ptr [r14+label_18],edi
    je          000000014000BF05
    movsxd      rbx,dword ptr [r14+label_18]
    call        000000014000B444
    lea         rcx,[rbx+rax]
    jmp         000000014000BF0A
    mov         rcx,rdi
    mov         ebx,edi
    test        rcx,rcx
    jne         000000014000BF43
    cmp         qword ptr [r13+label_28],rdi
    je          000000014000BFAD
    test        rsi,rsi
    je          000000014000BFAD
    movsxd      rbx,dword ptr [r14+label_14]
    lea         rdx,[r14+8]
    mov         rcx,qword ptr [r13+label_28]
    call        000000014000B6C0
    mov         rdx,rax
    mov         r8,rbx
    mov         rcx,rsi
    call        0000000140029A70
    jmp         000000014000BF7E
    cmp         qword ptr [r13+label_28],rdi
    je          000000014000BFB2
    test        rsi,rsi
    je          000000014000BFB2
    test        ebx,ebx
    je          000000014000BF63
    call        000000014000B444
    mov         rcx,rax
    movsxd      rax,dword ptr [r14+label_18]
    add         rcx,rax
    jmp         000000014000BF66
    mov         rcx,rdi
    test        rcx,rcx
    je          000000014000BFB2
    mov         al,byte ptr [r14]
    and         al,4
    neg         al
    sbb         ecx,ecx
    neg         ecx
    inc         ecx
    mov         edi,ecx
    mov         dword ptr [rsp+label_20],ecx
    mov         eax,edi
    jmp         000000014000BF84
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_50]
    mov         rsi,qword ptr [rsp+label_58]
    mov         rdi,qword ptr [rsp+label_60]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    ret
func_000000014000BF9D_end:
    call        0000000140015954
    call        0000000140015954
    call        0000000140015954
    call        0000000140015954
    call        0000000140015954
    nop
    call        0000000140015954
    nop
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         r14,r9
    mov         rbx,r8
    mov         rsi,rdx
    mov         r13,rcx
    xor         edi,edi
    cmp         dword ptr [r8+8],edi
    je          000000014000BFFC
    movsxd      r15,dword ptr [r8+8]
    call        000000014000B430
    lea         rdx,[r15+rax]
    jmp         000000014000C002
    mov         rdx,rdi
    mov         r15d,edi
    test        rdx,rdx
    je          000000014000C185
    test        r15d,r15d
    je          000000014000C021
    call        000000014000B430
    mov         rcx,rax
    movsxd      rax,dword ptr [rbx+8]
    add         rcx,rax
    jmp         000000014000C024
    mov         rcx,rdi
    cmp         byte ptr [rcx+label_10],dil
    je          000000014000C185
    cmp         dword ptr [rbx+label_0C],edi
    jne         000000014000C03C
    cmp         dword ptr [rbx+4],edi
    jge         000000014000C185
    cmp         dword ptr [rbx+4],edi
    jl          000000014000C04A
    mov         eax,dword ptr [rbx+label_0C]
    add         rax,qword ptr [rsi]
    mov         rsi,rax
    test        byte ptr [rbx+4],label_80
    je          000000014000C082
    test        byte ptr [r14],label_10
    je          000000014000C082
    mov         rax,qword ptr [label_000000014003DD30]
    test        rax,rax
    je          000000014000C082
    call label_000000014002C2B8
    test        rax,rax
    je          000000014000C1A1
    test        rsi,rsi
    je          000000014000C1A1
    mov         qword ptr [rsi],rax
    mov         rcx,rax
    jmp         000000014000C0E2
    test        byte ptr [rbx+4],8
    je          000000014000C0A3
    mov         rcx,qword ptr [r13+label_28]
    test        rcx,rcx
    je          000000014000C1A6
    test        rsi,rsi
    je          000000014000C1A6
    mov         qword ptr [rsi],rcx
    jmp         000000014000C0E2
    test        byte ptr [r14],1
    je          000000014000C0F3
    mov         rdx,qword ptr [r13+label_28]
    test        rdx,rdx
    je          000000014000C1AB
    test        rsi,rsi
    je          000000014000C1AB
    movsxd      r8,dword ptr [r14+label_14]
    mov         rcx,rsi
    call        0000000140029A70
    cmp         dword ptr [r14+label_14],8
    jne         000000014000C181
    cmp         qword ptr [rsi],rdi
    je          000000014000C181
    mov         rcx,qword ptr [rsi]
    lea         rdx,[r14+8]
    call        000000014000B6C0
    mov         qword ptr [rsi],rax
    jmp         000000014000C181
    cmp         dword ptr [r14+label_18],edi
    je          000000014000C108
    movsxd      rbx,dword ptr [r14+label_18]
    call        000000014000B444
    lea         rcx,[rbx+rax]
    jmp         000000014000C10D
    mov         rcx,rdi
    mov         ebx,edi
    test        rcx,rcx
    jne         000000014000C146
    cmp         qword ptr [r13+label_28],rdi
    je          000000014000C1B0
    test        rsi,rsi
    je          000000014000C1B0
    movsxd      rbx,dword ptr [r14+label_14]
    lea         rdx,[r14+8]
    mov         rcx,qword ptr [r13+label_28]
    call        000000014000B6C0
    mov         rdx,rax
    mov         r8,rbx
    mov         rcx,rsi
    call        0000000140029A70
    jmp         000000014000C181
    cmp         qword ptr [r13+label_28],rdi
    je          000000014000C1B5
    test        rsi,rsi
    je          000000014000C1B5
    test        ebx,ebx
    je          000000014000C166
    call        000000014000B444
    mov         rcx,rax
    movsxd      rax,dword ptr [r14+label_18]
    add         rcx,rax
    jmp         000000014000C169
    mov         rcx,rdi
    test        rcx,rcx
    je          000000014000C1B5
    mov         al,byte ptr [r14]
    and         al,4
    neg         al
    sbb         ecx,ecx
    neg         ecx
    inc         ecx
    mov         edi,ecx
    mov         dword ptr [rsp+label_20],ecx
    mov         eax,edi
    jmp         000000014000C187
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_50]
    mov         rsi,qword ptr [rsp+label_58]
    mov         rdi,qword ptr [rsp+label_60]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    ret
func_000000014000C1A0_end:
    call        0000000140015954
    call        0000000140015954
    call        0000000140015954
    call        0000000140015954
    call        0000000140015954
    nop
    call        0000000140015954
    nop
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r14
    sub         rsp,label_20
    mov         rdi,r9
    mov         r14,rcx
    xor         ebx,ebx
    cmp         dword ptr [r8],ebx
    jge         000000014000C1EB
    mov         rsi,rdx
    jmp         000000014000C1F2
    movsxd      rsi,dword ptr [r8+8]
    add         rsi,qword ptr [rdx]
    call        000000014000BDC0
    sub         eax,1
    je          000000014000C238
    cmp         eax,1
    jne         000000014000C268
    lea         rdx,[rdi+8]
    mov         rcx,qword ptr [r14+label_28]
    call        000000014000B6C0
    mov         r14,rax
    cmp         dword ptr [rdi+label_18],ebx
    je          000000014000C222
    call        000000014000B444
    movsxd      rbx,dword ptr [rdi+label_18]
    add         rbx,rax
    mov         r9d,1
    mov         r8,r14
    mov         rdx,rbx
    mov         rcx,rsi
    call        000000014000EB68
    jmp         000000014000C268
    lea         rdx,[rdi+8]
    mov         rcx,qword ptr [r14+label_28]
    call        000000014000B6C0
    mov         r14,rax
    cmp         dword ptr [rdi+label_18],ebx
    je          000000014000C259
    call        000000014000B444
    movsxd      rbx,dword ptr [rdi+label_18]
    add         rbx,rax
    mov         r8,r14
    mov         rdx,rbx
    mov         rcx,rsi
    call        000000014000EB5C
    nop
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    mov         rdi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         r14
    ret
func_000000014000C27D_end:
    call        0000000140015954
    nop
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r14
    sub         rsp,label_20
    mov         rdi,r9
    mov         r14,rcx
    xor         ebx,ebx
    cmp         dword ptr [r8+4],ebx
    jge         000000014000C2AC
    mov         rsi,rdx
    jmp         000000014000C2B3
    mov         esi,dword ptr [r8+label_0C]
    add         rsi,qword ptr [rdx]
    call        000000014000BFC0
    sub         eax,1
    je          000000014000C2F9
    cmp         eax,1
    jne         000000014000C329
    lea         rdx,[rdi+8]
    mov         rcx,qword ptr [r14+label_28]
    call        000000014000B6C0
    mov         r14,rax
    cmp         dword ptr [rdi+label_18],ebx
    je          000000014000C2E3
    call        000000014000B444
    movsxd      rbx,dword ptr [rdi+label_18]
    add         rbx,rax
    mov         r9d,1
    mov         r8,r14
    mov         rdx,rbx
    mov         rcx,rsi
    call        000000014000EB68
    jmp         000000014000C329
    lea         rdx,[rdi+8]
    mov         rcx,qword ptr [r14+label_28]
    call        000000014000B6C0
    mov         r14,rax
    cmp         dword ptr [rdi+label_18],ebx
    je          000000014000C31A
    call        000000014000B444
    movsxd      rbx,dword ptr [rdi+label_18]
    add         rbx,rax
    mov         r8,r14
    mov         rdx,rbx
    mov         rcx,rsi
    call        000000014000EB5C
    nop
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    mov         rdi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         r14
    ret
func_000000014000C33E_end:
    call        0000000140015954
    nop
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_18],r8
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_60
    mov         r13,qword ptr [rsp+label_00000000000000C0]
    mov         r15,r9
    mov         r12,rdx
    lea         r9,[rax+label_10]
    mov         rbp,rcx
    mov         r8,r13
    mov         rdx,r15
    mov         rcx,r12
    call        000000014000AC24
    mov         r9,qword ptr [rsp+label_00000000000000D0]
    mov         r14,rax
    mov         rsi,qword ptr [rsp+label_00000000000000C8]
    test        r9,r9
    je          000000014000C3AB
    mov         r8,rsi
    mov         rdx,rax
    mov         rcx,rbp
    call        000000014000C1C4
    mov         rcx,qword ptr [rsp+label_00000000000000D8]
    mov         ebx,dword ptr [rcx+8]
    mov         edi,dword ptr [rcx]
    call        000000014000B430
    movsxd      rcx,dword ptr [rsi+label_0C]
    mov         r9,r14
    mov         r8,qword ptr [rsp+label_00000000000000B0]
    add         rax,rcx
    mov         cl,byte ptr [rsp+label_00000000000000F8]
    mov         rdx,rbp
    mov         byte ptr [rsp+label_50],cl
    mov         rcx,r12
    mov         qword ptr [rsp+label_48],r15
    mov         qword ptr [rsp+label_40],rsi
    mov         dword ptr [rsp+label_38],ebx
    mov         dword ptr [rsp+label_30],edi
    mov         qword ptr [rsp+label_28],r13
    mov         qword ptr [rsp+label_20],rax
    call        000000014000AFB8
    mov         rbx,qword ptr [rsp+label_00000000000000A0]
    add         rsp,label_60
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014000C418_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_18],r8
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_60
    mov         r13,qword ptr [rsp+label_00000000000000C0]
    mov         r15,r9
    mov         r12,rdx
    lea         r9,[rax+label_10]
    mov         rbp,rcx
    mov         r8,r13
    mov         rdx,r15
    mov         rcx,r12
    call        000000014000ACF4
    mov         r9,qword ptr [rsp+label_00000000000000D0]
    mov         r14,rax
    mov         rsi,qword ptr [rsp+label_00000000000000C8]
    test        r9,r9
    je          000000014000C47F
    mov         r8,rsi
    mov         rdx,rax
    mov         rcx,rbp
    call        000000014000C284
    mov         rcx,qword ptr [rsp+label_00000000000000D8]
    mov         ebx,dword ptr [rcx+8]
    mov         edi,dword ptr [rcx]
    call        000000014000B430
    movsxd      rcx,dword ptr [rsi+label_10]
    mov         r9,r14
    mov         r8,qword ptr [rsp+label_00000000000000B0]
    add         rax,rcx
    mov         cl,byte ptr [rsp+label_00000000000000F8]
    mov         rdx,rbp
    mov         byte ptr [rsp+label_50],cl
    mov         rcx,r12
    mov         qword ptr [rsp+label_48],r15
    mov         qword ptr [rsp+label_40],rsi
    mov         dword ptr [rsp+label_38],ebx
    mov         dword ptr [rsp+label_30],edi
    mov         qword ptr [rsp+label_28],r13
    mov         qword ptr [rsp+label_20],rax
    call        000000014000B0BC
    mov         rbx,qword ptr [rsp+label_00000000000000A0]
    add         rsp,label_60
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014000C4EC_end:
    int         3
    int         3
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    lea         rbp,[rsp-label_28]
    sub         rsp,label_128
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_10],rax
    mov         rdi,qword ptr [rbp+label_0000000000000090]
    mov         r12,rdx
    mov         r13,qword ptr [rbp+label_00000000000000A8]
    mov         r15,r8
    mov         qword ptr [rsp+label_68],r8
    mov         rbx,rcx
    mov         qword ptr [rbp-label_80],rdx
    mov         r8,rdi
    mov         rcx,r12
    mov         qword ptr [rbp-label_68],r13
    mov         rdx,r9
    mov         byte ptr [rsp+label_60],0
    mov         rsi,r9
    call        000000014000E8B0
    mov         r14d,eax
    cmp         eax,label_0FFFFFFFF
    jl          000000014000C9B8
    cmp         eax,dword ptr [rdi+4]
    jge         000000014000C9B8
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014000C63B
    cmp         dword ptr [rbx+label_18],4
    jne         000000014000C63B
    mov         eax,dword ptr [rbx+label_20]
    sub         eax,label_19930520
    cmp         eax,2
    ja          000000014000C63B
    cmp         qword ptr [rbx+label_30],0
    jne         000000014000C63B
    call        000000014000BA24
    cmp         qword ptr [rax+label_20],0
    je          000000014000C951
    call        000000014000BA24
    mov         rbx,qword ptr [rax+label_20]
    call        000000014000BA24
    mov         rcx,qword ptr [rbx+label_38]
    mov         byte ptr [rsp+label_60],1
    mov         r15,qword ptr [rax+label_28]
    mov         qword ptr [rsp+label_68],r15
    call        000000014000B470
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014000C5F3
    cmp         dword ptr [rbx+label_18],4
    jne         000000014000C5F3
    mov         eax,dword ptr [rbx+label_20]
    sub         eax,label_19930520
    cmp         eax,2
    ja          000000014000C5F3
    cmp         qword ptr [rbx+label_30],0
    je          000000014000C9B8
    call        000000014000BA24
    cmp         qword ptr [rax+label_38],0
    je          000000014000C63B
    call        000000014000BA24
    mov         r15,qword ptr [rax+label_38]
    call        000000014000BA24
    mov         rdx,r15
    mov         rcx,rbx
    and         qword ptr [rax+label_38],0
    call        000000014000E948
    test        al,al
    jne         000000014000C636
    mov         rcx,r15
    call        000000014000EA38
    test        al,al
    je          000000014000C995
    jmp         000000014000C971
    mov         r15,qword ptr [rsp+label_68]
    mov         rax,qword ptr [rsi+8]
    mov         qword ptr [rbp-label_40],rax
    mov         qword ptr [rbp-label_48],rdi
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014000C908
    cmp         dword ptr [rbx+label_18],4
    jne         000000014000C908
    mov         eax,dword ptr [rbx+label_20]
    sub         eax,label_19930520
    cmp         eax,2
    ja          000000014000C908
    xor         r15d,r15d
    cmp         dword ptr [rdi+label_0C],r15d
    jbe         000000014000C839
    mov         eax,dword ptr [rbp+label_00000000000000A0]
    lea         rdx,[rbp-label_48]
    mov         dword ptr [rsp+label_28],eax
    lea         rcx,[rbp-label_28]
    mov         r9,rsi
    mov         qword ptr [rsp+label_20],rdi
    mov         r8d,r14d
    call        000000014000AD18
    movups      xmm1,xmmword ptr [rbp-label_28]
    movdqa      xmm0,xmm1
    psrldq      xmm0,8
    movd        eax,xmm0
    movdqu      xmmword ptr [rbp-label_38],xmm1
    cmp         eax,dword ptr [rbp-label_10]
    jae         000000014000C839
    mov         r12d,dword ptr [rbp-label_30]
    movq        r9,xmm1
    mov         qword ptr [rsp+label_78],r9
    mov         rax,qword ptr [rbp-label_38]
    mov         rax,qword ptr [rax]
    movsxd      rdx,dword ptr [rax+label_10]
    mov         eax,r12d
    lea         rcx,[rax+rax*4]
    mov         rax,qword ptr [r9+8]
    lea         r8,[rdx+rcx*4]
    movups      xmm0,xmmword ptr [r8+rax]
    movsxd      rcx,dword ptr [r8+rax+label_10]
    mov         dword ptr [rbp-label_50],ecx
    movd        eax,xmm0
    movups      xmmword ptr [rbp-label_60],xmm0
    cmp         eax,r14d
    jg          000000014000C828
    movq        rax,xmm0
    shr         rax,label_20
    cmp         r14d,eax
    jg          000000014000C828
    add         rcx,qword ptr [rsi+8]
    psrldq      xmm0,8
    movq        r13,xmm0
    mov         qword ptr [rbp-label_70],rcx
    shr         r13,label_20
    test        r13d,r13d
    je          000000014000C825
    mov         eax,r15d
    lea         rax,[rax+rax*4]
    movups      xmm0,xmmword ptr [rcx+rax*4]
    movups      xmmword ptr [rbp-8],xmm0
    mov         eax,dword ptr [rcx+rax*4+label_10]
    mov         dword ptr [rbp+8],eax
    call        000000014000B444
    mov         rcx,qword ptr [rbx+label_30]
    add         rax,4
    movsxd      rdx,dword ptr [rcx+label_0C]
    add         rax,rdx
    mov         qword ptr [rsp+label_70],rax
    call        000000014000B444
    mov         rcx,qword ptr [rbx+label_30]
    movsxd      rdx,dword ptr [rcx+label_0C]
    mov         ecx,dword ptr [rax+rdx]
    mov         dword ptr [rsp+label_64],ecx
    test        ecx,ecx
    jle         000000014000C7B6
    call        000000014000B444
    mov         rcx,qword ptr [rsp+label_70]
    mov         r8,qword ptr [rbx+label_30]
    movsxd      rcx,dword ptr [rcx]
    add         rax,rcx
    lea         rcx,[rbp-8]
    mov         rdx,rax
    mov         qword ptr [rbp-label_78],rax
    call        000000014000D428
    test        eax,eax
    jne         000000014000C7C7
    mov         eax,dword ptr [rsp+label_64]
    add         qword ptr [rsp+label_70],4
    dec         eax
    mov         dword ptr [rsp+label_64],eax
    test        eax,eax
    jg          000000014000C77A
    inc         r15d
    cmp         r15d,r13d
    je          000000014000C820
    mov         rcx,qword ptr [rbp-label_70]
    jmp         000000014000C733
    mov         al,byte ptr [rbp+label_0000000000000098]
    mov         r9,rsi
    mov         r8,qword ptr [rsp+label_68]
    mov         rcx,rbx
    mov         rdx,qword ptr [rbp-label_80]
    mov         byte ptr [rsp+label_58],al
    mov         al,byte ptr [rsp+label_60]
    mov         byte ptr [rsp+label_50],al
    mov         rax,qword ptr [rbp-label_68]
    mov         qword ptr [rsp+label_48],rax
    mov         eax,dword ptr [rbp+label_00000000000000A0]
    mov         dword ptr [rsp+label_40],eax
    lea         rax,[rbp-label_60]
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rbp-label_78]
    mov         qword ptr [rsp+label_30],rax
    lea         rax,[rbp-8]
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_20],rdi
    call        000000014000C348
    mov         r9,qword ptr [rsp+label_78]
    xor         r15d,r15d
    inc         r12d
    cmp         r12d,dword ptr [rbp-label_10]
    jb          000000014000C6CA
    mov         r12,qword ptr [rbp-label_80]
    mov         eax,dword ptr [rdi]
    and         eax,label_1FFFFFFF
    cmp         eax,label_19930521
    jb          000000014000C945
    cmp         dword ptr [rdi+label_20],r15d
    je          000000014000C85F
    call        000000014000B430
    movsxd      rcx,dword ptr [rdi+label_20]
    add         rax,rcx
    jne         000000014000C880
    mov         eax,dword ptr [rdi+label_24]
    shr         eax,2
    test        al,1
    je          000000014000C945
    mov         rdx,rdi
    mov         rcx,rsi
    call        000000014000AB58
    test        al,al
    jne         000000014000C945
    mov         eax,dword ptr [rdi+label_24]
    shr         eax,2
    test        al,1
    jne         000000014000C99B
    cmp         dword ptr [rdi+label_20],r15d
    je          000000014000C8A5
    call        000000014000B430
    mov         rdx,rax
    movsxd      rax,dword ptr [rdi+label_20]
    add         rdx,rax
    jmp         000000014000C8A8
    mov         rdx,r15
    mov         rcx,rbx
    call        000000014000E948
    test        al,al
    jne         000000014000C945
    lea         r9,[rbp-label_78]
    mov         r8,rdi
    mov         rdx,rsi
    mov         rcx,r12
    call        000000014000AC24
    mov         cl,byte ptr [rbp+label_0000000000000098]
    mov         r9,rax
    mov         r8,qword ptr [rsp+label_68]
    mov         rdx,rbx
    mov         byte ptr [rsp+label_50],cl
    or          ecx,label_0FFFFFFFF
    mov         qword ptr [rsp+label_48],rsi
    mov         qword ptr [rsp+label_40],r15
    mov         dword ptr [rsp+label_38],ecx
    mov         dword ptr [rsp+label_30],ecx
    mov         rcx,r12
    mov         qword ptr [rsp+label_28],rdi
    mov         qword ptr [rsp+label_20],r15
    call        000000014000AFB8
    jmp         000000014000C945
    cmp         dword ptr [rdi+label_0C],0
    jbe         000000014000C945
    cmp         byte ptr [rbp+label_0000000000000098],0
    jne         000000014000C9B8
    mov         eax,dword ptr [rbp+label_00000000000000A0]
    mov         r9,rsi
    mov         qword ptr [rsp+label_38],r13
    mov         r8,r15
    mov         dword ptr [rsp+label_30],eax
    mov         rdx,r12
    mov         dword ptr [rsp+label_28],r14d
    mov         rcx,rbx
    mov         qword ptr [rsp+label_20],rdi
    call        000000014000CEC4
    call        000000014000BA24
    cmp         qword ptr [rax+label_38],0
    jne         000000014000C9B8
    mov         rcx,qword ptr [rbp+label_10]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_128
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_000000014000C970_end:
    mov         dl,1
    mov         rcx,rbx
    call        000000014000B61C
    lea         rcx,[rbp-label_60]
    call        000000014000DD78
    lea         rdx,[label_000000014003B2B8]
    lea         rcx,[rbp-label_60]
    call        000000014000A870
    int         3
    call        0000000140018C50
    int         3
    call        000000014000BA24
    mov         qword ptr [rax+label_20],rbx
    call        000000014000BA24
    mov         rcx,qword ptr [rsp+label_68]
    mov         qword ptr [rax+label_28],rcx
    call        0000000140018C50
    int         3
    call        0000000140015954
    int         3
    int         3
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    lea         rbp,[rsp+label_FFFFFFFFFFFFFF78]
    sub         rsp,label_188
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_70],rax
    mov         r14,qword ptr [rbp+label_00000000000000F0]
    mov         r15,rdx
    mov         r12,qword ptr [rbp+label_0000000000000108]
    mov         rbx,rcx
    mov         qword ptr [rsp+label_78],rdx
    mov         rcx,r14
    mov         rdx,r9
    mov         qword ptr [rbp-label_60],r12
    mov         rsi,r9
    mov         byte ptr [rsp+label_60],0
    mov         r13,r8
    call        000000014000BC60
    cmp         dword ptr [rsi+label_48],0
    mov         edi,eax
    je          000000014000CA3C
    call        000000014000BA24
    cmp         dword ptr [rax+label_78],label_0FFFFFFFE
    jne         000000014000CEBB
    mov         edi,dword ptr [rsi+label_48]
    sub         edi,2
    jmp         000000014000CA5B
    call        000000014000BA24
    cmp         dword ptr [rax+label_78],label_0FFFFFFFE
    je          000000014000CA5B
    call        000000014000BA24
    mov         edi,dword ptr [rax+label_78]
    call        000000014000BA24
    mov         dword ptr [rax+label_78],label_0FFFFFFFE
    cmp         edi,label_0FFFFFFFF
    jl          000000014000CEBB
    cmp         dword ptr [r14+8],0
    lea         r8,[label_0000000140000000]
    je          000000014000CA9B
    movsxd      rdx,dword ptr [r14+8]
    add         rdx,qword ptr [rsi+8]
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r8+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r8+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    jmp         000000014000CA9D
    xor         eax,eax
    cmp         edi,eax
    jge         000000014000CEBB
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014000CB75
    cmp         dword ptr [rbx+label_18],4
    jne         000000014000CB75
    mov         eax,dword ptr [rbx+label_20]
    sub         eax,label_19930520
    cmp         eax,2
    ja          000000014000CB75
    cmp         qword ptr [rbx+label_30],0
    jne         000000014000CB75
    call        000000014000BA24
    cmp         qword ptr [rax+label_20],0
    je          000000014000CE59
    call        000000014000BA24
    mov         rbx,qword ptr [rax+label_20]
    call        000000014000BA24
    mov         rcx,qword ptr [rbx+label_38]
    mov         byte ptr [rsp+label_60],1
    mov         r13,qword ptr [rax+label_28]
    call        000000014000B470
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014000CB2D
    cmp         dword ptr [rbx+label_18],4
    jne         000000014000CB2D
    mov         eax,dword ptr [rbx+label_20]
    sub         eax,label_19930520
    cmp         eax,2
    ja          000000014000CB2D
    cmp         qword ptr [rbx+label_30],0
    je          000000014000CEBB
    call        000000014000BA24
    cmp         qword ptr [rax+label_38],0
    je          000000014000CB75
    call        000000014000BA24
    mov         r15,qword ptr [rax+label_38]
    call        000000014000BA24
    mov         rdx,r15
    mov         rcx,rbx
    and         qword ptr [rax+label_38],0
    call        000000014000E948
    test        al,al
    jne         000000014000CB70
    mov         rcx,r15
    call        000000014000EA38
    test        al,al
    je          000000014000CE9D
    jmp         000000014000CE79
    mov         r15,qword ptr [rsp+label_78]
    mov         r8,qword ptr [rsi+8]
    lea         rcx,[rbp-label_10]
    mov         rdx,r14
    call        000000014000DC58
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014000CE11
    cmp         dword ptr [rbx+label_18],4
    jne         000000014000CE11
    mov         eax,dword ptr [rbx+label_20]
    sub         eax,label_19930520
    cmp         eax,2
    ja          000000014000CE11
    cmp         dword ptr [rbp-label_10],0
    jbe         000000014000CDF6
    mov         eax,dword ptr [rbp+label_0000000000000100]
    lea         rdx,[rbp-label_10]
    mov         dword ptr [rsp+label_28],eax
    lea         rcx,[rbp-label_58]
    mov         r9,rsi
    mov         qword ptr [rsp+label_20],r14
    mov         r8d,edi
    call        000000014000AE4C
    movups      xmm1,xmmword ptr [rbp-label_58]
    movdqa      xmm0,xmm1
    psrldq      xmm0,8
    movd        eax,xmm0
    movdqu      xmmword ptr [rbp-label_78],xmm1
    cmp         eax,dword ptr [rbp-label_40]
    jae         000000014000CDF6
    mov         eax,dword ptr [rbp-label_70]
    movq        r15,xmm1
    mov         qword ptr [rbp-label_80],r15
    mov         dword ptr [rsp+label_68],eax
    movups      xmm0,xmmword ptr [r15+label_18]
    movq        rax,xmm0
    movups      xmmword ptr [rbp-label_78],xmm0
    cmp         eax,edi
    jg          000000014000CD51
    shr         rax,label_20
    cmp         edi,eax
    jg          000000014000CD51
    mov         r9,qword ptr [rsi+label_10]
    lea         rdx,[rbp-label_78]
    mov         r8,qword ptr [rsi+8]
    lea         rcx,[rbp+label_20]
    mov         r9d,dword ptr [r9]
    call        000000014000DBD4
    mov         eax,dword ptr [rbp+label_20]
    xor         r12d,r12d
    mov         dword ptr [rsp+label_64],r12d
    mov         dword ptr [rsp+label_6C],eax
    test        eax,eax
    je          000000014000CD51
    movups      xmm0,xmmword ptr [rbp+label_38]
    movups      xmm1,xmmword ptr [rbp+label_48]
    movups      xmmword ptr [rbp-label_38],xmm0
    movsd       xmm0,mmword ptr [rbp+label_58]
    movsd       mmword ptr [rbp-label_18],xmm0
    movups      xmmword ptr [rbp-label_28],xmm1
    call        000000014000B444
    mov         rcx,qword ptr [rbx+label_30]
    add         rax,4
    movsxd      rdx,dword ptr [rcx+label_0C]
    add         rax,rdx
    mov         qword ptr [rsp+label_70],rax
    call        000000014000B444
    mov         rcx,qword ptr [rbx+label_30]
    movsxd      rdx,dword ptr [rcx+label_0C]
    mov         r15d,dword ptr [rax+rdx]
    test        r15d,r15d
    jle         000000014000CCDB
    call        000000014000B444
    mov         r8,qword ptr [rbx+label_30]
    mov         r12,rax
    mov         rax,qword ptr [rsp+label_70]
    movsxd      rcx,dword ptr [rax]
    add         r12,rcx
    lea         rcx,[rbp-label_38]
    mov         rdx,r12
    call        000000014000D568
    test        eax,eax
    jne         000000014000CCF9
    add         qword ptr [rsp+label_70],4
    dec         r15d
    test        r15d,r15d
    jg          000000014000CCA1
    mov         r12d,dword ptr [rsp+label_64]
    lea         rcx,[rbp+label_20]
    call        000000014000E1D4
    inc         r12d
    mov         dword ptr [rsp+label_64],r12d
    cmp         r12d,dword ptr [rsp+label_6C]
    jne         000000014000CC58
    jmp         000000014000CD4D
    mov         al,byte ptr [rbp+label_00000000000000F8]
    mov         r9,rsi
    mov         rdx,qword ptr [rsp+label_78]
    mov         r8,r13
    mov         byte ptr [rsp+label_58],al
    mov         rcx,rbx
    mov         al,byte ptr [rsp+label_60]
    mov         byte ptr [rsp+label_50],al
    mov         rax,qword ptr [rbp-label_60]
    mov         qword ptr [rsp+label_48],rax
    mov         eax,dword ptr [rbp+label_0000000000000100]
    mov         dword ptr [rsp+label_40],eax
    lea         rax,[rbp-label_78]
    mov         qword ptr [rsp+label_38],rax
    lea         rax,[rbp-label_38]
    mov         qword ptr [rsp+label_30],r12
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_20],r14
    call        000000014000C41C
    mov         r15,qword ptr [rbp-label_80]
    mov         r8,qword ptr [r15+8]
    lea         rdx,[label_0000000140000000]
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+rdx+label_000000000002DA40]
    mov         cl,byte ptr [rcx+rdx+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    shr         eax,cl
    mov         qword ptr [r15+8],r8
    mov         dword ptr [r15+label_18],eax
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+rdx+label_000000000002DA40]
    mov         cl,byte ptr [rcx+rdx+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    shr         eax,cl
    mov         qword ptr [r15+8],r8
    mov         dword ptr [r15+label_1C],eax
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+rdx+label_000000000002DA40]
    mov         cl,byte ptr [rcx+rdx+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    shr         eax,cl
    mov         ecx,dword ptr [rsp+label_68]
    mov         dword ptr [r15+label_20],eax
    inc         ecx
    mov         qword ptr [r15+8],r8
    lea         rax,[r8+4]
    mov         edx,dword ptr [r8]
    mov         qword ptr [r15+8],rax
    mov         dword ptr [r15+label_24],edx
    mov         dword ptr [rsp+label_68],ecx
    cmp         ecx,dword ptr [rbp-label_40]
    jb          000000014000CC07
    test        byte ptr [r14],label_40
    je          000000014000CE4D
    mov         rdx,r14
    mov         rcx,rsi
    call        000000014000AB84
    test        al,al
    je          000000014000CEA3
    jmp         000000014000CE4D
    cmp         dword ptr [rbp-label_10],0
    jbe         000000014000CE4D
    cmp         byte ptr [rbp+label_00000000000000F8],0
    jne         000000014000CEBB
    mov         eax,dword ptr [rbp+label_0000000000000100]
    mov         r9,rsi
    mov         qword ptr [rsp+label_38],r12
    mov         r8,r13
    mov         dword ptr [rsp+label_30],eax
    mov         rdx,r15
    mov         dword ptr [rsp+label_28],edi
    mov         rcx,rbx
    mov         qword ptr [rsp+label_20],r14
    call        000000014000D134
    call        000000014000BA24
    cmp         qword ptr [rax+label_38],0
    jne         000000014000CEBB
    mov         rcx,qword ptr [rbp+label_70]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_188
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_000000014000CE78_end:
    mov         dl,1
    mov         rcx,rbx
    call        000000014000B61C
    lea         rcx,[rbp-label_78]
    call        000000014000DD78
    lea         rdx,[label_000000014003B2B8]
    lea         rcx,[rbp-label_78]
    call        000000014000A870
    int         3
    call        0000000140018C50
    int         3
    call        000000014000BA24
    mov         qword ptr [rax+label_20],rbx
    call        000000014000BA24
    mov         qword ptr [rax+label_28],r13
    call        0000000140018C50
    int         3
    call        0000000140015954
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_20],rbx
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+label_10],rdx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_0C0
    cmp         dword ptr [rcx],label_80000003
    mov         rbp,r9
    mov         r12,r8
    mov         r14,rdx
    mov         rsi,rcx
    je          000000014000D110
    call        000000014000BA24
    mov         r13d,dword ptr [rsp+label_0000000000000130]
    mov         r15d,dword ptr [rsp+label_0000000000000128]
    mov         rdi,qword ptr [rsp+label_0000000000000120]
    cmp         qword ptr [rax+label_10],0
    je          000000014000CF7C
    xor         ecx,ecx
    call label_000000014002C020
    mov         rbx,rax
    call        000000014000BA24
    cmp         qword ptr [rax+label_10],rbx
    je          000000014000CF7C
    cmp         dword ptr [rsi],label_0E0434F4D
    je          000000014000CF7C
    cmp         dword ptr [rsi],label_0E0434352
    je          000000014000CF7C
    mov         rax,qword ptr [rsp+label_0000000000000138]
    mov         r9,rbp
    mov         dword ptr [rsp+label_38],r15d
    mov         r8,r12
    mov         qword ptr [rsp+label_30],rax
    mov         rdx,r14
    mov         dword ptr [rsp+label_28],r13d
    mov         rcx,rsi
    mov         qword ptr [rsp+label_20],rdi
    call        000000014000A918
    test        eax,eax
    jne         000000014000D110
    mov         rax,qword ptr [rbp+8]
    mov         qword ptr [rsp+label_68],rax
    mov         qword ptr [rsp+label_60],rdi
    cmp         dword ptr [rdi+label_0C],0
    jbe         000000014000D12B
    mov         dword ptr [rsp+label_28],r13d
    lea         rdx,[rsp+label_60]
    mov         r9,rbp
    mov         qword ptr [rsp+label_20],rdi
    mov         r8d,r15d
    lea         rcx,[rsp+label_0000000000000098]
    call        000000014000AD18
    movups      xmm1,xmmword ptr [rsp+label_0000000000000098]
    movdqa      xmm0,xmm1
    psrldq      xmm0,8
    movd        eax,xmm0
    movdqu      xmmword ptr [rsp+label_70],xmm1
    cmp         eax,dword ptr [rsp+label_00000000000000B0]
    jae         000000014000D110
    mov         r14d,dword ptr [rsp+label_78]
    movq        r9,xmm1
    mov         qword ptr [rsp+label_0000000000000100],r9
    mov         rax,qword ptr [rsp+label_70]
    mov         rax,qword ptr [rax]
    movsxd      rdx,dword ptr [rax+label_10]
    mov         eax,r14d
    lea         rcx,[rax+rax*4]
    mov         rax,qword ptr [r9+8]
    lea         r8,[rdx+rcx*4]
    movups      xmm0,xmmword ptr [r8+rax]
    movsxd      rdx,dword ptr [r8+rax+label_10]
    mov         dword ptr [rsp+label_0000000000000090],edx
    movd        eax,xmm0
    movups      xmmword ptr [rsp+label_0000000000000080],xmm0
    cmp         eax,r15d
    jg          000000014000D0EF
    movq        rax,xmm0
    shr         rax,label_20
    cmp         r15d,eax
    jg          000000014000D0EF
    mov         rbx,qword ptr [rbp+8]
    add         rbx,label_0FFFFFFFFFFFFFFEC
    psrldq      xmm0,8
    movq        rax,xmm0
    shr         rax,label_20
    lea         rcx,[rax+rax*4]
    lea         rdx,[rdx+rcx*4]
    add         rbx,rdx
    cmp         dword ptr [rbx+4],0
    je          000000014000D09B
    movsxd      r12,dword ptr [rbx+4]
    call        000000014000B430
    add         rax,r12
    je          000000014000D093
    test        r12d,r12d
    je          000000014000D08B
    call        000000014000B430
    movsxd      rcx,dword ptr [rbx+4]
    add         rax,rcx
    jmp         000000014000D08D
    xor         eax,eax
    cmp         byte ptr [rax+label_10],0
    jne         000000014000D0EF
    mov         r12,qword ptr [rsp+label_0000000000000110]
    test        byte ptr [rbx],label_40
    jne         000000014000D0EF
    mov         rax,qword ptr [rsp+label_0000000000000138]
    mov         r9,rbp
    mov         rdx,qword ptr [rsp+label_0000000000000108]
    mov         r8,r12
    mov         byte ptr [rsp+label_58],0
    mov         rcx,rsi
    mov         byte ptr [rsp+label_50],1
    mov         qword ptr [rsp+label_48],rax
    lea         rax,[rsp+label_0000000000000080]
    mov         dword ptr [rsp+label_40],r13d
    mov         qword ptr [rsp+label_38],rax
    and         qword ptr [rsp+label_30],0
    mov         qword ptr [rsp+label_28],rbx
    mov         qword ptr [rsp+label_20],rdi
    call        000000014000C348
    mov         r12,qword ptr [rsp+label_0000000000000110]
    inc         r14d
    mov         r9,qword ptr [rsp+label_0000000000000100]
    cmp         r14d,dword ptr [rsp+label_00000000000000B0]
    jb          000000014000CFF0
    mov         rbx,qword ptr [rsp+label_0000000000000118]
    add         rsp,label_0C0
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014000D12A_end:
    call        0000000140015954
    int         3
    int         3
    int         3
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    lea         rbp,[rsp-label_38]
    sub         rsp,label_138
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_28],rax
    cmp         dword ptr [rcx],label_80000003
    mov         rdi,r9
    mov         rax,qword ptr [rbp+label_00000000000000B8]
    mov         r13,rdx
    mov         r14,qword ptr [rbp+label_00000000000000A0]
    mov         rsi,rcx
    mov         qword ptr [rsp+label_70],rax
    mov         qword ptr [rsp+label_78],r8
    je          000000014000D402
    call        000000014000BA24
    mov         r12d,dword ptr [rbp+label_00000000000000B0]
    mov         r15d,dword ptr [rbp+label_00000000000000A8]
    cmp         qword ptr [rax+label_10],0
    je          000000014000D1FC
    xor         ecx,ecx
    call label_000000014002C020
    mov         rbx,rax
    call        000000014000BA24
    cmp         qword ptr [rax+label_10],rbx
    je          000000014000D1FC
    cmp         dword ptr [rsi],label_0E0434F4D
    je          000000014000D1FC
    cmp         dword ptr [rsi],label_0E0434352
    je          000000014000D1FC
    mov         rax,qword ptr [rsp+label_70]
    mov         r9,rdi
    mov         r8,qword ptr [rsp+label_78]
    mov         rdx,r13
    mov         dword ptr [rsp+label_38],r15d
    mov         rcx,rsi
    mov         qword ptr [rsp+label_30],rax
    mov         dword ptr [rsp+label_28],r12d
    mov         qword ptr [rsp+label_20],r14
    call        000000014000A96C
    test        eax,eax
    jne         000000014000D402
    mov         r8,qword ptr [rdi+8]
    lea         rcx,[rbp]
    mov         rdx,r14
    call        000000014000DC58
    cmp         dword ptr [rbp],0
    jbe         000000014000D422
    mov         dword ptr [rsp+label_28],r12d
    lea         rdx,[rbp]
    mov         r9,rdi
    mov         qword ptr [rsp+label_20],r14
    mov         r8d,r15d
    lea         rcx,[rbp-label_70]
    call        000000014000AE4C
    movups      xmm1,xmmword ptr [rbp-label_70]
    movdqa      xmm0,xmm1
    psrldq      xmm0,8
    movd        eax,xmm0
    movdqu      xmmword ptr [rbp-label_80],xmm1
    cmp         eax,dword ptr [rbp-label_58]
    jae         000000014000D402
    mov         eax,dword ptr [rbp-label_78]
    lea         r9,[label_0000000140000000]
    movq        r8,xmm1
    mov         dword ptr [rsp+label_60],eax
    mov         qword ptr [rsp+label_68],r8
    movups      xmm0,xmmword ptr [r8+label_18]
    movq        rax,xmm0
    movups      xmmword ptr [rbp-label_80],xmm0
    cmp         eax,r15d
    jg          000000014000D368
    shr         rax,label_20
    cmp         r15d,eax
    jg          000000014000D368
    mov         r9,qword ptr [rdi+label_10]
    lea         rdx,[rbp-label_80]
    mov         r8,qword ptr [rdi+8]
    lea         rcx,[rbp-label_50]
    mov         r9d,dword ptr [r9]
    call        000000014000DBD4
    mov         rax,qword ptr [rbp-label_40]
    lea         rcx,[rbp-label_50]
    mov         qword ptr [rbp-label_48],rax
    call        000000014000E1D4
    mov         rax,qword ptr [rbp-label_40]
    lea         rcx,[rbp-label_50]
    mov         ebx,dword ptr [rbp-label_50]
    mov         qword ptr [rbp-label_48],rax
    call        000000014000E1D4
    sub         ebx,1
    je          000000014000D2DF
    lea         rcx,[rbp-label_50]
    call        000000014000E1D4
    sub         rbx,1
    jne         000000014000D2D0
    cmp         dword ptr [rbp-label_30],0
    je          000000014000D30D
    call        000000014000B430
    movsxd      rdx,dword ptr [rbp-label_30]
    add         rax,rdx
    je          000000014000D30D
    test        edx,edx
    je          000000014000D305
    call        000000014000B430
    movsxd      rcx,dword ptr [rbp-label_30]
    add         rax,rcx
    jmp         000000014000D307
    xor         eax,eax
    cmp         byte ptr [rax+label_10],0
    jne         000000014000D35C
    test        byte ptr [rbp-label_34],label_40
    jne         000000014000D35C
    mov         rax,qword ptr [rsp+label_70]
    mov         r9,rdi
    mov         r8,qword ptr [rsp+label_78]
    mov         rdx,r13
    mov         byte ptr [rsp+label_58],0
    mov         rcx,rsi
    mov         byte ptr [rsp+label_50],1
    mov         qword ptr [rsp+label_48],rax
    lea         rax,[rbp-label_80]
    mov         dword ptr [rsp+label_40],r12d
    mov         qword ptr [rsp+label_38],rax
    lea         rax,[rbp-label_38]
    and         qword ptr [rsp+label_30],0
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_20],r14
    call        000000014000C41C
    mov         r8,qword ptr [rsp+label_68]
    lea         r9,[label_0000000140000000]
    mov         rdx,qword ptr [r8+8]
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r9+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r9+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         qword ptr [r8+8],rdx
    mov         dword ptr [r8+label_18],eax
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r9+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r9+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         qword ptr [r8+8],rdx
    mov         dword ptr [r8+label_1C],eax
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r9+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r9+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         dword ptr [r8+label_20],eax
    lea         rax,[rdx+4]
    mov         qword ptr [r8+8],rdx
    mov         ecx,dword ptr [rdx]
    mov         dword ptr [r8+label_24],ecx
    mov         ecx,dword ptr [rsp+label_60]
    inc         ecx
    mov         qword ptr [r8+8],rax
    mov         dword ptr [rsp+label_60],ecx
    cmp         ecx,dword ptr [rbp-label_58]
    jb          000000014000D26A
    mov         rcx,qword ptr [rbp+label_28]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_138
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_000000014000D421_end:
    call        0000000140015954
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    xor         ebx,ebx
    mov         r14,r8
    mov         rbp,rdx
    mov         rdi,rcx
    cmp         dword ptr [rcx+4],ebx
    je          000000014000D545
    movsxd      rsi,dword ptr [rcx+4]
    call        000000014000B430
    mov         r9,rax
    add         r9,rsi
    je          000000014000D545
    test        esi,esi
    je          000000014000D47D
    movsxd      rsi,dword ptr [rdi+4]
    call        000000014000B430
    lea         rcx,[rsi+rax]
    jmp         000000014000D482
    mov         rcx,rbx
    mov         esi,ebx
    cmp         byte ptr [rcx+label_10],bl
    je          000000014000D545
    test        byte ptr [rdi],label_80
    je          000000014000D49A
    test        byte ptr [rbp],label_10
    jne         000000014000D545
    test        esi,esi
    je          000000014000D4AF
    call        000000014000B430
    mov         rsi,rax
    movsxd      rax,dword ptr [rdi+4]
    add         rsi,rax
    jmp         000000014000D4B2
    mov         rsi,rbx
    call        000000014000B444
    mov         rcx,rax
    movsxd      rax,dword ptr [rbp+4]
    add         rcx,rax
    cmp         rsi,rcx
    je          000000014000D511
    cmp         dword ptr [rdi+4],ebx
    je          000000014000D4DC
    call        000000014000B430
    mov         rsi,rax
    movsxd      rax,dword ptr [rdi+4]
    add         rsi,rax
    jmp         000000014000D4DF
    mov         rsi,rbx
    call        000000014000B444
    movsxd      r8,dword ptr [rbp+4]
    add         r8,label_10
    add         r8,rax
    lea         rax,[rsi+label_10]
    sub         r8,rax
    movzx       ecx,byte ptr [rax]
    movzx       edx,byte ptr [rax+r8]
    sub         ecx,edx
    jne         000000014000D509
    inc         rax
    test        edx,edx
    jne         000000014000D4F6
    test        ecx,ecx
    je          000000014000D511
    xor         eax,eax
    jmp         000000014000D54A
    mov         al,2
    test        byte ptr [rbp],al
    je          000000014000D51D
    test        byte ptr [rdi],8
    je          000000014000D541
    test        byte ptr [r14],1
    je          000000014000D528
    test        byte ptr [rdi],1
    je          000000014000D541
    test        byte ptr [r14],4
    je          000000014000D533
    test        byte ptr [rdi],4
    je          000000014000D541
    test        byte ptr [r14],al
    je          000000014000D53C
    test        byte ptr [rdi],al
    je          000000014000D541
    mov         ebx,1
    mov         eax,ebx
    jmp         000000014000D54A
    mov         eax,1
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_000000014000D564_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_20
    xor         ebx,ebx
    mov         r15,r8
    mov         r14,rdx
    mov         rdi,rcx
    cmp         dword ptr [rcx+8],ebx
    je          000000014000D695
    movsxd      rsi,dword ptr [rcx+8]
    call        000000014000B430
    mov         r8,rax
    add         r8,rsi
    je          000000014000D695
    test        esi,esi
    je          000000014000D5BC
    movsxd      rbp,dword ptr [rdi+8]
    call        000000014000B430
    lea         rcx,[rax+rbp]
    jmp         000000014000D5C1
    mov         rcx,rbx
    mov         ebp,ebx
    cmp         byte ptr [rcx+label_10],bl
    je          000000014000D695
    lea         rsi,[rdi+4]
    test        byte ptr [rsi],label_80
    je          000000014000D5DD
    test        byte ptr [r14],label_10
    jne         000000014000D695
    test        ebp,ebp
    je          000000014000D5F2
    call        000000014000B430
    mov         rbp,rax
    movsxd      rax,dword ptr [rdi+8]
    add         rbp,rax
    jmp         000000014000D5F5
    mov         rbp,rbx
    call        000000014000B444
    mov         rcx,rax
    movsxd      rax,dword ptr [r14+4]
    add         rcx,rax
    cmp         rbp,rcx
    je          000000014000D658
    cmp         dword ptr [rdi+8],ebx
    je          000000014000D61F
    call        000000014000B430
    mov         rsi,rax
    movsxd      rax,dword ptr [rdi+8]
    add         rsi,rax
    jmp         000000014000D622
    mov         rsi,rbx
    call        000000014000B444
    movsxd      r8,dword ptr [r14+4]
    add         r8,label_10
    add         r8,rax
    lea         rax,[rsi+label_10]
    sub         r8,rax
    movzx       ecx,byte ptr [rax]
    movzx       edx,byte ptr [rax+r8]
    sub         ecx,edx
    jne         000000014000D64C
    inc         rax
    test        edx,edx
    jne         000000014000D639
    test        ecx,ecx
    je          000000014000D654
    xor         eax,eax
    jmp         000000014000D69A
    lea         rsi,[rdi+4]
    mov         al,2
    test        byte ptr [r14],al
    je          000000014000D66A
    test        byte ptr [rsi],8
    je          000000014000D691
    add         rdi,4
    jmp         000000014000D66D
    mov         rdi,rsi
    test        byte ptr [r15],1
    je          000000014000D678
    test        byte ptr [rsi],1
    je          000000014000D691
    test        byte ptr [r15],4
    je          000000014000D683
    test        byte ptr [rsi],4
    je          000000014000D691
    test        byte ptr [r15],al
    je          000000014000D68C
    test        byte ptr [rdi],al
    je          000000014000D691
    mov         ebx,1
    mov         eax,ebx
    jmp         000000014000D69A
    mov         eax,1
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         rdi
    ret
func_000000014000D6B2_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_50
    mov         rdi,rcx
    mov         rsi,r9
    mov         rcx,r8
    mov         r14,r8
    mov         rbp,rdx
    call        000000014000ED64
    call        000000014000BA24
    mov         rbx,qword ptr [rsp+label_0000000000000080]
    mov         ecx,label_80000029
    mov         edx,label_80000026
    cmp         dword ptr [rax+label_40],0
    jne         000000014000D736
    cmp         dword ptr [rdi],label_0E06D7363
    je          000000014000D736
    cmp         dword ptr [rdi],ecx
    jne         000000014000D71A
    cmp         dword ptr [rdi+label_18],label_0F
    jne         000000014000D71E
    cmp         qword ptr [rdi+label_60],label_19930520
    je          000000014000D736
    cmp         dword ptr [rdi],edx
    je          000000014000D736
    mov         eax,dword ptr [rbx]
    and         eax,label_1FFFFFFF
    cmp         eax,label_19930522
    jb          000000014000D736
    test        byte ptr [rbx+label_24],1
    jne         000000014000D8C5
    test        byte ptr [rdi+4],label_66
    je          000000014000D7CE
    cmp         dword ptr [rbx+4],0
    je          000000014000D8C5
    cmp         dword ptr [rsp+label_0000000000000088],0
    jne         000000014000D8C5
    test        byte ptr [rdi+4],label_20
    je          000000014000D7BB
    cmp         dword ptr [rdi],edx
    jne         000000014000D799
    mov         r8,qword ptr [rsi+label_20]
    mov         rdx,rsi
    mov         rcx,rbx
    call        000000014000BC68
    cmp         eax,label_0FFFFFFFF
    jl          000000014000D8E5
    cmp         eax,dword ptr [rbx+4]
    jge         000000014000D8E5
    mov         r9d,eax
    mov         rcx,rbp
    mov         rdx,rsi
    mov         r8,rbx
    call        000000014000E41C
    jmp         000000014000D8C5
    cmp         dword ptr [rdi],ecx
    jne         000000014000D7BB
    mov         r9d,dword ptr [rdi+label_38]
    cmp         r9d,label_0FFFFFFFF
    jl          000000014000D8E5
    cmp         r9d,dword ptr [rbx+4]
    jge         000000014000D8E5
    mov         rcx,qword ptr [rdi+label_28]
    jmp         000000014000D789
    mov         r8,rbx
    mov         rdx,rsi
    mov         rcx,rbp
    call        000000014000AB8C
    jmp         000000014000D8C5
    cmp         dword ptr [rbx+label_0C],0
    jne         000000014000D816
    mov         eax,dword ptr [rbx]
    and         eax,label_1FFFFFFF
    cmp         eax,label_19930521
    jb          000000014000D7F6
    cmp         dword ptr [rbx+label_20],0
    je          000000014000D7F6
    call        000000014000B430
    movsxd      rcx,dword ptr [rbx+label_20]
    add         rax,rcx
    jne         000000014000D816
    mov         eax,dword ptr [rbx]
    and         eax,label_1FFFFFFF
    cmp         eax,label_19930522
    jb          000000014000D8C5
    mov         eax,dword ptr [rbx+label_24]
    shr         eax,2
    test        al,1
    je          000000014000D8C5
    cmp         dword ptr [rdi],label_0E06D7363
    jne         000000014000D88C
    cmp         dword ptr [rdi+label_18],3
    jb          000000014000D88C
    cmp         dword ptr [rdi+label_20],label_19930522
    jbe         000000014000D88C
    mov         rax,qword ptr [rdi+label_30]
    cmp         dword ptr [rax+8],0
    je          000000014000D88C
    call        000000014000B444
    mov         rcx,qword ptr [rdi+label_30]
    mov         r10,rax
    movsxd      rdx,dword ptr [rcx+8]
    add         r10,rdx
    je          000000014000D88C
    movzx       ecx,byte ptr [rsp+label_0000000000000098]
    mov         r9,rsi
    mov         eax,dword ptr [rsp+label_0000000000000088]
    mov         r8,r14
    mov         dword ptr [rsp+label_38],ecx
    mov         rdx,rbp
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    mov         qword ptr [rsp+label_30],rcx
    mov         rcx,rdi
    mov         dword ptr [rsp+label_28],eax
    mov         rax,r10
    mov         qword ptr [rsp+label_20],rbx
    call label_000000014002C2B8
    jmp         000000014000D8CA
    mov         rax,qword ptr [rsp+label_0000000000000090]
    mov         r9,rsi
    mov         qword ptr [rsp+label_38],rax
    mov         r8,r14
    mov         eax,dword ptr [rsp+label_0000000000000088]
    mov         rdx,rbp
    mov         dword ptr [rsp+label_30],eax
    mov         rcx,rdi
    mov         al,byte ptr [rsp+label_0000000000000098]
    mov         byte ptr [rsp+label_28],al
    mov         qword ptr [rsp+label_20],rbx
    call        000000014000C4F0
    mov         eax,1
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_50
    pop         r14
    ret
func_000000014000D8E4_end:
    call        0000000140015954
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_80
    mov         rbx,rcx
    mov         rbp,r9
    mov         rcx,r8
    mov         r15,r8
    mov         r14,rdx
    call        000000014000ED64
    call        000000014000BA24
    mov         rdi,qword ptr [rsp+label_00000000000000C0]
    xor         esi,esi
    mov         r8d,label_80000029
    mov         r9d,label_80000026
    cmp         dword ptr [rax+label_40],esi
    jne         000000014000D966
    cmp         dword ptr [rbx],label_0E06D7363
    je          000000014000D966
    cmp         dword ptr [rbx],r8d
    jne         000000014000D958
    cmp         dword ptr [rbx+label_18],label_0F
    jne         000000014000D95D
    cmp         qword ptr [rbx+label_60],label_19930520
    je          000000014000D966
    cmp         dword ptr [rbx],r9d
    je          000000014000D966
    test        byte ptr [rdi],label_20
    jne         000000014000DB58
    test        byte ptr [rbx+4],label_66
    je          000000014000DA8A
    cmp         dword ptr [rdi+8],esi
    je          000000014000DB58
    movsxd      rdx,dword ptr [rdi+8]
    lea         r15,[label_0000000140000000]
    add         rdx,qword ptr [rbp+8]
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r15+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r15+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    test        eax,eax
    je          000000014000DB58
    cmp         dword ptr [rsp+label_00000000000000C8],esi
    jne         000000014000DB58
    test        byte ptr [rbx+4],label_20
    je          000000014000DA77
    cmp         dword ptr [rbx],r9d
    jne         000000014000DA2E
    mov         r8,qword ptr [rbp+label_20]
    mov         rdx,rbp
    mov         rcx,rdi
    call        000000014000BCD0
    mov         r9d,eax
    cmp         eax,label_0FFFFFFFF
    jl          000000014000DB7A
    cmp         dword ptr [rdi+8],esi
    je          000000014000DA12
    movsxd      rdx,dword ptr [rdi+8]
    add         rdx,qword ptr [rbp+8]
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r15+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r15+label_000000000002DA50]
    sub         rdx,rax
    mov         esi,dword ptr [rdx-4]
    shr         esi,cl
    cmp         r9d,esi
    jge         000000014000DB7A
    mov         rcx,r14
    mov         rdx,rbp
    mov         r8,rdi
    call        000000014000E5A8
    jmp         000000014000DB58
    cmp         dword ptr [rbx],r8d
    jne         000000014000DA77
    mov         r9d,dword ptr [rbx+label_38]
    cmp         r9d,label_0FFFFFFFF
    jl          000000014000DB7A
    movsxd      rdx,dword ptr [rdi+8]
    add         rdx,qword ptr [rbp+8]
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r15+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r15+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    cmp         r9d,eax
    jge         000000014000DB7A
    mov         rcx,qword ptr [rbx+label_28]
    jmp         000000014000DA1E
    mov         r8,rdi
    mov         rdx,rbp
    mov         rcx,r14
    call        000000014000ABF0
    jmp         000000014000DB58
    mov         r8,qword ptr [rbp+8]
    lea         rcx,[rsp+label_50]
    mov         rdx,rdi
    call        000000014000DC58
    cmp         dword ptr [rsp+label_50],esi
    jne         000000014000DAAA
    test        byte ptr [rdi],label_40
    je          000000014000DB58
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014000DB1F
    cmp         dword ptr [rbx+label_18],3
    jb          000000014000DB1F
    cmp         dword ptr [rbx+label_20],label_19930522
    jbe         000000014000DB1F
    mov         rax,qword ptr [rbx+label_30]
    cmp         dword ptr [rax+8],esi
    je          000000014000DB1F
    call        000000014000B444
    mov         rcx,qword ptr [rbx+label_30]
    mov         r10,rax
    movsxd      rdx,dword ptr [rcx+8]
    add         r10,rdx
    je          000000014000DB1F
    movzx       ecx,byte ptr [rsp+label_00000000000000D8]
    mov         r9,rbp
    mov         eax,dword ptr [rsp+label_00000000000000C8]
    mov         r8,r15
    mov         dword ptr [rsp+label_38],ecx
    mov         rdx,r14
    mov         rcx,qword ptr [rsp+label_00000000000000D0]
    mov         qword ptr [rsp+label_30],rcx
    mov         rcx,rbx
    mov         dword ptr [rsp+label_28],eax
    mov         rax,r10
    mov         qword ptr [rsp+label_20],rdi
    call label_000000014002C2B8
    jmp         000000014000DB5D
    mov         rax,qword ptr [rsp+label_00000000000000D0]
    mov         r9,rbp
    mov         qword ptr [rsp+label_38],rax
    mov         r8,r15
    mov         eax,dword ptr [rsp+label_00000000000000C8]
    mov         rdx,r14
    mov         dword ptr [rsp+label_30],eax
    mov         rcx,rbx
    mov         al,byte ptr [rsp+label_00000000000000D8]
    mov         byte ptr [rsp+label_28],al
    mov         qword ptr [rsp+label_20],rdi
    call        000000014000C9C0
    mov         eax,1
    lea         r11,[rsp+label_0000000000000080]
    mov         rbx,qword ptr [r11+label_20]
    mov         rbp,qword ptr [r11+label_28]
    mov         rsi,qword ptr [r11+label_30]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         rdi
    ret
func_000000014000DB79_end:
    call        0000000140015954
    int         3
    jmp         000000014000D6B4
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_40
    mov         al,byte ptr [rsp+label_0000000000000088]
    mov         byte ptr [rsp+label_38],al
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rsp+label_30],rax
    mov         eax,dword ptr [rsp+label_78]
    mov         dword ptr [rsp+label_28],eax
    mov         rax,qword ptr [rsp+label_70]
    mov         qword ptr [rsp+label_20],rax
    call        000000014000D8EC
    mov         ebx,eax
    call        000000014000BA24
    mov         dword ptr [rax+label_78],label_0FFFFFFFE
    mov         eax,ebx
    add         rsp,label_40
    pop         rbx
    ret
func_000000014000DBD2_end:
    int         3
    push        rbx
    sub         rsp,label_20
    xor         eax,eax
    xorps       xmm0,xmm0
    mov         qword ptr [rcx+8],rax
    mov         rbx,rcx
    mov         qword ptr [rcx+label_10],rax
    mov         byte ptr [rcx+label_18],al
    mov         qword ptr [rcx+label_1C],rax
    mov         qword ptr [rcx+label_24],rax
    movups      xmmword ptr [rcx+label_30],xmm0
    mov         qword ptr [rcx+label_40],r8
    mov         dword ptr [rcx+label_48],r9d
    cmp         dword ptr [rdx+label_0C],eax
    je          000000014000DC4B
    movsxd      rdx,dword ptr [rdx+label_0C]
    add         rdx,r8
    lea         r8,[label_0000000140000000]
    mov         qword ptr [rcx+8],rdx
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r8+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r8+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         rcx,rbx
    mov         dword ptr [rbx],eax
    mov         qword ptr [rbx+8],rdx
    mov         qword ptr [rbx+label_10],rdx
    call        000000014000E1D4
    jmp         000000014000DC4D
    mov         dword ptr [rcx],eax
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000DC55_end:
    int         3
    int         3
    xor         eax,eax
    xorps       xmm0,xmm0
    mov         qword ptr [rcx+8],rax
    mov         r9,rcx
    mov         qword ptr [rcx+label_10],rax
    movups      xmmword ptr [rcx+label_18],xmm0
    cmp         dword ptr [rdx+label_0C],eax
    je          000000014000DD36
    movsxd      rdx,dword ptr [rdx+label_0C]
    add         rdx,r8
    lea         r8,[label_0000000140000000]
    mov         qword ptr [rcx+8],rdx
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r8+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r8+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         qword ptr [r9+8],rdx
    mov         dword ptr [r9],eax
    mov         qword ptr [r9+label_10],rdx
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r8+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r8+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         qword ptr [r9+8],rdx
    mov         dword ptr [r9+label_18],eax
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r8+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r8+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         qword ptr [r9+8],rdx
    mov         dword ptr [r9+label_1C],eax
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r8+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r8+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         dword ptr [r9+label_20],eax
    lea         rax,[rdx+4]
    mov         qword ptr [r9+8],rdx
    mov         ecx,dword ptr [rdx]
    mov         qword ptr [r9+8],rax
    mov         dword ptr [r9+label_24],ecx
    jmp         000000014000DD38
    mov         dword ptr [rcx],eax
    mov         rax,r9
    ret
func_000000014000DD3B_end:
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         rax,rdx
    lea         rcx,[label_000000014002C4C0]
    xorps       xmm0,xmm0
    mov         qword ptr [rbx],rcx
    lea         rdx,[rbx+8]
    lea         rcx,[rax+8]
    movups      xmmword ptr [rdx],xmm0
    call        000000014000A7B0
    lea         rax,[label_000000014002DBA8]
    mov         qword ptr [rbx],rax
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000DD77_end:
    and         qword ptr [rcx+label_10],0
    lea         rax,[label_000000014002DBB8]
    mov         qword ptr [rcx+8],rax
    lea         rax,[label_000000014002DBA8]
    mov         qword ptr [rcx],rax
    mov         rax,rcx
    ret
func_000000014000DD95_end:
    int         3
    int         3
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_70
    mov         rdi,rcx
    xor         r15d,r15d
    mov         dword ptr [rsp+label_20],r15d
    and         dword ptr [rsp+label_00000000000000B0],r15d
    and         qword ptr [rsp+label_28],r15
    and         qword ptr [rsp+label_00000000000000C8],r15
    call        000000014000BA24
    mov         r13,qword ptr [rax+label_28]
    mov         qword ptr [rsp+label_40],r13
    call        000000014000BA24
    mov         rax,qword ptr [rax+label_20]
    mov         qword ptr [rsp+label_00000000000000C0],rax
    mov         rsi,qword ptr [rdi+label_50]
    mov         qword ptr [rsp+label_00000000000000B8],rsi
    mov         rax,qword ptr [rdi+label_48]
    mov         qword ptr [rsp+label_30],rax
    mov         rbx,qword ptr [rdi+label_40]
    mov         rax,qword ptr [rdi+label_30]
    mov         qword ptr [rsp+label_48],rax
    mov         r14,qword ptr [rdi+label_28]
    mov         qword ptr [rsp+label_50],r14
    mov         rcx,rbx
    call        000000014000ED64
    call        000000014000BA24
    mov         qword ptr [rax+label_20],rsi
    call        000000014000BA24
    mov         qword ptr [rax+label_28],rbx
    call        000000014000BA24
    mov         rdx,qword ptr [rax+label_20]
    mov         rdx,qword ptr [rdx+label_28]
    lea         rcx,[rsp+label_60]
    call        000000014000B3A0
    mov         r12,rax
    mov         qword ptr [rsp+label_38],rax
    cmp         qword ptr [rdi+label_58],r15
    je          000000014000DE6D
    mov         dword ptr [rsp+label_00000000000000B0],1
    call        000000014000BA24
    mov         rcx,qword ptr [rax+label_70]
    mov         qword ptr [rsp+label_00000000000000C8],rcx
    mov         r8d,label_100
    mov         rdx,r14
    mov         rcx,qword ptr [rsp+label_48]
    call        000000014000FF00
    mov         rbx,rax
    mov         qword ptr [rsp+label_28],rax
    mov         rdi,qword ptr [rsp+label_00000000000000C0]
    jmp         000000014000DF0A
    mov         dword ptr [rsp+label_20],1
    call        000000014000BA24
    and         dword ptr [rax+label_40],0
    mov         rsi,qword ptr [rsp+label_00000000000000B8]
    cmp         dword ptr [rsp+label_00000000000000B0],0
    je          000000014000DED6
    mov         dl,1
    mov         rcx,rsi
    call        000000014000B61C
    mov         rcx,qword ptr [rsp+label_00000000000000C8]
    lea         r9,[rcx+label_20]
    mov         r8d,dword ptr [rcx+label_18]
    mov         edx,dword ptr [rcx+4]
    mov         ecx,dword ptr [rcx]
    jmp         000000014000DEE3
    lea         r9,[rsi+label_20]
    mov         r8d,dword ptr [rsi+label_18]
    mov         edx,dword ptr [rsi+4]
    mov         ecx,dword ptr [rsi]
    call label_000000014002C0E8
    mov         r15d,dword ptr [rsp+label_20]
    mov         rbx,qword ptr [rsp+label_28]
    mov         r13,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_00000000000000C0]
    mov         r14,qword ptr [rsp+label_50]
    mov         r12,qword ptr [rsp+label_38]
    mov         rcx,r12
    call        000000014000B3DC
    test        r15d,r15d
    jne         000000014000DF49
    cmp         dword ptr [rsi],label_0E06D7363
    jne         000000014000DF49
    cmp         dword ptr [rsi+label_18],4
    jne         000000014000DF49
    mov         eax,dword ptr [rsi+label_20]
    sub         eax,label_19930520
    cmp         eax,2
    ja          000000014000DF49
    mov         rcx,qword ptr [rsi+label_28]
    call        000000014000B690
    test        eax,eax
    je          000000014000DF49
    mov         dl,1
    mov         rcx,rsi
    call        000000014000B61C
    call        000000014000BA24
    mov         qword ptr [rax+label_20],rdi
    call        000000014000BA24
    mov         qword ptr [rax+label_28],r13
    mov         rax,qword ptr [rsp+label_30]
    movsxd      rcx,dword ptr [rax+label_1C]
    mov         rax,qword ptr [r14]
    mov         qword ptr [rcx+rax],label_0FFFFFFFFFFFFFFFE
    mov         rax,rbx
    add         rsp,label_70
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    ret
func_000000014000DF81_end:
    int         3
    int         3
    mov         rax,rsp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r15
    sub         rsp,label_0A8
    mov         rdi,rcx
    xor         r12d,r12d
    mov         dword ptr [rsp+label_20],r12d
    and         dword ptr [rsp+label_00000000000000F0],r12d
    and         qword ptr [rsp+label_28],r12
    and         qword ptr [rsp+label_40],r12
    mov         byte ptr [rax-label_80],r12b
    and         dword ptr [rax-label_7C],r12d
    and         dword ptr [rax-label_78],r12d
    and         dword ptr [rax-label_74],r12d
    and         dword ptr [rax-label_70],r12d
    and         dword ptr [rax-label_6C],r12d
    call        000000014000BA24
    mov         rax,qword ptr [rax+label_28]
    mov         qword ptr [rsp+label_38],rax
    call        000000014000BA24
    mov         rax,qword ptr [rax+label_20]
    mov         qword ptr [rsp+label_30],rax
    mov         rsi,qword ptr [rdi+label_50]
    mov         qword ptr [rsp+label_00000000000000F8],rsi
    mov         rbx,qword ptr [rdi+label_40]
    mov         rax,qword ptr [rdi+label_30]
    mov         qword ptr [rsp+label_50],rax
    mov         r15,qword ptr [rdi+label_28]
    mov         rax,qword ptr [rdi+label_48]
    mov         qword ptr [rsp+label_70],rax
    mov         rax,qword ptr [rdi+label_68]
    mov         qword ptr [rsp+label_78],rax
    mov         eax,dword ptr [rdi+label_78]
    mov         dword ptr [rsp+label_00000000000000E8],eax
    mov         eax,dword ptr [rdi+label_38]
    mov         dword ptr [rsp+label_00000000000000E0],eax
    mov         rcx,rbx
    call        000000014000ED64
    call        000000014000BA24
    mov         qword ptr [rax+label_20],rsi
    call        000000014000BA24
    mov         qword ptr [rax+label_28],rbx
    call        000000014000BA24
    mov         rdx,qword ptr [rax+label_20]
    mov         rdx,qword ptr [rdx+label_28]
    lea         rcx,[rsp+label_0000000000000088]
    call        000000014000B3A0
    mov         r13,rax
    mov         qword ptr [rsp+label_48],rax
    cmp         qword ptr [rdi+label_58],r12
    je          000000014000E086
    mov         dword ptr [rsp+label_00000000000000F0],1
    call        000000014000BA24
    mov         rcx,qword ptr [rax+label_70]
    mov         qword ptr [rsp+label_40],rcx
    mov         r8d,label_100
    mov         rdx,r15
    mov         rcx,qword ptr [rsp+label_50]
    call        000000014000FF40
    mov         rbx,rax
    mov         qword ptr [rsp+label_28],rax
    cmp         rax,2
    jge         000000014000E0BA
    mov         rbx,qword ptr [rsp+rax*8+label_70]
    test        rbx,rbx
    je          000000014000E1CD
    mov         qword ptr [rsp+label_28],rbx
    mov         rdx,r15
    mov         rcx,rbx
    call        000000014000FF70
    mov         rdi,qword ptr [rsp+label_38]
    mov         r15,qword ptr [rsp+label_30]
    jmp         000000014000E14D
    mov         dword ptr [rsp+label_20],1
    call        000000014000BA24
    and         dword ptr [rax+label_40],0
    call        000000014000BA24
    mov         ecx,dword ptr [rsp+label_00000000000000E8]
    mov         dword ptr [rax+label_78],ecx
    mov         rsi,qword ptr [rsp+label_00000000000000F8]
    cmp         dword ptr [rsp+label_00000000000000F0],0
    je          000000014000E121
    mov         dl,1
    mov         rcx,rsi
    call        000000014000B61C
    mov         rcx,qword ptr [rsp+label_40]
    lea         r9,[rcx+label_20]
    mov         r8d,dword ptr [rcx+label_18]
    mov         edx,dword ptr [rcx+4]
    mov         ecx,dword ptr [rcx]
    jmp         000000014000E12E
    lea         r9,[rsi+label_20]
    mov         r8d,dword ptr [rsi+label_18]
    mov         edx,dword ptr [rsi+4]
    mov         ecx,dword ptr [rsi]
    call label_000000014002C0E8
    mov         r12d,dword ptr [rsp+label_20]
    mov         rbx,qword ptr [rsp+label_28]
    mov         rdi,qword ptr [rsp+label_38]
    mov         r15,qword ptr [rsp+label_30]
    mov         r13,qword ptr [rsp+label_48]
    mov         rcx,r13
    call        000000014000B3DC
    test        r12d,r12d
    jne         000000014000E18C
    cmp         dword ptr [rsi],label_0E06D7363
    jne         000000014000E18C
    cmp         dword ptr [rsi+label_18],4
    jne         000000014000E18C
    mov         eax,dword ptr [rsi+label_20]
    sub         eax,label_19930520
    cmp         eax,2
    ja          000000014000E18C
    mov         rcx,qword ptr [rsi+label_28]
    call        000000014000B690
    test        eax,eax
    je          000000014000E18C
    mov         dl,1
    mov         rcx,rsi
    call        000000014000B61C
    call        000000014000BA24
    mov         qword ptr [rax+label_20],r15
    call        000000014000BA24
    mov         qword ptr [rax+label_28],rdi
    call        000000014000BA24
    mov         ecx,dword ptr [rsp+label_00000000000000E0]
    mov         dword ptr [rax+label_78],ecx
    call        000000014000BA24
    mov         dword ptr [rax+label_78],label_0FFFFFFFE
    mov         rax,rbx
    add         rsp,label_0A8
    pop         r15
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    ret
func_000000014000E1CC_end:
    call        0000000140015954
    nop
    int         3
    xor         eax,eax
    lea         r11,[label_0000000140000000]
    mov         byte ptr [rcx+label_18],al
    xorps       xmm0,xmm0
    mov         qword ptr [rcx+label_1C],rax
    mov         r8,rcx
    mov         qword ptr [rcx+label_24],rax
    movups      xmmword ptr [rcx+label_30],xmm0
    mov         rax,qword ptr [rcx+8]
    mov         r9b,byte ptr [rax]
    lea         rdx,[rax+1]
    mov         byte ptr [rcx+label_18],r9b
    mov         qword ptr [rcx+8],rdx
    test        r9b,1
    je          000000014000E232
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         dword ptr [r8+label_1C],eax
    mov         qword ptr [r8+8],rdx
    test        r9b,2
    je          000000014000E246
    mov         eax,dword ptr [rdx]
    add         rdx,4
    mov         qword ptr [r8+8],rdx
    mov         dword ptr [r8+label_20],eax
    test        r9b,4
    je          000000014000E273
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         dword ptr [r8+label_24],eax
    mov         qword ptr [r8+8],rdx
    mov         eax,dword ptr [rdx]
    lea         r10,[rdx+4]
    mov         dword ptr [r8+label_28],eax
    mov         cl,label_30
    mov         al,r9b
    mov         qword ptr [r8+8],r10
    and         al,cl
    test        r9b,8
    je          000000014000E2CE
    cmp         al,label_10
    jne         000000014000E2A2
    movsxd      rcx,dword ptr [r10]
    lea         rax,[r10+4]
    mov         qword ptr [r8+8],rax
    mov         qword ptr [r8+label_30],rcx
    ret
func_000000014000E2A1_end:
    and         r9b,cl
    cmp         r9b,label_20
    jne         000000014000E367
    movsxd      rax,dword ptr [r10]
    lea         rdx,[r10+4]
    mov         qword ptr [r8+8],rdx
    mov         qword ptr [r8+label_30],rax
    lea         rax,[rdx+4]
    movsxd      rcx,dword ptr [rdx]
    mov         qword ptr [r8+8],rax
    jmp         000000014000E363
    cmp         al,label_10
    jne         000000014000E302
    movzx       ecx,byte ptr [r10]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         r10,rax
    mov         eax,dword ptr [r8+label_48]
    mov         edx,dword ptr [r10-4]
    shr         edx,cl
    add         eax,edx
    mov         qword ptr [r8+8],r10
    mov         qword ptr [r8+label_30],rax
    ret
func_000000014000E301_end:
    and         r9b,cl
    cmp         r9b,label_20
    jne         000000014000E367
    movzx       ecx,byte ptr [r10]
    mov         edx,dword ptr [r8+label_48]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         r10,rax
    mov         eax,dword ptr [r10-4]
    shr         eax,cl
    mov         qword ptr [r8+8],r10
    lea         ecx,[rdx+rax]
    mov         qword ptr [r8+label_30],rcx
    movzx       ecx,byte ptr [r10]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         r10,rax
    mov         eax,dword ptr [r10-4]
    shr         eax,cl
    mov         qword ptr [r8+8],r10
    lea         ecx,[rdx+rax]
    mov         qword ptr [r8+label_38],rcx
    ret
func_000000014000E367_end:
    push        rbx
    sub         rsp,label_20
    mov         r9,qword ptr [rcx]
    mov         rbx,r8
    and         dword ptr [r8],0
    mov         ecx,label_0E06D7363
    cmp         dword ptr [r9],ecx
    jne         000000014000E3E3
    cmp         dword ptr [r9+label_18],4
    mov         r8d,label_19930520
    jne         000000014000E3AB
    mov         eax,dword ptr [r9+label_20]
    sub         eax,r8d
    cmp         eax,2
    ja          000000014000E3AB
    mov         rax,qword ptr [rdx+label_28]
    cmp         qword ptr [r9+label_28],rax
    jne         000000014000E3AB
    mov         dword ptr [rbx],1
    cmp         dword ptr [r9],ecx
    jne         000000014000E3E3
    cmp         dword ptr [r9+label_18],4
    jne         000000014000E3E3
    mov         ecx,dword ptr [r9+label_20]
    sub         ecx,r8d
    cmp         ecx,2
    ja          000000014000E3E3
    cmp         qword ptr [r9+label_30],0
    jne         000000014000E3E3
    call        000000014000BA24
    mov         dword ptr [rax+label_40],1
    mov         eax,1
    mov         dword ptr [rbx],1
    jmp         000000014000E3E5
    xor         eax,eax
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000E3EA_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         edi,r8d
    mov         r8,r9
    call        000000014000E368
    mov         ebx,eax
    test        eax,eax
    jne         000000014000E40F
    call        000000014000BA24
    mov         dword ptr [rax+label_78],edi
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000E41B_end:
    mov         dword ptr [rsp+label_20],r9d
    mov         qword ptr [rsp+label_18],r8
    mov         qword ptr [rsp+8],rcx
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         r12d,r9d
    mov         rsi,r8
    mov         rbx,rdx
    mov         r15,rcx
    call        000000014000B430
    mov         r13,rax
    mov         qword ptr [rsp+label_28],rax
    mov         r8,rsi
    mov         rdx,rbx
    mov         rcx,r15
    call        000000014000BBBC
    mov         edi,eax
    call        000000014000BA24
    inc         dword ptr [rax+label_30]
    cmp         edi,label_0FFFFFFFF
    je          000000014000E55F
    cmp         edi,r12d
    jle         000000014000E55F
    cmp         edi,label_0FFFFFFFF
    jle         000000014000E59A
    cmp         edi,dword ptr [rsi+4]
    jge         000000014000E59A
    movsxd      r14,edi
    call        000000014000B430
    movsxd      rcx,dword ptr [rsi+8]
    lea         rax,[rax+r14*8]
    mov         edi,dword ptr [rcx+rax]
    mov         dword ptr [rsp+label_20],edi
    call        000000014000B430
    movsxd      rcx,dword ptr [rsi+8]
    lea         rax,[rax+r14*8]
    cmp         dword ptr [rcx+rax+4],0
    je          000000014000E4D6
    call        000000014000B430
    movsxd      rcx,dword ptr [rsi+8]
    lea         rax,[rax+r14*8]
    movsxd      rbx,dword ptr [rcx+rax+4]
    call        000000014000B430
    add         rax,rbx
    jmp         000000014000E4D8
    xor         eax,eax
    test        rax,rax
    je          000000014000E536
    mov         r8d,edi
    mov         rdx,rsi
    mov         rcx,r15
    call        000000014000BC10
    call        000000014000B430
    movsxd      rcx,dword ptr [rsi+8]
    lea         rax,[rax+r14*8]
    cmp         dword ptr [rcx+rax+4],0
    je          000000014000E51B
    call        000000014000B430
    movsxd      rcx,dword ptr [rsi+8]
    lea         rax,[rax+r14*8]
    movsxd      rbx,dword ptr [rcx+rax+4]
    call        000000014000B430
    add         rax,rbx
    jmp         000000014000E51D
    xor         eax,eax
    mov         r8d,label_103
    mov         rdx,r15
    mov         rcx,rax
    call        000000014000FF00
    mov         rcx,r13
    call        000000014000B458
    jmp         000000014000E556
    mov         r12d,dword ptr [rsp+label_0000000000000088]
    mov         rsi,qword ptr [rsp+label_0000000000000080]
    mov         r15,qword ptr [rsp+label_70]
    mov         r13,qword ptr [rsp+label_28]
    mov         edi,dword ptr [rsp+label_20]
    mov         dword ptr [rsp+label_24],edi
    jmp         000000014000E46B
    call        000000014000BA24
    cmp         dword ptr [rax+label_30],0
    jle         000000014000E572
    call        000000014000BA24
    dec         dword ptr [rax+label_30]
    cmp         edi,label_0FFFFFFFF
    je          000000014000E57C
    cmp         edi,r12d
    jg          000000014000E5A0
    mov         r8d,edi
    mov         rdx,rsi
    mov         rcx,r15
    call        000000014000BC10
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    ret
func_000000014000E599_end:
    call        0000000140015954
    nop
    call        0000000140015954
    nop
    int         3
    int         3
    mov         rax,rsp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_100
    movaps      xmmword ptr [rax-label_48],xmm6
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_00000000000000E0],rax
    mov         r13d,r9d
    mov         rbx,r8
    mov         rsi,rdx
    mov         r12,rcx
    mov         qword ptr [rsp+label_70],rcx
    mov         qword ptr [rsp+label_60],rcx
    mov         dword ptr [rsp+label_48],r9d
    call        000000014000B430
    mov         qword ptr [rsp+label_68],rax
    mov         rdx,rsi
    mov         rcx,rbx
    call        000000014000BC60
    mov         edi,eax
    lea         r14,[rsi+label_48]
    mov         qword ptr [rsp+label_78],r14
    cmp         dword ptr [r14],0
    je          000000014000E62B
    call        000000014000BA24
    cmp         dword ptr [rax+label_78],label_0FFFFFFFE
    jne         000000014000E8A9
    mov         edi,dword ptr [r14]
    sub         edi,2
    jmp         000000014000E64A
    call        000000014000BA24
    cmp         dword ptr [rax+label_78],label_0FFFFFFFE
    je          000000014000E64A
    call        000000014000BA24
    mov         edi,dword ptr [rax+label_78]
    call        000000014000BA24
    mov         dword ptr [rax+label_78],label_0FFFFFFFE
    call        000000014000BA24
    inc         dword ptr [rax+label_30]
    add         rsi,8
    mov         qword ptr [rsp+label_0000000000000080],rsi
    xor         edx,edx
    mov         qword ptr [rsp+label_00000000000000C8],rdx
    xorps       xmm0,xmm0
    movups      xmmword ptr [rsp+label_00000000000000D0],xmm0
    cmp         dword ptr [rbx+8],edx
    je          000000014000E6B7
    movsxd      rdx,dword ptr [rbx+8]
    add         rdx,qword ptr [rsi]
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    lea         r8,[label_0000000140000000]
    movsx       rax,byte ptr [rcx+r8+label_000000000002DA40]
    movzx       ecx,byte ptr [rcx+r8+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         dword ptr [rsp+label_00000000000000C0],eax
    mov         qword ptr [rsp+label_00000000000000C8],rdx
    jmp         000000014000E6BE
    and         dword ptr [rsp+label_00000000000000C0],edx
    lea         rax,[rsp+label_00000000000000C0]
    mov         qword ptr [rsp+label_30],rax
    mov         qword ptr [rsp+label_38],rdx
    lea         rax,[rsp+label_00000000000000C0]
    mov         qword ptr [rsp+label_50],rax
    mov         qword ptr [rsp+label_58],rdx
    lea         rax,[rsp+label_50]
    mov         qword ptr [rsp+label_20],rax
    lea         r9,[rsp+label_30]
    mov         r8d,r13d
    mov         edx,edi
    lea         rcx,[rsp+label_00000000000000C0]
    call        000000014000EB78
    nop
    lea         rax,[rsp+label_00000000000000C0]
    mov         qword ptr [rsp+label_0000000000000088],rax
    mov         rax,qword ptr [rsp+label_00000000000000C8]
    mov         qword ptr [rsp+label_0000000000000090],rax
    mov         r15,qword ptr [rsp+label_38]
    cmp         r15,rax
    jb          000000014000E86B
    cmp         r15,qword ptr [rsp+label_58]
    jbe         000000014000E86B
    lea         rdx,[rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call        000000014000EAC0
    mov         qword ptr [rsp+label_38],r15
    mov         rbx,qword ptr [rsp+label_30]
    movups      xmm6,xmmword ptr [rbx+label_10]
    movups      xmmword ptr [rsp+label_00000000000000B0],xmm6
    movaps      xmm0,xmmword ptr [rsp+label_30]
    movdqa      xmmword ptr [rsp+label_00000000000000A0],xmm0
    lea         rdx,[rsp+label_38]
    mov         rcx,rbx
    call        000000014000EAC0
    mov         eax,dword ptr [rbx+label_10]
    sub         r15,rax
    mov         qword ptr [rsp+label_38],r15
    lea         rax,[rsp+label_30]
    mov         qword ptr [rsp+label_20],rax
    mov         r9d,edi
    lea         r8,[rsp+label_00000000000000A0]
    mov         edx,r13d
    lea         rcx,[rsp+label_50]
    call        000000014000EC48
    mov         edi,eax
    mov         dword ptr [rsp+label_44],eax
    and         dword ptr [rsp+label_40],0
    xor         r9d,r9d
    movdqa      xmm0,xmm6
    psrldq      xmm0,8
    movd        eax,xmm0
    movdqa      xmm1,xmm6
    psrldq      xmm1,4
    movd        ecx,xmm1
    test        ecx,ecx
    cmovne      r9d,eax
    mov         dword ptr [rsp+label_40],r9d
    test        r9d,r9d
    je          000000014000E866
    lea         eax,[rdi+2]
    mov         dword ptr [r14],eax
    lea         eax,[rcx-1]
    cmp         eax,1
    jbe         000000014000E80A
    movsxd      rcx,r9d
    add         rcx,qword ptr [rsi]
    mov         r8d,label_103
    mov         rdx,r12
    call        000000014000FF00
    jmp         000000014000E83F
    mov         rax,qword ptr [rsp+label_60]
    mov         rdx,qword ptr [rax]
    psrldq      xmm6,label_0C
    cmp         ecx,2
    jne         000000014000E826
    movd        eax,xmm6
    mov         r8,qword ptr [rax+rdx]
    jmp         000000014000E82E
    movd        r8d,xmm6
    add         r8,rdx
    movsxd      rcx,r9d
    add         rcx,qword ptr [rsi]
    mov         r9d,label_103
    call        000000014000FFA0
    mov         rcx,qword ptr [rsp+label_68]
    call        000000014000B458
    jmp         000000014000E866
    mov         edi,dword ptr [rsp+label_44]
    mov         r12,qword ptr [rsp+label_70]
    mov         r14,qword ptr [rsp+label_78]
    mov         rsi,qword ptr [rsp+label_0000000000000080]
    mov         r13d,dword ptr [rsp+label_48]
    jmp         000000014000E704
    call        000000014000BA24
    cmp         dword ptr [rax+label_30],0
    jle         000000014000E87E
    call        000000014000BA24
    dec         dword ptr [rax+label_30]
    mov         rcx,qword ptr [rsp+label_00000000000000E0]
    xor         rcx,rsp
    call        00000001400099A0
    movaps      xmm6,xmmword ptr [rsp+label_00000000000000F0]
    add         rsp,label_100
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    ret
func_000000014000E8A8_end:
    call        0000000140015954
    nop
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         rbp,rcx
    mov         rdi,r8
    mov         rcx,r8
    mov         rsi,rdx
    call        000000014000BC58
    lea         r9,[rsp+label_48]
    mov         r8,rdi
    mov         rdx,rsi
    mov         rcx,rbp
    mov         ebx,eax
    call        000000014000AC24
    mov         r8,rdi
    mov         rdx,rsi
    mov         rcx,rbp
    call        000000014000BBE4
    cmp         ebx,eax
    jle         000000014000E91F
    mov         r8d,ebx
    lea         rcx,[rsp+label_48]
    mov         rdx,rdi
    call        000000014000BC10
    mov         r9d,ebx
    mov         r8,rdi
    mov         rdx,rsi
    mov         rcx,rbp
    call        000000014000BC1C
    jmp         000000014000E92F
    mov         r8,rdi
    mov         rdx,rsi
    mov         rcx,rbp
    call        000000014000BBE4
    mov         ebx,eax
    mov         rbp,qword ptr [rsp+label_38]
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000E945_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_18],rbp
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_20
    mov         rbp,rdx
    mov         r13,rcx
    test        rdx,rdx
    je          000000014000EA2F
    xor         r15b,r15b
    xor         esi,esi
    cmp         dword ptr [rdx],esi
    jle         000000014000EA0F
    call        000000014000B444
    mov         rdx,rax
    mov         rax,qword ptr [r13+label_30]
    movsxd      r12,dword ptr [rax+label_0C]
    add         r12,4
    add         r12,rdx
    call        000000014000B444
    mov         rdx,rax
    mov         rax,qword ptr [r13+label_30]
    movsxd      rcx,dword ptr [rax+label_0C]
    mov         r14d,dword ptr [rdx+rcx]
    test        r14d,r14d
    jle         000000014000EA04
    movsxd      rax,esi
    lea         rax,[rax+rax*4]
    mov         qword ptr [rsp+label_58],rax
    call        000000014000B444
    mov         rbx,qword ptr [r13+label_30]
    mov         rdi,rax
    movsxd      rax,dword ptr [r12]
    add         rdi,rax
    call        000000014000B430
    mov         rdx,qword ptr [rsp+label_58]
    mov         r8,rbx
    movsxd      rcx,dword ptr [rbp+4]
    lea         rax,[rax+rdx*4]
    mov         rdx,rdi
    add         rcx,rax
    call        000000014000D428
    test        eax,eax
    jne         000000014000EA01
    dec         r14d
    add         r12,4
    test        r14d,r14d
    jg          000000014000E9BC
    jmp         000000014000EA04
    mov         r15b,1
    inc         esi
    cmp         esi,dword ptr [rbp]
    jl          000000014000E980
    mov         rbx,qword ptr [rsp+label_50]
    mov         al,r15b
    mov         rbp,qword ptr [rsp+label_60]
    mov         rsi,qword ptr [rsp+label_68]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_000000014000EA2E_end:
    call        0000000140015954
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    xor         ebp,ebp
    mov         rdi,rcx
    cmp         dword ptr [rcx],ebp
    jle         000000014000EAA5
    xor         esi,esi
    call        000000014000B430
    movsxd      rcx,dword ptr [rdi+4]
    add         rax,rsi
    cmp         dword ptr [rcx+rax+4],0
    je          000000014000EA85
    call        000000014000B430
    movsxd      rcx,dword ptr [rdi+4]
    add         rax,rsi
    movsxd      rbx,dword ptr [rcx+rax+4]
    call        000000014000B430
    add         rax,rbx
    jmp         000000014000EA87
    xor         eax,eax
    lea         rcx,[rax+8]
    lea         rdx,[label_000000014003CE98]
    call        000000014000B9DC
    test        eax,eax
    je          000000014000EABC
    inc         ebp
    add         rsi,label_14
    cmp         ebp,dword ptr [rdi]
    jl          000000014000EA57
    xor         al,al
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000EABB_end:
    mov         al,1
    jmp         000000014000EAA7
    mov         r8,qword ptr [rdx]
    lea         r11,[label_0000000140000000]
    mov         r10,rcx
    mov         r9,rdx
    movzx       ecx,byte ptr [r8]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         r8,rax
    mov         eax,dword ptr [r8-4]
    shr         eax,cl
    mov         ecx,eax
    mov         qword ptr [rdx],r8
    and         ecx,3
    shr         eax,2
    mov         dword ptr [r10+label_10],eax
    mov         dword ptr [r10+label_14],ecx
    lea         eax,[rcx-1]
    cmp         eax,1
    jbe         000000014000EB22
    cmp         ecx,3
    jne         000000014000EB5B
    mov         rax,qword ptr [rdx]
    mov         ecx,dword ptr [rax]
    add         rax,4
    mov         qword ptr [rdx],rax
    mov         dword ptr [r10+label_18],ecx
    ret
func_000000014000EB21_end:
    mov         rax,qword ptr [rdx]
    mov         ecx,dword ptr [rax]
    add         rax,4
    mov         qword ptr [rdx],rax
    mov         dword ptr [r10+label_18],ecx
    mov         rdx,qword ptr [rdx]
    movzx       ecx,byte ptr [rdx]
    and         ecx,label_0F
    movsx       rax,byte ptr [rcx+r11+label_000000000002DA40]
    mov         cl,byte ptr [rcx+r11+label_000000000002DA50]
    sub         rdx,rax
    mov         eax,dword ptr [rdx-4]
    shr         eax,cl
    mov         qword ptr [r9],rdx
    mov         dword ptr [r10+label_1C],eax
    ret
func_000000014000EB5B_end:
    mov         rax,rdx
    mov         rdx,r8
    jmp         rax
    int         3
    int         3
    int         3
    mov         rax,r8
    mov         r10,rdx
    mov         rdx,rax
    mov         r8d,r9d
    jmp         r10
    int         3
    mov         r11,rsp
    mov         qword ptr [r11+label_18],rbx
    mov         qword ptr [r11+label_20],r9
    mov         dword ptr [rsp+label_10],edx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_20
    mov         rax,qword ptr [rcx+8]
    xor         bpl,bpl
    xor         r14b,r14b
    mov         qword ptr [r11+8],rax
    xor         edi,edi
    mov         r12,r9
    mov         r13d,r8d
    mov         rbx,rcx
    lea         rsi,[rax-1]
    mov         r15,rsi
    cmp         dword ptr [rcx],edi
    jle         000000014000EBFD
    mov         r12d,dword ptr [r11+label_10]
    cmp         edi,r12d
    jne         000000014000EBC9
    mov         rsi,rax
    mov         bpl,1
    cmp         edi,r13d
    jne         000000014000EBD4
    mov         r15,rax
    mov         r14b,1
    test        bpl,bpl
    je          000000014000EBDE
    test        r14b,r14b
    jne         000000014000EBF8
    lea         rdx,[rsp+label_60]
    mov         rcx,rbx
    call        000000014000EAC0
    inc         edi
    cmp         edi,dword ptr [rbx]
    jge         000000014000EBF8
    mov         rax,qword ptr [rsp+label_60]
    jmp         000000014000EBBE
    mov         r12,qword ptr [rsp+label_78]
    mov         rax,qword ptr [r12]
    mov         qword ptr [r12+8],rsi
    movups      xmm0,xmmword ptr [rbx]
    movups      xmmword ptr [rax],xmm0
    movups      xmm1,xmmword ptr [rbx+label_10]
    movups      xmmword ptr [rax+label_10],xmm1
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         rcx,qword ptr [rax]
    mov         qword ptr [rax+8],r15
    movups      xmm0,xmmword ptr [rbx]
    movups      xmmword ptr [rcx],xmm0
    movups      xmm1,xmmword ptr [rbx+label_10]
    mov         rbx,qword ptr [rsp+label_70]
    movups      xmmword ptr [rcx+label_10],xmm1
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014000EC45_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_30
    mov         rdi,qword ptr [rsp+label_60]
    mov         ebx,edx
    mov         rsi,r8
    mov         r10,rcx
    mov         rdx,qword ptr [rdi+8]
    cmp         rdx,qword ptr [r8+8]
    ja          000000014000ECE5
    cmp         qword ptr [rcx+8],rdx
    ja          000000014000ECE5
    mov         rax,qword ptr [r8+8]
    mov         rcx,rdx
    sub         rcx,qword ptr [r10+8]
    sub         rax,rdx
    cmp         rcx,rax
    jge         000000014000ECB4
    movups      xmm0,xmmword ptr [r10]
    movups      xmmword ptr [rsp+label_20],xmm0
    cmp         rdx,qword ptr [r10+8]
    jbe         000000014000ECE1
    mov         rcx,qword ptr [rsp+label_20]
    lea         rdx,[rsp+label_28]
    call        000000014000EAC0
    mov         rax,qword ptr [rsp+label_28]
    inc         ebx
    cmp         qword ptr [rdi+8],rax
    ja          000000014000EC96
    jmp         000000014000ECE1
    mov         ebx,r9d
    movups      xmm0,xmmword ptr [rdi]
    movups      xmmword ptr [rsp+label_20],xmm0
    cmp         qword ptr [r8+8],rdx
    jbe         000000014000ECE1
    mov         rcx,qword ptr [rsp+label_20]
    lea         rdx,[rsp+label_28]
    call        000000014000EAC0
    mov         rcx,qword ptr [rsp+label_28]
    dec         ebx
    cmp         qword ptr [rsi+8],rcx
    ja          000000014000ECC5
    mov         eax,ebx
    jmp         000000014000ECE8
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014000ECF7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         qword ptr [rsp+8],rcx
    mov         qword ptr [rsp+label_18],rdx
    mov         dword ptr [rsp+label_10],r8d
    mov         r9,label_19930520
    jmp         000000014000ED50
    int         3
    int         3
    int         3
    int         3
    int         3
    ret
func_000000014000ED50_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    ret
func_000000014000ED60_end:
    int         3
    int         3
    int         3
    mov         rax,qword ptr [label_000000014002C2A8]
    lea         rdx,[label_00000001400085EC]
    cmp         rax,rdx
    je          000000014000ED9A
    mov         rax,qword ptr gs:[label_0000000000000030]
    mov         rcx,qword ptr [rcx+label_0000000000000098]
    cmp         rcx,qword ptr [rax+label_10]
    jb          000000014000ED93
    cmp         rcx,qword ptr [rax+8]
    jbe         000000014000ED9A
    mov         ecx,label_0D
    int         label_29
    ret
func_000000014000ED9A_end:
    int         3
    push        rbx
    sub         rsp,label_20
    xor         ebx,ebx
    lea         rdx,[label_000000014003DDC8]
    xor         r8d,r8d
    lea         rcx,[rbx+rbx*4]
    lea         rcx,[rdx+rcx*8]
    mov         edx,label_0FA0
    call        000000014000FE54
    test        eax,eax
    je          000000014000EDD5
    inc         dword ptr [label_000000014003DDF0]
    inc         ebx
    cmp         ebx,1
    jb          000000014000EDA4
    mov         al,1
    jmp         000000014000EDDC
    call        000000014000EDE4
    xor         al,al
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000EDE1_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         ebx,dword ptr [label_000000014003DDF0]
    jmp         000000014000EE0F
    lea         rax,[label_000000014003DDC8]
    dec         ebx
    lea         rcx,[rbx+rbx*4]
    lea         rcx,[rax+rcx*8]
    call label_000000014002C018
    dec         dword ptr [label_000000014003DDF0]
    test        ebx,ebx
    jne         000000014000EDF2
    mov         al,1
    add         rsp,label_20
    pop         rbx
    ret
func_000000014000EE1A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         rax,rcx
    lea         r10,[label_0000000140000000]
    cmp         r8,label_0F
    ja          000000014000EF50
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         r9d,dword ptr [r10+r8*4+label_0000000000042000]
    add         r9,r10
    jmp         r9
    ret
func_000000014000EE5E_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    movzx       r10d,byte ptr [rdx+label_0E]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    mov         byte ptr [rax+label_0E],r10b
    ret
func_000000014000EE7F_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0A]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    mov         byte ptr [rax+label_0A],r9b
    ret
func_000000014000EE97_end:
    movzx       ecx,word ptr [rdx]
    mov         word ptr [rax],cx
    ret
func_000000014000EE9E_end:
    nop
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    movzx       r9d,byte ptr [rdx+6]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    mov         byte ptr [rax+6],r9b
    ret
func_000000014000EEB7_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    ret
func_000000014000EECE_end:
    movzx       ecx,word ptr [rdx]
    movzx       r8d,byte ptr [rdx+2]
    mov         word ptr [rax],cx
    mov         byte ptr [rax+2],r8b
    ret
func_000000014000EEDE_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         byte ptr [rax+label_0C],r9b
    ret
func_000000014000EEF5_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    ret
func_000000014000EF04_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,byte ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         byte ptr [rax+8],cl
    ret
func_000000014000EF12_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    ret
func_000000014000EF1F_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    ret
func_000000014000EF2E_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,byte ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         byte ptr [rax+4],r8b
    ret
func_000000014000EF3C_end:
    mov         rcx,qword ptr [rdx]
    mov         qword ptr [rax],rcx
    ret
func_000000014000EF43_end:
    movzx       ecx,byte ptr [rdx]
    mov         byte ptr [rax],cl
    ret
func_000000014000EF49_end:
    mov         ecx,dword ptr [rdx]
    mov         dword ptr [rax],ecx
    ret
func_000000014000EF4E_end:
    nop
    cmp         r8,label_20
    ja          000000014000EF6D
    movdqu      xmm1,xmmword ptr [rdx]
    movdqu      xmm2,xmmword ptr [rdx+r8-label_10]
    movdqu      xmmword ptr [rcx],xmm1
    movdqu      xmmword ptr [rcx+r8-label_10],xmm2
    ret
func_000000014000EF6C_end:
    lea         r9,[rdx+r8]
    cmp         rcx,rdx
    cmovbe      r9,rcx
    cmp         rcx,r9
    jb          0000000140010020
    cmp         r8,label_180000
    jae         000000014000EF97
    cmp         r8,label_2000
    jae         0000000140010000
    vmovdqu     ymm0,ymmword ptr [rdx]
    vmovdqu     ymm5,ymmword ptr [rdx+r8-label_20]
    cmp         r8,label_100
    jbe         000000014000F068
    mov         r9,rcx
    and         r9,label_1F
    sub         r9,label_20
    sub         rcx,r9
    sub         rdx,r9
    add         r8,r9
    cmp         r8,label_100
    jbe         000000014000F068
    cmp         r8,label_180000
    ja          000000014000F110
    nop         dword ptr [rax]
    vmovdqu     ymm1,ymmword ptr [rdx]
    vmovdqu     ymm2,ymmword ptr [rdx+label_20]
    vmovdqu     ymm3,ymmword ptr [rdx+label_40]
    vmovdqu     ymm4,ymmword ptr [rdx+label_60]
    vmovdqa     ymmword ptr [rcx],ymm1
    vmovdqa     ymmword ptr [rcx+label_20],ymm2
    vmovdqa     ymmword ptr [rcx+label_40],ymm3
    vmovdqa     ymmword ptr [rcx+label_60],ymm4
    vmovdqu     ymm1,ymmword ptr [rdx+label_0000000000000080]
    vmovdqu     ymm2,ymmword ptr [rdx+label_00000000000000A0]
    vmovdqu     ymm3,ymmword ptr [rdx+label_00000000000000C0]
    vmovdqu     ymm4,ymmword ptr [rdx+label_00000000000000E0]
    vmovdqa     ymmword ptr [rcx+label_0000000000000080],ymm1
    vmovdqa     ymmword ptr [rcx+label_00000000000000A0],ymm2
    vmovdqa     ymmword ptr [rcx+label_00000000000000C0],ymm3
    vmovdqa     ymmword ptr [rcx+label_00000000000000E0],ymm4
    add         rcx,label_100
    add         rdx,label_100
    sub         r8,label_100
    cmp         r8,label_100
    jae         000000014000EFE0
    lea         r9,[r8+label_1F]
    and         r9,label_0FFFFFFFFFFFFFFE0
    mov         r11,r9
    shr         r11,5
    mov         r11d,dword ptr [r10+r11*4+label_0000000000042040]
    add         r11,r10
    jmp         r11
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF00]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF00],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF20]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF20],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF40]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF40],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF60]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_80]
    vmovdqu     ymmword ptr [rcx+r9-label_80],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_60]
    vmovdqu     ymmword ptr [rcx+r9-label_60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_40]
    vmovdqu     ymmword ptr [rcx+r9-label_40],ymm1
    vmovdqu     ymmword ptr [rcx+r8-label_20],ymm5
    vmovdqu     ymmword ptr [rax],ymm0
    vzeroupper
    ret
func_000000014000F10D_end:
    nop
    vmovdqu     ymm1,ymmword ptr [rdx]
    vmovdqu     ymm2,ymmword ptr [rdx+label_20]
    vmovdqu     ymm3,ymmword ptr [rdx+label_40]
    vmovdqu     ymm4,ymmword ptr [rdx+label_60]
    vmovntdq    ymmword ptr [rcx],ymm1
    vmovntdq    ymmword ptr [rcx+label_20],ymm2
    vmovntdq    ymmword ptr [rcx+label_40],ymm3
    vmovntdq    ymmword ptr [rcx+label_60],ymm4
    vmovdqu     ymm1,ymmword ptr [rdx+label_0000000000000080]
    vmovdqu     ymm2,ymmword ptr [rdx+label_00000000000000A0]
    vmovdqu     ymm3,ymmword ptr [rdx+label_00000000000000C0]
    vmovdqu     ymm4,ymmword ptr [rdx+label_00000000000000E0]
    vmovntdq    ymmword ptr [rcx+label_0000000000000080],ymm1
    vmovntdq    ymmword ptr [rcx+label_00000000000000A0],ymm2
    vmovntdq    ymmword ptr [rcx+label_00000000000000C0],ymm3
    vmovntdq    ymmword ptr [rcx+label_00000000000000E0],ymm4
    add         rcx,label_100
    add         rdx,label_100
    sub         r8,label_100
    cmp         r8,label_100
    jae         000000014000F110
    lea         r9,[r8+label_1F]
    and         r9,label_0FFFFFFFFFFFFFFE0
    mov         r11,r9
    shr         r11,5
    mov         r11d,dword ptr [r10+r11*4+label_0000000000042064]
    add         r11,r10
    jmp         r11
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF00]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF00],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF20]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF20],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF40]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF40],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF60]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_80]
    vmovntdq    ymmword ptr [rcx+r9-label_80],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_60]
    vmovntdq    ymmword ptr [rcx+r9-label_60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_40]
    vmovntdq    ymmword ptr [rcx+r9-label_40],ymm1
    vmovdqu     ymmword ptr [rcx+r8-label_20],ymm5
    vmovdqu     ymmword ptr [rax],ymm0
    sfence
    vzeroupper
    ret
func_000000014000F240_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         rax,rcx
    lea         r10,[label_0000000140000000]
    cmp         r8,label_0F
    ja          000000014000F380
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         r9d,dword ptr [r10+r8*4+label_0000000000042090]
    add         r9,r10
    jmp         r9
    ret
func_000000014000F28E_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    movzx       r10d,byte ptr [rdx+label_0E]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    mov         byte ptr [rax+label_0E],r10b
    ret
func_000000014000F2AF_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0A]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    mov         byte ptr [rax+label_0A],r9b
    ret
func_000000014000F2C7_end:
    movzx       ecx,word ptr [rdx]
    mov         word ptr [rax],cx
    ret
func_000000014000F2CE_end:
    nop
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    movzx       r9d,byte ptr [rdx+6]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    mov         byte ptr [rax+6],r9b
    ret
func_000000014000F2E7_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    ret
func_000000014000F2FE_end:
    movzx       ecx,word ptr [rdx]
    movzx       r8d,byte ptr [rdx+2]
    mov         word ptr [rax],cx
    mov         byte ptr [rax+2],r8b
    ret
func_000000014000F30E_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         byte ptr [rax+label_0C],r9b
    ret
func_000000014000F325_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    ret
func_000000014000F334_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,byte ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         byte ptr [rax+8],cl
    ret
func_000000014000F342_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    ret
func_000000014000F34F_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    ret
func_000000014000F35E_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,byte ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         byte ptr [rax+4],r8b
    ret
func_000000014000F36C_end:
    mov         rcx,qword ptr [rdx]
    mov         qword ptr [rax],rcx
    ret
func_000000014000F373_end:
    movzx       ecx,byte ptr [rdx]
    mov         byte ptr [rax],cl
    ret
func_000000014000F379_end:
    mov         ecx,dword ptr [rdx]
    mov         dword ptr [rax],ecx
    ret
func_000000014000F37E_end:
    nop
    cmp         r8,label_20
    ja          000000014000F39D
    movdqu      xmm1,xmmword ptr [rdx]
    movdqu      xmm2,xmmword ptr [rdx+r8-label_10]
    movdqu      xmmword ptr [rcx],xmm1
    movdqu      xmmword ptr [rcx+r8-label_10],xmm2
    ret
func_000000014000F39C_end:
    lea         r9,[rdx+r8]
    cmp         rcx,rdx
    cmovbe      r9,rcx
    cmp         rcx,r9
    jb          0000000140010130
    cmp         r8,label_180000
    jae         000000014000F3C7
    cmp         r8,label_2000
    jae         0000000140010110
    vmovdqu     ymm0,ymmword ptr [rdx]
    vmovdqu     ymm5,ymmword ptr [rdx+r8-label_20]
    cmp         r8,label_100
    jbe         000000014000F498
    mov         r9,rcx
    and         r9,label_1F
    sub         r9,label_20
    sub         rcx,r9
    sub         rdx,r9
    add         r8,r9
    cmp         r8,label_100
    jbe         000000014000F498
    cmp         r8,label_180000
    ja          000000014000F540
    nop         dword ptr [rax]
    vmovdqu     ymm1,ymmword ptr [rdx]
    vmovdqu     ymm2,ymmword ptr [rdx+label_20]
    vmovdqu     ymm3,ymmword ptr [rdx+label_40]
    vmovdqu     ymm4,ymmword ptr [rdx+label_60]
    vmovdqa     ymmword ptr [rcx],ymm1
    vmovdqa     ymmword ptr [rcx+label_20],ymm2
    vmovdqa     ymmword ptr [rcx+label_40],ymm3
    vmovdqa     ymmword ptr [rcx+label_60],ymm4
    vmovdqu     ymm1,ymmword ptr [rdx+label_0000000000000080]
    vmovdqu     ymm2,ymmword ptr [rdx+label_00000000000000A0]
    vmovdqu     ymm3,ymmword ptr [rdx+label_00000000000000C0]
    vmovdqu     ymm4,ymmword ptr [rdx+label_00000000000000E0]
    vmovdqa     ymmword ptr [rcx+label_0000000000000080],ymm1
    vmovdqa     ymmword ptr [rcx+label_00000000000000A0],ymm2
    vmovdqa     ymmword ptr [rcx+label_00000000000000C0],ymm3
    vmovdqa     ymmword ptr [rcx+label_00000000000000E0],ymm4
    add         rcx,label_100
    add         rdx,label_100
    sub         r8,label_100
    cmp         r8,label_100
    jae         000000014000F410
    lea         r9,[r8+label_1F]
    and         r9,label_0FFFFFFFFFFFFFFE0
    mov         r11,r9
    shr         r11,5
    mov         r11d,dword ptr [r10+r11*4+label_00000000000420D0]
    add         r11,r10
    jmp         r11
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF00]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF00],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF20]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF20],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF40]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF40],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF60]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_80]
    vmovdqu     ymmword ptr [rcx+r9-label_80],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_60]
    vmovdqu     ymmword ptr [rcx+r9-label_60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_40]
    vmovdqu     ymmword ptr [rcx+r9-label_40],ymm1
    vmovdqu     ymmword ptr [rcx+r8-label_20],ymm5
    vmovdqu     ymmword ptr [rax],ymm0
    vzeroupper
    ret
func_000000014000F53D_end:
    nop
    vmovdqu     ymm1,ymmword ptr [rdx]
    vmovdqu     ymm2,ymmword ptr [rdx+label_20]
    vmovdqu     ymm3,ymmword ptr [rdx+label_40]
    vmovdqu     ymm4,ymmword ptr [rdx+label_60]
    vmovntdq    ymmword ptr [rcx],ymm1
    vmovntdq    ymmword ptr [rcx+label_20],ymm2
    vmovntdq    ymmword ptr [rcx+label_40],ymm3
    vmovntdq    ymmword ptr [rcx+label_60],ymm4
    vmovdqu     ymm1,ymmword ptr [rdx+label_0000000000000080]
    vmovdqu     ymm2,ymmword ptr [rdx+label_00000000000000A0]
    vmovdqu     ymm3,ymmword ptr [rdx+label_00000000000000C0]
    vmovdqu     ymm4,ymmword ptr [rdx+label_00000000000000E0]
    vmovntdq    ymmword ptr [rcx+label_0000000000000080],ymm1
    vmovntdq    ymmword ptr [rcx+label_00000000000000A0],ymm2
    vmovntdq    ymmword ptr [rcx+label_00000000000000C0],ymm3
    vmovntdq    ymmword ptr [rcx+label_00000000000000E0],ymm4
    add         rcx,label_100
    add         rdx,label_100
    sub         r8,label_100
    cmp         r8,label_100
    jae         000000014000F540
    lea         r9,[r8+label_1F]
    and         r9,label_0FFFFFFFFFFFFFFE0
    mov         r11,r9
    shr         r11,5
    mov         r11d,dword ptr [r10+r11*4+label_00000000000420F4]
    add         r11,r10
    jmp         r11
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF00]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF00],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF20]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF20],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF40]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF40],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF60]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_80]
    vmovntdq    ymmword ptr [rcx+r9-label_80],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_60]
    vmovntdq    ymmword ptr [rcx+r9-label_60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_40]
    vmovntdq    ymmword ptr [rcx+r9-label_40],ymm1
    vmovdqu     ymmword ptr [rcx+r8-label_20],ymm5
    vmovdqu     ymmword ptr [rax],ymm0
    sfence
    vzeroupper
    ret
func_000000014000F670_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         rax,rcx
    lea         r10,[label_0000000140000000]
    cmp         r8,label_0F
    ja          000000014000F7B0
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         r9d,dword ptr [r10+r8*4+label_0000000000042120]
    add         r9,r10
    jmp         r9
    ret
func_000000014000F6BE_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    movzx       r10d,byte ptr [rdx+label_0E]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    mov         byte ptr [rax+label_0E],r10b
    ret
func_000000014000F6DF_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0A]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    mov         byte ptr [rax+label_0A],r9b
    ret
func_000000014000F6F7_end:
    movzx       ecx,word ptr [rdx]
    mov         word ptr [rax],cx
    ret
func_000000014000F6FE_end:
    nop
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    movzx       r9d,byte ptr [rdx+6]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    mov         byte ptr [rax+6],r9b
    ret
func_000000014000F717_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    ret
func_000000014000F72E_end:
    movzx       ecx,word ptr [rdx]
    movzx       r8d,byte ptr [rdx+2]
    mov         word ptr [rax],cx
    mov         byte ptr [rax+2],r8b
    ret
func_000000014000F73E_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         byte ptr [rax+label_0C],r9b
    ret
func_000000014000F755_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    ret
func_000000014000F764_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,byte ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         byte ptr [rax+8],cl
    ret
func_000000014000F772_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    ret
func_000000014000F77F_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    ret
func_000000014000F78E_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,byte ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         byte ptr [rax+4],r8b
    ret
func_000000014000F79C_end:
    mov         rcx,qword ptr [rdx]
    mov         qword ptr [rax],rcx
    ret
func_000000014000F7A3_end:
    movzx       ecx,byte ptr [rdx]
    mov         byte ptr [rax],cl
    ret
func_000000014000F7A9_end:
    mov         ecx,dword ptr [rdx]
    mov         dword ptr [rax],ecx
    ret
func_000000014000F7AE_end:
    nop
    cmp         r8,label_20
    ja          000000014000F7CD
    movdqu      xmm1,xmmword ptr [rdx]
    movdqu      xmm2,xmmword ptr [rdx+r8-label_10]
    movdqu      xmmword ptr [rcx],xmm1
    movdqu      xmmword ptr [rcx+r8-label_10],xmm2
    ret
func_000000014000F7CC_end:
    lea         r9,[rdx+r8]
    cmp         rcx,rdx
    cmovbe      r9,rcx
    cmp         rcx,r9
    jb          0000000140010020
    cmp         r8,label_800
    jae         0000000140010000
    movdqu      xmm0,xmmword ptr [rdx]
    movdqu      xmm5,xmmword ptr [rdx+r8-label_10]
    cmp         r8,label_80
    jbe         000000014000F89C
    mov         r9,rcx
    and         r9,label_0F
    sub         r9,label_10
    sub         rcx,r9
    sub         rdx,r9
    add         r8,r9
    cmp         r8,label_80
    jbe         000000014000F89C
    nop         word ptr [rax+rax+label_0000000000000000]
    movdqu      xmm1,xmmword ptr [rdx]
    movdqu      xmm2,xmmword ptr [rdx+label_10]
    movdqu      xmm3,xmmword ptr [rdx+label_20]
    movdqu      xmm4,xmmword ptr [rdx+label_30]
    movdqa      xmmword ptr [rcx],xmm1
    movdqa      xmmword ptr [rcx+label_10],xmm2
    movdqa      xmmword ptr [rcx+label_20],xmm3
    movdqa      xmmword ptr [rcx+label_30],xmm4
    movdqu      xmm1,xmmword ptr [rdx+label_40]
    movdqu      xmm2,xmmword ptr [rdx+label_50]
    movdqu      xmm3,xmmword ptr [rdx+label_60]
    movdqu      xmm4,xmmword ptr [rdx+label_70]
    movdqa      xmmword ptr [rcx+label_40],xmm1
    movdqa      xmmword ptr [rcx+label_50],xmm2
    movdqa      xmmword ptr [rcx+label_60],xmm3
    movdqa      xmmword ptr [rcx+label_70],xmm4
    add         rcx,label_80
    add         rdx,label_80
    sub         r8,label_80
    cmp         r8,label_80
    jae         000000014000F830
    lea         r9,[r8+label_0F]
    and         r9,label_0FFFFFFFFFFFFFFF0
    mov         r11,r9
    shr         r11,4
    mov         r11d,dword ptr [r10+r11*4+label_0000000000042160]
    add         r11,r10
    jmp         r11
    movdqu      xmm1,xmmword ptr [rdx+r9-label_80]
    movdqu      xmmword ptr [rcx+r9-label_80],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_70]
    movdqu      xmmword ptr [rcx+r9-label_70],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_60]
    movdqu      xmmword ptr [rcx+r9-label_60],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_50]
    movdqu      xmmword ptr [rcx+r9-label_50],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_40]
    movdqu      xmmword ptr [rcx+r9-label_40],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_30]
    movdqu      xmmword ptr [rcx+r9-label_30],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_20]
    movdqu      xmmword ptr [rcx+r9-label_20],xmm1
    movdqu      xmmword ptr [rcx+r8-label_10],xmm5
    movdqu      xmmword ptr [rax],xmm0
    ret
func_000000014000F926_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         rax,rcx
    lea         r10,[label_0000000140000000]
    cmp         r8,label_0F
    ja          000000014000FA60
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         r9d,dword ptr [r10+r8*4+label_0000000000042190]
    add         r9,r10
    jmp         r9
    ret
func_000000014000F96E_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    movzx       r10d,byte ptr [rdx+label_0E]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    mov         byte ptr [rax+label_0E],r10b
    ret
func_000000014000F98F_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0A]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    mov         byte ptr [rax+label_0A],r9b
    ret
func_000000014000F9A7_end:
    movzx       ecx,word ptr [rdx]
    mov         word ptr [rax],cx
    ret
func_000000014000F9AE_end:
    nop
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    movzx       r9d,byte ptr [rdx+6]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    mov         byte ptr [rax+6],r9b
    ret
func_000000014000F9C7_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    ret
func_000000014000F9DE_end:
    movzx       ecx,word ptr [rdx]
    movzx       r8d,byte ptr [rdx+2]
    mov         word ptr [rax],cx
    mov         byte ptr [rax+2],r8b
    ret
func_000000014000F9EE_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         byte ptr [rax+label_0C],r9b
    ret
func_000000014000FA05_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    ret
func_000000014000FA14_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,byte ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         byte ptr [rax+8],cl
    ret
func_000000014000FA22_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    ret
func_000000014000FA2F_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    ret
func_000000014000FA3E_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,byte ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         byte ptr [rax+4],r8b
    ret
func_000000014000FA4C_end:
    mov         rcx,qword ptr [rdx]
    mov         qword ptr [rax],rcx
    ret
func_000000014000FA53_end:
    movzx       ecx,byte ptr [rdx]
    mov         byte ptr [rax],cl
    ret
func_000000014000FA59_end:
    mov         ecx,dword ptr [rdx]
    mov         dword ptr [rax],ecx
    ret
func_000000014000FA5E_end:
    nop
    cmp         r8,label_20
    ja          000000014000FA7D
    movdqu      xmm1,xmmword ptr [rdx]
    movdqu      xmm2,xmmword ptr [rdx+r8-label_10]
    movdqu      xmmword ptr [rcx],xmm1
    movdqu      xmmword ptr [rcx+r8-label_10],xmm2
    ret
func_000000014000FA7C_end:
    lea         r9,[rdx+r8]
    cmp         rcx,rdx
    cmovbe      r9,rcx
    cmp         rcx,r9
    jb          0000000140010130
    cmp         r8,label_800
    jae         0000000140010110
    movdqu      xmm0,xmmword ptr [rdx]
    movdqu      xmm5,xmmword ptr [rdx+r8-label_10]
    cmp         r8,label_80
    jbe         000000014000FB4C
    mov         r9,rcx
    and         r9,label_0F
    sub         r9,label_10
    sub         rcx,r9
    sub         rdx,r9
    add         r8,r9
    cmp         r8,label_80
    jbe         000000014000FB4C
    nop         word ptr [rax+rax+label_0000000000000000]
    movdqu      xmm1,xmmword ptr [rdx]
    movdqu      xmm2,xmmword ptr [rdx+label_10]
    movdqu      xmm3,xmmword ptr [rdx+label_20]
    movdqu      xmm4,xmmword ptr [rdx+label_30]
    movdqa      xmmword ptr [rcx],xmm1
    movdqa      xmmword ptr [rcx+label_10],xmm2
    movdqa      xmmword ptr [rcx+label_20],xmm3
    movdqa      xmmword ptr [rcx+label_30],xmm4
    movdqu      xmm1,xmmword ptr [rdx+label_40]
    movdqu      xmm2,xmmword ptr [rdx+label_50]
    movdqu      xmm3,xmmword ptr [rdx+label_60]
    movdqu      xmm4,xmmword ptr [rdx+label_70]
    movdqa      xmmword ptr [rcx+label_40],xmm1
    movdqa      xmmword ptr [rcx+label_50],xmm2
    movdqa      xmmword ptr [rcx+label_60],xmm3
    movdqa      xmmword ptr [rcx+label_70],xmm4
    add         rcx,label_80
    add         rdx,label_80
    sub         r8,label_80
    cmp         r8,label_80
    jae         000000014000FAE0
    lea         r9,[r8+label_0F]
    and         r9,label_0FFFFFFFFFFFFFFF0
    mov         r11,r9
    shr         r11,4
    mov         r11d,dword ptr [r10+r11*4+label_00000000000421D0]
    add         r11,r10
    jmp         r11
    movdqu      xmm1,xmmword ptr [rdx+r9-label_80]
    movdqu      xmmword ptr [rcx+r9-label_80],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_70]
    movdqu      xmmword ptr [rcx+r9-label_70],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_60]
    movdqu      xmmword ptr [rcx+r9-label_60],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_50]
    movdqu      xmmword ptr [rcx+r9-label_50],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_40]
    movdqu      xmmword ptr [rcx+r9-label_40],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_30]
    movdqu      xmmword ptr [rcx+r9-label_30],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_20]
    movdqu      xmmword ptr [rcx+r9-label_20],xmm1
    movdqu      xmmword ptr [rcx+r8-label_10],xmm5
    movdqu      xmmword ptr [rax],xmm0
    ret
func_000000014000FBD6_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_20
    mov         edi,ecx
    lea         r15,[label_0000000140000000]
    or          r14,label_0FFFFFFFFFFFFFFFF
    mov         r12,r9
    mov         rbp,r8
    mov         r13,rdx
    mov         rax,qword ptr [r15+rdi*8+label_000000000003DE78]
    nop
    cmp         rax,r14
    je          000000014000FCCA
    test        rax,rax
    jne         000000014000FCCC
    cmp         r8,r9
    je          000000014000FCC2
    mov         esi,dword ptr [rbp]
    mov         rbx,qword ptr [r15+rsi*8+label_000000000003DE60]
    nop
    test        rbx,rbx
    je          000000014000FC4A
    cmp         rbx,r14
    jne         000000014000FD09
    jmp         000000014000FCB5
    mov         r15,qword ptr [r15+rsi*8+label_000000000002E9A0]
    xor         edx,edx
    mov         rcx,r15
    mov         r8d,label_800
    call label_000000014002C140
    mov         rbx,rax
    test        rax,rax
    jne         000000014000FCE9
    call label_000000014002C0F8
    cmp         eax,label_57
    jne         000000014000FCA3
    lea         r8d,[rbx+7]
    mov         rcx,r15
    lea         rdx,[label_000000014002EA50]
    call        00000001400195C0
    test        eax,eax
    je          000000014000FCA3
    xor         r8d,r8d
    xor         edx,edx
    mov         rcx,r15
    call label_000000014002C140
    mov         rbx,rax
    test        rax,rax
    jne         000000014000FCE9
    mov         rax,r14
    lea         r15,[label_0000000140000000]
    xchg        rax,qword ptr [r15+rsi*8+label_000000000003DE60]
    add         rbp,4
    cmp         rbp,r12
    jne         000000014000FC2E
    xchg        r14,qword ptr [r15+rdi*8+label_000000000003DE78]
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_000000014000FCE8_end:
    mov         rax,rbx
    lea         r15,[label_0000000140000000]
    xchg        rax,qword ptr [r15+rsi*8+label_000000000003DE60]
    test        rax,rax
    je          000000014000FD09
    mov         rcx,rbx
    call label_000000014002C130
    mov         rdx,r13
    mov         rcx,rbx
    call label_000000014002C138
    test        rax,rax
    je          000000014000FCC2
    mov         rcx,rax
    xchg        rcx,qword ptr [r15+rdi*8+label_000000000003DE78]
    jmp         000000014000FCCC
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    lea         r9,[label_000000014002EA68]
    xor         ecx,ecx
    lea         r8,[label_000000014002EA60]
    lea         rdx,[label_000000014002EA68]
    call        000000014000FBD8
    test        rax,rax
    je          000000014000FD61
    mov         rcx,rbx
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C2B8]
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C110]
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         ebx,ecx
    lea         r9,[label_000000014002EA80]
    mov         ecx,1
    lea         r8,[label_000000014002EA78]
    lea         rdx,[label_000000014002EA80]
    call        000000014000FBD8
    mov         ecx,ebx
    test        rax,rax
    je          000000014000FDAA
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C2B8]
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C128]
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         ebx,ecx
    lea         r9,[label_000000014002EA90]
    mov         ecx,2
    lea         r8,[label_000000014002EA88]
    lea         rdx,[label_000000014002EA90]
    call        000000014000FBD8
    mov         ecx,ebx
    test        rax,rax
    je          000000014000FDF2
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C2B8]
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C118]
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rdx
    lea         r9,[label_000000014002EAA8]
    mov         edi,ecx
    lea         rdx,[label_000000014002EAA8]
    mov         ecx,3
    lea         r8,[label_000000014002EAA0]
    call        000000014000FBD8
    mov         rdx,rbx
    mov         ecx,edi
    test        rax,rax
    je          000000014000FE40
    call label_000000014002C2B8
    jmp         000000014000FE46
    call label_000000014002C120
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000FE50_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         esi,r8d
    lea         r9,[label_000000014002EAC0]
    mov         ebx,edx
    lea         r8,[label_000000014002EAB8]
    mov         rdi,rcx
    lea         rdx,[label_000000014002EAC0]
    mov         ecx,4
    call        000000014000FBD8
    mov         edx,ebx
    mov         rcx,rdi
    test        rax,rax
    je          000000014000FE9F
    mov         r8d,esi
    call label_000000014002C2B8
    jmp         000000014000FEA5
    call label_000000014002C108
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014000FEB4_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    sub         rsp,label_28
    mov         qword ptr [rsp+label_30],rcx
    mov         qword ptr [rsp+label_38],rdx
    mov         dword ptr [rsp+label_40],r8d
    mov         rdx,qword ptr [rdx]
    mov         rax,rcx
    call        000000014000ED30
    call        rax
    call        000000014000ED60
    mov         rcx,rax
    mov         rdx,qword ptr [rsp+label_38]
    mov         rdx,qword ptr [rdx]
    mov         r8d,2
    call        000000014000ED30
    add         rsp,label_28
    ret
func_000000014000FF3F_end:
    sub         rsp,label_28
    mov         qword ptr [rsp+label_30],rcx
    mov         qword ptr [rsp+label_38],rdx
    mov         dword ptr [rsp+label_40],r8d
    mov         rdx,qword ptr [rdx]
    mov         rax,rcx
    call        000000014000ED30
    call        rax
    call        000000014000ED60
    add         rsp,label_28
    ret
func_000000014000FF69_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    sub         rsp,label_28
    mov         qword ptr [rsp+label_30],rcx
    mov         qword ptr [rsp+label_38],rdx
    mov         rdx,qword ptr [rsp+label_38]
    mov         rdx,qword ptr [rdx]
    mov         r8d,2
    call        000000014000ED30
    add         rsp,label_28
    ret
func_000000014000FF95_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    sub         rsp,label_28
    mov         qword ptr [rsp+label_30],rcx
    mov         qword ptr [rsp+label_38],rdx
    mov         qword ptr [rsp+label_40],r8
    mov         dword ptr [rsp+label_48],r9d
    mov         r8d,r9d
    mov         rax,rcx
    call        000000014000ED30
    mov         rcx,qword ptr [rsp+label_40]
    call        rax
    call        000000014000ED60
    mov         rcx,rax
    mov         rdx,qword ptr [rsp+label_38]
    mov         r8d,2
    call        000000014000ED30
    add         rsp,label_28
    ret
func_000000014000FFE6_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    push        rdi
    push        rsi
    mov         rdi,rcx
    mov         rsi,rdx
    mov         rcx,r8
    rep movs    byte ptr [rdi],byte ptr [rsi]
    pop         rsi
    pop         rdi
    ret
func_000000014001000F_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    movups      xmm2,xmmword ptr [rdx]
    sub         rdx,rcx
    add         rcx,r8
    movups      xmm0,xmmword ptr [rcx+rdx-label_10]
    sub         rcx,label_10
    sub         r8,label_10
    test        cl,label_0F
    je          0000000140010053
    mov         r9,rcx
    and         rcx,label_0FFFFFFFFFFFFFFF0
    movups      xmm1,xmm0
    movups      xmm0,xmmword ptr [rcx+rdx]
    movups      xmmword ptr [r9],xmm1
    mov         r8,rcx
    sub         r8,rax
    mov         r9,r8
    shr         r9,7
    je          00000001400100CD
    movaps      xmmword ptr [rcx],xmm0
    jmp         0000000140010077
    nop         word ptr [rax+rax+label_0000000000000000]
    movaps      xmmword ptr [rcx+label_10],xmm0
    movaps      xmmword ptr [rcx],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx-label_10]
    movups      xmm1,xmmword ptr [rcx+rdx-label_20]
    sub         rcx,label_80
    movaps      xmmword ptr [rcx+label_70],xmm0
    movaps      xmmword ptr [rcx+label_60],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx+label_50]
    movups      xmm1,xmmword ptr [rcx+rdx+label_40]
    dec         r9
    movaps      xmmword ptr [rcx+label_50],xmm0
    movaps      xmmword ptr [rcx+label_40],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx+label_30]
    movups      xmm1,xmmword ptr [rcx+rdx+label_20]
    movaps      xmmword ptr [rcx+label_30],xmm0
    movaps      xmmword ptr [rcx+label_20],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx+label_10]
    movups      xmm1,xmmword ptr [rcx+rdx]
    jne         0000000140010070
    movaps      xmmword ptr [rcx+label_10],xmm0
    and         r8,label_7F
    movaps      xmm0,xmm1
    mov         r9,r8
    shr         r9,4
    je          00000001400100F0
    nop         word ptr [rax+rax+label_0000000000000000]
    movups      xmmword ptr [rcx],xmm0
    sub         rcx,label_10
    movups      xmm0,xmmword ptr [rcx+rdx]
    dec         r9
    jne         00000001400100E0
    and         r8,label_0F
    je          00000001400100F9
    movups      xmmword ptr [rax],xmm2
    movups      xmmword ptr [rcx],xmm0
    ret
func_00000001400100FC_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    push        rdi
    push        rsi
    mov         rdi,rcx
    mov         rsi,rdx
    mov         rcx,r8
    rep movs    byte ptr [rdi],byte ptr [rsi]
    pop         rsi
    pop         rdi
    ret
func_000000014001011F_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    movups      xmm2,xmmword ptr [rdx]
    sub         rdx,rcx
    add         rcx,r8
    movups      xmm0,xmmword ptr [rcx+rdx-label_10]
    sub         rcx,label_10
    sub         r8,label_10
    test        cl,label_0F
    je          0000000140010163
    mov         r9,rcx
    and         rcx,label_0FFFFFFFFFFFFFFF0
    movups      xmm1,xmm0
    movups      xmm0,xmmword ptr [rcx+rdx]
    movups      xmmword ptr [r9],xmm1
    mov         r8,rcx
    sub         r8,rax
    mov         r9,r8
    shr         r9,7
    je          00000001400101DD
    movaps      xmmword ptr [rcx],xmm0
    jmp         0000000140010187
    nop         word ptr [rax+rax+label_0000000000000000]
    movaps      xmmword ptr [rcx+label_10],xmm0
    movaps      xmmword ptr [rcx],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx-label_10]
    movups      xmm1,xmmword ptr [rcx+rdx-label_20]
    sub         rcx,label_80
    movaps      xmmword ptr [rcx+label_70],xmm0
    movaps      xmmword ptr [rcx+label_60],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx+label_50]
    movups      xmm1,xmmword ptr [rcx+rdx+label_40]
    dec         r9
    movaps      xmmword ptr [rcx+label_50],xmm0
    movaps      xmmword ptr [rcx+label_40],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx+label_30]
    movups      xmm1,xmmword ptr [rcx+rdx+label_20]
    movaps      xmmword ptr [rcx+label_30],xmm0
    movaps      xmmword ptr [rcx+label_20],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx+label_10]
    movups      xmm1,xmmword ptr [rcx+rdx]
    jne         0000000140010180
    movaps      xmmword ptr [rcx+label_10],xmm0
    and         r8,label_7F
    movaps      xmm0,xmm1
    mov         r9,r8
    shr         r9,4
    je          0000000140010200
    nop         word ptr [rax+rax+label_0000000000000000]
    movups      xmmword ptr [rcx],xmm0
    sub         rcx,label_10
    movups      xmm0,xmmword ptr [rcx+rdx]
    dec         r9
    jne         00000001400101F0
    and         r8,label_0F
    je          0000000140010209
    movups      xmmword ptr [rax],xmm2
    movups      xmmword ptr [rcx],xmm0
    ret
func_000000014001020C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    push        rdi
    sub         rsp,label_20
    cmp         qword ptr [rcx],0
    mov         rdi,rcx
    jne         0000000140010263
    call label_000000014002C0F8
    cmp         byte ptr [rdi+label_10],0
    mov         dword ptr [rsp+label_30],eax
    jne         0000000140010240
    and         qword ptr [rdi+8],0
    xor         edx,edx
    mov         byte ptr [rdi+label_10],1
    jmp         0000000140010244
    mov         rdx,qword ptr [rdi+8]
    lea         rcx,[rsp+label_30]
    call        0000000140019BA4
    mov         ecx,dword ptr [rsp+label_30]
    mov         rbx,rax
    mov         qword ptr [rdi],rax
    call label_000000014002C100
    test        rbx,rbx
    je          0000000140010271
    mov         rax,qword ptr [rdi]
    mov         rbx,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140010270_end:
    call        0000000140015954
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         rsi,qword ptr [rcx]
    xor         edi,edi
    mov         rbx,rcx
    test        rsi,rsi
    jne         00000001400102CF
    call label_000000014002C0F8
    mov         dword ptr [rsp+label_30],eax
    cmp         byte ptr [rbx+label_10],dil
    jne         00000001400102AE
    mov         qword ptr [rbx+8],rdi
    mov         byte ptr [rbx+label_10],1
    jmp         00000001400102B2
    mov         rdi,qword ptr [rbx+8]
    mov         rdx,rdi
    lea         rcx,[rsp+label_30]
    call        0000000140019BA4
    mov         ecx,dword ptr [rsp+label_30]
    mov         rsi,rax
    mov         qword ptr [rbx],rax
    call label_000000014002C100
    mov         rbx,qword ptr [rsp+label_38]
    mov         rax,rsi
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400102E1_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    xor         ebx,ebx
    mov         rdi,rdx
    mov         rsi,rcx
    cmp         byte ptr [rdx+label_10],bl
    jne         0000000140010318
    call label_000000014002C0F8
    mov         ecx,eax
    mov         qword ptr [rdi+8],rbx
    mov         byte ptr [rdi+label_10],1
    call label_000000014002C100
    jmp         000000014001031C
    mov         rbx,qword ptr [rdx+8]
    lea         rax,[rsi+rbx*8]
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001032F_end:
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rbp
    push        rdi
    push        r14
    lea         rbp,[rsp+label_FFFFFFFFFFFFFB10]
    sub         rsp,label_5F0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_00000000000004E0],rax
    mov         edi,r8d
    mov         esi,edx
    mov         ebx,ecx
    cmp         ecx,label_0FFFFFFFF
    je          000000014001036F
    call        000000014000A50C
    xor         edx,edx
    lea         rcx,[rsp+label_70]
    mov         r8d,label_98
    call        000000014002A110
    xor         edx,edx
    lea         rcx,[rbp+label_10]
    mov         r8d,label_4D0
    call        000000014002A110
    lea         rax,[rsp+label_70]
    mov         qword ptr [rsp+label_48],rax
    lea         rcx,[rbp+label_10]
    lea         rax,[rbp+label_10]
    mov         qword ptr [rsp+label_50],rax
    call label_000000014002C058
    mov         r14,qword ptr [rbp+label_0000000000000108]
    lea         rdx,[rsp+label_40]
    mov         rcx,r14
    xor         r8d,r8d
    call label_000000014002C060
    test        rax,rax
    je          0000000140010402
    and         qword ptr [rsp+label_38],0
    lea         rcx,[rsp+label_58]
    mov         rdx,qword ptr [rsp+label_40]
    mov         r9,rax
    mov         qword ptr [rsp+label_30],rcx
    mov         r8,r14
    lea         rcx,[rsp+label_60]
    mov         qword ptr [rsp+label_28],rcx
    lea         rcx,[rbp+label_10]
    mov         qword ptr [rsp+label_20],rcx
    xor         ecx,ecx
    call label_000000014002C068
    mov         rax,qword ptr [rbp+label_0000000000000508]
    mov         qword ptr [rbp+label_0000000000000108],rax
    lea         rax,[rbp+label_0000000000000508]
    add         rax,8
    mov         dword ptr [rsp+label_70],esi
    mov         qword ptr [rbp+label_00000000000000A8],rax
    mov         rax,qword ptr [rbp+label_0000000000000508]
    mov         qword ptr [rbp-label_80],rax
    mov         dword ptr [rsp+label_74],edi
    call label_000000014002C0C0
    xor         ecx,ecx
    mov         edi,eax
    call label_000000014002C078
    lea         rcx,[rsp+label_48]
    call label_000000014002C070
    test        eax,eax
    jne         0000000140010464
    test        edi,edi
    jne         0000000140010464
    cmp         ebx,label_0FFFFFFFF
    je          0000000140010464
    mov         ecx,ebx
    call        000000014000A50C
    mov         rcx,qword ptr [rbp+label_00000000000004E0]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_00000000000005F0]
    mov         rbx,qword ptr [r11+label_28]
    mov         rsi,qword ptr [r11+label_30]
    mov         rsp,r11
    pop         r14
    pop         rdi
    pop         rbp
    ret
func_000000014001048A_end:
    int         3
    mov         qword ptr [label_000000014003DEA0],rcx
    ret
func_0000000140010493_end:
    mov         qword ptr [rsp+8],rbx
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_70
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         00000001400104CF
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         rax,[rbp-label_40]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rbp+label_30]
    mov         qword ptr [rsp+label_20],rax
    call        0000000140010530
    cmp         byte ptr [rbp-label_18],2
    jne         00000001400104F7
    mov         rax,qword ptr [rbp-label_40]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          000000014001050C
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          0000000140010521
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         rbx,qword ptr [rsp+label_0000000000000080]
    add         rsp,label_70
    pop         rbp
    ret
func_000000014001052E_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_30
    mov         rbp,rcx
    mov         ebx,r9d
    mov         rcx,qword ptr [rsp+label_68]
    mov         rdi,r8
    mov         rsi,rdx
    call        0000000140010278
    test        rax,rax
    je          00000001400105A6
    mov         rax,qword ptr [rax+label_00000000000003B8]
    test        rax,rax
    je          00000001400105A6
    mov         r10,label_0D6BC1F4834572A70
    mov         rcx,qword ptr [rsp+label_60]
    mov         rdx,rsi
    mov         qword ptr [rsp+label_20],rcx
    mov         r8,rdi
    mov         rcx,rbp
    mov         r9d,ebx
    call label_000000014002C2C0
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_00000001400105A5_end:
    mov         rdx,qword ptr [rsp+label_68]
    lea         rcx,[label_000000014003DEA0]
    call        00000001400102E4
    mov         r11,qword ptr [rax]
    mov         rax,qword ptr [label_000000014003C040]
    xor         r11,rax
    mov         ecx,eax
    and         ecx,label_3F
    ror         r11,cl
    test        r11,r11
    je          00000001400105E0
    mov         r10,label_0D6BC1F4834572A70
    mov         rax,r11
    jmp         0000000140010575
    mov         rax,qword ptr [rsp+label_60]
    mov         r9d,ebx
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    mov         rdx,rsi
    mov         rcx,rbp
    call        000000014001064C
    int         3
    sub         rsp,label_38
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010494
    add         rsp,label_38
    ret
func_0000000140010619_end:
    int         3
    int         3
    sub         rsp,label_38
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010494
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    sub         rsp,label_28
    mov         ecx,label_17
    call label_000000014002C090
    test        eax,eax
    je          0000000140010666
    mov         ecx,5
    int         label_29
    mov         r8d,1
    mov         edx,label_0C0000417
    lea         ecx,[r8+1]
    call        0000000140010330
    call label_000000014002C080
    mov         rcx,rax
    mov         edx,label_0C0000417
    add         rsp,label_28
    jmp         qword ptr [label_000000014002C088]
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    lea         rbp,[rsp+label_FFFFFFFFFFFFFC30]
    sub         rsp,label_4D0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_00000000000003C0],rax
    mov         rax,qword ptr [rbp+label_0000000000000430]
    xor         r12d,r12d
    mov         rdi,r8
    mov         rsi,rdx
    mov         r15,rcx
    test        r9,r9
    jne         0000000140010703
    mov         byte ptr [rax+label_30],1
    xor         r9d,r9d
    mov         qword ptr [rsp+label_28],rax
    xor         r8d,r8d
    xor         edx,edx
    mov         dword ptr [rax+label_2C],label_16
    xor         ecx,ecx
    mov         qword ptr [rsp+label_20],r12
    call        0000000140010530
    or          eax,label_0FFFFFFFF
    jmp         0000000140010807
    test        rdi,rdi
    je          000000014001070D
    test        rsi,rsi
    je          00000001400106D7
    mov         r14,r15
    mov         dword ptr [rsp+label_49],r12d
    mov         word ptr [rsp+label_4D],r12w
    mov         byte ptr [rsp+label_4F],r12b
    mov         qword ptr [rsp+label_30],rsi
    mov         qword ptr [rsp+label_38],rdi
    mov         qword ptr [rsp+label_40],r12
    and         r14d,2
    jne         000000014001073F
    mov         byte ptr [rsp+label_48],r12b
    test        rsi,rsi
    jne         0000000140010744
    mov         byte ptr [rsp+label_48],1
    mov         qword ptr [rsp+label_58],rax
    lea         rcx,[rsp+label_50]
    lea         rax,[rsp+label_30]
    mov         dword ptr [rsp+label_70],r12d
    mov         qword ptr [rbp+label_00000000000003B0],rax
    xorps       xmm0,xmm0
    mov         rax,qword ptr [rbp+label_0000000000000438]
    mov         qword ptr [rsp+label_68],rax
    mov         byte ptr [rsp+label_74],r12b
    mov         qword ptr [rsp+label_78],r12
    mov         dword ptr [rbp-label_80],r12d
    mov         word ptr [rbp-label_78],r12w
    mov         dword ptr [rbp-label_68],r12d
    mov         byte ptr [rbp-label_64],r12b
    movdqa      xmmword ptr [rbp+label_00000000000003A0],xmm0
    mov         qword ptr [rsp+label_50],r15
    mov         qword ptr [rsp+label_60],r9
    mov         dword ptr [rbp+label_00000000000003B8],r12d
    call        00000001400115EC
    movsxd      rbx,eax
    test        rsi,rsi
    je          00000001400107F9
    test        r15b,1
    je          00000001400107D8
    test        rdi,rdi
    jne         00000001400107C3
    test        eax,eax
    je          00000001400107C3
    or          ebx,label_0FFFFFFFF
    jmp         00000001400107F9
    mov         rax,qword ptr [rsp+label_40]
    cmp         rax,rdi
    jne         00000001400107F5
    test        ebx,ebx
    js          00000001400107F9
    cmp         rbx,rdi
    jbe         00000001400107F9
    jmp         00000001400107BE
    test        r14,r14
    je          0000000140010828
    test        rdi,rdi
    je          00000001400107F9
    test        eax,eax
    jns         00000001400107EB
    mov         byte ptr [rsi],r12b
    jmp         00000001400107F9
    mov         rax,qword ptr [rsp+label_40]
    cmp         rax,rdi
    je          000000014001083C
    mov         byte ptr [rsi+rax],r12b
    mov         rcx,qword ptr [rbp+label_00000000000003A8]
    call        0000000140019CC4
    mov         eax,ebx
    mov         rcx,qword ptr [rbp+label_00000000000003C0]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_4D0
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_0000000140010827_end:
    test        rdi,rdi
    je          00000001400107BE
    mov         rax,qword ptr [rsp+label_40]
    cmp         rax,rdi
    jne         00000001400107F5
    mov         ebx,label_0FFFFFFFE
    mov         byte ptr [rsi+rdi-1],r12b
    jmp         00000001400107F9
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         rax,label_7FFFFFFFFFFFFFFF
    mov         rbp,rcx
    cmp         rdx,rax
    jbe         000000014001087B
    mov         byte ptr [r8+label_30],1
    xor         al,al
    mov         dword ptr [r8+label_2C],label_0C
    jmp         00000001400108D7
    xor         edi,edi
    lea         rsi,[rdx+rdx]
    cmp         qword ptr [rcx+label_0000000000000408],rdi
    jne         0000000140010893
    cmp         rsi,label_400
    jbe         000000014001089C
    cmp         rsi,qword ptr [rcx+label_0000000000000400]
    ja          00000001400108A0
    mov         al,1
    jmp         00000001400108D7
    mov         rcx,rsi
    call        0000000140019D00
    mov         rbx,rax
    test        rax,rax
    je          00000001400108CD
    mov         rcx,qword ptr [rbp+label_0000000000000408]
    call        0000000140019CC4
    mov         qword ptr [rbp+label_0000000000000408],rbx
    mov         dil,1
    mov         qword ptr [rbp+label_0000000000000400],rsi
    xor         ecx,ecx
    call        0000000140019CC4
    mov         al,dil
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400108EB_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         r12,qword ptr [rdx]
    mov         ebp,r8d
    mov         rbx,rdx
    mov         r13,rcx
    test        r12,r12
    jne         000000014001092B
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    jmp         000000014001095D
    test        ebp,ebp
    je          0000000140010975
    lea         eax,[r8-2]
    cmp         eax,label_22
    jbe         0000000140010975
    mov         byte ptr [rcx+label_30],1
    xor         r9d,r9d
    mov         dword ptr [rcx+label_2C],label_16
    xor         r8d,r8d
    mov         qword ptr [rsp+label_28],r13
    xor         ecx,ecx
    and         qword ptr [rsp+label_20],0
    xor         edx,edx
    call        0000000140010530
    mov         rcx,qword ptr [rbx+8]
    test        rcx,rcx
    je          0000000140010AE8
    mov         rax,qword ptr [rbx]
    mov         qword ptr [rcx],rax
    jmp         0000000140010AE8
    mov         sil,byte ptr [r12]
    lea         rcx,[r12+1]
    xor         r14d,r14d
    movzx       eax,r9b
    mov         edi,eax
    mov         qword ptr [rdx],rcx
    lea         r15d,[r14+2]
    or          edi,r15d
    cmp         sil,label_2D
    cmovne      edi,eax
    je          00000001400109A0
    cmp         sil,label_2B
    jne         00000001400109A9
    mov         sil,byte ptr [rcx]
    inc         rcx
    mov         qword ptr [rdx],rcx
    test        ebp,label_0FFFFFFEF
    jne         0000000140010A3D
    lea         eax,[rsi-label_30]
    cmp         al,9
    ja          00000001400109C5
    movsx       eax,sil
    add         eax,label_0FFFFFFD0
    jmp         00000001400109E3
    lea         eax,[rsi-label_61]
    cmp         al,label_19
    ja          00000001400109D5
    movsx       eax,sil
    add         eax,label_0FFFFFFA9
    jmp         00000001400109E3
    lea         eax,[rsi-label_41]
    cmp         al,label_19
    ja          0000000140010A31
    movsx       eax,sil
    add         eax,label_0FFFFFFC9
    test        eax,eax
    jne         0000000140010A31
    mov         dl,byte ptr [rcx]
    lea         r8,[rcx+1]
    mov         qword ptr [rbx],r8
    lea         eax,[rdx-label_58]
    test        al,label_0DF
    je          0000000140010A20
    test        ebp,ebp
    mov         qword ptr [rbx],rcx
    mov         eax,8
    cmovne      eax,ebp
    mov         ebp,eax
    test        dl,dl
    je          0000000140010A3D
    cmp         byte ptr [rcx],dl
    je          0000000140010A3D
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    jmp         0000000140010A3D
    mov         sil,byte ptr [r8]
    lea         rax,[r8+1]
    mov         qword ptr [rbx],rax
    mov         eax,label_10
    jmp         0000000140010A36
    mov         eax,label_0A
    test        ebp,ebp
    cmovne      eax,ebp
    mov         ebp,eax
    mov         r8,qword ptr [rbx]
    xor         edx,edx
    or          eax,label_0FFFFFFFF
    div         eax,ebp
    mov         r9d,eax
    lea         ecx,[rsi-label_30]
    cmp         cl,9
    ja          0000000140010A5B
    movsx       ecx,sil
    add         ecx,label_0FFFFFFD0
    jmp         0000000140010A7E
    lea         eax,[rsi-label_61]
    cmp         al,label_19
    ja          0000000140010A6B
    movsx       ecx,sil
    add         ecx,label_0FFFFFFA9
    jmp         0000000140010A7E
    lea         eax,[rsi-label_41]
    cmp         al,label_19
    ja          0000000140010A7B
    movsx       ecx,sil
    add         ecx,label_0FFFFFFC9
    jmp         0000000140010A7E
    or          ecx,label_0FFFFFFFF
    cmp         ecx,ebp
    jae         0000000140010AB2
    mov         sil,byte ptr [r8]
    mov         eax,r14d
    imul        eax,ebp
    lea         edx,[rax+rcx]
    xor         ecx,ecx
    cmp         edx,eax
    setb        cl
    xor         eax,eax
    cmp         r14d,r9d
    mov         r14d,edx
    seta        al
    or          ecx,eax
    shl         ecx,2
    or          ecx,8
    or          edi,ecx
    inc         r8
    mov         qword ptr [rbx],r8
    jmp         0000000140010A4A
    lea         rax,[r8-1]
    mov         qword ptr [rbx],rax
    test        sil,sil
    je          0000000140010AD3
    cmp         byte ptr [rax],sil
    je          0000000140010AD3
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    test        dil,8
    jne         0000000140010AEF
    mov         rax,qword ptr [rbx+8]
    mov         qword ptr [rbx],r12
    test        rax,rax
    je          0000000140010AE8
    mov         qword ptr [rax],r12
    xor         eax,eax
    jmp         0000000140010B82
    mov         r8d,label_80000000
    lea         r9d,[r8-1]
    test        dil,4
    je          0000000140010B08
    mov         eax,1
    mov         ecx,edi
    jmp         0000000140010B26
    test        dil,1
    je          0000000140010B68
    test        r15b,dil
    je          0000000140010B1A
    cmp         r14d,r8d
    jbe         0000000140010B6D
    jmp         0000000140010B1F
    cmp         r14d,r9d
    jbe         0000000140010B70
    mov         ecx,1
    mov         eax,edi
    and         edi,r15d
    mov         byte ptr [r13+label_30],1
    mov         dword ptr [r13+label_2C],label_22
    test        eax,ecx
    jne         0000000140010B40
    or          r14d,label_0FFFFFFFF
    jmp         0000000140010B70
    mov         rdx,qword ptr [rbx+8]
    test        edi,edi
    je          0000000140010B58
    test        rdx,rdx
    je          0000000140010B53
    mov         rcx,qword ptr [rbx]
    mov         qword ptr [rdx],rcx
    mov         eax,r8d
    jmp         0000000140010B82
    test        rdx,rdx
    je          0000000140010B63
    mov         rcx,qword ptr [rbx]
    mov         qword ptr [rdx],rcx
    mov         eax,r9d
    jmp         0000000140010B82
    test        r15b,dil
    je          0000000140010B70
    neg         r14d
    mov         rax,qword ptr [rbx+8]
    test        rax,rax
    je          0000000140010B7F
    mov         rcx,qword ptr [rbx]
    mov         qword ptr [rax],rcx
    mov         eax,r14d
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_0000000140010B9E_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_30
    mov         r8d,dword ptr [rcx+label_34]
    mov         bpl,dl
    mov         rbx,rcx
    mov         r14d,8
    cmp         r8d,5
    jg          0000000140010C9C
    je          0000000140010C02
    test        r8d,r8d
    je          0000000140010CF3
    sub         r8d,1
    je          0000000140010C73
    sub         r8d,1
    je          0000000140010C4B
    sub         r8d,1
    je          0000000140010CF3
    cmp         r8d,1
    jne         0000000140010CBF
    mov         edx,dword ptr [rcx+label_28]
    mov         rdi,r14
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        al,1
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    mov         rsi,qword ptr [rcx]
    mov         eax,edx
    shr         eax,4
    test        al,1
    je          0000000140010C35
    test        rsi,rsi
    jns         0000000140010C35
    neg         rsi
    or          edx,label_40
    mov         dword ptr [rbx+label_28],edx
    cmp         dword ptr [rbx+label_30],0
    jge         0000000140010D1F
    mov         dword ptr [rbx+label_30],1
    jmp         0000000140010D36
    mov         edx,dword ptr [rcx+label_28]
    mov         edi,2
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        al,1
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    je          0000000140010C6E
    movsx       rsi,word ptr [rcx]
    jmp         0000000140010C1E
    movzx       esi,word ptr [rcx]
    jmp         0000000140010C1E
    mov         edx,dword ptr [rcx+label_28]
    mov         edi,1
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        dil,al
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    je          0000000140010C97
    movsx       rsi,byte ptr [rcx]
    jmp         0000000140010C1E
    movzx       esi,byte ptr [rcx]
    jmp         0000000140010C1E
    sub         r8d,6
    je          0000000140010C02
    sub         r8d,1
    je          0000000140010C02
    sub         r8d,2
    je          0000000140010C02
    jmp         0000000140010BEE
    mov         rax,qword ptr [rcx+8]
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    mov         rax,qword ptr [rcx+8]
    xor         ecx,ecx
    mov         qword ptr [rsp+label_28],rax
    and         qword ptr [rsp+label_20],0
    call        0000000140010530
    xor         al,al
    jmp         0000000140010D88
    mov         edx,dword ptr [rcx+label_28]
    mov         edi,4
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        al,1
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    je          0000000140010D18
    movsxd      rsi,dword ptr [rcx]
    jmp         0000000140010C1E
    mov         esi,dword ptr [rcx]
    jmp         0000000140010C1E
    mov         r8,qword ptr [rbx+8]
    lea         rcx,[rbx+label_50]
    and         edx,label_0FFFFFFF7
    mov         dword ptr [rbx+label_28],edx
    movsxd      rdx,dword ptr [rbx+label_30]
    call        0000000140010844
    test        rsi,rsi
    jne         0000000140010D3F
    and         dword ptr [rbx+label_28],label_0FFFFFFDF
    mov         byte ptr [rbx+label_4C],0
    mov         r8b,bpl
    mov         rcx,rbx
    cmp         rdi,r14
    jne         0000000140010D58
    mov         rdx,rsi
    call        000000014001134C
    jmp         0000000140010D5F
    mov         edx,esi
    call        00000001400111AC
    mov         eax,dword ptr [rbx+label_28]
    shr         eax,7
    test        al,1
    je          0000000140010D86
    cmp         dword ptr [rbx+label_48],0
    je          0000000140010D78
    mov         rax,qword ptr [rbx+label_40]
    cmp         byte ptr [rax],label_30
    je          0000000140010D86
    dec         qword ptr [rbx+label_40]
    mov         rcx,qword ptr [rbx+label_40]
    mov         byte ptr [rcx],label_30
    inc         dword ptr [rbx+label_48]
    mov         al,1
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r14
    ret
func_0000000140010DA2_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_30
    mov         r8d,dword ptr [rcx+label_34]
    mov         bpl,dl
    mov         rbx,rcx
    mov         r14d,8
    cmp         r8d,5
    jg          0000000140010EA0
    je          0000000140010E06
    test        r8d,r8d
    je          0000000140010EF7
    sub         r8d,1
    je          0000000140010E77
    sub         r8d,1
    je          0000000140010E4F
    sub         r8d,1
    je          0000000140010EF7
    cmp         r8d,1
    jne         0000000140010EC3
    mov         edx,dword ptr [rcx+label_28]
    mov         rdi,r14
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        al,1
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    mov         rsi,qword ptr [rcx]
    mov         eax,edx
    shr         eax,4
    test        al,1
    je          0000000140010E39
    test        rsi,rsi
    jns         0000000140010E39
    neg         rsi
    or          edx,label_40
    mov         dword ptr [rbx+label_28],edx
    cmp         dword ptr [rbx+label_30],0
    jge         0000000140010F23
    mov         dword ptr [rbx+label_30],1
    jmp         0000000140010F3A
    mov         edx,dword ptr [rcx+label_28]
    mov         edi,2
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        al,1
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    je          0000000140010E72
    movsx       rsi,word ptr [rcx]
    jmp         0000000140010E22
    movzx       esi,word ptr [rcx]
    jmp         0000000140010E22
    mov         edx,dword ptr [rcx+label_28]
    mov         edi,1
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        dil,al
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    je          0000000140010E9B
    movsx       rsi,byte ptr [rcx]
    jmp         0000000140010E22
    movzx       esi,byte ptr [rcx]
    jmp         0000000140010E22
    sub         r8d,6
    je          0000000140010E06
    sub         r8d,1
    je          0000000140010E06
    sub         r8d,2
    je          0000000140010E06
    jmp         0000000140010DF2
    mov         rax,qword ptr [rcx+8]
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    mov         rax,qword ptr [rcx+8]
    xor         ecx,ecx
    mov         qword ptr [rsp+label_28],rax
    and         qword ptr [rsp+label_20],0
    call        0000000140010530
    xor         al,al
    jmp         0000000140010F8C
    mov         edx,dword ptr [rcx+label_28]
    mov         edi,4
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        al,1
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    je          0000000140010F1C
    movsxd      rsi,dword ptr [rcx]
    jmp         0000000140010E22
    mov         esi,dword ptr [rcx]
    jmp         0000000140010E22
    mov         r8,qword ptr [rbx+8]
    lea         rcx,[rbx+label_50]
    and         edx,label_0FFFFFFF7
    mov         dword ptr [rbx+label_28],edx
    movsxd      rdx,dword ptr [rbx+label_30]
    call        0000000140010844
    test        rsi,rsi
    jne         0000000140010F43
    and         dword ptr [rbx+label_28],label_0FFFFFFDF
    mov         byte ptr [rbx+label_4C],0
    mov         r8b,bpl
    mov         rcx,rbx
    cmp         rdi,r14
    jne         0000000140010F5C
    mov         rdx,rsi
    call        00000001400113BC
    jmp         0000000140010F63
    mov         edx,esi
    call        000000014001121C
    mov         eax,dword ptr [rbx+label_28]
    shr         eax,7
    test        al,1
    je          0000000140010F8A
    cmp         dword ptr [rbx+label_48],0
    je          0000000140010F7C
    mov         rax,qword ptr [rbx+label_40]
    cmp         byte ptr [rax],label_30
    je          0000000140010F8A
    dec         qword ptr [rbx+label_40]
    mov         rcx,qword ptr [rbx+label_40]
    mov         byte ptr [rcx],label_30
    inc         dword ptr [rbx+label_48]
    mov         al,1
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r14
    ret
func_0000000140010FA6_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_30
    mov         r8d,dword ptr [rcx+label_34]
    mov         bpl,dl
    mov         rbx,rcx
    mov         r14d,8
    cmp         r8d,5
    jg          00000001400110A4
    je          000000014001100A
    test        r8d,r8d
    je          00000001400110FB
    sub         r8d,1
    je          000000014001107B
    sub         r8d,1
    je          0000000140011053
    sub         r8d,1
    je          00000001400110FB
    cmp         r8d,1
    jne         00000001400110C7
    mov         edx,dword ptr [rcx+label_28]
    mov         rdi,r14
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        al,1
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    mov         rsi,qword ptr [rcx]
    mov         eax,edx
    shr         eax,4
    test        al,1
    je          000000014001103D
    test        rsi,rsi
    jns         000000014001103D
    neg         rsi
    or          edx,label_40
    mov         dword ptr [rbx+label_28],edx
    cmp         dword ptr [rbx+label_30],0
    jge         0000000140011127
    mov         dword ptr [rbx+label_30],1
    jmp         000000014001113E
    mov         edx,dword ptr [rcx+label_28]
    mov         edi,2
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        al,1
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    je          0000000140011076
    movsx       rsi,word ptr [rcx]
    jmp         0000000140011026
    movzx       esi,word ptr [rcx]
    jmp         0000000140011026
    mov         edx,dword ptr [rcx+label_28]
    mov         edi,1
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        dil,al
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    je          000000014001109F
    movsx       rsi,byte ptr [rcx]
    jmp         0000000140011026
    movzx       esi,byte ptr [rcx]
    jmp         0000000140011026
    sub         r8d,6
    je          000000014001100A
    sub         r8d,1
    je          000000014001100A
    sub         r8d,2
    je          000000014001100A
    jmp         0000000140010FF6
    mov         rax,qword ptr [rcx+8]
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    mov         rax,qword ptr [rcx+8]
    xor         ecx,ecx
    mov         qword ptr [rsp+label_28],rax
    and         qword ptr [rsp+label_20],0
    call        0000000140010530
    xor         al,al
    jmp         0000000140011190
    mov         edx,dword ptr [rcx+label_28]
    mov         edi,4
    mov         rcx,qword ptr [rcx+label_18]
    mov         eax,edx
    shr         eax,4
    test        al,1
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    je          0000000140011120
    movsxd      rsi,dword ptr [rcx]
    jmp         0000000140011026
    mov         esi,dword ptr [rcx]
    jmp         0000000140011026
    mov         r8,qword ptr [rbx+8]
    lea         rcx,[rbx+label_50]
    and         edx,label_0FFFFFFF7
    mov         dword ptr [rbx+label_28],edx
    movsxd      rdx,dword ptr [rbx+label_30]
    call        0000000140010844
    test        rsi,rsi
    jne         0000000140011147
    and         dword ptr [rbx+label_28],label_0FFFFFFDF
    mov         byte ptr [rbx+label_4C],0
    mov         r8b,bpl
    mov         rcx,rbx
    cmp         rdi,r14
    jne         0000000140011160
    mov         rdx,rsi
    call        000000014001146C
    jmp         0000000140011167
    mov         edx,esi
    call        00000001400112C8
    mov         eax,dword ptr [rbx+label_28]
    shr         eax,7
    test        al,1
    je          000000014001118E
    cmp         dword ptr [rbx+label_48],0
    je          0000000140011180
    mov         rax,qword ptr [rbx+label_40]
    cmp         byte ptr [rax],label_30
    je          000000014001118E
    dec         qword ptr [rbx+label_40]
    mov         rcx,qword ptr [rbx+label_40]
    mov         byte ptr [rcx],label_30
    inc         dword ptr [rbx+label_48]
    mov         al,1
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r14
    ret
func_00000001400111AA_end:
    int         3
    lea         r8,[rcx+label_50]
    mov         r9d,edx
    mov         rax,qword ptr [r8+label_0000000000000408]
    test        rax,rax
    jne         00000001400111C6
    mov         eax,label_200
    jmp         00000001400111D3
    mov         r8,rax
    mov         rax,qword ptr [rcx+label_0000000000000450]
    shr         rax,1
    lea         rdx,[r8-1]
    add         rdx,rax
    mov         qword ptr [rcx+label_40],rdx
    mov         r8,rdx
    mov         eax,dword ptr [rcx+label_30]
    test        eax,eax
    jg          00000001400111ED
    test        r9d,r9d
    je          000000014001120A
    dec         eax
    mov         dword ptr [rcx+label_30],eax
    mov         al,r9b
    and         al,7
    shr         r9d,3
    add         al,label_30
    mov         byte ptr [r8],al
    dec         qword ptr [rcx+label_40]
    mov         r8,qword ptr [rcx+label_40]
    jmp         00000001400111E1
    sub         edx,dword ptr [rcx+label_40]
    lea         rax,[r8+1]
    mov         dword ptr [rcx+label_48],edx
    mov         qword ptr [rcx+label_40],rax
    ret
func_0000000140011218_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         rax,qword ptr [rcx+label_0000000000000458]
    mov         r9,rcx
    add         rcx,label_50
    mov         bl,r8b
    mov         r11d,edx
    test        rax,rax
    jne         0000000140011241
    mov         eax,label_200
    jmp         000000014001124E
    mov         rcx,rax
    mov         rax,qword ptr [r9+label_0000000000000450]
    shr         rax,1
    lea         r8,[rcx-1]
    add         r8,rax
    mov         qword ptr [r9+label_40],r8
    mov         r10,r8
    mov         eax,dword ptr [r9+label_30]
    test        eax,eax
    jg          0000000140011269
    test        r11d,r11d
    je          00000001400112B0
    dec         eax
    mov         dword ptr [r9+label_30],eax
    mov         eax,label_0CCCCCCCD
    mul         eax,r11d
    shr         edx,3
    mov         al,dl
    shl         al,2
    lea         ecx,[rax+rdx]
    add         cl,cl
    sub         r11b,cl
    add         r11b,label_30
    mov         al,r11b
    mov         cl,r11b
    mov         r11d,edx
    cmp         al,label_39
    jle         00000001400112A3
    mov         al,bl
    xor         al,1
    shl         al,5
    add         al,7
    add         al,cl
    mov         byte ptr [r10],al
    dec         qword ptr [r9+label_40]
    mov         r10,qword ptr [r9+label_40]
    jmp         000000014001125C
    sub         r8d,dword ptr [r9+label_40]
    lea         rax,[r10+1]
    mov         rbx,qword ptr [rsp+8]
    mov         dword ptr [r9+label_48],r8d
    mov         qword ptr [r9+label_40],rax
    ret
func_00000001400112C5_end:
    int         3
    int         3
    lea         r9,[rcx+label_50]
    mov         r11b,r8b
    mov         rax,qword ptr [r9+label_0000000000000408]
    mov         r10d,edx
    test        rax,rax
    jne         00000001400112E5
    mov         eax,label_200
    jmp         00000001400112F2
    mov         r9,rax
    mov         rax,qword ptr [rcx+label_0000000000000450]
    shr         rax,1
    lea         rdx,[r9-1]
    add         rdx,rax
    mov         qword ptr [rcx+label_40],rdx
    mov         r8,rdx
    mov         eax,dword ptr [rcx+label_30]
    test        eax,eax
    jg          000000014001130C
    test        r10d,r10d
    je          000000014001133D
    dec         eax
    mov         dword ptr [rcx+label_30],eax
    mov         al,r10b
    and         al,label_0F
    shr         r10d,4
    add         al,label_30
    mov         r9b,al
    cmp         al,label_39
    jbe         0000000140011330
    mov         al,r11b
    xor         al,1
    shl         al,5
    add         al,7
    add         al,r9b
    mov         byte ptr [r8],al
    dec         qword ptr [rcx+label_40]
    mov         r8,qword ptr [rcx+label_40]
    jmp         0000000140011300
    sub         edx,dword ptr [rcx+label_40]
    lea         rax,[r8+1]
    mov         dword ptr [rcx+label_48],edx
    mov         qword ptr [rcx+label_40],rax
    ret
func_000000014001134B_end:
    lea         r8,[rcx+label_50]
    mov         r9,rdx
    mov         rax,qword ptr [r8+label_0000000000000408]
    test        rax,rax
    jne         0000000140011366
    mov         eax,label_200
    jmp         0000000140011373
    mov         r8,rax
    mov         rax,qword ptr [rcx+label_0000000000000450]
    shr         rax,1
    lea         rdx,[r8-1]
    add         rdx,rax
    mov         qword ptr [rcx+label_40],rdx
    mov         r8,rdx
    mov         eax,dword ptr [rcx+label_30]
    test        eax,eax
    jg          000000014001138D
    test        r9,r9
    je          00000001400113AA
    dec         eax
    mov         dword ptr [rcx+label_30],eax
    mov         al,r9b
    and         al,7
    shr         r9,3
    add         al,label_30
    mov         byte ptr [r8],al
    dec         qword ptr [rcx+label_40]
    mov         r8,qword ptr [rcx+label_40]
    jmp         0000000140011381
    sub         edx,dword ptr [rcx+label_40]
    lea         rax,[r8+1]
    mov         dword ptr [rcx+label_48],edx
    mov         qword ptr [rcx+label_40],rax
    ret
func_00000001400113B8_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         rax,qword ptr [rcx+label_0000000000000458]
    mov         r9,rcx
    add         rcx,label_50
    mov         bl,r8b
    mov         r11,rdx
    test        rax,rax
    jne         00000001400113E1
    mov         eax,label_200
    jmp         00000001400113EE
    mov         rcx,rax
    mov         rax,qword ptr [r9+label_0000000000000450]
    shr         rax,1
    lea         r8,[rcx-1]
    add         r8,rax
    mov         qword ptr [r9+label_40],r8
    mov         r10,r8
    mov         eax,dword ptr [r9+label_30]
    test        eax,eax
    jg          0000000140011409
    test        r11,r11
    je          0000000140011456
    dec         eax
    mov         dword ptr [r9+label_30],eax
    mov         rax,label_0CCCCCCCCCCCCCCCD
    mul         rax,r11
    shr         rdx,3
    mov         al,dl
    shl         al,2
    lea         ecx,[rax+rdx]
    add         cl,cl
    sub         r11b,cl
    add         r11b,label_30
    mov         al,r11b
    mov         cl,r11b
    mov         r11,rdx
    cmp         al,label_39
    jle         0000000140011449
    mov         al,bl
    xor         al,1
    shl         al,5
    add         al,7
    add         al,cl
    mov         byte ptr [r10],al
    dec         qword ptr [r9+label_40]
    mov         r10,qword ptr [r9+label_40]
    jmp         00000001400113FC
    sub         r8d,dword ptr [r9+label_40]
    lea         rax,[r10+1]
    mov         rbx,qword ptr [rsp+8]
    mov         dword ptr [r9+label_48],r8d
    mov         qword ptr [r9+label_40],rax
    ret
func_000000014001146B_end:
    lea         r9,[rcx+label_50]
    mov         r11b,r8b
    mov         rax,qword ptr [r9+label_0000000000000408]
    mov         r10,rdx
    test        rax,rax
    jne         0000000140011489
    mov         eax,label_200
    jmp         0000000140011496
    mov         r9,rax
    mov         rax,qword ptr [rcx+label_0000000000000450]
    shr         rax,1
    lea         rdx,[r9-1]
    add         rdx,rax
    mov         qword ptr [rcx+label_40],rdx
    mov         r8,rdx
    mov         eax,dword ptr [rcx+label_30]
    test        eax,eax
    jg          00000001400114B0
    test        r10,r10
    je          00000001400114E1
    dec         eax
    mov         dword ptr [rcx+label_30],eax
    mov         al,r10b
    and         al,label_0F
    shr         r10,4
    add         al,label_30
    mov         r9b,al
    cmp         al,label_39
    jbe         00000001400114D4
    mov         al,r11b
    xor         al,1
    shl         al,5
    add         al,7
    add         al,r9b
    mov         byte ptr [r8],al
    dec         qword ptr [rcx+label_40]
    mov         r8,qword ptr [rcx+label_40]
    jmp         00000001400114A4
    sub         edx,dword ptr [rcx+label_40]
    lea         rax,[r8+1]
    mov         dword ptr [rcx+label_48],edx
    mov         qword ptr [rcx+label_40],rax
    ret
func_00000001400114EF_end:
    mov         rax,qword ptr [rdx]
    mov         rdx,qword ptr [rax+label_00000000000000F8]
    mov         rax,qword ptr [rdx]
    mov         r9b,byte ptr [rax]
    mov         al,byte ptr [rcx]
    test        al,al
    je          000000014001151A
    mov         dl,al
    mov         al,dl
    cmp         dl,r9b
    je          000000014001151A
    inc         rcx
    mov         al,byte ptr [rcx]
    mov         dl,al
    test        al,al
    jne         0000000140011508
    inc         rcx
    test        al,al
    je          0000000140011559
    jmp         000000014001152C
    sub         al,label_45
    test        al,label_0DF
    je          0000000140011532
    inc         rcx
    mov         al,byte ptr [rcx]
    test        al,al
    jne         0000000140011523
    mov         r8,rcx
    dec         rcx
    mov         al,byte ptr [rcx]
    cmp         al,label_30
    je          0000000140011535
    cmp         al,r9b
    lea         rdx,[rcx-1]
    cmovne      rdx,rcx
    sub         r8,rdx
    mov         al,byte ptr [r8+rdx]
    inc         rdx
    mov         byte ptr [rdx],al
    test        al,al
    jne         000000014001154C
    ret
func_0000000140011559_end:
    int         3
    int         3
    mov         r11,rsp
    mov         qword ptr [r11+label_10],rbx
    mov         qword ptr [r11+label_18],rbp
    mov         qword ptr [r11+label_20],rsi
    push        rdi
    sub         rsp,label_30
    mov         rbp,qword ptr [rcx+8]
    mov         rsi,rcx
    mov         rax,qword ptr [rcx+label_10]
    mov         rdi,rdx
    lea         rcx,[r11+8]
    dec         rax
    mov         qword ptr [r11-label_10],rcx
    lea         rdx,[r11-label_18]
    mov         rbx,qword ptr [rbp+label_2C]
    mov         r9b,1
    mov         r8d,label_0A
    mov         qword ptr [r11+8],rax
    mov         rcx,rbp
    mov         qword ptr [r11-label_18],rax
    call        00000001400108EC
    mov         dword ptr [rdi],eax
    xor         ecx,ecx
    mov         rax,qword ptr [rsi+8]
    cmp         byte ptr [rax+label_30],cl
    je          00000001400115BD
    cmp         dword ptr [rax+label_2C],label_22
    je          00000001400115CE
    mov         rax,qword ptr [rsp+label_40]
    cmp         rax,qword ptr [rsi+label_10]
    jb          00000001400115CE
    mov         qword ptr [rsi+label_10],rax
    mov         cl,1
    mov         rsi,qword ptr [rsp+label_58]
    mov         al,cl
    mov         qword ptr [rbp+label_2C],rbx
    mov         rbx,qword ptr [rsp+label_48]
    mov         rbp,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_00000001400115E8_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_30
    mov         rax,qword ptr [rcx+8]
    or          esi,label_0FFFFFFFF
    xor         ebp,ebp
    mov         rbx,rcx
    cmp         qword ptr [rcx+label_0000000000000460],rbp
    jne         000000014001162A
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    jmp         0000000140011951
    mov         rcx,qword ptr [rcx+label_10]
    test        rcx,rcx
    jne         0000000140011661
    mov         byte ptr [rax+label_30],1
    xor         r9d,r9d
    mov         dword ptr [rax+label_2C],label_16
    xor         r8d,r8d
    mov         rax,qword ptr [rbx+8]
    xor         edx,edx
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_20],rbp
    call        0000000140010530
    or          eax,label_0FFFFFFFF
    jmp         00000001400118F7
    mov         eax,dword ptr [rbx+label_0000000000000468]
    inc         eax
    mov         dword ptr [rbx+label_0000000000000468],eax
    cmp         eax,2
    je          00000001400118F4
    lea         r14,[label_000000014002EBE0]
    mov         dword ptr [rbx+label_48],ebp
    mov         byte ptr [rbx+label_24],bpl
    mov         dl,byte ptr [rcx]
    inc         rcx
    jmp         00000001400118C7
    cmp         dword ptr [rbx+label_20],ebp
    jl          00000001400118D6
    lea         eax,[rdx-label_20]
    cmp         al,label_5A
    ja          00000001400116B2
    movsx       rax,dl
    sub         rax,label_20
    and         eax,label_7F
    mov         cl,byte ptr [r14+rax*2+1]
    jmp         00000001400116B5
    mov         cl,bpl
    movzx       eax,cl
    lea         rcx,[rax+rax*8]
    movzx       eax,byte ptr [rbx+label_24]
    add         rcx,rax
    and         ecx,label_7F
    movzx       eax,byte ptr [r14+rcx*2]
    mov         byte ptr [rbx+label_24],al
    cmp         al,8
    jae         000000014001193E
    mov         ecx,eax
    test        al,al
    je          00000001400117F1
    sub         ecx,1
    je          00000001400117DA
    sub         ecx,1
    je          0000000140011790
    sub         ecx,1
    je          0000000140011758
    sub         ecx,1
    je          0000000140011750
    sub         ecx,1
    je          0000000140011723
    sub         ecx,1
    je          0000000140011719
    cmp         ecx,1
    jne         000000014001196A
    mov         rcx,rbx
    call        0000000140011E78
    jmp         0000000140011783
    mov         rcx,rbx
    call        0000000140011CF0
    jmp         0000000140011783
    cmp         dl,label_2A
    je          0000000140011736
    lea         rdx,[rbx+label_30]
    mov         rcx,rbx
    call        000000014001155C
    jmp         0000000140011783
    mov         rcx,qword ptr [rbx+label_18]
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    mov         eax,dword ptr [rcx]
    test        eax,eax
    mov         ecx,eax
    cmovs       ecx,esi
    mov         dword ptr [rbx+label_30],ecx
    jmp         0000000140011781
    mov         dword ptr [rbx+label_30],ebp
    jmp         00000001400118BD
    cmp         dl,label_2A
    je          0000000140011763
    lea         rdx,[rbx+label_2C]
    jmp         000000014001172C
    mov         rcx,qword ptr [rbx+label_18]
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    mov         eax,dword ptr [rcx]
    mov         dword ptr [rbx+label_2C],eax
    test        eax,eax
    jns         0000000140011781
    or          dword ptr [rbx+label_28],4
    neg         eax
    mov         dword ptr [rbx+label_2C],eax
    mov         al,1
    test        al,al
    je          000000014001196A
    jmp         00000001400118BD
    cmp         dl,label_20
    je          00000001400117D1
    cmp         dl,label_23
    je          00000001400117C8
    cmp         dl,label_2B
    je          00000001400117BF
    cmp         dl,label_2D
    je          00000001400117B6
    cmp         dl,label_30
    jne         00000001400118BD
    or          dword ptr [rbx+label_28],8
    jmp         00000001400118BD
    or          dword ptr [rbx+label_28],4
    jmp         00000001400118BD
    or          dword ptr [rbx+label_28],1
    jmp         00000001400118BD
    or          dword ptr [rbx+label_28],label_20
    jmp         00000001400118BD
    or          dword ptr [rbx+label_28],2
    jmp         00000001400118BD
    mov         qword ptr [rbx+label_28],rbp
    mov         byte ptr [rbx+label_38],bpl
    mov         dword ptr [rbx+label_30],esi
    mov         dword ptr [rbx+label_34],ebp
    mov         byte ptr [rbx+label_4C],bpl
    jmp         00000001400118BD
    mov         rdi,qword ptr [rbx+8]
    mov         byte ptr [rbx+label_4C],bpl
    cmp         byte ptr [rdi+label_28],bpl
    jne         0000000140011807
    mov         rcx,rdi
    call        0000000140012780
    movsx       r8,byte ptr [rbx+label_39]
    cmp         r8d,esi
    jl          000000014001187E
    mov         rax,qword ptr [rdi+label_18]
    mov         rcx,qword ptr [rax]
    mov         eax,label_8000
    test        word ptr [rcx+r8*2],ax
    je          000000014001187E
    mov         rcx,qword ptr [rbx+label_0000000000000460]
    mov         rax,qword ptr [rcx+8]
    cmp         qword ptr [rcx+label_10],rax
    jne         0000000140011845
    cmp         byte ptr [rcx+label_18],bpl
    je          0000000140011840
    inc         dword ptr [rbx+label_20]
    jmp         0000000140011863
    mov         dword ptr [rbx+label_20],esi
    jmp         0000000140011863
    inc         dword ptr [rbx+label_20]
    inc         qword ptr [rcx+label_10]
    mov         rax,qword ptr [rbx+label_0000000000000460]
    mov         rcx,qword ptr [rax]
    mov         byte ptr [rcx],r8b
    mov         rax,qword ptr [rbx+label_0000000000000460]
    inc         qword ptr [rax]
    mov         rax,qword ptr [rbx+label_10]
    mov         r8b,byte ptr [rax]
    inc         rax
    mov         qword ptr [rbx+label_10],rax
    mov         byte ptr [rbx+label_39],r8b
    test        r8b,r8b
    je          0000000140011912
    mov         rcx,qword ptr [rbx+label_0000000000000460]
    mov         rax,qword ptr [rcx+8]
    cmp         qword ptr [rcx+label_10],rax
    jne         000000014001189F
    cmp         byte ptr [rcx+label_18],bpl
    je          000000014001189A
    inc         dword ptr [rbx+label_20]
    jmp         00000001400118BD
    mov         dword ptr [rbx+label_20],esi
    jmp         00000001400118BD
    inc         dword ptr [rbx+label_20]
    inc         qword ptr [rcx+label_10]
    mov         rax,qword ptr [rbx+label_0000000000000460]
    mov         rcx,qword ptr [rax]
    mov         byte ptr [rcx],r8b
    mov         rax,qword ptr [rbx+label_0000000000000460]
    inc         qword ptr [rax]
    mov         rax,qword ptr [rbx+label_10]
    mov         dl,byte ptr [rax]
    lea         rcx,[rax+1]
    mov         qword ptr [rbx+label_10],rcx
    mov         byte ptr [rbx+label_39],dl
    test        dl,dl
    jne         0000000140011690
    mov         al,byte ptr [rbx+label_24]
    test        al,al
    je          00000001400118E1
    cmp         al,7
    jne         000000014001193E
    inc         dword ptr [rbx+label_0000000000000468]
    cmp         dword ptr [rbx+label_0000000000000468],2
    jne         000000014001167F
    mov         eax,dword ptr [rbx+label_20]
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r14
    ret
func_0000000140011911_end:
    mov         rax,qword ptr [rbx+8]
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    mov         rax,qword ptr [rbx+8]
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_20],rbp
    call        0000000140010530
    mov         rax,qword ptr [rbx+8]
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    mov         rax,qword ptr [rbx+8]
    mov         qword ptr [rsp+label_28],rax
    xor         r9d,r9d
    xor         r8d,r8d
    mov         qword ptr [rsp+label_20],rbp
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    mov         eax,esi
    jmp         00000001400118F7
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_30
    mov         rax,qword ptr [rcx+8]
    or          esi,label_0FFFFFFFF
    xor         ebp,ebp
    mov         rbx,rcx
    cmp         qword ptr [rcx+label_0000000000000460],rbp
    jne         00000001400119AE
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    jmp         0000000140011CD3
    mov         rcx,qword ptr [rcx+label_10]
    test        rcx,rcx
    jne         00000001400119E5
    mov         byte ptr [rax+label_30],1
    xor         r9d,r9d
    mov         dword ptr [rax+label_2C],label_16
    xor         r8d,r8d
    mov         rax,qword ptr [rbx+8]
    xor         edx,edx
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_20],rbp
    call        0000000140010530
    or          eax,label_0FFFFFFFF
    jmp         0000000140011C79
    mov         eax,dword ptr [rbx+label_0000000000000468]
    inc         eax
    mov         dword ptr [rbx+label_0000000000000468],eax
    cmp         eax,2
    je          0000000140011C76
    lea         r14,[label_000000014002EAE0]
    mov         dword ptr [rbx+label_48],ebp
    mov         byte ptr [rbx+label_24],bpl
    mov         r8b,byte ptr [rcx]
    inc         rcx
    jmp         0000000140011C52
    cmp         dword ptr [rbx+label_20],ebp
    jl          0000000140011C63
    lea         eax,[r8-label_20]
    cmp         al,label_5A
    ja          0000000140011A38
    movsx       rax,r8b
    sub         rax,label_20
    and         eax,label_7F
    mov         cl,byte ptr [r14+rax*2+1]
    jmp         0000000140011A3B
    mov         cl,bpl
    movzx       eax,byte ptr [rbx+label_24]
    movzx       ecx,cl
    lea         rdx,[rax+rcx*8]
    and         edx,label_7F
    movzx       eax,byte ptr [r14+rdx*2]
    mov         byte ptr [rbx+label_24],al
    cmp         al,8
    jae         0000000140011CC0
    mov         ecx,eax
    test        al,al
    je          0000000140011B7B
    sub         ecx,1
    je          0000000140011B64
    sub         ecx,1
    je          0000000140011B15
    sub         ecx,1
    je          0000000140011ADC
    sub         ecx,1
    je          0000000140011AD4
    sub         ecx,1
    je          0000000140011AA6
    sub         ecx,1
    je          0000000140011A9C
    cmp         ecx,1
    jne         0000000140011CEC
    mov         rcx,rbx
    call        0000000140011E78
    jmp         0000000140011B08
    mov         rcx,rbx
    call        0000000140011CF0
    jmp         0000000140011B08
    cmp         r8b,label_2A
    je          0000000140011ABA
    lea         rdx,[rbx+label_30]
    mov         rcx,rbx
    call        000000014001155C
    jmp         0000000140011B08
    mov         rcx,qword ptr [rbx+label_18]
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    mov         eax,dword ptr [rcx]
    test        eax,eax
    mov         ecx,eax
    cmovs       ecx,esi
    mov         dword ptr [rbx+label_30],ecx
    jmp         0000000140011B06
    mov         dword ptr [rbx+label_30],ebp
    jmp         0000000140011C47
    cmp         r8b,label_2A
    je          0000000140011AE8
    lea         rdx,[rbx+label_2C]
    jmp         0000000140011AB0
    mov         rcx,qword ptr [rbx+label_18]
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    mov         eax,dword ptr [rcx]
    mov         dword ptr [rbx+label_2C],eax
    test        eax,eax
    jns         0000000140011B06
    or          dword ptr [rbx+label_28],4
    neg         eax
    mov         dword ptr [rbx+label_2C],eax
    mov         al,1
    test        al,al
    je          0000000140011CEC
    jmp         0000000140011C47
    cmp         r8b,label_20
    je          0000000140011B5B
    cmp         r8b,label_23
    je          0000000140011B52
    cmp         r8b,label_2B
    je          0000000140011B49
    cmp         r8b,label_2D
    je          0000000140011B40
    cmp         r8b,label_30
    jne         0000000140011C47
    or          dword ptr [rbx+label_28],8
    jmp         0000000140011C47
    or          dword ptr [rbx+label_28],4
    jmp         0000000140011C47
    or          dword ptr [rbx+label_28],1
    jmp         0000000140011C47
    or          dword ptr [rbx+label_28],label_20
    jmp         0000000140011C47
    or          dword ptr [rbx+label_28],2
    jmp         0000000140011C47
    mov         qword ptr [rbx+label_28],rbp
    mov         byte ptr [rbx+label_38],bpl
    mov         dword ptr [rbx+label_30],esi
    mov         dword ptr [rbx+label_34],ebp
    mov         byte ptr [rbx+label_4C],bpl
    jmp         0000000140011C47
    mov         rdi,qword ptr [rbx+8]
    mov         byte ptr [rbx+label_4C],bpl
    cmp         byte ptr [rdi+label_28],bpl
    jne         0000000140011B91
    mov         rcx,rdi
    call        0000000140012780
    movsx       r8,byte ptr [rbx+label_39]
    cmp         r8d,esi
    jl          0000000140011C08
    mov         rax,qword ptr [rdi+label_18]
    mov         rcx,qword ptr [rax]
    mov         eax,label_8000
    test        word ptr [rcx+r8*2],ax
    je          0000000140011C08
    mov         rcx,qword ptr [rbx+label_0000000000000460]
    mov         rax,qword ptr [rcx+8]
    cmp         qword ptr [rcx+label_10],rax
    jne         0000000140011BCF
    cmp         byte ptr [rcx+label_18],bpl
    je          0000000140011BCA
    inc         dword ptr [rbx+label_20]
    jmp         0000000140011BED
    mov         dword ptr [rbx+label_20],esi
    jmp         0000000140011BED
    inc         dword ptr [rbx+label_20]
    inc         qword ptr [rcx+label_10]
    mov         rax,qword ptr [rbx+label_0000000000000460]
    mov         rcx,qword ptr [rax]
    mov         byte ptr [rcx],r8b
    mov         rax,qword ptr [rbx+label_0000000000000460]
    inc         qword ptr [rax]
    mov         rax,qword ptr [rbx+label_10]
    mov         r8b,byte ptr [rax]
    inc         rax
    mov         qword ptr [rbx+label_10],rax
    mov         byte ptr [rbx+label_39],r8b
    test        r8b,r8b
    je          0000000140011C94
    mov         rcx,qword ptr [rbx+label_0000000000000460]
    mov         rax,qword ptr [rcx+8]
    cmp         qword ptr [rcx+label_10],rax
    jne         0000000140011C29
    cmp         byte ptr [rcx+label_18],bpl
    je          0000000140011C24
    inc         dword ptr [rbx+label_20]
    jmp         0000000140011C47
    mov         dword ptr [rbx+label_20],esi
    jmp         0000000140011C47
    inc         dword ptr [rbx+label_20]
    inc         qword ptr [rcx+label_10]
    mov         rax,qword ptr [rbx+label_0000000000000460]
    mov         rcx,qword ptr [rax]
    mov         byte ptr [rcx],r8b
    mov         rax,qword ptr [rbx+label_0000000000000460]
    inc         qword ptr [rax]
    mov         rax,qword ptr [rbx+label_10]
    mov         r8b,byte ptr [rax]
    lea         rcx,[rax+1]
    mov         qword ptr [rbx+label_10],rcx
    mov         byte ptr [rbx+label_39],r8b
    test        r8b,r8b
    jne         0000000140011A15
    inc         dword ptr [rbx+label_0000000000000468]
    cmp         dword ptr [rbx+label_0000000000000468],2
    jne         0000000140011A03
    mov         eax,dword ptr [rbx+label_20]
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r14
    ret
func_0000000140011C93_end:
    mov         rax,qword ptr [rbx+8]
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    mov         rax,qword ptr [rbx+8]
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_20],rbp
    call        0000000140010530
    mov         rax,qword ptr [rbx+8]
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    mov         rax,qword ptr [rbx+8]
    mov         qword ptr [rsp+label_28],rax
    xor         r9d,r9d
    xor         r8d,r8d
    mov         qword ptr [rsp+label_20],rbp
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    mov         eax,esi
    jmp         0000000140011C79
    sub         rsp,label_38
    mov         al,byte ptr [rcx+label_39]
    cmp         al,label_46
    jne         0000000140011D11
    test        byte ptr [rcx],8
    jne         0000000140011E70
    mov         byte ptr [rcx+label_24],7
    add         rsp,label_38
    jmp         0000000140011E78
    cmp         al,label_4E
    jne         0000000140011D56
    test        byte ptr [rcx],8
    jne         0000000140011E70
    mov         byte ptr [rcx+label_24],8
    mov         rax,qword ptr [rcx+8]
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    mov         rax,qword ptr [rcx+8]
    xor         ecx,ecx
    mov         qword ptr [rsp+label_28],rax
    and         qword ptr [rsp+label_20],0
    call        0000000140010530
    xor         al,al
    jmp         0000000140011E72
    cmp         dword ptr [rcx+label_34],0
    jne         0000000140011D22
    cmp         al,label_49
    je          0000000140011E14
    cmp         al,label_4C
    je          0000000140011E0B
    cmp         al,label_54
    je          0000000140011E02
    cmp         al,label_68
    je          0000000140011DE4
    cmp         al,label_6A
    je          0000000140011DD8
    cmp         al,label_6C
    je          0000000140011DB4
    cmp         al,label_74
    je          0000000140011DA8
    cmp         al,label_77
    je          0000000140011D9C
    cmp         al,label_7A
    jne         0000000140011E70
    mov         dword ptr [rcx+label_34],6
    jmp         0000000140011E70
    mov         dword ptr [rcx+label_34],label_0C
    jmp         0000000140011E70
    mov         dword ptr [rcx+label_34],7
    jmp         0000000140011E70
    mov         rax,qword ptr [rcx+label_10]
    cmp         byte ptr [rax],label_6C
    jne         0000000140011DCB
    inc         rax
    mov         qword ptr [rcx+label_10],rax
    mov         eax,4
    jmp         0000000140011DD0
    mov         eax,3
    mov         dword ptr [rcx+label_34],eax
    jmp         0000000140011E70
    mov         dword ptr [rcx+label_34],5
    jmp         0000000140011E70
    mov         rax,qword ptr [rcx+label_10]
    cmp         byte ptr [rax],label_68
    jne         0000000140011DFB
    inc         rax
    mov         qword ptr [rcx+label_10],rax
    mov         eax,1
    jmp         0000000140011DD0
    mov         eax,2
    jmp         0000000140011DD0
    mov         dword ptr [rcx+label_34],label_0D
    jmp         0000000140011E70
    mov         dword ptr [rcx+label_34],8
    jmp         0000000140011E70
    mov         r8,qword ptr [rcx+label_10]
    mov         al,byte ptr [r8]
    cmp         al,label_33
    jne         0000000140011E37
    cmp         byte ptr [r8+1],label_32
    jne         0000000140011E37
    lea         rax,[r8+2]
    mov         dword ptr [rcx+label_34],label_0A
    mov         qword ptr [rcx+label_10],rax
    jmp         0000000140011E70
    cmp         al,label_36
    jne         0000000140011E53
    cmp         byte ptr [r8+1],label_34
    jne         0000000140011E70
    lea         rax,[r8+2]
    mov         dword ptr [rcx+label_34],label_0B
    mov         qword ptr [rcx+label_10],rax
    jmp         0000000140011E70
    sub         al,label_58
    cmp         al,label_20
    ja          0000000140011E70
    mov         rdx,label_120821001
    bt          rdx,rax
    jae         0000000140011E70
    mov         dword ptr [rcx+label_34],9
    mov         al,1
    add         rsp,label_38
    ret
func_0000000140011E76_end:
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    mov         qword ptr [rsp+label_20],rdi
    push        rbp
    push        r12
    push        r13
    push        r14
    push        r15
    mov         rbp,rsp
    sub         rsp,label_50
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp-label_10],rax
    mov         edi,label_78
    mov         rbx,rcx
    movsx       ecx,byte ptr [rcx+label_39]
    lea         r13d,[rdi-label_77]
    cmp         ecx,label_64
    jg          0000000140011F2D
    je          0000000140011F57
    cmp         ecx,label_53
    jg          0000000140011EF5
    je          0000000140011F9E
    sub         ecx,label_41
    je          0000000140011EE8
    sub         ecx,2
    je          0000000140011F11
    sub         ecx,2
    je          0000000140011EE8
    sub         ecx,r13d
    je          0000000140011EE8
    cmp         ecx,r13d
    jne         0000000140011FC5
    mov         rcx,rbx
    call        00000001400122F8
    jmp         0000000140011FC1
    cmp         ecx,label_58
    je          0000000140011FB6
    cmp         ecx,label_5A
    je          0000000140011F20
    cmp         ecx,label_61
    je          0000000140011EE8
    cmp         ecx,label_63
    jne         0000000140011FC5
    xor         edx,edx
    mov         rcx,rbx
    call        000000014001254C
    jmp         0000000140011FC1
    mov         rcx,rbx
    call        000000014001227C
    jmp         0000000140011FC1
    cmp         ecx,label_6F
    jg          0000000140011F87
    je          0000000140011F67
    sub         ecx,label_65
    je          0000000140011EE8
    sub         ecx,r13d
    je          0000000140011EE8
    sub         ecx,r13d
    je          0000000140011EE8
    sub         ecx,2
    je          0000000140011F57
    cmp         ecx,5
    jne         0000000140011FC5
    mov         rcx,rbx
    call        0000000140012620
    jmp         0000000140011FC1
    or          dword ptr [rbx+label_28],label_10
    xor         edx,edx
    mov         rcx,rbx
    call        0000000140010DA4
    jmp         0000000140011FC1
    mov         ecx,dword ptr [rbx+label_28]
    mov         eax,ecx
    shr         eax,5
    test        r13b,al
    je          0000000140011F7B
    bts         ecx,7
    mov         dword ptr [rbx+label_28],ecx
    xor         edx,edx
    mov         rcx,rbx
    call        0000000140010BA0
    jmp         0000000140011FC1
    cmp         ecx,label_70
    je          0000000140011FA8
    cmp         ecx,label_73
    je          0000000140011F9E
    cmp         ecx,label_75
    je          0000000140011F5B
    cmp         ecx,edi
    jne         0000000140011FC5
    xor         edx,edx
    jmp         0000000140011FB9
    mov         rcx,rbx
    call        00000001400126D8
    jmp         0000000140011FC1
    mov         dword ptr [rbx+label_30],label_10
    mov         dword ptr [rbx+label_34],label_0B
    mov         dl,r13b
    mov         rcx,rbx
    call        0000000140010FA8
    test        al,al
    jne         0000000140011FCC
    xor         al,al
    jmp         000000014001224F
    cmp         byte ptr [rbx+label_38],0
    jne         000000014001224C
    mov         ecx,dword ptr [rbx+label_28]
    xor         eax,eax
    mov         word ptr [rbp-label_20],ax
    xor         edx,edx
    mov         byte ptr [rbp-label_1E],al
    mov         eax,ecx
    shr         eax,4
    test        r13b,al
    je          0000000140012019
    mov         eax,ecx
    shr         eax,6
    test        r13b,al
    je          0000000140011FFE
    mov         byte ptr [rbp-label_20],label_2D
    jmp         0000000140012016
    test        r13b,cl
    je          0000000140012009
    mov         byte ptr [rbp-label_20],label_2B
    jmp         0000000140012016
    mov         eax,ecx
    shr         eax,1
    test        r13b,al
    je          0000000140012019
    mov         byte ptr [rbp-label_20],label_20
    mov         rdx,r13
    mov         r8b,byte ptr [rbx+label_39]
    lea         eax,[r8-label_58]
    test        al,label_0DF
    jne         0000000140012034
    mov         eax,ecx
    shr         eax,5
    test        r13b,al
    je          0000000140012034
    mov         r9b,r13b
    jmp         0000000140012037
    xor         r9b,r9b
    lea         eax,[r8-label_41]
    test        al,label_0DF
    sete        al
    test        r9b,r9b
    jne         0000000140012049
    test        al,al
    je          0000000140012066
    mov         byte ptr [rbp+rdx-label_20],label_30
    cmp         r8b,label_58
    je          000000014001205A
    cmp         r8b,label_41
    jne         000000014001205D
    mov         dil,label_58
    mov         byte ptr [rbp+rdx-label_1F],dil
    add         rdx,2
    mov         esi,dword ptr [rbx+label_2C]
    sub         esi,edx
    sub         esi,dword ptr [rbx+label_48]
    test        cl,label_0C
    jne         00000001400120D8
    xor         r9d,r9d
    test        esi,esi
    jle         00000001400120D8
    mov         r8d,dword ptr [rbx+label_20]
    mov         rcx,qword ptr [rbx+label_0000000000000460]
    mov         rax,qword ptr [rcx+8]
    cmp         qword ptr [rcx+label_10],rax
    jne         00000001400120A4
    cmp         byte ptr [rcx+label_18],0
    je          000000014001209A
    inc         r8d
    jmp         000000014001209E
    or          r8d,label_0FFFFFFFF
    mov         dword ptr [rbx+label_20],r8d
    jmp         00000001400120C6
    lea         eax,[r8+1]
    mov         dword ptr [rbx+label_20],eax
    add         qword ptr [rcx+label_10],r13
    mov         rax,qword ptr [rbx+label_0000000000000460]
    mov         rcx,qword ptr [rax]
    mov         byte ptr [rcx],label_20
    mov         rax,qword ptr [rbx+label_0000000000000460]
    add         qword ptr [rax],r13
    mov         r8d,dword ptr [rbx+label_20]
    cmp         r8d,label_0FFFFFFFF
    je          00000001400120D8
    add         r9d,r13d
    cmp         r9d,esi
    jl          000000014001207E
    mov         rax,qword ptr [rbx+8]
    lea         rdi,[rbx+label_20]
    mov         r8d,edx
    mov         qword ptr [rsp+label_20],rax
    lea         r14,[rbx+label_0000000000000460]
    mov         r9,rdi
    mov         rcx,r14
    lea         rdx,[rbp-label_20]
    call        00000001400127F8
    mov         ecx,dword ptr [rbx+label_28]
    mov         eax,ecx
    shr         eax,3
    test        r13b,al
    je          0000000140012161
    shr         ecx,2
    test        r13b,cl
    jne         0000000140012161
    xor         r8d,r8d
    test        esi,esi
    jle         0000000140012161
    mov         edx,dword ptr [rdi]
    mov         rcx,qword ptr [r14]
    mov         rax,qword ptr [rcx+8]
    cmp         qword ptr [rcx+label_10],rax
    jne         000000014001213A
    cmp         byte ptr [rcx+label_18],0
    je          0000000140012133
    inc         edx
    jmp         0000000140012136
    or          edx,label_0FFFFFFFF
    mov         dword ptr [rdi],edx
    jmp         0000000140012152
    lea         eax,[rdx+1]
    mov         dword ptr [rdi],eax
    add         qword ptr [rcx+label_10],r13
    mov         rax,qword ptr [r14]
    mov         rcx,qword ptr [rax]
    mov         byte ptr [rcx],label_30
    mov         rax,qword ptr [r14]
    add         qword ptr [rax],r13
    mov         edx,dword ptr [rdi]
    cmp         edx,label_0FFFFFFFF
    je          0000000140012161
    add         r8d,r13d
    cmp         r8d,esi
    jl          000000014001211C
    cmp         byte ptr [rbx+label_4C],0
    je          00000001400121D3
    cmp         dword ptr [rbx+label_48],0
    jle         00000001400121D3
    mov         r12,qword ptr [rbx+label_40]
    xor         r15d,r15d
    mov         rax,qword ptr [rbx+8]
    lea         rdx,[rbp-label_1C]
    movzx       r9d,word ptr [r12]
    lea         rcx,[rbp-label_20]
    and         dword ptr [rbp-label_20],0
    lea         r12,[r12+2]
    mov         r8d,6
    mov         qword ptr [rsp+label_20],rax
    call        000000014001AC34
    test        eax,eax
    jne         00000001400121CE
    mov         r8d,dword ptr [rbp-label_20]
    test        r8d,r8d
    je          00000001400121CE
    mov         rax,qword ptr [rbx+8]
    lea         rdx,[rbp-label_1C]
    mov         r9,rdi
    mov         qword ptr [rsp+label_20],rax
    mov         rcx,r14
    call        00000001400127F8
    add         r15d,r13d
    cmp         r15d,dword ptr [rbx+label_48]
    jne         0000000140012174
    jmp         00000001400121EF
    or          dword ptr [rdi],label_0FFFFFFFF
    jmp         00000001400121EF
    mov         rax,qword ptr [rbx+8]
    mov         r9,rdi
    mov         r8d,dword ptr [rbx+label_48]
    mov         rcx,r14
    mov         rdx,qword ptr [rbx+label_40]
    mov         qword ptr [rsp+label_20],rax
    call        00000001400127F8
    mov         ecx,dword ptr [rdi]
    test        ecx,ecx
    js          000000014001224C
    mov         eax,dword ptr [rbx+label_28]
    shr         eax,2
    test        r13b,al
    je          000000014001224C
    xor         r8d,r8d
    test        esi,esi
    jle         000000014001224C
    mov         rdx,qword ptr [r14]
    mov         rax,qword ptr [rdx+8]
    cmp         qword ptr [rdx+label_10],rax
    jne         0000000140012225
    cmp         byte ptr [rdx+label_18],0
    je          000000014001221E
    inc         ecx
    jmp         0000000140012221
    or          ecx,label_0FFFFFFFF
    mov         dword ptr [rdi],ecx
    jmp         000000014001223D
    lea         eax,[rcx+1]
    mov         dword ptr [rdi],eax
    add         qword ptr [rdx+label_10],r13
    mov         rax,qword ptr [r14]
    mov         rcx,qword ptr [rax]
    mov         byte ptr [rcx],label_20
    mov         rax,qword ptr [r14]
    add         qword ptr [rax],r13
    mov         ecx,dword ptr [rdi]
    cmp         ecx,label_0FFFFFFFF
    je          000000014001224C
    add         r8d,r13d
    cmp         r8d,esi
    jl          0000000140012207
    mov         al,r13b
    mov         rcx,qword ptr [rbp-label_10]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_50]
    mov         rbx,qword ptr [r11+label_38]
    mov         rsi,qword ptr [r11+label_40]
    mov         rdi,qword ptr [r11+label_48]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rbp
    ret
func_0000000140012278_end:
    int         3
    int         3
    int         3
    mov         rdx,qword ptr [rcx+label_18]
    lea         rax,[rdx+8]
    mov         qword ptr [rcx+label_18],rax
    mov         r9,qword ptr [rdx]
    test        r9,r9
    je          00000001400122DE
    mov         r10,qword ptr [r9+8]
    test        r10,r10
    je          00000001400122DE
    mov         edx,dword ptr [rcx+label_34]
    mov         r8b,byte ptr [rcx+label_39]
    sub         edx,2
    je          00000001400122C6
    sub         edx,1
    je          00000001400122C2
    cmp         edx,9
    je          00000001400122C2
    cmp         dword ptr [rcx+label_34],label_0D
    je          00000001400122C6
    sub         r8b,label_63
    test        r8b,label_0EF
    setne       al
    jmp         00000001400122C8
    mov         al,1
    jmp         00000001400122C8
    xor         al,al
    mov         qword ptr [rcx+label_40],r10
    test        al,al
    movzx       edx,word ptr [r9]
    mov         eax,edx
    je          00000001400122EE
    mov         byte ptr [rcx+label_4C],1
    shr         eax,1
    jmp         00000001400122F2
    lea         rdx,[label_000000014002ECF0]
    mov         eax,6
    mov         qword ptr [rcx+label_40],rdx
    mov         byte ptr [rcx+label_4C],0
    mov         dword ptr [rcx+label_48],eax
    mov         al,1
    ret
func_00000001400122F7_end:
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rbp
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    sub         rsp,label_50
    or          dword ptr [rcx+label_28],label_10
    mov         rbx,rcx
    mov         eax,dword ptr [rcx+label_30]
    test        eax,eax
    jns         0000000140012330
    mov         al,byte ptr [rcx+label_39]
    sub         al,label_41
    and         al,label_0DF
    neg         al
    sbb         eax,eax
    and         eax,label_0FFFFFFF9
    add         eax,label_0D
    mov         dword ptr [rcx+label_30],eax
    jmp         000000014001234A
    jne         000000014001234A
    cmp         byte ptr [rcx+label_39],label_67
    je          000000014001233E
    cmp         byte ptr [rcx+label_39],label_47
    jne         000000014001234A
    mov         dword ptr [rcx+label_30],1
    mov         eax,1
    mov         r8,qword ptr [rcx+8]
    lea         rdi,[rcx+label_50]
    add         eax,label_15D
    mov         rcx,rdi
    movsxd      rdx,eax
    call        0000000140010844
    mov         r8d,label_200
    test        al,al
    jne         0000000140012390
    cmp         qword ptr [rbx+label_0000000000000458],0
    jne         000000014001237B
    mov         eax,r8d
    jmp         0000000140012385
    mov         rax,qword ptr [rbx+label_0000000000000450]
    shr         rax,1
    lea         edx,[rax+label_FFFFFFFFFFFFFEA3]
    mov         dword ptr [rbx+label_30],edx
    jmp         0000000140012393
    mov         edx,dword ptr [rbx+label_30]
    mov         rax,qword ptr [rdi+label_0000000000000408]
    test        rax,rax
    cmove       rax,rdi
    mov         qword ptr [rbx+label_40],rax
    xor         eax,eax
    mov         rcx,qword ptr [rbx+label_18]
    mov         qword ptr [rsp+label_60],rax
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    mov         r10,qword ptr [rbx+label_0000000000000458]
    movsd       xmm0,mmword ptr [rcx]
    mov         r11,qword ptr [rbx+8]
    mov         rsi,qword ptr [rbx]
    movsx       ebp,byte ptr [rbx+label_39]
    movsd       mmword ptr [rsp+label_60],xmm0
    test        r10,r10
    jne         00000001400123E5
    lea         r9,[rdi+label_0000000000000200]
    mov         rcx,r8
    jmp         0000000140012409
    mov         r9,qword ptr [rdi+label_0000000000000400]
    mov         rdi,r10
    mov         rcx,qword ptr [rbx+label_0000000000000450]
    mov         r8,qword ptr [rbx+label_0000000000000450]
    shr         r9,1
    add         r9,r10
    shr         rcx,1
    shr         r8,1
    mov         qword ptr [rsp+label_48],r11
    mov         dword ptr [rsp+label_40],1
    mov         qword ptr [rsp+label_38],rsi
    mov         dword ptr [rsp+label_30],edx
    mov         rdx,rdi
    mov         dword ptr [rsp+label_28],ebp
    mov         qword ptr [rsp+label_20],rcx
    lea         rcx,[rsp+label_60]
    call        000000014001A94C
    mov         eax,dword ptr [rbx+label_28]
    shr         eax,5
    test        al,1
    je          00000001400124BB
    cmp         dword ptr [rbx+label_30],0
    jne         00000001400124BB
    mov         rdi,qword ptr [rbx+8]
    cmp         byte ptr [rdi+label_28],0
    jne         0000000140012457
    mov         rcx,rdi
    call        0000000140012780
    mov         rcx,qword ptr [rbx+label_40]
    mov         r9,qword ptr [rdi+label_18]
    movzx       r8d,byte ptr [rcx]
    mov         rdx,qword ptr [r9+label_0000000000000110]
    cmp         byte ptr [r8+rdx],label_65
    je          0000000140012482
    mov         rax,qword ptr [r9]
    inc         rcx
    movzx       r8d,byte ptr [rcx]
    test        byte ptr [rax+r8*2],4
    jne         0000000140012474
    movzx       eax,r8b
    cmp         byte ptr [rax+rdx],label_78
    jne         0000000140012490
    mov         r8b,byte ptr [rcx+2]
    mov         rax,qword ptr [r9+label_00000000000000F8]
    lea         rdx,[rcx+2]
    cmovne      rdx,rcx
    mov         rcx,qword ptr [rax]
    mov         al,byte ptr [rcx]
    mov         byte ptr [rdx],al
    inc         rdx
    mov         al,byte ptr [rdx]
    mov         cl,r8b
    mov         byte ptr [rdx],r8b
    inc         rdx
    mov         r8b,al
    test        cl,cl
    jne         00000001400124A9
    mov         al,byte ptr [rbx+label_39]
    sub         al,label_47
    test        al,label_0DF
    jne         00000001400124ED
    mov         eax,dword ptr [rbx+label_28]
    shr         eax,5
    test        al,1
    jne         00000001400124ED
    mov         rdi,qword ptr [rbx+8]
    cmp         byte ptr [rdi+label_28],0
    jne         00000001400124E0
    mov         rcx,rdi
    call        0000000140012780
    mov         rcx,qword ptr [rbx+label_40]
    lea         rdx,[rdi+label_18]
    call        00000001400114F0
    mov         rcx,qword ptr [rbx+label_40]
    mov         al,byte ptr [rcx]
    cmp         al,label_2D
    jne         0000000140012504
    or          dword ptr [rbx+label_28],label_40
    inc         rcx
    mov         qword ptr [rbx+label_40],rcx
    mov         al,byte ptr [rcx]
    sub         al,label_49
    cmp         al,label_25
    ja          0000000140012522
    mov         rdx,label_2100000021
    bt          rdx,rax
    jae         0000000140012522
    and         dword ptr [rbx+label_28],label_0FFFFFFF7
    mov         byte ptr [rbx+label_39],label_73
    or          rdx,label_0FFFFFFFFFFFFFFFF
    inc         rdx
    cmp         byte ptr [rcx+rdx],0
    jne         0000000140012526
    mov         rbp,qword ptr [rsp+label_70]
    mov         al,1
    mov         rsi,qword ptr [rsp+label_78]
    mov         dword ptr [rbx+label_48],edx
    mov         rbx,qword ptr [rsp+label_68]
    add         rsp,label_50
    pop         rdi
    ret
func_0000000140012548_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_30
    mov         dl,byte ptr [rcx+label_39]
    mov         rbx,rcx
    mov         ecx,dword ptr [rcx+label_34]
    sub         ecx,2
    je          00000001400125D6
    sub         ecx,1
    je          0000000140012581
    cmp         ecx,9
    je          0000000140012581
    cmp         dword ptr [rbx+label_34],label_0D
    je          00000001400125D6
    sub         dl,label_63
    test        dl,label_0EF
    setne       al
    test        al,al
    je          00000001400125D6
    mov         rcx,qword ptr [rbx+label_18]
    lea         rax,[rcx+8]
    mov         qword ptr [rbx+label_18],rax
    mov         rdx,qword ptr [rbx+label_0000000000000458]
    mov         rax,qword ptr [rbx+8]
    movzx       r9d,word ptr [rcx]
    test        rdx,rdx
    jne         00000001400125B0
    lea         rdx,[rbx+label_50]
    mov         r8d,label_200
    mov         rdi,rdx
    jmp         00000001400125BE
    mov         r8,qword ptr [rbx+label_0000000000000450]
    lea         rdi,[rbx+label_50]
    shr         r8,1
    lea         rcx,[rbx+label_48]
    mov         qword ptr [rsp+label_20],rax
    call        000000014001AC34
    test        eax,eax
    je          00000001400125FF
    mov         byte ptr [rbx+label_38],1
    jmp         00000001400125FF
    mov         rcx,qword ptr [rbx+label_18]
    lea         rdi,[rbx+label_50]
    mov         rdx,qword ptr [rdi+label_0000000000000408]
    test        rdx,rdx
    lea         rax,[rcx+8]
    cmove       rdx,rdi
    mov         qword ptr [rbx+label_18],rax
    mov         al,byte ptr [rcx]
    mov         byte ptr [rdx],al
    mov         dword ptr [rbx+label_48],1
    mov         rcx,qword ptr [rdi+label_0000000000000408]
    mov         al,1
    test        rcx,rcx
    cmove       rcx,rdi
    mov         qword ptr [rbx+label_40],rcx
    mov         rbx,qword ptr [rsp+label_40]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014001261D_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_30
    mov         rdx,qword ptr [rcx+label_18]
    mov         rbx,rcx
    lea         rax,[rdx+8]
    mov         qword ptr [rcx+label_18],rax
    mov         rdi,qword ptr [rdx]
    call        000000014001AF84
    test        eax,eax
    jne         0000000140012676
    mov         rax,qword ptr [rbx+8]
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    mov         rax,qword ptr [rbx+8]
    mov         qword ptr [rsp+label_28],rax
    and         qword ptr [rsp+label_20],0
    call        0000000140010530
    xor         al,al
    jmp         00000001400126C4
    mov         ecx,dword ptr [rbx+label_34]
    cmp         ecx,5
    jg          000000014001269E
    je          00000001400126B7
    test        ecx,ecx
    je          00000001400126CF
    sub         ecx,1
    je          0000000140012697
    sub         ecx,1
    jne         00000001400126AD
    movzx       eax,word ptr [rbx+label_20]
    mov         word ptr [rdi],ax
    jmp         00000001400126BE
    mov         al,byte ptr [rbx+label_20]
    mov         byte ptr [rdi],al
    jmp         00000001400126BE
    sub         ecx,6
    je          00000001400126B7
    sub         ecx,1
    je          00000001400126B7
    sub         ecx,2
    je          00000001400126B7
    sub         ecx,1
    je          00000001400126CF
    cmp         ecx,1
    jne         0000000140012645
    movsxd      rax,dword ptr [rbx+label_20]
    mov         qword ptr [rdi],rax
    mov         byte ptr [rbx+label_38],1
    mov         al,1
    mov         rbx,qword ptr [rsp+label_40]
    add         rsp,label_30
    pop         rdi
    ret
func_00000001400126CE_end:
    mov         eax,dword ptr [rbx+label_20]
    mov         dword ptr [rdi],eax
    jmp         00000001400126BE
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rdx,qword ptr [rcx+label_18]
    mov         rbx,rcx
    lea         rax,[rdx+8]
    mov         qword ptr [rcx+label_18],rax
    mov         eax,label_7FFFFFFF
    mov         rcx,qword ptr [rdx]
    mov         r8d,dword ptr [rbx+label_30]
    cmp         r8d,label_0FFFFFFFF
    mov         edx,dword ptr [rbx+label_34]
    mov         r9b,byte ptr [rbx+label_39]
    cmove       r8d,eax
    mov         qword ptr [rbx+label_40],rcx
    sub         edx,2
    je          000000014001274E
    sub         edx,1
    je          0000000140012730
    cmp         edx,9
    je          0000000140012730
    cmp         dword ptr [rbx+label_34],label_0D
    je          000000014001274E
    sub         r9b,label_63
    test        r9b,label_0EF
    setne       al
    test        al,al
    je          000000014001274E
    test        rcx,rcx
    jne         0000000140012740
    lea         rcx,[label_000000014002ECE0]
    mov         qword ptr [rbx+label_40],rcx
    movsxd      rdx,r8d
    mov         byte ptr [rbx+label_4C],1
    call        0000000140015DAC
    jmp         0000000140012766
    test        rcx,rcx
    jne         000000014001275E
    lea         rcx,[label_000000014002ECF0]
    mov         qword ptr [rbx+label_40],rcx
    movsxd      rdx,r8d
    call        0000000140015C5C
    mov         dword ptr [rbx+label_48],eax
    mov         al,1
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140012770_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         rdi,rcx
    call        0000000140010210
    lea         rdx,[rdi+label_18]
    mov         rcx,rax
    mov         rsi,rax
    mov         r8,qword ptr [rax+label_0000000000000090]
    mov         qword ptr [rdx],r8
    mov         r8,qword ptr [rax+label_0000000000000088]
    mov         qword ptr [rdi+label_20],r8
    mov         r8,qword ptr [rdi+8]
    call        0000000140019D94
    mov         r8,qword ptr [rdi+8]
    lea         rdx,[rdi+label_20]
    mov         rcx,rsi
    call        0000000140019E00
    mov         eax,dword ptr [rsi+label_00000000000003A8]
    test        al,2
    jne         00000001400127E6
    or          eax,2
    mov         dword ptr [rsi+label_00000000000003A8],eax
    mov         byte ptr [rdi+label_28],2
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400127F5_end:
    int         3
    int         3
    test        r8d,r8d
    je          000000014001289A
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    mov         r14,rcx
    movsxd      rdi,r8d
    mov         rcx,qword ptr [rcx]
    mov         rbx,r9
    mov         rax,qword ptr [rcx+8]
    cmp         qword ptr [rcx+label_10],rax
    jne         0000000140012841
    cmp         byte ptr [rcx+label_18],0
    je          000000014001283B
    add         dword ptr [r9],edi
    jmp         0000000140012880
    or          dword ptr [r9],label_0FFFFFFFF
    jmp         0000000140012880
    sub         rax,qword ptr [rcx+label_10]
    mov         rsi,rdi
    mov         rcx,qword ptr [rcx]
    cmp         rax,rdi
    cmovb       rsi,rax
    mov         r8,rsi
    call        0000000140029A70
    mov         rax,qword ptr [r14]
    add         qword ptr [rax],rsi
    mov         rax,qword ptr [r14]
    add         qword ptr [rax+label_10],rsi
    mov         rax,qword ptr [r14]
    cmp         byte ptr [rax+label_18],0
    je          0000000140012874
    add         dword ptr [rbx],edi
    jmp         0000000140012880
    cmp         rsi,rdi
    je          000000014001287E
    or          dword ptr [rbx],label_0FFFFFFFF
    jmp         0000000140012880
    add         dword ptr [rbx],esi
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_000000014001289A_end:
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    lea         rbp,[rsp+label_FFFFFFFFFFFFFBF0]
    sub         rsp,label_510
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_0000000000000400],rax
    mov         rax,qword ptr [rbp+label_0000000000000470]
    xor         r12d,r12d
    mov         qword ptr [rsp+label_50],r12
    mov         rbx,r8
    mov         byte ptr [rsp+label_60],r12b
    mov         rsi,rdx
    mov         byte ptr [rsp+label_78],r12b
    mov         r15,rcx
    mov         byte ptr [rbp-label_80],r12b
    mov         byte ptr [rbp-label_78],r12b
    test        rax,rax
    je          00000001400128FB
    movups      xmm0,xmmword ptr [rax]
    jmp         000000014001290B
    cmp         dword ptr [label_000000014003E290],r12d
    jne         0000000140012916
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rsp+label_78],1
    movdqu      xmmword ptr [rsp+label_68],xmm0
    test        r9,r9
    jne         000000014001294D
    lea         rax,[rsp+label_50]
    mov         byte ptr [rbp-label_80],1
    mov         qword ptr [rsp+label_28],rax
    xor         r9d,r9d
    xor         r8d,r8d
    mov         qword ptr [rsp+label_20],r12
    xor         edx,edx
    mov         dword ptr [rsp+label_7C],label_16
    xor         ecx,ecx
    call        0000000140010530
    or          edi,label_0FFFFFFFF
    jmp         0000000140012A8A
    test        rbx,rbx
    je          0000000140012957
    test        rsi,rsi
    je          000000014001291B
    mov         r14,r15
    mov         dword ptr [rsp+label_49],r12d
    mov         word ptr [rsp+label_4D],r12w
    mov         byte ptr [rsp+label_4F],r12b
    mov         qword ptr [rsp+label_30],rsi
    mov         qword ptr [rsp+label_38],rbx
    mov         qword ptr [rsp+label_40],r12
    and         r14d,2
    jne         0000000140012989
    mov         byte ptr [rsp+label_48],r12b
    test        rsi,rsi
    jne         000000014001298E
    mov         byte ptr [rsp+label_48],1
    lea         rax,[rsp+label_50]
    mov         dword ptr [rbp-label_50],r12d
    mov         qword ptr [rbp-label_68],rax
    lea         rcx,[rbp-label_70]
    lea         rax,[rsp+label_30]
    mov         byte ptr [rbp-label_4C],r12b
    mov         qword ptr [rbp+label_00000000000003F0],rax
    xorps       xmm0,xmm0
    mov         rax,qword ptr [rbp+label_0000000000000478]
    mov         qword ptr [rbp-label_58],rax
    mov         qword ptr [rbp-label_48],r12
    mov         dword ptr [rbp-label_40],r12d
    mov         word ptr [rbp-label_38],r12w
    mov         dword ptr [rbp-label_28],r12d
    mov         byte ptr [rbp-label_24],r12b
    movdqa      xmmword ptr [rbp+label_00000000000003E0],xmm0
    mov         qword ptr [rbp-label_70],r15
    mov         qword ptr [rbp-label_60],r9
    mov         dword ptr [rbp+label_00000000000003F8],r12d
    call        0000000140011970
    movsxd      rdi,eax
    test        rsi,rsi
    je          0000000140012A7E
    test        r15b,1
    je          0000000140012A2F
    test        rbx,rbx
    jne         0000000140012A1A
    test        eax,eax
    je          0000000140012A1A
    mov         rcx,qword ptr [rbp+label_00000000000003E8]
    call        0000000140019CC4
    jmp         0000000140012945
    mov         rax,qword ptr [rsp+label_40]
    cmp         rax,rbx
    jne         0000000140012A7A
    test        edi,edi
    js          0000000140012A7E
    cmp         rdi,rbx
    jbe         0000000140012A7E
    jmp         0000000140012A09
    test        r14,r14
    je          0000000140012A53
    test        rbx,rbx
    je          0000000140012A7E
    test        eax,eax
    jns         0000000140012A42
    mov         byte ptr [rsi],r12b
    jmp         0000000140012A7E
    mov         rax,qword ptr [rsp+label_40]
    cmp         rax,rbx
    jne         0000000140012A7A
    mov         byte ptr [rbx+rsi-1],r12b
    jmp         0000000140012A7E
    test        rbx,rbx
    je          0000000140012A09
    mov         rax,qword ptr [rsp+label_40]
    cmp         rax,rbx
    jne         0000000140012A7A
    mov         rcx,qword ptr [rbp+label_00000000000003E8]
    mov         byte ptr [rbx+rsi-1],r12b
    call        0000000140019CC4
    mov         edi,label_0FFFFFFFE
    jmp         0000000140012A8A
    mov         byte ptr [rax+rsi],r12b
    mov         rcx,qword ptr [rbp+label_00000000000003E8]
    call        0000000140019CC4
    cmp         byte ptr [rsp+label_78],2
    jne         0000000140012A9D
    mov         rax,qword ptr [rsp+label_50]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_80],r12b
    je          0000000140012AB4
    mov         ebx,dword ptr [rsp+label_7C]
    lea         rcx,[rsp+label_50]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-label_78],r12b
    je          0000000140012ACA
    mov         ebx,dword ptr [rbp-label_7C]
    lea         rcx,[rsp+label_50]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         eax,edi
    mov         rcx,qword ptr [rbp+label_0000000000000400]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_510
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_0000000140012AEC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_70
    mov         rax,qword ptr [rbp+label_30]
    xor         esi,esi
    mov         qword ptr [rbp-label_40],rsi
    mov         rbx,rdx
    mov         byte ptr [rbp-label_30],sil
    mov         byte ptr [rbp-label_18],sil
    mov         byte ptr [rbp-label_10],sil
    mov         byte ptr [rbp-8],sil
    test        rax,rax
    je          0000000140012B2E
    movups      xmm0,xmmword ptr [rax]
    jmp         0000000140012B3D
    cmp         dword ptr [label_000000014003E290],esi
    jne         0000000140012B46
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    test        r9,r9
    je          0000000140012B83
    test        rbx,rbx
    je          0000000140012B83
    test        r8,r8
    je          0000000140012B83
    mov         rax,qword ptr [rbp+label_38]
    mov         qword ptr [rsp+label_28],rax
    lea         rax,[rbp-label_40]
    mov         qword ptr [rsp+label_20],rax
    call        0000000140010694
    mov         edi,eax
    test        eax,eax
    jns         0000000140012B75
    mov         byte ptr [rbx],sil
    cmp         eax,label_0FFFFFFFE
    jne         0000000140012BAE
    mov         dword ptr [rbp-label_14],label_22
    jmp         0000000140012B8A
    mov         dword ptr [rbp-label_14],label_16
    lea         rax,[rbp-label_40]
    mov         byte ptr [rbp-label_10],1
    mov         qword ptr [rsp+label_28],rax
    xor         r9d,r9d
    xor         r8d,r8d
    mov         qword ptr [rsp+label_20],rsi
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    or          edi,label_0FFFFFFFF
    cmp         byte ptr [rbp-label_18],2
    jne         0000000140012BBF
    mov         rax,qword ptr [rbp-label_40]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],sil
    je          0000000140012BD4
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],sil
    je          0000000140012BE9
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    lea         r11,[rsp+label_70]
    mov         eax,edi
    mov         rbx,qword ptr [r11+label_10]
    mov         rsi,qword ptr [r11+label_18]
    mov         rdi,qword ptr [r11+label_20]
    mov         rsp,r11
    pop         rbp
    ret
func_0000000140012C00_end:
    int         3
    int         3
    int         3
    mov         dword ptr [rsp+label_10],0
    mov         eax,dword ptr [rsp+label_10]
    jmp         0000000140019CC4
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    xor         ebx,ebx
    lea         rdx,[label_000000014003DEB0]
    xor         r8d,r8d
    lea         rcx,[rbx+rbx*4]
    lea         rcx,[rdx+rcx*8]
    mov         edx,label_0FA0
    call        000000014001B918
    test        eax,eax
    je          0000000140012C51
    inc         dword ptr [label_000000014003E0E0]
    inc         ebx
    cmp         ebx,label_0E
    jb          0000000140012C20
    mov         al,1
    jmp         0000000140012C5A
    xor         ecx,ecx
    call        0000000140012C7C
    xor         al,al
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140012C5F_end:
    movsxd      rax,ecx
    lea         rcx,[rax+rax*4]
    lea         rax,[label_000000014003DEB0]
    lea         rcx,[rax+rcx*8]
    jmp         qword ptr [label_000000014002C000]
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         ebx,dword ptr [label_000000014003E0E0]
    jmp         0000000140012CA7
    lea         rax,[label_000000014003DEB0]
    dec         ebx
    lea         rcx,[rbx+rbx*4]
    lea         rcx,[rax+rcx*8]
    call label_000000014002C018
    dec         dword ptr [label_000000014003E0E0]
    test        ebx,ebx
    jne         0000000140012C8A
    mov         al,1
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140012CB2_end:
    int         3
    movsxd      rax,ecx
    lea         rcx,[rax+rax*4]
    lea         rax,[label_000000014003DEB0]
    lea         rcx,[rax+rcx*8]
    jmp         qword ptr [label_000000014002C008]
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call        000000014001BBEC
    lea         rcx,[label_000000014003DF50]
    add         rsp,label_28
    jmp         qword ptr [label_000000014002C000]
    int         3
    lea         rcx,[label_000000014003DF50]
    jmp         qword ptr [label_000000014002C008]
    int         3
    int         3
    jmp         0000000140019D00
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rcx,rdi
    call        0000000140012D44
    mov         rdi,rax
    mov         ecx,dword ptr [rbx]
    call        0000000140012CB4
    mov         rax,rdi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140012D40_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_20],rsi
    push        rbp
    push        rdi
    push        r13
    push        r14
    push        r15
    mov         rbp,rsp
    sub         rsp,label_40
    mov         rax,qword ptr [rcx+8]
    xor         edx,edx
    mov         rdi,rcx
    mov         rsi,qword ptr [rax]
    mov         rax,qword ptr [rcx]
    mov         r14d,dword ptr [rax]
    test        rsi,rsi
    jne         0000000140012D84
    mov         ecx,r14d
    call        0000000140017964
    mov         r14,rax
    jmp         0000000140012E2C
    mov         r9,rsi
    mov         qword ptr [rsp+label_20],label_7FFFFFFF
    xor         r8d,r8d
    lea         rcx,[rbp+label_38]
    call        000000014001C144
    cmp         eax,label_16
    je          0000000140012FB2
    cmp         eax,label_22
    je          0000000140012FB2
    mov         rcx,qword ptr [rbp+label_38]
    mov         edx,2
    call        000000014001BDB0
    xor         ecx,ecx
    mov         rbx,rax
    test        rax,rax
    jne         0000000140012DE6
    call        0000000140019CC4
    xor         eax,eax
    lea         r11,[rsp+label_40]
    mov         rbx,qword ptr [r11+label_40]
    mov         rsi,qword ptr [r11+label_48]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         rdi
    pop         rbp
    ret
func_0000000140012DE5_end:
    mov         r8,qword ptr [rbp+label_38]
    mov         r9,rsi
    or          qword ptr [rsp+label_20],label_0FFFFFFFFFFFFFFFF
    mov         rdx,rbx
    call        000000014001C144
    test        eax,eax
    je          0000000140012E16
    cmp         eax,label_16
    je          0000000140012FB2
    cmp         eax,label_22
    je          0000000140012FB2
    mov         rcx,rbx
    jmp         0000000140012DC6
    mov         rdx,rbx
    mov         ecx,r14d
    call        0000000140017964
    mov         rcx,rbx
    mov         r14,rax
    call        0000000140019CC4
    test        r14,r14
    je          0000000140012DCB
    call        0000000140019964
    mov         r13,rax
    mov         r9,r14
    xor         r8d,r8d
    xor         edx,edx
    mov         rcx,qword ptr [rax+label_0000000000000090]
    mov         qword ptr [rbp-label_10],rcx
    mov         rcx,qword ptr [rax+label_0000000000000088]
    lea         rax,[rbp-label_10]
    and         qword ptr [rbp+label_30],0
    mov         qword ptr [rbp-8],rcx
    lea         rcx,[rbp+label_30]
    mov         qword ptr [rsp+label_28],rax
    and         qword ptr [rsp+label_20],0
    call        000000014001C640
    test        eax,eax
    je          0000000140012E8F
    cmp         eax,label_16
    je          0000000140012FC8
    cmp         eax,label_22
    je          0000000140012FC8
    jmp         0000000140012DCB
    mov         rcx,qword ptr [rbp+label_30]
    add         rcx,4
    call        0000000140019D00
    mov         rsi,rax
    test        rax,rax
    je          0000000140012DCB
    mov         r8,qword ptr [rbp+label_30]
    lea         r15,[rax+4]
    lea         rax,[rbp-label_10]
    mov         r9,r14
    mov         qword ptr [rsp+label_28],rax
    mov         rdx,r15
    or          qword ptr [rsp+label_20],label_0FFFFFFFFFFFFFFFF
    xor         ecx,ecx
    call        000000014001C640
    test        eax,eax
    je          0000000140012EEA
    cmp         eax,label_16
    je          0000000140012FC8
    cmp         eax,label_22
    je          0000000140012FC8
    mov         rcx,rsi
    jmp         0000000140012DC6
    mov         rax,qword ptr [rdi]
    mov         rbx,qword ptr [rbp-label_10]
    movsxd      rcx,dword ptr [rax]
    shl         rcx,5
    mov         rdx,qword ptr [rcx+rbx+label_30]
    test        rdx,rdx
    je          0000000140012F32
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rdx],eax
    cmp         eax,1
    jne         0000000140012F32
    mov         rax,qword ptr [rdi]
    movsxd      rcx,dword ptr [rax]
    shl         rcx,5
    mov         rcx,qword ptr [rcx+rbx+label_30]
    call        0000000140019CC4
    mov         rax,qword ptr [rdi]
    movsxd      rcx,dword ptr [rax]
    shl         rcx,5
    and         qword ptr [rcx+rbx+label_30],0
    mov         eax,dword ptr [r13+label_00000000000003A8]
    test        dword ptr [label_000000014003C468],eax
    jne         0000000140012F85
    mov         rax,qword ptr [rdi]
    movsxd      rcx,dword ptr [rax]
    shl         rcx,5
    mov         rdx,qword ptr [rcx+rbx+label_30]
    test        rdx,rdx
    je          0000000140012F85
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rdx],eax
    cmp         eax,1
    jne         0000000140012F85
    mov         rax,qword ptr [rdi]
    movsxd      rcx,dword ptr [rax]
    shl         rcx,5
    mov         rcx,qword ptr [rcx+rbx+label_30]
    call        0000000140019CC4
    mov         rax,qword ptr [rdi]
    movsxd      rcx,dword ptr [rax]
    shl         rcx,5
    and         qword ptr [rcx+rbx+label_30],0
    mov         ecx,dword ptr [rbx+label_10]
    mov         rax,r15
    mov         dword ptr [rsi],ecx
    mov         rcx,qword ptr [rdi]
    movsxd      rdx,dword ptr [rcx]
    shl         rdx,5
    mov         qword ptr [rdx+rbx+label_30],rsi
    mov         rcx,qword ptr [rdi]
    movsxd      rdx,dword ptr [rcx]
    inc         rdx
    shl         rdx,5
    mov         qword ptr [rdx+rbx],r15
    jmp         0000000140012DCD
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         dword ptr [rsp+8],ecx
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_40
    call        000000014001BBEC
    lea         rax,[rbp+label_10]
    mov         qword ptr [rbp-label_18],rax
    lea         r9,[rbp+label_28]
    lea         rax,[rbp+label_18]
    mov         qword ptr [rbp-label_10],rax
    lea         r8,[rbp-label_18]
    mov         eax,4
    lea         rdx,[rbp-label_20]
    lea         rcx,[rbp+label_20]
    mov         dword ptr [rbp+label_28],eax
    mov         dword ptr [rbp-label_20],eax
    call        0000000140012D04
    add         rsp,label_40
    pop         rbp
    ret
func_000000014001302B_end:
    sub         rsp,label_28
    call        0000000140019964
    lea         rdx,[rsp+label_30]
    mov         rcx,qword ptr [rax+label_0000000000000090]
    mov         qword ptr [rsp+label_30],rcx
    mov         rcx,rax
    call        0000000140019D60
    mov         rax,qword ptr [rsp+label_30]
    mov         rax,qword ptr [rax]
    add         rsp,label_28
    ret
func_000000014001305A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    cmp         dword ptr [label_000000014003E290],0
    movsxd      rbx,ecx
    lea         edi,[rbx+1]
    jne         000000014001309A
    cmp         edi,label_100
    ja          00000001400130F9
    mov         rax,qword ptr [label_000000014003C2B0]
    movzx       eax,word ptr [rax+rbx*2]
    and         eax,2
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140013099_end:
    call        0000000140019964
    lea         rdx,[rsp+label_38]
    mov         rcx,qword ptr [rax+label_0000000000000090]
    mov         qword ptr [rsp+label_38],rcx
    mov         rcx,rax
    call        0000000140019D60
    mov         rax,qword ptr [rsp+label_38]
    cmp         edi,label_100
    ja          00000001400130DA
    mov         rcx,qword ptr [rax]
    movzx       eax,word ptr [rcx+rbx*2]
    and         eax,2
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400130D9_end:
    cmp         dword ptr [rax+8],1
    jle         00000001400130F9
    xor         r8d,r8d
    mov         ecx,ebx
    lea         edx,[r8+2]
    call        000000014001C6F8
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400130F8_end:
    mov         rbx,qword ptr [rsp+label_30]
    xor         eax,eax
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140013105_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    cmp         dword ptr [label_000000014003E290],0
    movsxd      rbx,ecx
    lea         edi,[rbx+1]
    jne         000000014001314A
    cmp         edi,label_100
    ja          00000001400131A9
    mov         rax,qword ptr [label_000000014003C2B0]
    movzx       eax,word ptr [rax+rbx*2]
    and         eax,1
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140013149_end:
    call        0000000140019964
    lea         rdx,[rsp+label_38]
    mov         rcx,qword ptr [rax+label_0000000000000090]
    mov         qword ptr [rsp+label_38],rcx
    mov         rcx,rax
    call        0000000140019D60
    mov         rax,qword ptr [rsp+label_38]
    cmp         edi,label_100
    ja          000000014001318A
    mov         rcx,qword ptr [rax]
    movzx       eax,word ptr [rcx+rbx*2]
    and         eax,1
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140013189_end:
    cmp         dword ptr [rax+8],1
    jle         00000001400131A9
    xor         r8d,r8d
    mov         ecx,ebx
    lea         edx,[r8+1]
    call        000000014001C6F8
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400131A8_end:
    mov         rbx,qword ptr [rsp+label_30]
    xor         eax,eax
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400131B5_end:
    int         3
    int         3
    sub         rsp,label_28
    call        0000000140019964
    lea         rdx,[rsp+label_30]
    mov         rcx,qword ptr [rax+label_0000000000000090]
    mov         qword ptr [rsp+label_30],rcx
    mov         rcx,rax
    call        0000000140019D60
    mov         rax,qword ptr [rsp+label_30]
    mov         eax,dword ptr [rax+label_0C]
    add         rsp,label_28
    ret
func_00000001400131E6_end:
    int         3
    sub         rsp,label_28
    call        0000000140019964
    lea         rdx,[rsp+label_30]
    mov         rcx,qword ptr [rax+label_0000000000000090]
    mov         qword ptr [rsp+label_30],rcx
    mov         rcx,rax
    call        0000000140019D60
    mov         rax,qword ptr [rsp+label_30]
    add         rax,label_128
    add         rsp,label_28
    ret
func_0000000140013219_end:
    int         3
    int         3
    mov         r11,rsp
    mov         qword ptr [r11+label_10],rbx
    mov         qword ptr [r11+label_18],rbp
    mov         qword ptr [r11+label_20],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_0A0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000000098],rax
    mov         r8,qword ptr [rcx+label_0000000000000138]
    xor         ebx,ebx
    mov         qword ptr [r11-label_58],rcx
    mov         rdi,rcx
    mov         qword ptr [r11-label_50],rbx
    mov         r13d,ebx
    mov         r14d,ebx
    mov         ebp,ebx
    mov         r12d,ebx
    test        r8,r8
    je          0000000140013801
    lea         r15,[rcx+label_0C]
    mov         qword ptr [rsp+label_58],rbx
    lea         esi,[rbx+1]
    cmp         dword ptr [r15],ebx
    jne         00000001400132A4
    xor         edx,edx
    mov         qword ptr [rsp+label_20],r15
    mov         r9d,label_1004
    lea         rcx,[r11-label_58]
    call        000000014001C97C
    test        eax,eax
    jne         00000001400137D1
    mov         edx,4
    mov         rcx,rsi
    call        000000014001BDB0
    xor         ecx,ecx
    mov         qword ptr [rsp+label_58],rax
    call        0000000140019CC4
    mov         ebp,label_180
    mov         edx,2
    mov         ecx,ebp
    call        000000014001BDB0
    xor         ecx,ecx
    mov         r13,rax
    call        0000000140019CC4
    mov         rdx,rsi
    mov         ecx,ebp
    call        000000014001BDB0
    xor         ecx,ecx
    mov         r14,rax
    call        0000000140019CC4
    mov         rdx,rsi
    mov         ecx,ebp
    call        000000014001BDB0
    xor         ecx,ecx
    mov         rbp,rax
    call        0000000140019CC4
    mov         rdx,rsi
    mov         ecx,label_101
    call        000000014001BDB0
    xor         ecx,ecx
    mov         r12,rax
    call        0000000140019CC4
    cmp         qword ptr [rsp+label_58],rbx
    je          00000001400137D1
    test        r13,r13
    je          00000001400137D1
    test        r12,r12
    je          00000001400137D1
    test        r14,r14
    je          00000001400137D1
    test        rbp,rbp
    je          00000001400137D1
    mov         rcx,r12
    mov         eax,ebx
    mov         byte ptr [rcx],al
    add         rcx,rsi
    add         eax,esi
    cmp         eax,label_100
    jl          000000014001334B
    mov         ecx,dword ptr [r15]
    lea         rdx,[rsp+label_0000000000000080]
    call label_000000014002C050
    test        eax,eax
    je          00000001400137D1
    cmp         dword ptr [rsp+label_0000000000000080],5
    ja          00000001400137D1
    movzx       eax,word ptr [rsp+label_0000000000000080]
    mov         dword ptr [rsp+label_50],eax
    cmp         eax,esi
    jbe         00000001400133EB
    cmp         dword ptr [r15],label_0FDE9
    jne         00000001400133B0
    lea         rcx,[r12+label_0000000000000080]
    mov         r8d,label_80
    mov         dl,label_20
    call        000000014002A110
    jmp         00000001400133EB
    lea         rcx,[rsp+label_0000000000000086]
    cmp         byte ptr [rsp+label_0000000000000086],bl
    je          00000001400133EB
    cmp         byte ptr [rcx+1],bl
    je          00000001400133EB
    movzx       edx,byte ptr [rcx]
    movzx       eax,byte ptr [rcx+1]
    cmp         edx,eax
    ja          00000001400133E3
    movsxd      rax,edx
    add         edx,esi
    mov         byte ptr [rax+r12],label_20
    movzx       eax,byte ptr [rcx+1]
    cmp         edx,eax
    jle         00000001400133D1
    add         rcx,2
    cmp         byte ptr [rcx],bl
    jne         00000001400133C1
    mov         eax,dword ptr [r15]
    lea         rcx,[r14+label_0000000000000081]
    mov         rdx,qword ptr [rdi+label_0000000000000138]
    lea         r9,[r12+1]
    mov         dword ptr [rsp+label_40],ebx
    mov         dword ptr [rsp+label_38],eax
    mov         eax,label_0FF
    mov         dword ptr [rsp+label_30],eax
    mov         qword ptr [rsp+label_28],rcx
    xor         ecx,ecx
    mov         dword ptr [rsp+label_20],eax
    lea         r8d,[rax+1]
    call        000000014001D008
    test        eax,eax
    je          00000001400137D1
    mov         eax,dword ptr [r15]
    lea         rcx,[rbp+label_0000000000000081]
    mov         rdx,qword ptr [rdi+label_0000000000000138]
    lea         r9,[r12+1]
    mov         dword ptr [rsp+label_40],ebx
    mov         r8d,label_200
    mov         dword ptr [rsp+label_38],eax
    mov         eax,label_0FF
    mov         dword ptr [rsp+label_30],eax
    mov         qword ptr [rsp+label_28],rcx
    xor         ecx,ecx
    mov         dword ptr [rsp+label_20],eax
    call        000000014001D008
    test        eax,eax
    je          00000001400137D1
    mov         eax,dword ptr [r15]
    lea         rcx,[r13+label_0000000000000100]
    mov         dword ptr [rsp+label_30],ebx
    mov         r9d,label_100
    mov         dword ptr [rsp+label_28],eax
    mov         r8,r12
    mov         qword ptr [rsp+label_60],rcx
    mov         edx,esi
    mov         qword ptr [rsp+label_20],rcx
    xor         ecx,ecx
    call        000000014001CB44
    test        eax,eax
    je          00000001400137D1
    lea         rax,[r13+label_00000000000000FE]
    mov         word ptr [rax],bx
    mov         byte ptr [r14+label_7F],bl
    mov         byte ptr [rbp+label_7F],bl
    mov         byte ptr [r14+label_0000000000000080],bl
    mov         byte ptr [rbp+label_0000000000000080],bl
    mov         qword ptr [rsp+label_68],rax
    cmp         dword ptr [rsp+label_50],esi
    jbe         0000000140013582
    cmp         dword ptr [r15],label_0FDE9
    jne         000000014001352E
    mov         r8,r14
    lea         rdx,[rbp+label_0000000000000100]
    sub         r8,rbp
    lea         r9,[r13+label_0000000000000200]
    mov         ecx,label_80
    mov         r10d,label_8000
    lea         eax,[rcx+label_FFFFFFFFFFFFFF3E]
    cmp         eax,label_32
    ja          000000014001350F
    movzx       eax,r10w
    jmp         0000000140013511
    mov         eax,ebx
    mov         word ptr [r9],ax
    add         r9,2
    mov         byte ptr [r8+rdx],cl
    mov         byte ptr [rdx],cl
    add         ecx,esi
    add         rdx,rsi
    cmp         ecx,label_0FF
    jle         00000001400134FE
    jmp         0000000140013582
    lea         rdx,[rsp+label_0000000000000086]
    cmp         byte ptr [rsp+label_0000000000000086],bl
    je          0000000140013582
    mov         r10d,label_8000
    cmp         byte ptr [rdx+1],bl
    je          0000000140013582
    movzx       ecx,byte ptr [rdx]
    movzx       eax,byte ptr [rdx+1]
    cmp         ecx,eax
    ja          000000014001357A
    movsxd      rax,ecx
    mov         word ptr [r13+rax*2+label_0000000000000100],r10w
    mov         byte ptr [rax+r14+label_0000000000000080],cl
    mov         byte ptr [rax+rbp+label_0000000000000080],cl
    add         ecx,esi
    movzx       eax,byte ptr [rdx+1]
    cmp         ecx,eax
    jle         0000000140013555
    add         rdx,2
    cmp         byte ptr [rdx],bl
    jne         0000000140013545
    lea         rcx,[r13+label_0000000000000200]
    movups      xmm0,xmmword ptr [rcx]
    movups      xmm1,xmmword ptr [rcx+label_10]
    lea         rcx,[rcx+label_0000000000000080]
    movups      xmmword ptr [r13],xmm0
    mov         rax,qword ptr [rcx+label_70]
    movups      xmmword ptr [r13+label_10],xmm1
    movups      xmm0,xmmword ptr [rcx-label_60]
    movups      xmm1,xmmword ptr [rcx-label_50]
    movups      xmmword ptr [r13+label_20],xmm0
    movups      xmmword ptr [r13+label_30],xmm1
    movups      xmm0,xmmword ptr [rcx-label_40]
    movups      xmm1,xmmword ptr [rcx-label_30]
    movups      xmmword ptr [r13+label_40],xmm0
    movups      xmmword ptr [r13+label_50],xmm1
    movups      xmm0,xmmword ptr [rcx-label_20]
    movups      xmm1,xmmword ptr [rcx-label_10]
    movups      xmmword ptr [r13+label_60],xmm0
    sub         r13,label_0FFFFFFFFFFFFFF80
    movups      xmm0,xmmword ptr [rcx]
    movups      xmmword ptr [r13-label_10],xmm1
    movups      xmm1,xmmword ptr [rcx+label_10]
    movups      xmmword ptr [r13],xmm0
    movups      xmm0,xmmword ptr [rcx+label_20]
    movups      xmmword ptr [r13+label_10],xmm1
    movups      xmm1,xmmword ptr [rcx+label_30]
    movups      xmmword ptr [r13+label_20],xmm0
    movups      xmm0,xmmword ptr [rcx+label_40]
    movups      xmmword ptr [r13+label_30],xmm1
    movups      xmm1,xmmword ptr [rcx+label_50]
    movups      xmmword ptr [r13+label_40],xmm0
    movups      xmm0,xmmword ptr [rcx+label_60]
    movups      xmmword ptr [r13+label_50],xmm1
    movups      xmmword ptr [r13+label_60],xmm0
    mov         qword ptr [r13+label_70],rax
    mov         eax,dword ptr [rcx+label_78]
    mov         dword ptr [r13+label_78],eax
    movzx       eax,word ptr [rcx+label_7C]
    mov         word ptr [r13+label_7C],ax
    mov         eax,dword ptr [r14+label_0000000000000178]
    movups      xmm0,xmmword ptr [r14+label_0000000000000100]
    movups      xmm1,xmmword ptr [r14+label_0000000000000110]
    movups      xmmword ptr [r14],xmm0
    movups      xmm0,xmmword ptr [r14+label_0000000000000120]
    movups      xmmword ptr [r14+label_10],xmm1
    movups      xmm1,xmmword ptr [r14+label_0000000000000130]
    movups      xmmword ptr [r14+label_20],xmm0
    movups      xmm0,xmmword ptr [r14+label_0000000000000140]
    movups      xmmword ptr [r14+label_30],xmm1
    movups      xmm1,xmmword ptr [r14+label_0000000000000150]
    movups      xmmword ptr [r14+label_40],xmm0
    movups      xmm0,xmmword ptr [r14+label_0000000000000160]
    movups      xmmword ptr [r14+label_50],xmm1
    movsd       xmm1,mmword ptr [r14+label_0000000000000170]
    movups      xmmword ptr [r14+label_60],xmm0
    movsd       mmword ptr [r14+label_70],xmm1
    mov         dword ptr [r14+label_78],eax
    movzx       eax,word ptr [r14+label_000000000000017C]
    mov         word ptr [r14+label_7C],ax
    mov         al,byte ptr [r14+label_000000000000017E]
    mov         byte ptr [r14+label_7E],al
    movups      xmm0,xmmword ptr [rbp+label_0000000000000100]
    mov         eax,dword ptr [rbp+label_0000000000000178]
    movups      xmm1,xmmword ptr [rbp+label_0000000000000110]
    movups      xmmword ptr [rbp],xmm0
    movups      xmm0,xmmword ptr [rbp+label_0000000000000120]
    movups      xmmword ptr [rbp+label_10],xmm1
    movups      xmm1,xmmword ptr [rbp+label_0000000000000130]
    movups      xmmword ptr [rbp+label_20],xmm0
    movups      xmm0,xmmword ptr [rbp+label_0000000000000140]
    movups      xmmword ptr [rbp+label_30],xmm1
    movups      xmm1,xmmword ptr [rbp+label_0000000000000150]
    movups      xmmword ptr [rbp+label_40],xmm0
    movups      xmm0,xmmword ptr [rbp+label_0000000000000160]
    movups      xmmword ptr [rbp+label_50],xmm1
    movsd       xmm1,mmword ptr [rbp+label_0000000000000170]
    movups      xmmword ptr [rbp+label_60],xmm0
    movsd       mmword ptr [rbp+label_70],xmm1
    mov         dword ptr [rbp+label_78],eax
    movzx       eax,word ptr [rbp+label_000000000000017C]
    mov         word ptr [rbp+label_7C],ax
    mov         al,byte ptr [rbp+label_000000000000017E]
    mov         byte ptr [rbp+label_7E],al
    mov         rcx,qword ptr [rdi+label_0000000000000100]
    test        rcx,rcx
    je          000000014001378A
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rcx],eax
    cmp         eax,esi
    jne         000000014001378A
    mov         rcx,qword ptr [rdi+label_0000000000000108]
    sub         rcx,label_0FE
    call        0000000140019CC4
    mov         rcx,qword ptr [rdi+label_0000000000000110]
    add         rcx,label_0FFFFFFFFFFFFFF80
    call        0000000140019CC4
    mov         rcx,qword ptr [rdi+label_0000000000000118]
    add         rcx,label_0FFFFFFFFFFFFFF80
    call        0000000140019CC4
    mov         rcx,qword ptr [rdi+label_0000000000000100]
    call        0000000140019CC4
    mov         rax,qword ptr [rsp+label_58]
    mov         dword ptr [rax],esi
    mov         qword ptr [rdi+label_0000000000000100],rax
    mov         rax,qword ptr [rsp+label_60]
    mov         qword ptr [rdi],rax
    mov         rax,qword ptr [rsp+label_68]
    mov         qword ptr [rdi+label_0000000000000108],rax
    lea         rax,[r14+label_0000000000000080]
    mov         qword ptr [rdi+label_0000000000000110],rax
    lea         rax,[rbp+label_0000000000000080]
    mov         qword ptr [rdi+label_0000000000000118],rax
    mov         eax,dword ptr [rsp+label_50]
    mov         dword ptr [rdi+8],eax
    jmp         00000001400137F5
    mov         rcx,qword ptr [rsp+label_58]
    call        0000000140019CC4
    mov         rcx,r13
    call        0000000140019CC4
    mov         rcx,r14
    call        0000000140019CC4
    mov         rcx,rbp
    call        0000000140019CC4
    mov         ebx,esi
    mov         rcx,r12
    call        0000000140019CC4
    mov         eax,ebx
    jmp         000000014001384E
    mov         rax,qword ptr [rcx+label_0000000000000100]
    test        rax,rax
    je          0000000140013810
    lock dec    dword ptr [rax]
    lea         rax,[label_000000014002EE00]
    mov         qword ptr [rcx+label_0000000000000100],rbx
    mov         qword ptr [rcx],rax
    mov         esi,1
    lea         rax,[label_000000014002F080]
    mov         qword ptr [rcx+label_0000000000000108],rbx
    mov         qword ptr [rcx+label_0000000000000110],rax
    lea         rax,[label_000000014002F200]
    mov         qword ptr [rcx+label_0000000000000118],rax
    xor         eax,eax
    mov         dword ptr [rcx+8],esi
    mov         rcx,qword ptr [rsp+label_0000000000000098]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_00000000000000A0]
    mov         rbx,qword ptr [r11+label_38]
    mov         rbp,qword ptr [r11+label_40]
    mov         rsi,qword ptr [r11+label_48]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_000000014001387E_end:
    int         3
    jmp         000000014001BDB0
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_30
    xor         ebp,ebp
    mov         rdi,rcx
    test        rcx,rcx
    je          00000001400138DE
    or          rbx,label_0FFFFFFFFFFFFFFFF
    inc         rbx
    cmp         word ptr [rcx+rbx*2],bp
    jne         00000001400138AA
    inc         rbx
    lea         rcx,[rbx+rbx]
    call        0000000140012CFC
    mov         rsi,rax
    test        rax,rax
    je          00000001400138DE
    mov         r8,rdi
    mov         rdx,rbx
    mov         rcx,rax
    call        000000014001D0A0
    test        eax,eax
    jne         00000001400138F5
    mov         rax,rsi
    jmp         00000001400138E0
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_00000001400138F4_end:
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rbp
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    mov         eax,dword ptr [label_000000014003E0E8]
    xor         ebx,ebx
    mov         edi,3
    test        eax,eax
    jne         000000014001393D
    mov         eax,label_200
    jmp         0000000140013942
    cmp         eax,edi
    cmovl       eax,edi
    movsxd      rcx,eax
    mov         edx,8
    mov         dword ptr [label_000000014003E0E8],eax
    call        000000014001BDB0
    xor         ecx,ecx
    mov         qword ptr [label_000000014003E0F0],rax
    call        0000000140019CC4
    cmp         qword ptr [label_000000014003E0F0],rbx
    jne         000000014001399B
    mov         edx,8
    mov         dword ptr [label_000000014003E0E8],edi
    mov         rcx,rdi
    call        000000014001BDB0
    xor         ecx,ecx
    mov         qword ptr [label_000000014003E0F0],rax
    call        0000000140019CC4
    cmp         qword ptr [label_000000014003E0F0],rbx
    jne         000000014001399B
    or          eax,label_0FFFFFFFF
    jmp         0000000140013A10
    mov         rbp,rbx
    lea         rsi,[label_000000014003C0E8]
    lea         r14,[label_000000014003C0D0]
    lea         rcx,[r14+label_30]
    xor         r8d,r8d
    mov         edx,label_0FA0
    call        000000014001B918
    mov         rax,qword ptr [label_000000014003E0F0]
    lea         r8,[label_000000014003E300]
    mov         rdx,rbp
    sar         rdx,6
    mov         qword ptr [rbx+rax],r14
    mov         rax,rbp
    and         eax,label_3F
    lea         rcx,[rax+rax*8]
    mov         rax,qword ptr [r8+rdx*8]
    mov         rcx,qword ptr [rax+rcx*8+label_28]
    add         rcx,2
    cmp         rcx,2
    ja          00000001400139F9
    mov         dword ptr [rsi],label_0FFFFFFFE
    inc         rbp
    add         r14,label_58
    add         rbx,8
    add         rsi,label_58
    sub         rdi,1
    jne         00000001400139AC
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_0000000140013A2A_end:
    int         3
    mov         eax,ecx
    lea         rcx,[label_000000014003C0D0]
    imul        rax,rax,label_58
    add         rax,rcx
    ret
func_0000000140013A3C_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    call        0000000140014038
    call        000000014001D108
    xor         ebx,ebx
    mov         rcx,qword ptr [label_000000014003E0F0]
    mov         rcx,qword ptr [rbx+rcx]
    call        000000014001D1BC
    mov         rax,qword ptr [label_000000014003E0F0]
    mov         rcx,qword ptr [rbx+rax]
    add         rcx,label_30
    call label_000000014002C018
    add         rbx,8
    cmp         rbx,label_18
    jne         0000000140013A52
    mov         rcx,qword ptr [label_000000014003E0F0]
    call        0000000140019CC4
    and         qword ptr [label_000000014003E0F0],0
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140013A9A_end:
    int         3
    sub         rsp,label_28
    test        rcx,rcx
    jne         0000000140013ABC
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         eax,label_16
    jmp         0000000140013ADE
    test        rdx,rdx
    je          0000000140013AC8
    lea         rax,[rcx+8]
    mov         qword ptr [rdx],rax
    test        r8,r8
    je          0000000140013AD0
    mov         qword ptr [r8],rcx
    test        r9,r9
    je          0000000140013ADC
    lea         rax,[rcx+label_10]
    mov         qword ptr [r9],rax
    xor         eax,eax
    add         rsp,label_28
    ret
func_0000000140013AE2_end:
    int         3
    add         rcx,label_30
    jmp         qword ptr [label_000000014002C000]
    int         3
    add         rcx,label_30
    jmp         qword ptr [label_000000014002C008]
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+8],rcx
    push        rdi
    sub         rsp,label_30
    mov         rdi,rdx
    mov         rbx,rcx
    test        rcx,rcx
    jne         0000000140013B45
    mov         byte ptr [rdx+label_30],1
    mov         dword ptr [rdx+label_2C],label_16
    mov         qword ptr [rax-label_10],rdx
    and         qword ptr [rax-label_18],rcx
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    call        0000000140010530
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_48]
    add         rsp,label_30
    pop         rdi
    ret
func_0000000140013B44_end:
    mov         eax,dword ptr [rcx+label_14]
    nop
    shr         eax,label_0C
    and         al,1
    je          0000000140013B57
    call        000000014001D40C
    jmp         0000000140013B37
    call        0000000140013AE4
    nop
    mov         rdx,rdi
    mov         rcx,rbx
    call        0000000140013B78
    mov         edi,eax
    mov         rcx,rbx
    call        0000000140013AF0
    mov         eax,edi
    jmp         0000000140013B3A
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rsi
    push        rdi
    sub         rsp,label_30
    mov         rdi,rdx
    mov         rbx,rcx
    test        rcx,rcx
    jne         0000000140013BB8
    mov         qword ptr [rax-label_10],rdx
    xor         r9d,r9d
    and         qword ptr [rax-label_18],rcx
    xor         r8d,r8d
    mov         byte ptr [rdx+label_30],1
    mov         dword ptr [rdx+label_2C],label_16
    xor         edx,edx
    call        0000000140010530
    or          eax,label_0FFFFFFFF
    jmp         0000000140013C0D
    mov         eax,dword ptr [rcx+label_14]
    or          esi,label_0FFFFFFFF
    shr         eax,label_0D
    nop
    test        al,1
    je          0000000140013C03
    call        0000000140013ED8
    mov         rcx,rbx
    mov         esi,eax
    call        000000014001D1BC
    mov         rcx,rbx
    call        000000014001AF5C
    mov         ecx,eax
    mov         rdx,rdi
    call        000000014001D278
    test        eax,eax
    jns         0000000140013BF0
    or          esi,label_0FFFFFFFF
    jmp         0000000140013C03
    mov         rcx,qword ptr [rbx+label_28]
    test        rcx,rcx
    je          0000000140013C03
    call        0000000140019CC4
    and         qword ptr [rbx+label_28],0
    mov         rcx,rbx
    call        000000014001D40C
    mov         eax,esi
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_30
    pop         rdi
    ret
func_0000000140013C1C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_60
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         0000000140013C60
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         rdx,[rbp-label_40]
    call        0000000140013AFC
    cmp         byte ptr [rbp-label_18],2
    mov         edi,eax
    jne         0000000140013C7C
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          0000000140013C91
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          0000000140013CA6
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         rbx,qword ptr [rsp+label_70]
    mov         eax,edi
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rbp
    ret
func_0000000140013CB7_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rdi,r9
    mov         rbx,r8
    mov         rcx,qword ptr [rdx]
    call        0000000140013AE4
    nop
    mov         rdx,qword ptr [rbx+8]
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax]
    test        rcx,rcx
    je          0000000140013D41
    mov         ecx,dword ptr [rcx+label_14]
    nop
    mov         eax,ecx
    shr         eax,label_0D
    and         al,1
    je          0000000140013D41
    mov         eax,ecx
    and         al,3
    cmp         al,2
    jne         0000000140013CFF
    test        cl,label_0C0
    jne         0000000140013D09
    bt          ecx,label_0B
    jb          0000000140013D09
    inc         dword ptr [rdx]
    jmp         0000000140013D41
    mov         rax,qword ptr [rbx+label_10]
    cmp         byte ptr [rax],0
    jne         0000000140013D22
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax]
    mov         eax,dword ptr [rcx+label_14]
    nop
    shr         eax,1
    and         al,1
    je          0000000140013D41
    mov         rcx,qword ptr [rbx]
    mov         rcx,qword ptr [rcx]
    call        0000000140013F64
    cmp         eax,label_0FFFFFFFF
    je          0000000140013D3A
    mov         rax,qword ptr [rbx+8]
    inc         dword ptr [rax]
    jmp         0000000140013D41
    mov         rax,qword ptr [rbx+label_18]
    or          dword ptr [rax],label_0FFFFFFFF
    mov         rcx,qword ptr [rdi]
    call        0000000140013AF0
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140013D53_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rsi
    push        rdi
    push        r14
    sub         rsp,label_60
    mov         rdi,r9
    mov         rsi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rbx,qword ptr [label_000000014003E0F0]
    movsxd      rax,dword ptr [label_000000014003E0E8]
    lea         r14,[rbx+rax*8]
    mov         qword ptr [rsp+label_38],rbx
    cmp         rbx,r14
    je          0000000140013E1D
    mov         rax,qword ptr [rbx]
    mov         qword ptr [rsp+label_20],rax
    mov         rdx,qword ptr [rsi]
    test        rax,rax
    je          0000000140013DC6
    mov         ecx,dword ptr [rax+label_14]
    nop
    mov         eax,ecx
    shr         eax,label_0D
    and         al,1
    je          0000000140013DC6
    mov         eax,ecx
    and         al,3
    cmp         al,2
    jne         0000000140013DBE
    test        cl,label_0C0
    jne         0000000140013DCC
    bt          ecx,label_0B
    jb          0000000140013DCC
    inc         dword ptr [rdx]
    add         rbx,8
    jmp         0000000140013D86
    mov         rdx,qword ptr [rsi+label_10]
    mov         rcx,qword ptr [rsi+8]
    mov         rax,qword ptr [rsi]
    lea         r8,[rsp+label_20]
    mov         qword ptr [rsp+label_40],r8
    mov         qword ptr [rsp+label_48],rax
    mov         qword ptr [rsp+label_50],rcx
    mov         qword ptr [rsp+label_58],rdx
    mov         rax,qword ptr [rsp+label_20]
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_30],rax
    lea         r9,[rsp+label_28]
    lea         r8,[rsp+label_40]
    lea         rdx,[rsp+label_30]
    lea         rcx,[rsp+label_0000000000000088]
    call        0000000140013CB8
    jmp         0000000140013DC6
    mov         ecx,dword ptr [rdi]
    call        0000000140012CB4
    mov         rbx,qword ptr [rsp+label_0000000000000080]
    add         rsp,label_60
    pop         r14
    pop         rdi
    pop         rsi
    ret
func_0000000140013E34_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         rcx,qword ptr [rdx]
    call        0000000140013AE4
    nop
    mov         rcx,qword ptr [rdi]
    mov         rcx,qword ptr [rcx]
    call        0000000140013F64
    mov         edi,eax
    mov         rcx,qword ptr [rbx]
    call        0000000140013AF0
    mov         eax,edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140013E77_end:
    mov         byte ptr [rsp+8],cl
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_40
    and         dword ptr [rbp+label_28],0
    lea         rax,[rbp+label_28]
    and         dword ptr [rbp+label_20],0
    lea         r9,[rbp-label_20]
    mov         qword ptr [rbp-label_18],rax
    lea         r8,[rbp-label_18]
    lea         rax,[rbp+label_10]
    mov         qword ptr [rbp-label_10],rax
    lea         rdx,[rbp-label_1C]
    lea         rax,[rbp+label_20]
    mov         qword ptr [rbp-8],rax
    lea         rcx,[rbp+label_18]
    mov         eax,8
    mov         dword ptr [rbp-label_20],eax
    mov         dword ptr [rbp-label_1C],eax
    call        0000000140013D54
    cmp         byte ptr [rbp+label_10],0
    mov         eax,dword ptr [rbp+label_20]
    cmovne      eax,dword ptr [rbp+label_28]
    add         rsp,label_40
    pop         rbp
    ret
func_0000000140013ED4_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    mov         rbp,rdx
    mov         ecx,dword ptr [rcx+label_14]
    mov         eax,ecx
    and         al,3
    nop
    cmp         al,2
    jne         0000000140013F4D
    test        cl,label_0C0
    je          0000000140013F4D
    mov         edi,dword ptr [rbx]
    sub         edi,dword ptr [rbx+8]
    and         dword ptr [rbx+label_10],0
    mov         rsi,qword ptr [rbx+8]
    mov         qword ptr [rbx],rsi
    test        edi,edi
    jle         0000000140013F4D
    mov         rcx,rbx
    call        000000014001AF5C
    mov         r9,rbp
    mov         r8d,edi
    mov         rdx,rsi
    mov         ecx,eax
    call        000000014001DD50
    cmp         edi,eax
    je          0000000140013F3D
    lock or     dword ptr [rbx+label_14],label_10
    or          eax,label_0FFFFFFFF
    jmp         0000000140013F4F
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,2
    test        al,1
    je          0000000140013F4D
    lock and    dword ptr [rbx+label_14],label_0FFFFFFFD
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140013F63_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_60
    and         qword ptr [rbp-label_40],0
    mov         rbx,rcx
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         0000000140013FA7
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    test        rbx,rbx
    jne         0000000140013FB7
    xor         ecx,ecx
    call        0000000140013E78
    mov         edi,eax
    jmp         0000000140013FE9
    lea         rdx,[rbp-label_40]
    call        0000000140013ED8
    test        eax,eax
    je          0000000140013FC9
    or          edi,label_0FFFFFFFF
    jmp         0000000140013FE9
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,label_0B
    test        al,1
    je          0000000140013FE7
    mov         rcx,rbx
    call        000000014001AF5C
    mov         ecx,eax
    call        000000014001D4B4
    test        eax,eax
    jne         0000000140013FC4
    xor         edi,edi
    cmp         byte ptr [rbp-label_18],2
    jne         0000000140013FFA
    mov         rax,qword ptr [rbp-label_40]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          000000014001400F
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          0000000140014024
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         rbx,qword ptr [rsp+label_70]
    mov         eax,edi
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rbp
    ret
func_0000000140014035_end:
    int         3
    int         3
    mov         cl,1
    jmp         0000000140013E78
    int         3
    sub         rsp,label_38
    mov         qword ptr [rsp+label_48],rcx
    test        rcx,rcx
    jne         0000000140014055
    call        0000000140013E78
    jmp         00000001400140A2
    mov         edx,dword ptr [rcx+label_14]
    mov         eax,edx
    and         al,3
    nop
    cmp         al,2
    jne         0000000140014066
    test        dl,label_0C0
    jne         0000000140014070
    bt          edx,label_0B
    jb          0000000140014070
    xor         eax,eax
    jmp         00000001400140A2
    lea         rax,[rsp+label_48]
    mov         qword ptr [rsp+label_58],rax
    lea         r9,[rsp+label_50]
    mov         rax,qword ptr [rsp+label_48]
    lea         r8,[rsp+label_58]
    lea         rdx,[rsp+label_20]
    mov         qword ptr [rsp+label_50],rax
    lea         rcx,[rsp+label_40]
    mov         qword ptr [rsp+label_20],rax
    call        0000000140013E38
    add         rsp,label_38
    ret
func_00000001400140A6_end:
    int         3
    sub         rsp,label_28
    mov         rdx,rcx
    test        rcx,rcx
    jne         00000001400140C9
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    jmp         00000001400140E6
    sub         dword ptr [rcx+label_10],1
    jns         00000001400140D8
    add         rsp,label_28
    jmp         000000014001E178
    mov         rax,qword ptr [rcx]
    movzx       ecx,byte ptr [rax]
    inc         rax
    mov         qword ptr [rdx],rax
    mov         eax,ecx
    add         rsp,label_28
    ret
func_00000001400140EA_end:
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+8],rcx
    push        rdi
    sub         rsp,label_30
    mov         qword ptr [rsp+label_20],rsp
    mov         rbx,rcx
    test        rcx,rcx
    jne         0000000140014126
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_0000000140014125_end:
    call        0000000140013AE4
    nop
    mov         qword ptr [rsp+label_48],rbx
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,label_0C
    mov         edi,1
    and         al,dil
    jne         00000001400141B8
    mov         rcx,rbx
    call        000000014001AF5C
    movsxd      r8,eax
    lea         ecx,[r8+2]
    mov         rdx,r8
    lea         r10,[label_000000014003E300]
    cmp         ecx,edi
    jbe         0000000140014181
    mov         rax,r8
    sar         rax,6
    mov         rcx,r8
    and         ecx,label_3F
    lea         rcx,[rcx+rcx*8]
    mov         rax,qword ptr [r10+rax*8]
    lea         r9,[rax+rcx*8]
    lea         rcx,[label_000000014003C420]
    jmp         000000014001418B
    lea         rcx,[label_000000014003C420]
    mov         r9,rcx
    cmp         byte ptr [r9+label_39],0
    jne         00000001400141B6
    lea         eax,[r8+2]
    cmp         eax,edi
    jbe         00000001400141B0
    mov         rax,rdx
    sar         rax,6
    and         edx,label_3F
    lea         rcx,[rdx+rdx*8]
    mov         rax,qword ptr [r10+rax*8]
    lea         rcx,[rax+rcx*8]
    test        byte ptr [rcx+label_3D],dil
    je          00000001400141B8
    xor         edi,edi
    test        edi,edi
    jne         00000001400141E7
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    lea         rdx,[label_00000001400141DF]
    mov         rcx,qword ptr [rsp+label_20]
    call        0000000140029754
    nop
    nop
    or          eax,label_0FFFFFFFF
    jmp         000000014001411B
    mov         rcx,rbx
    call        00000001400140A8
    mov         edi,eax
    mov         rcx,rbx
    call        0000000140013AF0
    mov         eax,edi
    jmp         000000014001411B
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    xor         ebx,ebx
    mov         rdi,rdx
    test        rcx,rcx
    jne         0000000140014229
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    jmp         0000000140014240
    test        rdi,rdi
    je          0000000140014214
    call        000000014001E7D4
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    mov         qword ptr [rdi],rax
    setne       bl
    lea         eax,[rbx-1]
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001424A_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_10],rdx
    push        rdi
    sub         rsp,label_40
    mov         qword ptr [rsp+label_30],rsp
    mov         rdi,r8
    mov         rbx,rdx
    mov         esi,ecx
    test        rdx,rdx
    jne         00000001400142A7
    mov         byte ptr [r8+label_30],1
    mov         dword ptr [r8+label_2C],label_16
    mov         qword ptr [rax-label_20],r8
    and         qword ptr [rax-label_28],rdx
    xor         r9d,r9d
    xor         r8d,r8d
    xor         ecx,ecx
    call        0000000140010530
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_50]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_40
    pop         rdi
    ret
func_00000001400142A6_end:
    mov         rcx,rbx
    call        0000000140013AE4
    nop
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,label_0C
    and         al,1
    jne         0000000140014335
    mov         rcx,rbx
    call        000000014001AF5C
    movsxd      r8,eax
    lea         ecx,[r8+2]
    mov         rdx,r8
    lea         r10,[label_000000014003E300]
    cmp         ecx,1
    jbe         00000001400142FB
    mov         rax,r8
    sar         rax,6
    mov         rcx,r8
    and         ecx,label_3F
    lea         rcx,[rcx+rcx*8]
    mov         rax,qword ptr [r10+rax*8]
    lea         r9,[rax+rcx*8]
    lea         rcx,[label_000000014003C420]
    jmp         0000000140014305
    lea         rcx,[label_000000014003C420]
    mov         r9,rcx
    cmp         byte ptr [r9+label_39],0
    jne         0000000140014331
    lea         eax,[r8+2]
    cmp         eax,1
    jbe         000000014001432B
    mov         rax,rdx
    sar         rax,6
    and         edx,label_3F
    lea         rcx,[rdx+rdx*8]
    mov         rax,qword ptr [r10+rax*8]
    lea         rcx,[rax+rcx*8]
    test        byte ptr [rcx+label_3D],1
    je          0000000140014335
    xor         eax,eax
    jmp         000000014001433A
    mov         eax,1
    test        eax,eax
    jne         000000014001437E
    mov         byte ptr [rdi+label_30],1
    mov         dword ptr [rdi+label_2C],label_16
    mov         qword ptr [rsp+label_28],rdi
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    lea         rdx,[label_0000000140014376]
    mov         rcx,qword ptr [rsp+label_30]
    call        0000000140029754
    nop
    nop
    or          eax,label_0FFFFFFFF
    jmp         0000000140014297
    sub         dword ptr [rbx+label_10],1
    jns         0000000140014395
    mov         r8,rdi
    mov         rdx,rbx
    mov         ecx,esi
    call        000000014001E9EC
    mov         edi,eax
    jmp         00000001400143A2
    mov         rax,qword ptr [rbx]
    mov         byte ptr [rax],sil
    inc         qword ptr [rbx]
    movzx       edi,sil
    mov         rcx,rbx
    call        0000000140013AF0
    mov         eax,edi
    jmp         0000000140014297
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_60
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         00000001400143F4
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         r8,[rbp-label_40]
    call        000000014001424C
    cmp         byte ptr [rbp-label_18],2
    mov         edi,eax
    jne         0000000140014410
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          0000000140014425
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          000000014001443A
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         rbx,qword ptr [rsp+label_70]
    mov         eax,edi
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rbp
    ret
func_000000014001444B_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         rbx,qword ptr [rsp+label_0000000000000090]
    mov         r14,r8
    mov         rsi,rdx
    mov         r12,rcx
    test        r8,r8
    je          0000000140014495
    test        r9,r9
    je          0000000140014495
    test        rcx,rcx
    jne         00000001400144AC
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_70]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_00000001400144AB_end:
    test        rbx,rbx
    je          00000001400144BF
    xor         edx,edx
    or          rax,label_0FFFFFFFFFFFFFFFF
    div         rax,r14
    cmp         r9,rax
    jbe         00000001400144EA
    cmp         rsi,label_0FFFFFFFFFFFFFFFF
    je          00000001400144D7
    mov         r8,rsi
    xor         edx,edx
    call        000000014002A110
    mov         r9,qword ptr [rsp+label_0000000000000088]
    test        rbx,rbx
    je          0000000140014485
    xor         edx,edx
    or          rax,label_0FFFFFFFFFFFFFFFF
    div         rax,r14
    cmp         r9,rax
    ja          0000000140014485
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        eax,label_4C0
    je          00000001400144FA
    mov         ecx,dword ptr [rbx+label_20]
    jmp         00000001400144FF
    mov         ecx,label_1000
    mov         rdi,r14
    mov         dword ptr [rsp+label_0000000000000090],ecx
    imul        rdi,r9
    mov         r10,r12
    mov         qword ptr [rsp+label_20],r12
    mov         rbp,rdi
    mov         r13,rsi
    test        rdi,rdi
    je          0000000140014665
    mov         eax,dword ptr [rbx+label_14]
    mov         edx,label_7FFFFFFF
    nop
    test        eax,label_4C0
    je          00000001400145AA
    movsxd      r15,dword ptr [rbx+label_10]
    test        r15d,r15d
    je          00000001400145AA
    js          0000000140014690
    cmp         rbp,r15
    cmovb       r15d,ebp
    cmp         r15,r13
    ja          000000014001466D
    mov         rdx,qword ptr [rbx]
    test        r15,r15
    je          0000000140014591
    test        r10,r10
    je          000000014001457C
    mov         rcx,r10
    test        rdx,rdx
    je          0000000140014572
    mov         r8d,r15d
    call        0000000140029A70
    jmp         000000014001458C
    mov         r8,r13
    xor         edx,edx
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         r10,qword ptr [rsp+label_20]
    sub         dword ptr [rbx+label_10],r15d
    sub         rbp,r15
    add         qword ptr [rbx],r15
    mov         ecx,dword ptr [rsp+label_0000000000000090]
    sub         r13,r15
    jmp         000000014001464C
    mov         eax,ecx
    cmp         rbp,rax
    jb          000000014001461C
    cmp         rbp,rdx
    mov         r15d,ebp
    cmova       r15d,edx
    test        ecx,ecx
    je          00000001400145C9
    xor         edx,edx
    mov         eax,r15d
    div         eax,ecx
    sub         r15d,edx
    mov         eax,r15d
    cmp         rax,r13
    ja          000000014001466D
    mov         rax,qword ptr [rbx+8]
    mov         rcx,rbx
    and         dword ptr [rbx+label_10],0
    mov         qword ptr [rbx],rax
    call        000000014001AF5C
    mov         rdx,qword ptr [rsp+label_20]
    mov         ecx,eax
    mov         r8d,r15d
    call        000000014001F060
    test        eax,eax
    je          00000001400146A5
    js          0000000140014690
    mov         ecx,dword ptr [rsp+label_0000000000000090]
    mov         r10,qword ptr [rsp+label_20]
    movsxd      r15,eax
    sub         rbp,r15
    sub         r13,r15
    jmp         000000014001464C
    mov         rcx,rbx
    call        000000014001E178
    cmp         eax,label_0FFFFFFFF
    je          0000000140014695
    test        r13,r13
    je          000000014001466D
    mov         r10,qword ptr [rsp+label_20]
    dec         rbp
    dec         r13
    mov         r15d,1
    mov         byte ptr [r10],al
    mov         ecx,dword ptr [rbx+label_20]
    mov         dword ptr [rsp+label_0000000000000090],ecx
    add         r10,r15
    mov         qword ptr [rsp+label_20],r10
    test        rbp,rbp
    jne         0000000140014524
    mov         r9,qword ptr [rsp+label_0000000000000088]
    mov         rax,r9
    jmp         0000000140014497
    cmp         rsi,label_0FFFFFFFFFFFFFFFF
    je          0000000140014680
    mov         r8,rsi
    xor         edx,edx
    mov         rcx,r12
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_22
    jmp         0000000140014490
    lock or     dword ptr [rbx+label_14],label_10
    sub         rdi,rbp
    xor         edx,edx
    mov         rax,rdi
    div         rax,r14
    jmp         0000000140014497
    lock or     dword ptr [rbx+label_14],8
    jmp         0000000140014695
    sub         rsp,label_38
    mov         qword ptr [rsp+label_20],r9
    mov         r9,r8
    mov         r8,rdx
    or          rdx,label_0FFFFFFFFFFFFFFFF
    call        00000001400146CC
    add         rsp,label_38
    ret
func_00000001400146C8_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rsi
    mov         qword ptr [rax+label_18],rdi
    mov         qword ptr [rax+label_20],r14
    push        r15
    sub         rsp,label_30
    mov         rsi,r9
    mov         r15,r8
    mov         rdi,rdx
    mov         r14,rcx
    test        r8,r8
    je          0000000140014725
    test        r9,r9
    je          0000000140014725
    mov         rbx,qword ptr [rsp+label_60]
    test        rbx,rbx
    jne         0000000140014742
    cmp         rdx,label_0FFFFFFFFFFFFFFFF
    je          0000000140014715
    mov         r8,rdx
    xor         edx,edx
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    mov         rdi,qword ptr [rsp+label_50]
    mov         r14,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r15
    ret
func_0000000140014741_end:
    mov         rcx,rbx
    call        0000000140013AE4
    nop
    mov         qword ptr [rsp+label_20],rbx
    mov         r9,rsi
    mov         r8,r15
    mov         rdx,rdi
    mov         rcx,r14
    call        000000014001444C
    mov         rdi,rax
    mov         rcx,rbx
    call        0000000140013AF0
    mov         rax,rdi
    jmp         0000000140014727
    int         3
    int         3
    int         3
    sub         rsp,label_28
    test        rcx,rcx
    jne         0000000140014795
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    add         rsp,label_28
    ret
func_0000000140014794_end:
    test        rdx,rdx
    je          000000014001477D
    mov         rdx,qword ptr [rdx]
    xor         r8d,r8d
    add         rsp,label_28
    jmp         0000000140014A1C
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    mov         qword ptr [rax+8],rcx
    push        r14
    sub         rsp,label_30
    mov         rdi,r9
    mov         esi,r8d
    mov         r14,rdx
    mov         rbx,rcx
    test        rcx,rcx
    jne         0000000140014816
    mov         byte ptr [r9+label_30],1
    mov         dword ptr [r9+label_2C],label_16
    mov         qword ptr [rsp+label_28],rdi
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r14
    ret
func_0000000140014815_end:
    xor         eax,eax
    cmp         esi,2
    setbe       al
    test        eax,eax
    je          00000001400147D6
    call        0000000140013AE4
    nop
    mov         r9,rdi
    mov         r8d,esi
    mov         rdx,r14
    mov         rcx,rbx
    call        0000000140014930
    mov         edi,eax
    mov         rcx,rbx
    call        0000000140013AF0
    mov         eax,edi
    jmp         0000000140014800
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,rdx
    mov         rbx,rcx
    cmp         r8d,2
    je          0000000140014922
    mov         eax,dword ptr [rcx+label_14]
    nop
    test        eax,label_4C0
    je          0000000140014922
    mov         eax,dword ptr [rcx+label_14]
    nop
    test        al,6
    jne         0000000140014922
    cmp         dword ptr [rcx+label_10],0
    jle         0000000140014922
    movsxd      r10,dword ptr [rcx+label_18]
    lea         r9,[label_000000014003E300]
    mov         rcx,r10
    nop
    and         ecx,label_3F
    mov         rax,r10
    sar         rax,6
    lea         rdx,[rcx+rcx*8]
    mov         r9,qword ptr [r9+rax*8]
    cmp         byte ptr [r9+rdx*8+label_38],0
    jl          0000000140014922
    cmp         byte ptr [r9+rdx*8+label_39],0
    jne         0000000140014922
    test        r8d,r8d
    jne         00000001400148FA
    xor         edx,edx
    mov         ecx,r10d
    lea         r8d,[rdx+1]
    call        000000014001F720
    mov         rcx,rax
    test        rax,rax
    js          0000000140014922
    movsxd      rax,dword ptr [rbx+label_10]
    mov         rdx,rdi
    sub         rcx,rax
    shr         rdi,label_3F
    sub         rdx,rcx
    shr         rcx,label_3F
    cmp         edi,ecx
    je          00000001400148F7
    mov         rax,rdx
    shr         rax,label_3F
    cmp         edi,eax
    jne         0000000140014922
    mov         rdi,rdx
    mov         r8,qword ptr [rbx]
    mov         rcx,qword ptr [rbx+8]
    sub         rcx,r8
    cmp         rcx,rdi
    jg          0000000140014922
    movsxd      rdx,dword ptr [rbx+label_10]
    cmp         rdi,rdx
    jg          0000000140014922
    lea         rcx,[r8+rdi]
    sub         edx,edi
    mov         qword ptr [rbx],rcx
    mov         al,1
    mov         dword ptr [rbx+label_10],edx
    jmp         0000000140014924
    xor         al,al
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001492E_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    mov         eax,dword ptr [rcx+label_14]
    mov         rdi,r9
    shr         eax,label_0D
    mov         ebp,r8d
    mov         r14,rdx
    mov         rbx,rcx
    nop
    test        al,1
    jne         0000000140014975
    mov         byte ptr [r9+label_30],1
    or          eax,label_0FFFFFFFF
    mov         dword ptr [r9+label_2C],label_16
    jmp         00000001400149FF
    lock and    dword ptr [rcx+label_14],label_0FFFFFFF7
    call        0000000140014848
    xor         esi,esi
    test        al,al
    jne         00000001400149FD
    cmp         ebp,1
    jne         000000014001499A
    mov         rdx,rdi
    mov         rcx,rbx
    call        000000014001E870
    add         r14,rax
    mov         ebp,esi
    mov         rdx,rdi
    mov         rcx,rbx
    call        0000000140013ED8
    mov         rax,qword ptr [rbx+8]
    mov         qword ptr [rbx],rax
    mov         dword ptr [rbx+label_10],esi
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,2
    test        al,1
    je          00000001400149C1
    lock and    dword ptr [rbx+label_14],label_0FFFFFFFC
    jmp         00000001400149DE
    mov         eax,dword ptr [rbx+label_14]
    nop
    and         eax,label_41
    cmp         al,label_41
    jne         00000001400149DE
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,8
    test        al,1
    jne         00000001400149DE
    mov         dword ptr [rbx+label_20],label_200
    mov         ecx,dword ptr [rbx+label_18]
    mov         r9,rdi
    mov         r8d,ebp
    mov         rdx,r14
    nop
    call        000000014001F7BC
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    setne       sil
    lea         eax,[rsi-1]
    jmp         00000001400149FF
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_0000000140014A19_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_60
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         0000000140014A5C
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         r9,[rbp-label_40]
    call        00000001400147AC
    cmp         byte ptr [rbp-label_18],2
    mov         edi,eax
    jne         0000000140014A78
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          0000000140014A8D
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          0000000140014AA2
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         rbx,qword ptr [rsp+label_70]
    mov         eax,edi
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rbp
    ret
func_0000000140014AB3_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         rcx,qword ptr [rdx]
    call        0000000140013AE4
    nop
    mov         rcx,rdi
    call        0000000140014AF4
    mov         rdi,rax
    mov         rcx,qword ptr [rbx]
    call        0000000140013AF0
    mov         rax,rdi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140014AF2_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_30
    mov         rax,qword ptr [rcx]
    mov         rbx,rcx
    mov         rsi,qword ptr [rcx+8]
    mov         rbp,qword ptr [rax]
    mov         rcx,rbp
    call        000000014001AFE8
    mov         r9,qword ptr [rbx]
    mov         dil,al
    mov         r8,qword ptr [rbx+label_20]
    mov         rdx,qword ptr [rbx+label_18]
    mov         rcx,qword ptr [rbx+label_10]
    mov         r10,qword ptr [rbx+8]
    mov         r9,qword ptr [r9]
    mov         r8,qword ptr [r8]
    mov         rdx,qword ptr [rdx]
    mov         rcx,qword ptr [rcx]
    mov         qword ptr [rsp+label_20],r10
    call        0000000140014C10
    mov         r8,rsi
    mov         rdx,rbp
    mov         cl,dil
    mov         rbx,rax
    call        000000014001B0B0
    mov         rbp,qword ptr [rsp+label_48]
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_0000000140014B71_end:
    int         3
    int         3
    mov         r11,rsp
    mov         qword ptr [r11+label_20],r9
    mov         qword ptr [r11+label_18],r8
    mov         qword ptr [r11+label_10],rdx
    mov         qword ptr [r11+8],rcx
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_70
    test        rdx,rdx
    je          0000000140014BC1
    test        r8,r8
    je          0000000140014BC1
    test        r9,r9
    jne         0000000140014BC9
    mov         rax,qword ptr [rbp+label_30]
    xor         r8d,r8d
    mov         qword ptr [r11-label_50],rax
    xor         edx,edx
    and         qword ptr [r11-label_58],r9
    xor         ecx,ecx
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],label_16
    call        0000000140010530
    xor         eax,eax
    add         rsp,label_70
    pop         rbp
    ret
func_0000000140014BC8_end:
    lea         rax,[rbp+label_28]
    mov         qword ptr [rbp-label_38],r9
    mov         qword ptr [rbp-label_28],rax
    lea         r8,[rbp-label_28]
    mov         rax,qword ptr [rbp+label_30]
    lea         rdx,[rbp-label_30]
    mov         qword ptr [rbp-label_20],rax
    lea         rcx,[rbp-label_40]
    lea         rax,[rbp+label_10]
    mov         qword ptr [rbp-label_30],r9
    mov         qword ptr [rbp-label_18],rax
    lea         r9,[rbp-label_38]
    lea         rax,[rbp+label_18]
    mov         qword ptr [rbp-label_10],rax
    lea         rax,[rbp+label_20]
    mov         qword ptr [rbp-8],rax
    call        0000000140014AB4
    jmp         0000000140014BC3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_18],rbp
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         rbx,r9
    mov         r12,r8
    mov         rbp,rdx
    mov         r13,rcx
    test        rdx,rdx
    je          0000000140014C74
    test        r8,r8
    je          0000000140014C74
    test        rbx,rbx
    jne         0000000140014C93
    mov         rax,qword ptr [rsp+label_0000000000000080]
    xor         r9d,r9d
    mov         qword ptr [rsp+label_28],rax
    xor         r8d,r8d
    and         qword ptr [rsp+label_20],0
    xor         edx,edx
    mov         byte ptr [rax+label_30],1
    xor         ecx,ecx
    mov         dword ptr [rax+label_2C],label_16
    call        0000000140010530
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_70]
    mov         rsi,qword ptr [rsp+label_78]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_0000000140014C92_end:
    xor         edx,edx
    test        rcx,rcx
    jne         0000000140014CB4
    mov         rax,qword ptr [rsp+label_0000000000000080]
    xor         r9d,r9d
    mov         qword ptr [rsp+label_28],rax
    and         qword ptr [rsp+label_20],rcx
    xor         r8d,r8d
    jmp         0000000140014C62
    or          rax,label_0FFFFFFFFFFFFFFFF
    div         rax,rbp
    cmp         r12,rax
    ja          0000000140014C47
    mov         eax,dword ptr [r9+label_14]
    nop
    test        eax,label_4C0
    je          0000000140014CD2
    mov         r15d,dword ptr [r9+label_20]
    jmp         0000000140014CD8
    mov         r15d,label_1000
    mov         rdi,rbp
    imul        rdi,r12
    mov         rsi,rdi
    test        rdi,rdi
    je          0000000140014E19
    mov         eax,dword ptr [rbx+label_14]
    mov         ecx,label_0FFFFFFFE
    nop
    test        al,label_0C0
    je          0000000140014D3C
    mov         eax,dword ptr [rbx+label_10]
    test        eax,eax
    je          0000000140014D3C
    js          0000000140014DC2
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        al,1
    jne         0000000140014DC7
    movsxd      rax,dword ptr [rbx+label_10]
    mov         r14,rsi
    mov         rcx,qword ptr [rbx]
    cmp         rsi,rax
    mov         rdx,r13
    cmovae      r14,rax
    mov         r8,r14
    call        0000000140029A70
    sub         dword ptr [rbx+label_10],r14d
    sub         rsi,r14
    add         qword ptr [rbx],r14
    jmp         0000000140014E0E
    mov         r14d,r15d
    cmp         rsi,r14
    jb          0000000140014DD7
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        al,label_0C0
    je          0000000140014D69
    mov         rdx,qword ptr [rsp+label_0000000000000080]
    mov         rcx,rbx
    call        0000000140013ED8
    test        eax,eax
    jne         0000000140014DC7
    mov         ecx,label_0FFFFFFFE
    mov         rax,rsi
    test        r15d,r15d
    je          0000000140014D7C
    xor         edx,edx
    div         rax,r14
    mov         rax,rsi
    sub         rax,rdx
    cmp         rax,rcx
    mov         r14d,ecx
    mov         rcx,rbx
    cmovb       r14d,eax
    mov         dword ptr [rsp+label_68],r14d
    call        000000014001AF5C
    mov         r9,qword ptr [rsp+label_0000000000000080]
    mov         ecx,eax
    mov         r8d,r14d
    mov         rdx,r13
    call        000000014001DD50
    cmp         eax,label_0FFFFFFFF
    je          0000000140014DC2
    cmp         eax,r14d
    mov         ecx,eax
    cmova       ecx,r14d
    mov         r14d,ecx
    sub         rsi,r14
    cmp         eax,dword ptr [rsp+label_68]
    jae         0000000140014E0E
    lock or     dword ptr [rbx+label_14],label_10
    sub         rdi,rsi
    xor         edx,edx
    mov         rax,rdi
    div         rax,rbp
    jmp         0000000140014C76
    movsx       ecx,byte ptr [r13]
    mov         rdx,rbx
    mov         r8,qword ptr [rsp+label_0000000000000080]
    call        000000014001E9EC
    cmp         eax,label_0FFFFFFFF
    je          0000000140014DC7
    mov         r15d,dword ptr [rbx+label_20]
    dec         rsi
    test        r15d,r15d
    jle         0000000140014E05
    mov         r14d,1
    jmp         0000000140014E0E
    mov         r15d,1
    mov         r14d,r15d
    add         r13,r14
    test        rsi,rsi
    jmp         0000000140014CE5
    mov         rax,r12
    jmp         0000000140014C76
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_70
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         0000000140014E64
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         rax,[rbp-label_40]
    mov         qword ptr [rsp+label_20],rax
    call        0000000140014B74
    cmp         byte ptr [rbp-label_18],2
    mov         rdi,rax
    jne         0000000140014E86
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          0000000140014E9B
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          0000000140014EB0
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    lea         r11,[rsp+label_70]
    mov         rax,rdi
    mov         rbx,qword ptr [r11+label_10]
    mov         rdi,qword ptr [r11+label_18]
    mov         rsp,r11
    pop         rbp
    ret
func_0000000140014EC4_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         rcx,qword ptr [rdx]
    call        0000000140013AE4
    nop
    mov         rcx,rdi
    call        0000000140014F08
    mov         edi,eax
    mov         rcx,qword ptr [rbx]
    call        0000000140013AF0
    mov         eax,edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140014F04_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         rax,qword ptr [rcx]
    mov         rbx,rcx
    mov         rcx,qword ptr [rcx+8]
    mov         rsi,qword ptr [rax]
    mov         rcx,qword ptr [rcx]
    and         rsi,label_0FFFFFFFFFFFFFFFE
    mov         rdx,qword ptr [rbx+label_10]
    call        0000000140013ED8
    mov         rcx,qword ptr [rbx+8]
    mov         rcx,qword ptr [rcx]
    call        000000014001D1BC
    mov         rax,qword ptr [rbx+8]
    mov         rcx,qword ptr [rax]
    lock and    dword ptr [rcx+label_14],label_0FFFFF81F
    mov         rax,qword ptr [rbx+label_18]
    test        byte ptr [rax],4
    je          0000000140014F74
    mov         rax,qword ptr [rbx+8]
    mov         rax,qword ptr [rax]
    lea         rcx,[rax+label_1C]
    lock or     dword ptr [rax+label_14],label_400
    mov         dword ptr [rax+label_20],2
    jmp         0000000140014FD2
    mov         rax,qword ptr [rbx+label_20]
    mov         rcx,qword ptr [rax]
    test        rcx,rcx
    jne         0000000140014FC0
    lea         edx,[rcx+1]
    mov         rcx,rsi
    call        000000014001BDB0
    xor         ecx,ecx
    mov         rdi,rax
    call        0000000140019CC4
    test        rdi,rdi
    jne         0000000140014FA5
    inc         dword ptr [label_000000014003E0F8]
    or          eax,label_0FFFFFFFF
    jmp         0000000140014FDF
    mov         rax,qword ptr [rbx+8]
    mov         rax,qword ptr [rax]
    lock or     dword ptr [rax+label_14],label_140
    mov         dword ptr [rax+label_20],esi
    mov         qword ptr [rax],rdi
    mov         qword ptr [rax+8],rdi
    jmp         0000000140014FD9
    mov         rax,qword ptr [rbx+8]
    mov         rax,qword ptr [rax]
    lock or     dword ptr [rax+label_14],label_180
    mov         dword ptr [rax+label_20],esi
    mov         qword ptr [rax],rcx
    mov         qword ptr [rax+8],rcx
    and         dword ptr [rax+label_10],0
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140014FEE_end:
    int         3
    push        rbp
    push        rbx
    push        rdi
    lea         rbp,[rsp-label_47]
    sub         rsp,label_0B0
    and         qword ptr [rbp-label_39],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_29],0
    mov         byte ptr [rbp-label_11],0
    mov         byte ptr [rbp-9],0
    mov         byte ptr [rbp-1],0
    jne         000000014001502E
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_11],1
    movdqu      xmmword ptr [rbp-label_21],xmm0
    mov         qword ptr [rbp+label_6F],r9
    mov         dword ptr [rbp+label_67],r8d
    mov         qword ptr [rbp+7],rdx
    mov         qword ptr [rbp+label_7F],rcx
    test        rcx,rcx
    jne         0000000140015071
    lea         rax,[rbp-label_39]
    mov         byte ptr [rbp-9],1
    mov         qword ptr [rsp+label_28],rax
    xor         r9d,r9d
    and         qword ptr [rsp+label_20],0
    xor         r8d,r8d
    xor         edx,edx
    mov         dword ptr [rbp-label_0D],label_16
    xor         ecx,ecx
    call        0000000140010530
    or          edi,label_0FFFFFFFF
    jmp         00000001400150DD
    cmp         r8d,4
    je          0000000140015084
    test        r8d,r8d
    je          000000014001508A
    cmp         r8d,label_40
    je          000000014001508A
    jmp         0000000140015043
    cmp         r8d,label_40
    jne         0000000140015096
    lea         rax,[r9-2]
    cmp         rax,label_7FFFFFFD
    ja          0000000140015043
    lea         rax,[rbp+label_6F]
    mov         qword ptr [rbp+label_0F],rcx
    mov         qword ptr [rbp+label_1F],rax
    lea         r9,[rbp+label_0F]
    lea         rax,[rbp+label_7F]
    mov         qword ptr [rbp+label_17],rcx
    mov         qword ptr [rbp+label_27],rax
    lea         r8,[rbp+label_1F]
    lea         rax,[rbp-label_39]
    mov         qword ptr [rbp+label_2F],rax
    lea         rdx,[rbp+label_17]
    lea         rax,[rbp+label_67]
    mov         qword ptr [rbp+label_37],rax
    lea         rcx,[rbp+label_77]
    lea         rax,[rbp+7]
    mov         qword ptr [rbp+label_3F],rax
    call        0000000140014EC8
    mov         edi,eax
    cmp         byte ptr [rbp-label_11],2
    jne         00000001400150EE
    mov         rcx,qword ptr [rbp-label_39]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-9],0
    je          0000000140015103
    mov         ebx,dword ptr [rbp-label_0D]
    lea         rcx,[rbp-label_39]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-1],0
    je          0000000140015118
    mov         ebx,dword ptr [rbp-5]
    lea         rcx,[rbp-label_39]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         eax,edi
    add         rsp,label_0B0
    pop         rdi
    pop         rbx
    pop         rbp
    ret
func_0000000140015124_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         eax,dword ptr [rdx+label_14]
    mov         rbx,rdx
    shr         eax,label_0C
    mov         edi,ecx
    nop
    test        al,1
    jne         00000001400151D4
    mov         rcx,rdx
    call        000000014001AF5C
    movsxd      r8,eax
    lea         r9,[label_000000014003C420]
    lea         r11,[label_000000014003E300]
    mov         rdx,r8
    lea         ecx,[r8+2]
    cmp         ecx,1
    jbe         0000000140015186
    mov         rcx,r8
    mov         rax,r8
    sar         rax,6
    and         ecx,label_3F
    mov         rax,qword ptr [r11+rax*8]
    lea         rcx,[rcx+rcx*8]
    lea         r10,[rax+rcx*8]
    jmp         0000000140015189
    mov         r10,r9
    cmp         byte ptr [r10+label_39],0
    jne         00000001400151B6
    lea         eax,[r8+2]
    cmp         eax,1
    jbe         00000001400151AF
    mov         rax,rdx
    sar         rax,6
    and         edx,label_3F
    mov         rax,qword ptr [r11+rax*8]
    lea         rcx,[rdx+rdx*8]
    lea         r9,[rax+rcx*8]
    test        byte ptr [r9+label_3D],1
    je          00000001400151D4
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400151D3_end:
    cmp         edi,label_0FFFFFFFF
    je          00000001400151C6
    mov         eax,dword ptr [rbx+label_14]
    nop
    mov         ecx,dword ptr [rbx+label_14]
    nop
    test        al,1
    jne         00000001400151ED
    and         ecx,6
    cmp         cl,6
    jne         00000001400151C6
    cmp         qword ptr [rbx+8],0
    jne         00000001400151FC
    mov         rcx,rbx
    call        000000014001F7C4
    mov         rax,qword ptr [rbx]
    cmp         rax,qword ptr [rbx+8]
    jne         0000000140015211
    cmp         dword ptr [rbx+label_10],0
    jne         00000001400151C6
    inc         rax
    mov         qword ptr [rbx],rax
    mov         eax,dword ptr [rbx+label_14]
    nop
    mov         rdx,qword ptr [rbx]
    shr         eax,label_0C
    lea         rcx,[rdx-1]
    mov         qword ptr [rbx],rcx
    test        al,1
    je          0000000140015230
    cmp         byte ptr [rcx],dil
    je          0000000140015233
    mov         qword ptr [rbx],rdx
    jmp         00000001400151C6
    mov         byte ptr [rcx],dil
    inc         dword ptr [rbx+label_10]
    lock and    dword ptr [rbx+label_14],label_0FFFFFFF7
    lock or     dword ptr [rbx+label_14],1
    movzx       eax,dil
    jmp         00000001400151C9
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rdx
    mov         edi,ecx
    test        rdx,rdx
    jne         000000014001527F
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001527E_end:
    mov         rcx,rbx
    call        0000000140013AE4
    nop
    mov         rdx,rbx
    mov         ecx,edi
    call        0000000140015128
    mov         edi,eax
    mov         rcx,rbx
    call        0000000140013AF0
    mov         eax,edi
    jmp         0000000140015274
    xor         eax,eax
    lea         r9,[label_000000014002F510]
    mov         rdx,r9
    lea         r8d,[rax+8]
    cmp         ecx,dword ptr [rdx]
    je          00000001400152DF
    inc         eax
    add         rdx,r8
    cmp         eax,label_2D
    jb          00000001400152B0
    lea         eax,[rcx-label_13]
    cmp         eax,label_11
    ja          00000001400152CC
    mov         eax,label_0D
    ret
func_00000001400152CB_end:
    add         ecx,label_0FFFFFF44
    mov         eax,label_16
    cmp         ecx,label_0E
    cmovbe      eax,r8d
    ret
func_00000001400152DE_end:
    mov         eax,dword ptr [r9+rax*8+4]
    ret
func_00000001400152E4_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         ebx,ecx
    call        0000000140019ADC
    test        rax,rax
    jne         0000000140015303
    lea         rax,[label_000000014003C1DC]
    jmp         0000000140015307
    add         rax,label_24
    mov         ecx,ebx
    mov         dword ptr [rax],ebx
    call        00000001400152A0
    mov         ebx,eax
    call        0000000140019ADC
    lea         rcx,[label_000000014003C1D8]
    test        rax,rax
    je          0000000140015327
    lea         rcx,[rax+label_20]
    mov         dword ptr [rcx],ebx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001532E_end:
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rdx
    mov         byte ptr [rdx+label_38],1
    mov         dword ptr [rdx+label_34],ecx
    call        00000001400152A0
    mov         dword ptr [rbx+label_2C],eax
    mov         byte ptr [rbx+label_30],1
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140015351_end:
    int         3
    int         3
    sub         rsp,label_28
    call        0000000140019ADC
    test        rax,rax
    jne         000000014001536B
    lea         rax,[label_000000014003C1DC]
    jmp         000000014001536F
    add         rax,label_24
    add         rsp,label_28
    ret
func_0000000140015373_end:
    sub         rsp,label_28
    call        0000000140019ADC
    test        rax,rax
    jne         000000014001538B
    lea         rax,[label_000000014003C1D8]
    jmp         000000014001538F
    add         rax,label_20
    add         rsp,label_28
    ret
func_0000000140015393_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         byte ptr [rcx+label_18],0
    mov         rdi,rcx
    lea         rsi,[rcx+8]
    test        rdx,rdx
    je          00000001400153B8
    movups      xmm0,xmmword ptr [rdx]
    jmp         00000001400153C8
    cmp         dword ptr [label_000000014003E290],0
    jne         00000001400153CE
    movups      xmm0,xmmword ptr [label_000000014003C408]
    movdqu      xmmword ptr [rsi],xmm0
    jmp         000000014001541C
    call        0000000140019964
    mov         qword ptr [rdi],rax
    mov         rdx,rsi
    mov         rcx,qword ptr [rax+label_0000000000000090]
    mov         qword ptr [rsi],rcx
    mov         rcx,qword ptr [rax+label_0000000000000088]
    mov         qword ptr [rdi+label_10],rcx
    mov         rcx,rax
    call        0000000140019D60
    mov         rcx,qword ptr [rdi]
    lea         rdx,[rdi+label_10]
    call        0000000140019DCC
    mov         rcx,qword ptr [rdi]
    mov         eax,dword ptr [rcx+label_00000000000003A8]
    test        al,2
    jne         000000014001541C
    or          eax,2
    mov         dword ptr [rcx+label_00000000000003A8],eax
    mov         byte ptr [rdi+label_18],1
    mov         rbx,qword ptr [rsp+label_30]
    mov         rax,rdi
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001542E_end:
    int         3
    mov         qword ptr [rsp+label_10],rdx
    push        rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_220
    mov         r10d,dword ptr [rcx]
    mov         r15,rdx
    mov         rsi,rcx
    test        r10d,r10d
    je          00000001400158B8
    mov         edi,dword ptr [rdx]
    test        edi,edi
    je          00000001400158B8
    dec         r10d
    lea         ebp,[rdi-1]
    test        ebp,ebp
    jne         000000014001556B
    mov         r12d,dword ptr [rdx+4]
    xor         ebp,ebp
    cmp         r12d,1
    jne         00000001400154A2
    mov         ebx,dword ptr [rcx+4]
    lea         r8,[rsp+label_44]
    add         rcx,4
    mov         dword ptr [rsi],ebp
    xor         r9d,r9d
    mov         dword ptr [rsp+label_40],ebp
    mov         edx,label_1CC
    call        00000001400158CC
    mov         eax,ebx
    jmp         00000001400158BA
    test        r10d,r10d
    jne         00000001400154E4
    mov         edi,dword ptr [rcx+4]
    lea         r8,[rsp+label_44]
    mov         dword ptr [rcx],ebp
    xor         r9d,r9d
    add         rcx,4
    mov         dword ptr [rsp+label_40],ebp
    mov         edx,label_1CC
    call        00000001400158CC
    xor         edx,edx
    mov         eax,edi
    div         eax,r12d
    mov         eax,edi
    test        edx,edx
    mov         dword ptr [rsi+4],edx
    setne       bpl
    xor         edx,edx
    div         eax,r12d
    mov         dword ptr [rsi],ebp
    jmp         00000001400158BA
    mov         r15d,label_0FFFFFFFF
    mov         r14,rbp
    mov         rdi,rbp
    cmp         r10d,r15d
    je          0000000140015530
    mov         r9,r12
    nop         dword ptr [rax+rax+label_0000000000000000]
    mov         r8d,dword ptr [rsi+r10*4+4]
    xor         edx,edx
    shl         rdi,label_20
    add         r10d,r15d
    or          r8,rdi
    shl         r14,label_20
    mov         rax,r8
    div         rax,r9
    xor         edx,edx
    mov         ecx,eax
    mov         rax,r8
    div         rax,r9
    add         r14,rcx
    mov         rdi,rdx
    cmp         r10d,r15d
    jne         0000000140015500
    xor         r9d,r9d
    mov         dword ptr [rsp+label_40],ebp
    lea         r8,[rsp+label_44]
    mov         dword ptr [rsi],ebp
    mov         edx,label_1CC
    lea         rcx,[rsi+4]
    call        00000001400158CC
    mov         rcx,rdi
    mov         dword ptr [rsi+4],edi
    shr         rcx,label_20
    mov         rax,r14
    test        ecx,ecx
    mov         dword ptr [rsi+8],ecx
    setne       bpl
    inc         ebp
    mov         dword ptr [rsi],ebp
    jmp         00000001400158BA
    cmp         ebp,r10d
    ja          00000001400158B8
    mov         r8d,r10d
    movsxd      rdx,r10d
    sub         r8d,ebp
    mov         r9d,r10d
    movsxd      rbx,r8d
    cmp         rdx,rbx
    jl          00000001400155D1
    add         rcx,4
    lea         rax,[rbx*4+label_0000000000000000]
    mov         r11,r15
    sub         r11,rax
    sub         r11,rsi
    lea         rcx,[rcx+rdx*4]
    mov         eax,dword ptr [rcx]
    cmp         dword ptr [r11+rcx],eax
    jne         00000001400155BA
    dec         r9d
    dec         rdx
    sub         rcx,4
    cmp         rdx,rbx
    jge         00000001400155A1
    jmp         00000001400155D1
    mov         eax,r9d
    sub         eax,r8d
    movsxd      rdx,eax
    movsxd      rax,r9d
    mov         ecx,dword ptr [rsi+rax*4+4]
    cmp         dword ptr [r15+rdx*4+4],ecx
    jae         00000001400155D4
    inc         r8d
    test        r8d,r8d
    je          00000001400158B8
    mov         r9d,dword ptr [r15+rbp*4+4]
    lea         eax,[rdi-2]
    mov         r11d,dword ptr [r15+rax*4+4]
    xor         ebp,ebp
    bsr         eax,r9d
    mov         dword ptr [rsp+label_0000000000000270],r11d
    je          0000000140015618
    mov         ebx,label_1F
    mov         r14d,label_20
    sub         ebx,eax
    sub         r14d,ebx
    mov         dword ptr [rsp+label_0000000000000260],r14d
    test        ebx,ebx
    je          0000000140015664
    jmp         0000000140015627
    mov         ebx,label_20
    mov         dword ptr [rsp+label_0000000000000260],ebp
    mov         r14d,ebp
    mov         eax,r9d
    mov         edx,r11d
    mov         ecx,r14d
    shr         edx,cl
    mov         ecx,ebx
    shl         eax,cl
    mov         r9d,edx
    shl         r11d,cl
    or          r9d,eax
    mov         dword ptr [rsp+label_0000000000000270],r11d
    cmp         edi,2
    jbe         0000000140015664
    lea         eax,[rdi-3]
    mov         ecx,r14d
    mov         eax,dword ptr [r15+rax*4+4]
    shr         eax,cl
    or          r11d,eax
    mov         dword ptr [rsp+label_0000000000000270],r11d
    lea         r12d,[r8-1]
    mov         qword ptr [rsp+label_30],rbp
    mov         r11,rbp
    test        r12d,r12d
    js          0000000140015879
    mov         eax,r14d
    mov         r15d,label_0FFFFFFFF
    mov         qword ptr [rsp+label_38],rax
    mov         eax,r9d
    mov         qword ptr [rsp+label_0000000000000218],r13
    lea         r13d,[r12+rdi]
    mov         qword ptr [rsp+label_28],rax
    nop         dword ptr [rax+rax]
    cmp         r13d,r10d
    ja          00000001400156AC
    mov         edx,dword ptr [rsi+r13*4+4]
    jmp         00000001400156AE
    mov         edx,ebp
    mov         dword ptr [rsp+label_0000000000000278],edx
    lea         eax,[r13-1]
    mov         ecx,dword ptr [rsi+rax*4+4]
    lea         eax,[r13-2]
    mov         r11d,dword ptr [rsi+rax*4+4]
    mov         qword ptr [rsp+label_20],rcx
    mov         dword ptr [rsp+label_24],edx
    test        ebx,ebx
    je          0000000140015706
    mov         rcx,qword ptr [rsp+label_38]
    mov         r8d,r11d
    mov         rax,qword ptr [rsp+label_20]
    shr         r8,cl
    mov         ecx,ebx
    shl         rax,cl
    or          r8,rax
    shl         r11d,cl
    cmp         r13d,3
    jb          000000014001570B
    lea         eax,[r13-3]
    mov         ecx,r14d
    mov         eax,dword ptr [rsi+rax*4+4]
    shr         eax,cl
    or          r11d,eax
    jmp         000000014001570B
    mov         r8,qword ptr [rsp+label_20]
    mov         rcx,qword ptr [rsp+label_28]
    xor         edx,edx
    mov         rax,r8
    div         rax,rcx
    xor         edx,edx
    mov         r9,rax
    mov         rax,r8
    div         rax,rcx
    mov         r8d,edx
    cmp         r9,r15
    jbe         0000000140015742
    mov         rax,label_0FFFFFFFF00000001
    add         rax,r9
    mov         r9,r15
    imul        rax,rcx
    add         r8,rax
    cmp         r8,r15
    ja          0000000140015785
    mov         edx,dword ptr [rsp+label_0000000000000270]
    mov         r14,rcx
    mov         eax,edx
    imul        rax,r9
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         rcx,r8
    shl         rcx,label_20
    or          rcx,r11
    cmp         rax,rcx
    jbe         000000014001577D
    dec         r9
    sub         rax,rdx
    add         r8,r14
    cmp         r8,r15
    jbe         0000000140015760
    mov         r14d,dword ptr [rsp+label_0000000000000260]
    test        r9,r9
    je          0000000140015850
    mov         r10,rbp
    mov         r11d,ebp
    test        edi,edi
    je          00000001400157FC
    mov         r14,qword ptr [rsp+label_0000000000000268]
    mov         r15d,dword ptr [rsp+label_0000000000000260]
    add         r14,4
    nop         dword ptr [rax]
    mov         eax,dword ptr [r14]
    lea         r14,[r14+4]
    imul        rax,r9
    add         r10,rax
    lea         eax,[r11+r12]
    mov         r8d,r10d
    mov         ecx,eax
    shr         r10,label_20
    mov         eax,dword ptr [rsi+rax*4+4]
    mov         rdx,r10
    inc         r10
    cmp         eax,r8d
    cmovae      r10,rdx
    sub         eax,r8d
    inc         r11d
    mov         dword ptr [rsi+rcx*4+4],eax
    cmp         r11d,edi
    jb          00000001400157B0
    mov         r14d,r15d
    mov         dword ptr [rsp+label_0000000000000260],r15d
    mov         r15d,label_0FFFFFFFF
    mov         r11,qword ptr [rsp+label_0000000000000268]
    mov         eax,dword ptr [rsp+label_0000000000000278]
    add         r11,4
    cmp         rax,r10
    jae         000000014001584C
    mov         r10d,ebp
    test        edi,edi
    je          0000000140015849
    mov         r8,rbp
    nop
    lea         eax,[r10+r12]
    inc         r10d
    mov         ecx,dword ptr [rsi+rax*4+4]
    lea         rdx,[rsi+rax*4]
    mov         eax,dword ptr [r11]
    lea         r11,[r11+4]
    add         r8,rax
    add         r8,rcx
    mov         dword ptr [rdx+4],r8d
    shr         r8,label_20
    cmp         r10d,edi
    jb          0000000140015820
    dec         r9
    lea         r10d,[r13-1]
    mov         r11,qword ptr [rsp+label_30]
    dec         r13d
    shl         r11,label_20
    mov         eax,r9d
    add         r11,rax
    sub         r12d,1
    mov         qword ptr [rsp+label_30],r11
    jns         00000001400156A0
    mov         r13,qword ptr [rsp+label_0000000000000218]
    inc         r10d
    mov         ecx,r10d
    cmp         r10d,dword ptr [rsi]
    jae         0000000140015890
    mov         eax,ecx
    inc         ecx
    mov         dword ptr [rsi+rax*4+4],ebp
    cmp         ecx,dword ptr [rsi]
    jb          0000000140015884
    mov         dword ptr [rsi],r10d
    test        r10d,r10d
    je          00000001400158B3
    nop         dword ptr [rax+rax+label_0000000000000000]
    lea         edx,[r10-1]
    mov         r10d,edx
    cmp         dword ptr [rsi+rdx*4+4],ebp
    jne         00000001400158B3
    mov         dword ptr [rsi],edx
    test        edx,edx
    jne         00000001400158A0
    mov         rax,r11
    jmp         00000001400158BA
    xor         eax,eax
    add         rsp,label_220
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    pop         rbx
    ret
func_00000001400158CB_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rsi,r8
    mov         rdi,rdx
    test        r9,r9
    jne         00000001400158ED
    xor         eax,eax
    jmp         0000000140015943
    test        rcx,rcx
    jne         0000000140015907
    call        0000000140015374
    mov         ebx,label_16
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         eax,ebx
    jmp         0000000140015943
    test        rsi,rsi
    je          000000014001591E
    cmp         rdi,rbx
    jb          000000014001591E
    mov         r8,rbx
    mov         rdx,rsi
    call        0000000140029A70
    jmp         00000001400158E9
    mov         r8,rdi
    xor         edx,edx
    call        000000014002A110
    test        rsi,rsi
    je          00000001400158F2
    cmp         rdi,rbx
    jae         000000014001593E
    call        0000000140015374
    mov         ebx,label_22
    jmp         00000001400158FC
    mov         eax,label_16
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140015952_end:
    int         3
    sub         rsp,label_28
    call        000000014001FDA4
    test        rax,rax
    je          000000014001596C
    mov         ecx,label_16
    call        000000014001FDF4
    test        byte ptr [label_000000014003C288],2
    je          000000014001599F
    mov         ecx,label_17
    call label_000000014002C090
    test        eax,eax
    je          000000014001598B
    mov         ecx,7
    int         label_29
    mov         r8d,1
    mov         edx,label_40000015
    lea         ecx,[r8+2]
    call        0000000140010330
    mov         ecx,3
    call        0000000140016CD4
    int         3
    int         3
    int         3
    xor         eax,eax
    cmp         byte ptr [rcx],al
    je          00000001400159C0
    cmp         rax,rdx
    je          00000001400159C0
    inc         rax
    cmp         byte ptr [rax+rcx],0
    jne         00000001400159B2
    ret
func_00000001400159C0_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_30
    xor         r14d,r14d
    mov         ebp,r9d
    mov         rbx,rdx
    mov         rdi,rcx
    test        rcx,rcx
    jne         0000000140015A12
    cmp         byte ptr [rdx+label_28],r14b
    je          0000000140015A01
    mov         rcx,qword ptr [rdx+label_10]
    call        0000000140019CC4
    mov         byte ptr [rbx+label_28],r14b
    mov         qword ptr [rbx+label_10],r14
    mov         qword ptr [rbx+label_18],r14
    mov         qword ptr [rbx+label_20],r14
    jmp         0000000140015B20
    cmp         byte ptr [rcx],r14b
    jne         0000000140015A6C
    cmp         qword ptr [rdx+label_18],r14
    jne         0000000140015A62
    cmp         byte ptr [rdx+label_28],r14b
    je          0000000140015A30
    mov         rcx,qword ptr [rdx+label_10]
    call        0000000140019CC4
    mov         byte ptr [rbx+label_28],r14b
    mov         ecx,2
    call        0000000140019D00
    mov         qword ptr [rbx+label_10],rax
    mov         rdx,r14
    neg         rax
    sbb         eax,eax
    not         eax
    and         eax,label_0C
    sete        dl
    test        eax,eax
    sete        cl
    mov         byte ptr [rbx+label_28],cl
    mov         qword ptr [rbx+label_18],rdx
    test        eax,eax
    jne         0000000140015B22
    mov         rax,qword ptr [rbx+label_10]
    mov         word ptr [rax],r14w
    jmp         0000000140015A09
    or          r9d,label_0FFFFFFFF
    mov         dword ptr [rsp+label_28],r14d
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],r14
    mov         ecx,ebp
    lea         edx,[r9+label_0A]
    call        0000000140020070
    movsxd      rsi,eax
    test        eax,eax
    jne         0000000140015AA5
    call label_000000014002C0F8
    mov         ecx,eax
    call        00000001400152E8
    call        0000000140015374
    mov         eax,dword ptr [rax]
    jmp         0000000140015B22
    mov         rdx,qword ptr [rbx+label_18]
    cmp         rsi,rdx
    jbe         0000000140015AEF
    cmp         byte ptr [rbx+label_28],r14b
    je          0000000140015AC1
    mov         rcx,qword ptr [rbx+label_10]
    call        0000000140019CC4
    mov         byte ptr [rbx+label_28],r14b
    lea         rcx,[rsi+rsi]
    call        0000000140019D00
    mov         qword ptr [rbx+label_10],rax
    mov         rdx,r14
    neg         rax
    sbb         eax,eax
    not         eax
    and         eax,label_0C
    cmove       rdx,rsi
    test        eax,eax
    sete        cl
    mov         byte ptr [rbx+label_28],cl
    mov         qword ptr [rbx+label_18],rdx
    test        eax,eax
    jne         0000000140015B22
    mov         rax,qword ptr [rbx+label_10]
    or          r9d,label_0FFFFFFFF
    mov         dword ptr [rsp+label_28],edx
    mov         r8,rdi
    mov         ecx,ebp
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9+label_0A]
    call        0000000140020070
    cdqe
    test        rax,rax
    je          0000000140015A8F
    dec         rax
    mov         qword ptr [rbx+label_20],rax
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r14
    ret
func_0000000140015B3C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_40
    xor         ebp,ebp
    mov         esi,r9d
    mov         rbx,rdx
    mov         rdi,rcx
    test        rcx,rcx
    jne         0000000140015B7F
    cmp         byte ptr [rdx+label_28],bpl
    je          0000000140015B6E
    mov         byte ptr [rdx+label_28],bpl
    mov         qword ptr [rdx+label_10],rbp
    mov         qword ptr [rdx+label_18],rbp
    mov         qword ptr [rdx+label_20],rbp
    jmp         0000000140015C42
    cmp         word ptr [rcx],bp
    jne         0000000140015BB8
    cmp         qword ptr [rdx+label_18],rbp
    jne         0000000140015BAF
    cmp         byte ptr [rdx+label_28],bpl
    je          0000000140015B94
    mov         byte ptr [rdx+label_28],bpl
    call        0000000140015374
    mov         ecx,label_22
    mov         dword ptr [rax],ecx
    mov         eax,ecx
    mov         byte ptr [rbx+label_28],bpl
    mov         qword ptr [rbx+label_18],rbp
    jmp         0000000140015C44
    mov         rax,qword ptr [rdx+label_10]
    mov         byte ptr [rax],bpl
    jmp         0000000140015B76
    mov         qword ptr [rsp+label_38],rbp
    or          r9d,label_0FFFFFFFF
    mov         qword ptr [rsp+label_30],rbp
    mov         r8,rdi
    mov         dword ptr [rsp+label_28],ebp
    xor         edx,edx
    mov         ecx,esi
    mov         qword ptr [rsp+label_20],rbp
    call        0000000140020100
    movsxd      rdx,eax
    test        eax,eax
    jne         0000000140015BF8
    call label_000000014002C0F8
    mov         ecx,eax
    call        00000001400152E8
    call        0000000140015374
    mov         eax,dword ptr [rax]
    jmp         0000000140015C44
    mov         rcx,qword ptr [rbx+label_18]
    cmp         rdx,rcx
    jbe         0000000140015C0D
    cmp         byte ptr [rbx+label_28],bpl
    je          0000000140015B94
    mov         byte ptr [rbx+label_28],bpl
    jmp         0000000140015B94
    mov         rax,qword ptr [rbx+label_10]
    or          r9d,label_0FFFFFFFF
    mov         qword ptr [rsp+label_38],rbp
    mov         r8,rdi
    mov         qword ptr [rsp+label_30],rbp
    xor         edx,edx
    mov         dword ptr [rsp+label_28],ecx
    mov         ecx,esi
    mov         qword ptr [rsp+label_20],rax
    call        0000000140020100
    cdqe
    test        rax,rax
    je          0000000140015BE2
    dec         rax
    mov         qword ptr [rbx+label_20],rax
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_40
    pop         rdi
    ret
func_0000000140015C58_end:
    int         3
    int         3
    int         3
    mov         eax,dword ptr [label_000000014003C090]
    mov         r9,rcx
    cmp         eax,5
    jl          0000000140015D01
    mov         r8,rcx
    mov         eax,label_20
    and         r8d,label_1F
    sub         rax,r8
    neg         r8
    sbb         r10,r10
    and         r10,rax
    mov         rax,r9
    cmp         rdx,r10
    cmovb       r10,rdx
    add         rcx,r10
    cmp         r9,rcx
    je          0000000140015CA5
    cmp         byte ptr [rax],0
    je          0000000140015CA5
    inc         rax
    cmp         rax,rcx
    jne         0000000140015C98
    mov         rcx,rax
    sub         rcx,r9
    cmp         rcx,r10
    jne         0000000140015DA8
    mov         r8,rdx
    mov         rcx,rax
    sub         r8,r10
    and         r8,label_0FFFFFFFFFFFFFFE0
    add         r8,rax
    cmp         rax,r8
    je          0000000140015CE5
    vpxor       xmm1,xmm1,xmm1
    vpcmpeqb    ymm1,ymm1,ymmword ptr [rcx]
    vpmovmskb   eax,ymm1
    test        eax,eax
    vzeroupper
    jne         0000000140015CE5
    add         rcx,label_20
    cmp         rcx,r8
    jne         0000000140015CC9
    lea         rax,[r9+rdx]
    jmp         0000000140015CF7
    cmp         byte ptr [rcx],0
    je          0000000140015DA5
    inc         rcx
    cmp         rcx,rax
    jne         0000000140015CEB
    jmp         0000000140015DA5
    cmp         eax,1
    jl          0000000140015D8F
    and         ecx,label_0F
    mov         eax,label_10
    sub         rax,rcx
    neg         rcx
    sbb         r10,r10
    and         r10,rax
    mov         rax,r9
    cmp         rdx,r10
    cmovb       r10,rdx
    lea         rcx,[r10+r9]
    cmp         r9,rcx
    je          0000000140015D3E
    cmp         byte ptr [rax],0
    je          0000000140015D3E
    inc         rax
    cmp         rax,rcx
    jne         0000000140015D31
    mov         rcx,rax
    sub         rcx,r9
    cmp         rcx,r10
    jne         0000000140015DA8
    mov         r8,rdx
    mov         rcx,rax
    sub         r8,r10
    xorps       xmm1,xmm1
    and         r8,label_0FFFFFFFFFFFFFFF0
    add         r8,rax
    cmp         rax,r8
    je          0000000140015D7A
    movdqa      xmm0,xmm1
    pcmpeqb     xmm0,xmmword ptr [rcx]
    pmovmskb    eax,xmm0
    test        eax,eax
    jne         0000000140015D7A
    add         rcx,label_10
    cmp         rcx,r8
    jne         0000000140015D61
    lea         rax,[r9+rdx]
    jmp         0000000140015D88
    cmp         byte ptr [rcx],0
    je          0000000140015DA5
    inc         rcx
    cmp         rcx,rax
    jne         0000000140015D80
    jmp         0000000140015DA5
    lea         rax,[rcx+rdx]
    cmp         r9,rax
    je          0000000140015DA5
    cmp         byte ptr [rcx],0
    je          0000000140015DA5
    inc         rcx
    cmp         rcx,rax
    jne         0000000140015D98
    sub         rcx,r9
    mov         rax,rcx
    ret
func_0000000140015DAB_end:
    mov         eax,dword ptr [label_000000014003C090]
    mov         r10,rdx
    mov         r8,rcx
    cmp         eax,5
    jl          0000000140015E8D
    test        r8b,1
    je          0000000140015DF0
    lea         rax,[rcx+rdx*2]
    mov         rdx,rcx
    cmp         rcx,rax
    je          0000000140015F78
    xor         ecx,ecx
    cmp         word ptr [rdx],cx
    je          0000000140015F78
    add         rdx,2
    cmp         rdx,rax
    jne         0000000140015DD9
    jmp         0000000140015F78
    and         ecx,label_1F
    mov         eax,label_20
    sub         rax,rcx
    mov         rdx,r8
    neg         rcx
    sbb         r11,r11
    and         r11,rax
    shr         r11,1
    cmp         r10,r11
    cmovb       r11,r10
    xor         ecx,ecx
    lea         rax,[r8+r11*2]
    cmp         r8,rax
    je          0000000140015E2A
    cmp         word ptr [rdx],cx
    je          0000000140015E2A
    add         rdx,2
    cmp         rdx,rax
    jne         0000000140015E1C
    sub         rdx,r8
    sar         rdx,1
    cmp         rdx,r11
    jne         0000000140015F7E
    lea         r9,[r8+rdx*2]
    mov         rax,r10
    sub         rax,r11
    and         rax,label_0FFFFFFFFFFFFFFE0
    add         rax,rdx
    lea         rdx,[r8+rax*2]
    cmp         r9,rdx
    je          0000000140015E70
    vpxor       xmm1,xmm1,xmm1
    vpcmpeqw    ymm1,ymm1,ymmword ptr [r9]
    vpmovmskb   eax,ymm1
    test        eax,eax
    vzeroupper
    jne         0000000140015E70
    add         r9,label_20
    cmp         r9,rdx
    jne         0000000140015E53
    lea         rax,[r8+r10*2]
    jmp         0000000140015E80
    cmp         word ptr [r9],cx
    je          0000000140015E85
    add         r9,2
    cmp         r9,rax
    jne         0000000140015E76
    mov         rdx,r9
    jmp         0000000140015F78
    cmp         eax,1
    jl          0000000140015F5C
    test        r8b,1
    je          0000000140015EC5
    lea         rax,[rcx+rdx*2]
    mov         rdx,r8
    cmp         r8,rax
    je          0000000140015F78
    xor         ecx,ecx
    cmp         word ptr [rdx],cx
    je          0000000140015F78
    add         rdx,2
    cmp         rdx,rax
    jne         0000000140015EAE
    jmp         0000000140015F78
    and         ecx,label_0F
    mov         eax,label_10
    sub         rax,rcx
    mov         rdx,r8
    neg         rcx
    sbb         r11,r11
    and         r11,rax
    shr         r11,1
    cmp         r10,r11
    cmovb       r11,r10
    xor         ecx,ecx
    lea         rax,[r8+r11*2]
    cmp         r8,rax
    je          0000000140015EFF
    cmp         word ptr [rdx],cx
    je          0000000140015EFF
    add         rdx,2
    cmp         rdx,rax
    jne         0000000140015EF1
    sub         rdx,r8
    sar         rdx,1
    cmp         rdx,r11
    jne         0000000140015F7E
    mov         rax,r10
    lea         r9,[r8+rdx*2]
    sub         rax,r11
    xorps       xmm1,xmm1
    and         rax,label_0FFFFFFFFFFFFFFF0
    add         rax,rdx
    lea         rdx,[r8+rax*2]
    jmp         0000000140015F39
    movdqa      xmm0,xmm1
    pcmpeqw     xmm0,xmmword ptr [r9]
    pmovmskb    eax,xmm0
    test        eax,eax
    jne         0000000140015F3E
    add         r9,label_10
    cmp         r9,rdx
    jne         0000000140015F24
    lea         rax,[r8+r10*2]
    jmp         0000000140015F52
    cmp         word ptr [r9],cx
    je          0000000140015E85
    add         r9,2
    cmp         r9,rax
    jne         0000000140015F44
    jmp         0000000140015E85
    lea         rax,[rcx+rdx*2]
    mov         rdx,r8
    cmp         r8,rax
    je          0000000140015F78
    xor         ecx,ecx
    cmp         word ptr [rdx],cx
    je          0000000140015F78
    add         rdx,2
    cmp         rdx,rax
    jne         0000000140015F6A
    sub         rdx,r8
    sar         rdx,1
    mov         rax,rdx
    ret
func_0000000140015F81_end:
    int         3
    int         3
    mov         qword ptr [label_000000014003E108],rcx
    ret
func_0000000140015F8B_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,rcx
    call        0000000140015FCC
    xor         ebx,ebx
    test        rax,rax
    je          0000000140015FBF
    mov         r10,label_0D1ED0FDF1CD32070
    mov         rcx,rdi
    call label_000000014002C2C0
    test        eax,eax
    setne       bl
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140015FC9_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    xor         ecx,ecx
    call        0000000140012C60
    nop
    mov         rax,qword ptr [label_000000014003C040]
    mov         ecx,eax
    and         ecx,label_3F
    mov         rbx,qword ptr [label_000000014003E108]
    xor         rbx,rax
    ror         rbx,cl
    xor         ecx,ecx
    call        0000000140012CB4
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140016002_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         rsi,rdx
    mov         edi,ecx
    call        0000000140019ADC
    xor         r9d,r9d
    mov         rbx,rax
    test        rax,rax
    je          000000014001604C
    mov         rcx,qword ptr [rax]
    mov         rax,rcx
    lea         r8,[rcx+label_00000000000000C0]
    cmp         rcx,r8
    je          000000014001604C
    cmp         dword ptr [rax],edi
    je          0000000140016063
    add         rax,label_10
    cmp         rax,r8
    jne         000000014001603F
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140016062_end:
    test        rax,rax
    je          000000014001604C
    mov         r8,qword ptr [rax+8]
    test        r8,r8
    je          000000014001604C
    cmp         r8,5
    jne         0000000140016081
    mov         qword ptr [rax+8],r9
    lea         eax,[r8-4]
    jmp         000000014001604E
    cmp         r8,1
    jne         000000014001608C
    or          eax,label_0FFFFFFFF
    jmp         000000014001604E
    mov         rbp,qword ptr [rbx+8]
    mov         qword ptr [rbx+8],rsi
    cmp         dword ptr [rax+4],8
    jne         0000000140016162
    add         rcx,label_30
    lea         rdx,[rcx+label_0000000000000090]
    jmp         00000001400160B3
    mov         qword ptr [rcx+8],r9
    add         rcx,label_10
    cmp         rcx,rdx
    jne         00000001400160AB
    cmp         dword ptr [rax],label_0C000008D
    mov         edi,dword ptr [rbx+label_10]
    je          000000014001613D
    cmp         dword ptr [rax],label_0C000008E
    je          0000000140016136
    cmp         dword ptr [rax],label_0C000008F
    je          000000014001612F
    cmp         dword ptr [rax],label_0C0000090
    je          0000000140016128
    cmp         dword ptr [rax],label_0C0000091
    je          0000000140016121
    cmp         dword ptr [rax],label_0C0000092
    je          000000014001611A
    cmp         dword ptr [rax],label_0C0000093
    je          0000000140016113
    cmp         dword ptr [rax],label_0C00002B4
    je          000000014001610C
    cmp         dword ptr [rax],label_0C00002B5
    mov         edx,edi
    jne         0000000140016145
    mov         edx,label_8D
    jmp         0000000140016142
    mov         edx,label_8E
    jmp         0000000140016142
    mov         edx,label_85
    jmp         0000000140016142
    mov         edx,label_8A
    jmp         0000000140016142
    mov         edx,label_84
    jmp         0000000140016142
    mov         edx,label_81
    jmp         0000000140016142
    mov         edx,label_86
    jmp         0000000140016142
    mov         edx,label_83
    jmp         0000000140016142
    mov         edx,label_82
    mov         dword ptr [rbx+label_10],edx
    mov         r10,label_8B9C1F4F30D33370
    mov         ecx,8
    mov         rax,r8
    call label_000000014002C2C0
    mov         dword ptr [rbx+label_10],edi
    jmp         000000014001617C
    mov         qword ptr [rax+8],r9
    mov         r10,label_0C6C1864950D77370
    mov         ecx,dword ptr [rax+4]
    mov         rax,r8
    call label_000000014002C2C0
    mov         qword ptr [rbx+8],rbp
    jmp         0000000140016087
    int         3
    int         3
    int         3
    mov         eax,dword ptr [label_000000014003E110]
    ret
func_000000014001618E_end:
    int         3
    mov         dword ptr [label_000000014003E110],ecx
    ret
func_0000000140016196_end:
    int         3
    mov         rax,qword ptr [label_000000014003C040]
    mov         rdx,qword ptr [label_000000014003E118]
    mov         ecx,eax
    xor         rdx,rax
    and         ecx,label_3F
    ror         rdx,cl
    test        rdx,rdx
    setne       al
    ret
func_00000001400161B7_end:
    mov         qword ptr [label_000000014003E118],rcx
    ret
func_00000001400161BF_end:
    mov         rax,qword ptr [label_000000014003C040]
    mov         r8,rcx
    mov         rdx,qword ptr [label_000000014003E118]
    mov         ecx,eax
    and         ecx,label_3F
    xor         rdx,rax
    ror         rdx,cl
    test        rdx,rdx
    jne         00000001400161E4
    xor         eax,eax
    ret
func_00000001400161E3_end:
    mov         r10,label_0D88807E658547170
    mov         rcx,r8
    mov         rax,rdx
    jmp         qword ptr [label_000000014002C2C0]
    int         3
    mov         r8,qword ptr [label_000000014003C040]
    mov         r9,rcx
    mov         edx,r8d
    mov         ecx,label_40
    and         edx,label_3F
    sub         ecx,edx
    ror         r9,cl
    xor         r9,r8
    mov         qword ptr [label_000000014003E118],r9
    ret
func_0000000140016220_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_20
    mov         r12,qword ptr [rsp+label_70]
    mov         r13,r9
    mov         rbx,r8
    mov         r14,rdx
    mov         rdi,rcx
    and         qword ptr [r12],0
    mov         qword ptr [r9],1
    test        rdx,rdx
    je          0000000140016269
    mov         qword ptr [rdx],rbx
    add         r14,8
    xor         bpl,bpl
    cmp         byte ptr [rdi],label_22
    mov         r15,rdi
    jne         0000000140016283
    test        bpl,bpl
    mov         sil,label_22
    sete        bpl
    inc         rdi
    jmp         00000001400162BD
    inc         qword ptr [r12]
    test        rbx,rbx
    je          0000000140016293
    mov         al,byte ptr [rdi]
    mov         byte ptr [rbx],al
    inc         rbx
    movsx       esi,byte ptr [rdi]
    inc         rdi
    mov         ecx,esi
    call        0000000140021AEC
    test        eax,eax
    je          00000001400162B8
    inc         qword ptr [r12]
    test        rbx,rbx
    je          00000001400162B4
    mov         al,byte ptr [rdi]
    mov         byte ptr [rbx],al
    inc         rbx
    lea         rdi,[r15+2]
    test        sil,sil
    je          00000001400162D9
    test        bpl,bpl
    jne         000000014001626C
    cmp         sil,label_20
    je          00000001400162CE
    cmp         sil,9
    jne         000000014001626C
    test        rbx,rbx
    je          00000001400162DC
    mov         byte ptr [rbx-1],0
    jmp         00000001400162DC
    dec         rdi
    xor         sil,sil
    mov         al,byte ptr [rdi]
    test        al,al
    je          00000001400163BF
    cmp         al,label_20
    je          00000001400162F1
    cmp         al,9
    jne         00000001400162F8
    inc         rdi
    mov         al,byte ptr [rdi]
    jmp         00000001400162E9
    test        al,al
    je          00000001400163BF
    test        r14,r14
    je          000000014001630C
    mov         qword ptr [r14],rbx
    add         r14,8
    inc         qword ptr [r13]
    mov         edx,1
    xor         eax,eax
    jmp         000000014001631E
    inc         rdi
    inc         eax
    mov         cl,byte ptr [rdi]
    cmp         cl,label_5C
    je          0000000140016319
    cmp         cl,label_22
    jne         000000014001635B
    test        dl,al
    jne         0000000140016346
    test        sil,sil
    je          000000014001633D
    cmp         byte ptr [rdi+1],cl
    jne         000000014001633D
    inc         rdi
    jmp         0000000140016346
    xor         edx,edx
    test        sil,sil
    sete        sil
    shr         eax,1
    jmp         000000014001635B
    dec         eax
    test        rbx,rbx
    je          0000000140016357
    mov         byte ptr [rbx],label_5C
    inc         rbx
    inc         qword ptr [r12]
    test        eax,eax
    jne         000000014001634A
    mov         al,byte ptr [rdi]
    test        al,al
    je          00000001400163AB
    test        sil,sil
    jne         0000000140016372
    cmp         al,label_20
    je          00000001400163AB
    cmp         al,9
    je          00000001400163AB
    test        edx,edx
    je          00000001400163A3
    test        rbx,rbx
    je          0000000140016380
    mov         byte ptr [rbx],al
    inc         rbx
    movsx       ecx,byte ptr [rdi]
    call        0000000140021AEC
    test        eax,eax
    je          000000014001639F
    inc         qword ptr [r12]
    inc         rdi
    test        rbx,rbx
    je          000000014001639F
    mov         al,byte ptr [rdi]
    mov         byte ptr [rbx],al
    inc         rbx
    inc         qword ptr [r12]
    inc         rdi
    jmp         0000000140016310
    test        rbx,rbx
    je          00000001400163B6
    mov         byte ptr [rbx],0
    inc         rbx
    inc         qword ptr [r12]
    jmp         00000001400162DF
    test        r14,r14
    je          00000001400163C8
    and         qword ptr [r14],0
    inc         qword ptr [r13]
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_00000001400163E8_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rax,label_1FFFFFFFFFFFFFFF
    mov         r9,rdx
    cmp         rcx,rax
    jae         0000000140016441
    xor         edx,edx
    or          rax,label_0FFFFFFFFFFFFFFFF
    div         rax,r8
    cmp         r9,rax
    jae         0000000140016441
    shl         rcx,3
    imul        r9,r8
    mov         rax,rcx
    not         rax
    cmp         rax,r9
    jbe         0000000140016441
    add         rcx,r9
    mov         edx,1
    call        000000014001BDB0
    xor         ecx,ecx
    mov         rbx,rax
    call        0000000140019CC4
    mov         rax,rbx
    jmp         0000000140016443
    xor         eax,eax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140016448_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rbp
    push        rsi
    push        rdi
    push        r14
    push        r15
    mov         rbp,rsp
    sub         rsp,label_30
    xor         edi,edi
    mov         r14d,ecx
    test        ecx,ecx
    je          00000001400165BF
    lea         eax,[rcx-1]
    cmp         eax,1
    jbe         000000014001648A
    call        0000000140015374
    lea         ebx,[rdi+label_16]
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         edi,ebx
    jmp         00000001400165BF
    call        000000014002173C
    lea         rbx,[label_000000014003E120]
    mov         r8d,label_104
    mov         rdx,rbx
    xor         ecx,ecx
    call        0000000140020E20
    mov         rsi,qword ptr [label_000000014003E280]
    mov         qword ptr [label_000000014003E260],rbx
    test        rsi,rsi
    je          00000001400164BE
    cmp         byte ptr [rsi],dil
    jne         00000001400164C1
    mov         rsi,rbx
    lea         rax,[rbp+label_48]
    mov         qword ptr [rbp+label_40],rdi
    lea         r9,[rbp+label_40]
    mov         qword ptr [rsp+label_20],rax
    xor         r8d,r8d
    mov         qword ptr [rbp+label_48],rdi
    xor         edx,edx
    mov         rcx,rsi
    call        0000000140016224
    mov         r15,qword ptr [rbp+label_40]
    mov         r8d,1
    mov         rdx,qword ptr [rbp+label_48]
    mov         rcx,r15
    call        00000001400163EC
    mov         rbx,rax
    test        rax,rax
    jne         0000000140016519
    call        0000000140015374
    mov         ebx,label_0C
    xor         ecx,ecx
    mov         dword ptr [rax],ebx
    call        0000000140019CC4
    jmp         0000000140016483
    lea         r8,[rax+r15*8]
    mov         rdx,rbx
    lea         rax,[rbp+label_48]
    mov         rcx,rsi
    lea         r9,[rbp+label_40]
    mov         qword ptr [rsp+label_20],rax
    call        0000000140016224
    cmp         r14d,1
    jne         0000000140016551
    mov         eax,dword ptr [rbp+label_40]
    dec         eax
    mov         qword ptr [label_000000014003E270],rbx
    mov         dword ptr [label_000000014003E268],eax
    xor         ecx,ecx
    jmp         00000001400165BA
    lea         rdx,[rbp+label_38]
    mov         qword ptr [rbp+label_38],rdi
    mov         rcx,rbx
    call        0000000140020E18
    mov         esi,eax
    test        eax,eax
    je          0000000140016580
    mov         rcx,qword ptr [rbp+label_38]
    call        0000000140019CC4
    mov         rcx,rbx
    mov         qword ptr [rbp+label_38],rdi
    call        0000000140019CC4
    mov         edi,esi
    jmp         00000001400165BF
    mov         rdx,qword ptr [rbp+label_38]
    mov         rcx,rdi
    mov         rax,rdx
    cmp         qword ptr [rdx],rdi
    je          000000014001659B
    lea         rax,[rax+8]
    inc         rcx
    cmp         qword ptr [rax],rdi
    jne         000000014001658F
    mov         dword ptr [label_000000014003E268],ecx
    xor         ecx,ecx
    mov         qword ptr [rbp+label_38],rdi
    mov         qword ptr [label_000000014003E270],rdx
    call        0000000140019CC4
    mov         rcx,rbx
    mov         qword ptr [rbp+label_38],rdi
    call        0000000140019CC4
    mov         rbx,qword ptr [rsp+label_60]
    mov         eax,edi
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_00000001400165D1_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    xor         edi,edi
    cmp         qword ptr [label_000000014003E228],rdi
    je          00000001400165ED
    xor         eax,eax
    jmp         000000014001663C
    call        000000014002173C
    call        0000000140021B00
    mov         rbx,rax
    test        rax,rax
    jne         000000014001660B
    xor         ecx,ecx
    call        0000000140019CC4
    or          eax,label_0FFFFFFFF
    jmp         000000014001663C
    mov         rcx,rbx
    call        0000000140016648
    test        rax,rax
    jne         000000014001661D
    or          edi,label_0FFFFFFFF
    jmp         000000014001662B
    mov         qword ptr [label_000000014003E240],rax
    mov         qword ptr [label_000000014003E228],rax
    xor         ecx,ecx
    call        0000000140019CC4
    mov         rcx,rbx
    call        0000000140019CC4
    mov         eax,edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140016646_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_30
    mov         rsi,rcx
    xor         ecx,ecx
    mov         r8,rsi
    mov         dl,byte ptr [rsi]
    jmp         0000000140016692
    cmp         dl,label_3D
    lea         rax,[rcx+1]
    cmove       rax,rcx
    mov         rcx,rax
    or          rax,label_0FFFFFFFFFFFFFFFF
    inc         rax
    cmp         byte ptr [r8+rax],0
    jne         000000014001667F
    inc         r8
    add         r8,rax
    mov         dl,byte ptr [r8]
    test        dl,dl
    jne         000000014001666D
    inc         rcx
    mov         edx,8
    call        000000014001BDB0
    mov         rbx,rax
    test        rax,rax
    jne         00000001400166B6
    xor         ecx,ecx
    call        0000000140019CC4
    xor         eax,eax
    jmp         0000000140016728
    mov         r14,rbx
    mov         al,byte ptr [rsi]
    test        al,al
    je          000000014001671E
    or          rbp,label_0FFFFFFFFFFFFFFFF
    inc         rbp
    cmp         byte ptr [rsi+rbp],0
    jne         00000001400166C3
    inc         rbp
    cmp         al,label_3D
    je          0000000140016708
    mov         edx,1
    mov         rcx,rbp
    call        000000014001BDB0
    mov         rdi,rax
    test        rax,rax
    je          000000014001670D
    mov         r8,rsi
    mov         rdx,rbp
    mov         rcx,rax
    call        0000000140018C7C
    xor         ecx,ecx
    test        eax,eax
    jne         0000000140016743
    mov         qword ptr [r14],rdi
    add         r14,8
    call        0000000140019CC4
    add         rsi,rbp
    jmp         00000001400166B9
    mov         rcx,rbx
    call        0000000140016758
    xor         ecx,ecx
    call        0000000140019CC4
    jmp         00000001400166AB
    xor         ecx,ecx
    call        0000000140019CC4
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r14
    ret
func_0000000140016742_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    call        000000014001064C
    int         3
    int         3
    test        rcx,rcx
    je          0000000140016798
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rax,qword ptr [rcx]
    mov         rbx,rcx
    mov         rdi,rcx
    jmp         0000000140016781
    mov         rcx,rax
    call        0000000140019CC4
    lea         rdi,[rdi+8]
    mov         rax,qword ptr [rdi]
    test        rax,rax
    jne         0000000140016772
    mov         rcx,rbx
    call        0000000140019CC4
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140016798_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r14
    sub         rsp,label_40
    mov         rdi,qword ptr [label_000000014003E230]
    or          r14d,label_0FFFFFFFF
    test        rdi,rdi
    jne         000000014001685D
    mov         eax,r14d
    mov         rbx,qword ptr [rsp+label_50]
    mov         rsi,qword ptr [rsp+label_58]
    mov         rdi,qword ptr [rsp+label_60]
    add         rsp,label_40
    pop         r14
    ret
func_00000001400167DD_end:
    and         qword ptr [rsp+label_38],0
    mov         r9d,r14d
    and         qword ptr [rsp+label_30],0
    mov         r8,rax
    and         dword ptr [rsp+label_28],0
    xor         edx,edx
    and         qword ptr [rsp+label_20],0
    xor         ecx,ecx
    call        0000000140020100
    movsxd      rsi,eax
    test        eax,eax
    je          00000001400167C5
    mov         edx,1
    mov         rcx,rsi
    call        000000014001BDB0
    mov         rbx,rax
    test        rax,rax
    je          000000014001686E
    and         qword ptr [rsp+label_38],0
    mov         r9d,r14d
    and         qword ptr [rsp+label_30],0
    xor         edx,edx
    mov         r8,qword ptr [rdi]
    xor         ecx,ecx
    mov         dword ptr [rsp+label_28],esi
    mov         qword ptr [rsp+label_20],rax
    call        0000000140020100
    mov         rcx,rbx
    test        eax,eax
    je          0000000140016870
    xor         edx,edx
    call        0000000140022050
    xor         ecx,ecx
    call        0000000140019CC4
    add         rdi,8
    mov         rax,qword ptr [rdi]
    test        rax,rax
    jne         00000001400167DE
    jmp         00000001400167C8
    xor         ecx,ecx
    call        0000000140019CC4
    jmp         00000001400167C5
    int         3
    int         3
    sub         rsp,label_28
    mov         rcx,qword ptr [rcx]
    cmp         rcx,qword ptr [label_000000014003E240]
    je          0000000140016891
    call        0000000140016758
    add         rsp,label_28
    ret
func_0000000140016895_end:
    int         3
    int         3
    sub         rsp,label_28
    mov         rcx,qword ptr [rcx]
    cmp         rcx,qword ptr [label_000000014003E238]
    je          00000001400168AD
    call        0000000140016758
    add         rsp,label_28
    ret
func_00000001400168B1_end:
    int         3
    int         3
    sub         rsp,label_28
    mov         rax,qword ptr [label_000000014003E228]
    test        rax,rax
    jne         00000001400168EA
    cmp         qword ptr [label_000000014003E230],rax
    jne         00000001400168D1
    xor         eax,eax
    jmp         00000001400168EA
    call        00000001400165D4
    test        eax,eax
    je          00000001400168E3
    call        000000014001679C
    test        eax,eax
    jne         00000001400168CD
    mov         rax,qword ptr [label_000000014003E228]
    add         rsp,label_28
    ret
func_00000001400168EE_end:
    int         3
    sub         rsp,label_38
    mov         qword ptr [rsp+label_20],label_0FFFFFFFFFFFFFFFE
    lea         rcx,[label_000000014003E228]
    call        000000014001687C
    nop
    lea         rcx,[label_000000014003E230]
    call        0000000140016898
    nop
    mov         rcx,qword ptr [label_000000014003E240]
    call        0000000140016758
    mov         rcx,qword ptr [label_000000014003E238]
    add         rsp,label_38
    jmp         0000000140016758
    int         3
    sub         rsp,label_28
    mov         rax,qword ptr [label_000000014003E240]
    test        rax,rax
    jne         000000014001697D
    mov         rax,qword ptr [label_000000014003E228]
    test        rax,rax
    jne         0000000140016976
    cmp         qword ptr [label_000000014003E230],rax
    jne         000000014001695D
    xor         eax,eax
    jmp         0000000140016976
    call        00000001400165D4
    test        eax,eax
    je          000000014001696F
    call        000000014001679C
    test        eax,eax
    jne         0000000140016959
    mov         rax,qword ptr [label_000000014003E228]
    mov         qword ptr [label_000000014003E240],rax
    add         rsp,label_28
    ret
func_0000000140016981_end:
    int         3
    int         3
    jmp         00000001400165D4
    int         3
    int         3
    int         3
    cmp         rcx,rdx
    je          00000001400169CC
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,rdx
    mov         rbx,rcx
    mov         rax,qword ptr [rbx]
    test        rax,rax
    je          00000001400169B9
    mov         r10,label_85F13E9656DA4870
    call label_000000014002C2C0
    add         rbx,8
    cmp         rbx,rdi
    jne         00000001400169A1
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400169CC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,rdx
    mov         rbx,rcx
    cmp         rcx,rdx
    je          0000000140016A0A
    mov         rax,qword ptr [rbx]
    test        rax,rax
    je          0000000140016A01
    mov         r10,label_0D30527475E523070
    call label_000000014002C2C0
    test        eax,eax
    jne         0000000140016A0C
    add         rbx,8
    cmp         rbx,rdi
    jmp         00000001400169E3
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140016A16_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rcx,rdi
    call        0000000140016A50
    nop
    mov         ecx,dword ptr [rbx]
    call        0000000140012CB4
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140016A4F_end:
    push        rbx
    sub         rsp,label_30
    mov         rbx,rcx
    cmp         byte ptr [label_000000014003E258],0
    jne         0000000140016B0F
    mov         eax,1
    xchg        eax,dword ptr [label_000000014003E248]
    mov         rax,qword ptr [rcx]
    mov         ecx,dword ptr [rax]
    test        ecx,ecx
    jne         0000000140016AB8
    mov         rax,qword ptr [label_000000014003C040]
    mov         rdx,qword ptr [label_000000014003E250]
    cmp         rdx,rax
    je          0000000140016AAF
    mov         ecx,eax
    and         ecx,label_3F
    xor         rax,rdx
    ror         rax,cl
    mov         r10,label_99012E4578D92870
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call label_000000014002C2C0
    lea         rcx,[label_000000014003E2A0]
    jmp         0000000140016AC4
    cmp         ecx,1
    jne         0000000140016ACA
    lea         rcx,[label_000000014003E2B8]
    call        0000000140018A24
    nop
    mov         rax,qword ptr [rbx]
    cmp         dword ptr [rax],0
    jne         0000000140016AE5
    lea         rdx,[label_000000014002C3A8]
    lea         rcx,[label_000000014002C388]
    call        000000014001698C
    lea         rdx,[label_000000014002C3B8]
    lea         rcx,[label_000000014002C3B0]
    call        000000014001698C
    mov         rax,qword ptr [rbx+8]
    cmp         dword ptr [rax],0
    jne         0000000140016B0F
    mov         byte ptr [label_000000014003E258],1
    mov         rax,qword ptr [rbx+label_10]
    mov         byte ptr [rax],1
    add         rsp,label_30
    pop         rbx
    ret
func_0000000140016B14_end:
    call        0000000140018C50
    nop
    int         3
    mov         dword ptr [rsp+label_18],r8d
    mov         dword ptr [rsp+label_10],edx
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_50
    mov         qword ptr [rbp-label_20],label_0FFFFFFFFFFFFFFFE
    mov         qword ptr [rsp+label_60],rbx
    mov         ebx,ecx
    test        r8d,r8d
    jne         0000000140016B8B
    xor         ecx,ecx
    call label_000000014002C0D0
    test        rax,rax
    je          0000000140016B8B
    mov         ecx,label_5A4D
    cmp         word ptr [rax],cx
    jne         0000000140016B8B
    movsxd      rcx,dword ptr [rax+label_3C]
    add         rcx,rax
    cmp         dword ptr [rcx],label_4550
    jne         0000000140016B8B
    mov         eax,label_20B
    cmp         word ptr [rcx+label_18],ax
    jne         0000000140016B8B
    cmp         dword ptr [rcx+label_0000000000000084],label_0E
    jbe         0000000140016B8B
    cmp         dword ptr [rcx+label_00000000000000F8],0
    je          0000000140016B8B
    mov         ecx,ebx
    call        0000000140016C3C
    mov         byte ptr [rbp+label_28],0
    lea         rax,[rbp+label_18]
    mov         qword ptr [rbp-label_18],rax
    lea         rax,[rbp+label_20]
    mov         qword ptr [rbp-label_10],rax
    lea         rax,[rbp+label_28]
    mov         qword ptr [rbp-8],rax
    mov         eax,2
    mov         dword ptr [rbp-label_2C],eax
    mov         dword ptr [rbp-label_28],eax
    lea         r9,[rbp-label_2C]
    lea         r8,[rbp-label_18]
    lea         rdx,[rbp-label_28]
    lea         rcx,[rbp-label_30]
    call        0000000140016A18
    nop
    cmp         dword ptr [rbp+label_20],0
    je          0000000140016BD9
    mov         rbx,qword ptr [rsp+label_60]
    add         rsp,label_50
    pop         rbp
    ret
func_0000000140016BD8_end:
    mov         ecx,ebx
    call        0000000140016BE4
    int         3
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         ebx,ecx
    call        0000000140016C18
    test        al,al
    je          0000000140016C06
    call label_000000014002C080
    mov         rcx,rax
    mov         edx,ebx
    call label_000000014002C088
    mov         ecx,ebx
    call        0000000140016C3C
    mov         ecx,ebx
    call label_000000014002C160
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call        000000014002208C
    cmp         eax,1
    je          0000000140016C32
    call        0000000140022058
    test        al,al
    sete        al
    jmp         0000000140016C34
    xor         al,al
    add         rsp,label_28
    ret
func_0000000140016C38_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_30
    mov         qword ptr [rsp+label_20],label_0FFFFFFFFFFFFFFFE
    mov         ebx,ecx
    and         qword ptr [rsp+label_48],0
    lea         r8,[rsp+label_48]
    lea         rdx,[label_00000001400301A0]
    xor         ecx,ecx
    call label_000000014002C168
    mov         rcx,qword ptr [rsp+label_48]
    test        eax,eax
    je          0000000140016C99
    lea         rdx,[label_00000001400301B8]
    call label_000000014002C138
    test        rax,rax
    je          0000000140016C94
    mov         r10,label_0A201879B5E5A7B70
    mov         ecx,ebx
    call label_000000014002C2C0
    mov         rcx,qword ptr [rsp+label_48]
    test        rcx,rcx
    je          0000000140016CA5
    call label_000000014002C130
    nop
    add         rsp,label_30
    pop         rbx
    ret
func_0000000140016CAA_end:
    int         3
    mov         qword ptr [label_000000014003E250],rcx
    ret
func_0000000140016CB3_end:
    mov         edx,2
    xor         ecx,ecx
    lea         r8d,[rdx-1]
    jmp         0000000140016B1C
    xor         edx,edx
    xor         ecx,ecx
    lea         r8d,[rdx+1]
    jmp         0000000140016B1C
    int         3
    int         3
    int         3
    xor         r8d,r8d
    lea         edx,[r8+2]
    jmp         0000000140016B1C
    sub         rsp,label_28
    mov         r8,qword ptr [label_000000014003C040]
    mov         rdx,rcx
    cmp         qword ptr [label_000000014003E250],r8
    jne         0000000140016D18
    mov         ecx,r8d
    mov         eax,label_40
    and         ecx,label_3F
    sub         eax,ecx
    mov         cl,al
    ror         rdx,cl
    xor         rdx,r8
    mov         qword ptr [label_000000014003E250],rdx
    add         rsp,label_28
    ret
func_0000000140016D17_end:
    call        0000000140018C50
    int         3
    int         3
    int         3
    xor         r8d,r8d
    xor         edx,edx
    jmp         0000000140016B1C
    int         3
    int         3
    sub         rsp,label_28
    lea         eax,[rcx+label_FFFFFFFFFFFFC000]
    test        eax,label_0FFFF3FFF
    jne         0000000140016D4F
    cmp         ecx,label_0C000
    je          0000000140016D4F
    xchg        ecx,dword ptr [label_000000014003E9E0]
    xor         eax,eax
    jmp         0000000140016D64
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         eax,label_16
    add         rsp,label_28
    ret
func_0000000140016D68_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call label_000000014002C170
    mov         qword ptr [label_000000014003E280],rax
    call label_000000014002C178
    mov         qword ptr [label_000000014003E288],rax
    mov         al,1
    add         rsp,label_28
    ret
func_0000000140016D90_end:
    int         3
    int         3
    int         3
    lea         rax,[label_000000014003E268]
    ret
func_0000000140016D9B_end:
    lea         rax,[label_000000014003E270]
    ret
func_0000000140016DA3_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rdi,r9
    mov         rbx,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rax,qword ptr [rbx+8]
    mov         rdx,qword ptr [rax]
    mov         rcx,qword ptr [rbx]
    mov         rdx,qword ptr [rdx+label_0000000000000090]
    mov         rcx,qword ptr [rcx]
    call        00000001400173BC
    mov         r8,qword ptr [rbx+label_20]
    mov         rax,qword ptr [rbx+label_18]
    mov         rcx,qword ptr [rbx]
    mov         r8,qword ptr [r8]
    mov         edx,dword ptr [rax]
    mov         rcx,qword ptr [rcx]
    call        0000000140017BF4
    mov         rcx,qword ptr [rbx+label_10]
    mov         qword ptr [rcx],rax
    test        rax,rax
    je          0000000140016EB5
    mov         rax,qword ptr [rbx+label_20]
    mov         rcx,qword ptr [rax]
    test        rcx,rcx
    je          0000000140016E3B
    lea         r8,[label_000000014003C418]
    sub         r8,rcx
    movzx       eax,word ptr [rcx]
    movzx       edx,word ptr [rcx+r8]
    sub         eax,edx
    jne         0000000140016E2C
    add         rcx,2
    test        edx,edx
    jne         0000000140016E18
    test        eax,eax
    je          0000000140016E3B
    mov         eax,1
    xchg        eax,dword ptr [label_000000014003E290]
    mov         rdx,qword ptr [rbx]
    mov         rax,qword ptr [rbx+8]
    mov         rcx,qword ptr [rax]
    add         rcx,label_90
    mov         rdx,qword ptr [rdx]
    call        00000001400237A0
    mov         rcx,qword ptr [rbx]
    mov         rcx,qword ptr [rcx]
    call        0000000140023688
    mov         rax,qword ptr [rbx+8]
    mov         rdx,qword ptr [rax]
    test        byte ptr [rdx+label_00000000000003A8],2
    jne         0000000140016ECC
    test        byte ptr [label_000000014003C468],1
    jne         0000000140016ECC
    mov         rdx,qword ptr [rdx+label_0000000000000090]
    lea         rcx,[label_000000014003E2D0]
    call        00000001400237A0
    mov         rax,qword ptr [label_000000014003E2D0]
    mov         rcx,qword ptr [rax+label_00000000000000F8]
    mov         qword ptr [label_000000014003C278],rcx
    mov         rcx,qword ptr [rax]
    mov         qword ptr [label_000000014003C0C0],rcx
    mov         ecx,dword ptr [rax+8]
    mov         dword ptr [label_000000014003C41C],ecx
    jmp         0000000140016ECC
    mov         rcx,qword ptr [rbx]
    mov         rcx,qword ptr [rcx]
    call        0000000140023688
    mov         rcx,qword ptr [rbx]
    mov         rcx,qword ptr [rcx]
    call        0000000140023488
    nop
    mov         ecx,dword ptr [rdi]
    call        0000000140012CB4
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140016EDD_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_30
    mov         rdi,r9
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    lea         rbx,[label_000000014003E2D0]
    lea         rsi,[label_000000014003C2B0]
    mov         qword ptr [rsp+label_20],rbx
    lea         rax,[label_000000014003E2D8]
    cmp         rbx,rax
    je          0000000140016F37
    cmp         qword ptr [rbx],rsi
    je          0000000140016F31
    mov         rdx,rsi
    mov         rcx,rbx
    call        00000001400237A0
    mov         qword ptr [rbx],rax
    add         rbx,8
    jmp         0000000140016F0D
    mov         ecx,dword ptr [rdi]
    call        0000000140012CB4
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_30
    pop         rdi
    ret
func_0000000140016F4D_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_20],r9
    push        rbx
    sub         rsp,label_20
    mov         rbx,r9
    mov         rcx,r8
    call        0000000140016F7C
    nop
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFEF
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140016F78_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_20],rbx
    push        rdi
    sub         rsp,label_50
    mov         rdi,rcx
    mov         edx,label_158
    mov         ecx,1
    call        000000014001BDB0
    mov         rdx,qword ptr [rdi]
    xor         ecx,ecx
    mov         rbx,rax
    mov         qword ptr [rdx],rax
    call        0000000140019CC4
    test        rbx,rbx
    je          0000000140016FFF
    mov         rax,qword ptr [rdi]
    lea         r9,[rsp+label_68]
    mov         qword ptr [rsp+label_20],rax
    lea         r8,[rsp+label_20]
    mov         rax,qword ptr [rdi+8]
    lea         rdx,[rsp+label_70]
    mov         qword ptr [rsp+label_28],rax
    lea         rcx,[rsp+label_60]
    mov         rax,qword ptr [rdi+label_10]
    mov         qword ptr [rsp+label_30],rax
    mov         rax,qword ptr [rdi+label_18]
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rdi+label_20]
    mov         qword ptr [rsp+label_40],rax
    mov         eax,4
    mov         dword ptr [rsp+label_68],eax
    mov         dword ptr [rsp+label_70],eax
    call        0000000140016DA4
    mov         rbx,qword ptr [rsp+label_78]
    add         rsp,label_50
    pop         rdi
    ret
func_0000000140017009_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_30
    mov         rbx,rcx
    mov         rdi,r8
    mov         rcx,qword ptr [rcx+label_10]
    mov         r9,r8
    mov         rsi,rdx
    mov         r8,rdx
    add         rcx,label_258
    mov         edx,label_55
    call        0000000140020464
    test        eax,eax
    jne         000000014001706D
    mov         rdx,qword ptr [rbx+8]
    mov         r9,rdi
    mov         rcx,qword ptr [rbx]
    mov         r8,rsi
    call        0000000140020464
    test        eax,eax
    jne         000000014001706D
    mov         rsi,qword ptr [rsp+label_48]
    mov         byte ptr [rbx+label_18],1
    mov         rbx,qword ptr [rsp+label_40]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014001706C_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_30
    mov         rdi,rcx
    test        rcx,rcx
    je          00000001400170DE
    mov         edx,label_55
    call        0000000140015DAC
    mov         rsi,rax
    cmp         rax,label_55
    jae         00000001400170DE
    lea         rcx,[rax*2+label_0000000000000002]
    call        0000000140019D00
    mov         rbx,rax
    test        rax,rax
    je          00000001400170DE
    lea         rdx,[rsi+1]
    mov         r8,rdi
    mov         r9,rdx
    mov         rcx,rax
    call        0000000140020464
    test        eax,eax
    jne         00000001400170F0
    mov         rax,rbx
    jmp         00000001400170E0
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_30
    pop         rdi
    ret
func_00000001400170EF_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    mov         eax,1
    xchg        eax,dword ptr [label_000000014003E290]
    ret
func_0000000140017113_end:
    mov         r11,rsp
    sub         rsp,label_28
    mov         eax,4
    lea         r9,[r11+label_10]
    lea         r8,[r11+8]
    mov         dword ptr [rsp+label_38],eax
    lea         rdx,[r11+label_18]
    mov         dword ptr [rsp+label_40],eax
    lea         rcx,[r11+8]
    call        0000000140016EE0
    add         rsp,label_28
    ret
func_0000000140017141_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_30
    mov         rbx,r8
    mov         rdi,rdx
    mov         rsi,rcx
    call        000000014001D0A0
    xor         ebp,ebp
    test        eax,eax
    jne         00000001400171D1
    lea         rax,[rbx+label_0000000000000080]
    cmp         word ptr [rax],bp
    je          0000000140017193
    lea         r9,[label_0000000140030388]
    mov         qword ptr [rsp+label_20],rax
    lea         r8d,[rbp+2]
    mov         rdx,rdi
    mov         rcx,rsi
    call        00000001400178FC
    lea         rax,[rbx+label_0000000000000100]
    cmp         word ptr [rax],bp
    je          00000001400171BC
    lea         r9,[label_000000014003038C]
    mov         qword ptr [rsp+label_20],rax
    mov         r8d,2
    mov         rdx,rdi
    mov         rcx,rsi
    call        00000001400178FC
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_00000001400171D0_end:
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rbp
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_30
    mov         rbx,rdx
    mov         r8d,label_1CA
    xor         edx,edx
    mov         rbp,rcx
    call        000000014002A110
    xor         r15d,r15d
    cmp         word ptr [rbx],r15w
    jne         0000000140017223
    xor         eax,eax
    jmp         0000000140017320
    cmp         word ptr [rbx],label_2E
    jne         000000014001725A
    lea         r8,[rbx+2]
    cmp         word ptr [r8],r15w
    je          000000014001725A
    mov         edx,label_10
    lea         rcx,[rbp+label_0000000000000100]
    lea         r9d,[rdx-1]
    call        0000000140020464
    test        eax,eax
    jne         0000000140017339
    mov         word ptr [rbp+label_000000000000011E],r15w
    jmp         000000014001721C
    mov         edi,r15d
    lea         rdx,[label_0000000140030380]
    mov         rcx,rbx
    call        0000000140023388
    test        rax,rax
    je          000000014001731D
    lea         r14,[rbx+rax*2]
    movzx       esi,word ptr [r14]
    test        edi,edi
    jne         00000001400172B1
    cmp         rax,label_40
    jae         000000014001731D
    mov         r9,rax
    lea         edx,[rdi+label_40]
    mov         r8,rbx
    mov         rcx,rbp
    call        0000000140020464
    test        eax,eax
    jne         0000000140017339
    cmp         si,label_2E
    mov         edi,r15d
    sete        dil
    jmp         00000001400172FF
    cmp         edi,1
    jne         00000001400172CE
    cmp         rax,label_40
    jae         000000014001731D
    cmp         si,label_5F
    je          000000014001731D
    lea         rcx,[rbp+label_0000000000000080]
    lea         edx,[rdi+label_3F]
    jmp         00000001400172F0
    cmp         edi,2
    jne         000000014001731D
    cmp         rax,label_10
    jae         000000014001731D
    test        si,si
    je          00000001400172E4
    cmp         si,label_2C
    jne         000000014001731D
    lea         rcx,[rbp+label_0000000000000100]
    mov         edx,label_10
    mov         r9,rax
    mov         r8,rbx
    call        0000000140020464
    test        eax,eax
    jne         0000000140017339
    cmp         si,label_2C
    je          000000014001721C
    test        si,si
    je          000000014001721C
    lea         rbx,[r14+2]
    inc         edi
    jmp         000000014001725D
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         rdi
    ret
func_0000000140017338_end:
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],r15
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         ebx,ecx
    call        0000000140019964
    mov         r8d,dword ptr [rax+label_00000000000003A8]
    mov         edx,r8d
    and         dl,2
    neg         dl
    sbb         ecx,ecx
    cmp         ebx,label_0FFFFFFFF
    je          00000001400173A9
    test        ebx,ebx
    je          00000001400173B0
    cmp         ebx,1
    je          000000014001739C
    cmp         ebx,2
    je          0000000140017396
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    jmp         00000001400173B3
    and         r8d,label_0FFFFFFFD
    jmp         00000001400173A0
    or          r8d,2
    mov         dword ptr [rax+label_00000000000003A8],r8d
    jmp         00000001400173B0
    or          dword ptr [label_000000014003C468],label_0FFFFFFFF
    lea         eax,[rcx+2]
    add         rsp,label_20
    pop         rbx
    ret
func_00000001400173B8_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    test        rdx,rdx
    je          0000000140017475
    test        rcx,rcx
    je          0000000140017475
    cmp         rcx,rdx
    je          0000000140017475
    mov         eax,2
    mov         r8,rcx
    lea         r9d,[rax+label_7E]
    movups      xmm0,xmmword ptr [rdx]
    movups      xmmword ptr [r8],xmm0
    movups      xmm1,xmmword ptr [rdx+label_10]
    movups      xmmword ptr [r8+label_10],xmm1
    movups      xmm0,xmmword ptr [rdx+label_20]
    movups      xmmword ptr [r8+label_20],xmm0
    movups      xmm1,xmmword ptr [rdx+label_30]
    movups      xmmword ptr [r8+label_30],xmm1
    movups      xmm0,xmmword ptr [rdx+label_40]
    movups      xmmword ptr [r8+label_40],xmm0
    movups      xmm1,xmmword ptr [rdx+label_50]
    movups      xmmword ptr [r8+label_50],xmm1
    movups      xmm0,xmmword ptr [rdx+label_60]
    movups      xmmword ptr [r8+label_60],xmm0
    add         r8,r9
    movups      xmm1,xmmword ptr [rdx+label_70]
    add         rdx,r9
    movups      xmmword ptr [r8-label_10],xmm1
    sub         rax,1
    jne         00000001400173E7
    movups      xmm0,xmmword ptr [rdx]
    movups      xmmword ptr [r8],xmm0
    movups      xmm1,xmmword ptr [rdx+label_10]
    movups      xmmword ptr [r8+label_10],xmm1
    movups      xmm0,xmmword ptr [rdx+label_20]
    movups      xmmword ptr [r8+label_20],xmm0
    movups      xmm1,xmmword ptr [rdx+label_30]
    movups      xmmword ptr [r8+label_30],xmm1
    movups      xmm0,xmmword ptr [rdx+label_40]
    movups      xmmword ptr [r8+label_40],xmm0
    mov         rax,qword ptr [rdx+label_50]
    mov         qword ptr [r8+label_50],rax
    and         dword ptr [rcx+label_10],0
    call        00000001400233FC
    add         rsp,label_28
    ret
func_0000000140017479_end:
    int         3
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    lea         rbp,[rsp+label_FFFFFFFFFFFFFE98]
    sub         rsp,label_268
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_0000000000000150],rax
    mov         rdi,qword ptr [rbp+label_00000000000001D0]
    xor         r15d,r15d
    mov         r14,qword ptr [rbp+label_00000000000001D8]
    mov         rax,r8
    mov         qword ptr [rsp+label_70],rax
    mov         r13,r9
    mov         qword ptr [rsp+label_78],rdx
    mov         rsi,rdx
    mov         qword ptr [rsp+label_30],rdi
    mov         rbx,rcx
    mov         qword ptr [rsp+label_68],r14
    test        rcx,rcx
    jne         0000000140017504
    xor         eax,eax
    mov         rcx,qword ptr [rbp+label_0000000000000150]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_268
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_0000000140017503_end:
    cmp         word ptr [rcx],label_43
    jne         0000000140017536
    cmp         word ptr [rcx+2],r15w
    jne         0000000140017536
    lea         r8,[label_0000000140030378]
    mov         rdx,rax
    mov         rcx,rsi
    call        000000014001D0A0
    xor         r13d,r13d
    test        eax,eax
    jne         00000001400178CF
    mov         dword ptr [r14],r13d
    mov         rax,rsi
    jmp         00000001400174E1
    call        0000000140019964
    add         rax,label_98
    mov         qword ptr [rsp+label_48],r13
    mov         r9d,label_55
    mov         qword ptr [rsp+label_50],rdi
    mov         rdx,rdi
    mov         qword ptr [rsp+label_58],rax
    mov         r14b,r15b
    mov         byte ptr [rsp+label_60],r15b
    lea         rcx,[rax+label_20]
    mov         qword ptr [rsp+label_38],rcx
    lea         r8,[rax+label_0000000000000258]
    lea         rcx,[rax+label_24]
    mov         qword ptr [rsp+label_40],rcx
    lea         r12,[rax+label_000000000000012A]
    mov         rcx,r13
    call        0000000140020464
    test        eax,eax
    jne         00000001400178CC
    or          rsi,label_0FFFFFFFFFFFFFFFF
    mov         r15,rsi
    xor         edi,edi
    inc         r15
    cmp         word ptr [rbx+r15*2],di
    jne         000000014001759A
    cmp         r15,label_83
    jae         00000001400175F9
    mov         r8,rbx
    mov         rax,r12
    sub         r8,r12
    movzx       ecx,word ptr [rax]
    movzx       edx,word ptr [rax+r8]
    sub         ecx,edx
    jne         00000001400175CA
    add         rax,2
    test        edx,edx
    jne         00000001400175B6
    test        ecx,ecx
    je          00000001400178A0
    mov         rax,qword ptr [rsp+label_40]
    mov         r8,rbx
    sub         r8,rax
    movzx       ecx,word ptr [rax]
    movzx       edx,word ptr [rax+r8]
    sub         ecx,edx
    jne         00000001400175F1
    add         rax,2
    test        edx,edx
    jne         00000001400175DD
    test        ecx,ecx
    je          00000001400178A0
    call        000000014001BBBC
    test        al,al
    lea         rcx,[rbp-label_80]
    mov         rdx,rbx
    sete        dil
    call        00000001400171E8
    test        eax,eax
    jne         000000014001768D
    test        edi,edi
    lea         r8,[rbp-label_80]
    mov         rdi,qword ptr [rsp+label_38]
    lea         rcx,[rbp-label_80]
    mov         rdx,rdi
    je          000000014001762F
    call        00000001400249F0
    jmp         0000000140017634
    call        0000000140023FA8
    test        eax,eax
    je          0000000140017692
    lea         r8,[rbp-label_80]
    mov         edx,label_83
    mov         rcx,r12
    call        0000000140017144
    lea         rcx,[rbp+label_00000000000000A0]
    xor         eax,eax
    inc         rsi
    cmp         word ptr [rcx+rsi*2],ax
    jne         0000000140017652
    mov         rdx,qword ptr [rsp+label_30]
    lea         r8,[rbp+label_00000000000000A0]
    mov         r14d,1
    mov         rcx,r13
    lea         r9,[r14+rsi]
    call        0000000140020464
    xor         r13d,r13d
    test        eax,eax
    jne         00000001400178E4
    lea         rdi,[r15+1]
    jmp         000000014001786B
    mov         rdi,qword ptr [rsp+label_38]
    mov         rcx,rbx
    call        000000014001B988
    xor         r13d,r13d
    test        eax,eax
    je          00000001400176FC
    lea         r9d,[r13+2]
    mov         dword ptr [rsp+label_30],r13d
    lea         r8,[rsp+label_30]
    mov         edx,label_20001004
    mov         rcx,rbx
    call        000000014001B81C
    test        eax,eax
    je          00000001400176C8
    mov         eax,dword ptr [rsp+label_30]
    test        eax,eax
    jne         00000001400176CD
    mov         eax,label_0FDE9
    movzx       eax,ax
    mov         r8,rbx
    mov         dword ptr [rdi],eax
    mov         edx,label_83
    lea         rdi,[r15+1]
    mov         rcx,r12
    mov         r9,rdi
    call        0000000140020464
    test        eax,eax
    jne         00000001400178E4
    mov         r8,rdi
    mov         rdx,rbx
    jmp         000000014001785C
    mov         rdx,rbx
    lea         rcx,[rbp-label_80]
    call        00000001400181D0
    test        al,al
    je          00000001400177AD
    lea         rcx,[rbp+label_00000000000000A0]
    call        000000014001B988
    test        eax,eax
    je          00000001400177AD
    movzx       eax,word ptr [rbp+label_0000000000000080]
    test        ax,ax
    je          00000001400177E5
    mov         r8,qword ptr [rbp+label_0000000000000088]
    mov         ecx,eax
    add         eax,label_0FFFFFFBF
    cmp         eax,label_19
    lea         edx,[rcx+label_20]
    cmova       edx,ecx
    cmp         edx,label_75
    jne         0000000140017792
    movzx       edx,word ptr [rbp+label_0000000000000082]
    lea         eax,[rdx-label_41]
    cmp         eax,label_19
    lea         ecx,[rdx+label_20]
    cmova       ecx,edx
    cmp         ecx,label_74
    jne         0000000140017792
    movzx       edx,word ptr [rbp+label_0000000000000084]
    lea         eax,[rdx-label_41]
    cmp         eax,label_19
    lea         ecx,[rdx+label_20]
    cmova       ecx,edx
    cmp         ecx,label_66
    jne         0000000140017792
    cmp         word ptr [rbp+label_0000000000000086],label_38
    jne         0000000140017792
    test        r8w,r8w
    je          0000000140017812
    cmp         word ptr [rbp+label_0000000000000086],label_2D
    jne         00000001400177AD
    cmp         r8w,label_38
    jne         00000001400177AD
    cmp         word ptr [rbp+label_000000000000008A],r13w
    je          0000000140017812
    mov         r12,r13
    test        r14b,r14b
    jne         00000001400177DD
    mov         rcx,qword ptr [rsp+label_58]
    mov         edx,label_55
    mov         r9,qword ptr [rsp+label_50]
    add         rcx,label_258
    mov         r8,qword ptr [rsp+label_48]
    call        0000000140020464
    test        eax,eax
    jne         00000001400178CF
    mov         rax,r12
    jmp         00000001400174E1
    mov         r9d,2
    mov         dword ptr [rsp+label_30],r13d
    lea         r8,[rsp+label_30]
    mov         edx,label_20001004
    lea         rcx,[rbp+label_00000000000000A0]
    call        000000014001B81C
    test        eax,eax
    je          0000000140017812
    mov         eax,dword ptr [rsp+label_30]
    test        eax,eax
    jne         0000000140017817
    mov         eax,label_0FDE9
    movzx       eax,ax
    mov         r8,rbx
    mov         dword ptr [rdi],eax
    mov         edx,label_83
    lea         rdi,[r15+1]
    mov         rcx,r12
    mov         r9,rdi
    call        0000000140020464
    test        eax,eax
    jne         00000001400178E4
    lea         rax,[rbp+label_00000000000000A0]
    inc         rsi
    cmp         word ptr [rax+rsi*2],r13w
    jne         0000000140017842
    mov         r8d,1
    lea         rdx,[rbp+label_00000000000000A0]
    add         r8,rsi
    lea         rcx,[rsp+label_48]
    call        000000014001700C
    mov         r14b,byte ptr [rsp+label_60]
    cmp         word ptr [rbx],r13w
    je          0000000140017895
    cmp         r15,label_83
    jae         0000000140017895
    mov         rcx,qword ptr [rsp+label_40]
    mov         r9,rdi
    mov         r8,rbx
    mov         edx,label_83
    call        0000000140020464
    test        eax,eax
    jne         00000001400178E4
    jmp         00000001400178A3
    mov         rax,qword ptr [rsp+label_40]
    mov         word ptr [rax],r13w
    jmp         00000001400178A3
    xor         r13d,r13d
    mov         rax,qword ptr [rsp+label_38]
    mov         r8,r12
    mov         rcx,qword ptr [rsp+label_68]
    mov         rdx,qword ptr [rsp+label_70]
    mov         eax,dword ptr [rax]
    mov         dword ptr [rcx],eax
    mov         rcx,qword ptr [rsp+label_78]
    call        000000014001D0A0
    test        eax,eax
    jne         00000001400178CF
    jmp         00000001400177B0
    xor         r13d,r13d
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],r13
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],r13
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    int         3
    test        r8d,r8d
    jle         000000014001794A
    mov         dword ptr [rsp+label_18],r8d
    mov         qword ptr [rsp+label_20],r9
    push        rbx
    push        rbp
    push        rsi
    push        rdi
    sub         rsp,label_38
    lea         rdi,[rsp+label_78]
    xor         ebx,ebx
    add         rdi,label_0FFFFFFFFFFFFFFF8
    mov         rsi,rdx
    mov         rbp,rcx
    lea         rdi,[rdi+8]
    mov         rdx,rsi
    mov         r8,qword ptr [rdi]
    mov         rcx,rbp
    call        00000001400203EC
    test        eax,eax
    jne         000000014001794B
    inc         ebx
    cmp         ebx,dword ptr [rsp+label_70]
    jl          0000000140017924
    add         rsp,label_38
    pop         rdi
    pop         rsi
    pop         rbp
    pop         rbx
    ret
func_000000014001794A_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         dword ptr [rsp+8],ecx
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_60
    and         qword ptr [rbp-label_40],0
    and         qword ptr [rbp-label_38],0
    cmp         ecx,5
    jbe         0000000140017998
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    xor         eax,eax
    jmp         00000001400179FF
    call        0000000140019964
    mov         qword ptr [rbp+label_28],rax
    call        000000014001BBEC
    call        0000000140023730
    mov         rax,qword ptr [rbp+label_28]
    lea         r9,[rbp-label_30]
    lea         r8,[rbp-label_28]
    lea         rdx,[rbp+label_20]
    lea         rcx,[rbp+label_20]
    or          dword ptr [rax+label_00000000000003A8],label_10
    lea         rax,[rbp+label_28]
    mov         qword ptr [rbp-label_30],rax
    lea         rax,[rbp-label_38]
    mov         qword ptr [rbp-label_28],rax
    lea         rax,[rbp+label_28]
    mov         qword ptr [rbp-label_20],rax
    lea         rax,[rbp-label_40]
    mov         qword ptr [rbp-label_18],rax
    lea         rax,[rbp+label_10]
    mov         qword ptr [rbp-label_10],rax
    lea         rax,[rbp+label_18]
    mov         qword ptr [rbp-8],rax
    call        0000000140016F50
    mov         rax,qword ptr [rbp-label_40]
    add         rsp,label_60
    pop         rbp
    ret
func_0000000140017A04_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         rbx,rcx
    mov         edi,1
    mov         ecx,label_6A6
    call        0000000140019D00
    xor         r12d,r12d
    mov         rsi,rax
    test        rax,rax
    jne         0000000140017A5E
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_0000000140017A5D_end:
    lea         r14,[rax+4]
    mov         dword ptr [rax],edi
    mov         word ptr [r14],r12w
    lea         r15,[rbx+label_48]
    mov         rax,qword ptr [r15]
    mov         r13d,label_351
    mov         r9,qword ptr [label_0000000140030268]
    mov         r8d,3
    mov         qword ptr [rsp+label_28],rax
    mov         edx,r13d
    lea         rax,[label_000000014003036C]
    mov         rcx,r14
    mov         qword ptr [rsp+label_20],rax
    call        00000001400178FC
    lea         rbp,[label_0000000140030268]
    lea         r8,[label_0000000140030368]
    mov         rdx,r13
    mov         rcx,r14
    call        00000001400203EC
    test        eax,eax
    jne         0000000140017BDD
    mov         r10,qword ptr [r15+label_20]
    mov         rax,qword ptr [r15]
    mov         rdx,r10
    sub         rdx,rax
    movzx       r8d,word ptr [rax]
    movzx       ecx,word ptr [rax+rdx]
    sub         r8d,ecx
    jne         0000000140017AE1
    add         rax,2
    test        ecx,ecx
    jne         0000000140017ACC
    test        r8d,r8d
    mov         qword ptr [rsp+label_28],r10
    mov         eax,r12d
    mov         r8d,3
    cmove       eax,edi
    mov         rdx,r13
    mov         edi,eax
    add         rbp,label_18
    lea         rax,[label_000000014003036C]
    mov         rcx,r14
    add         r15,label_20
    mov         qword ptr [rsp+label_20],rax
    mov         r9,qword ptr [rbp]
    call        00000001400178FC
    lea         rax,[label_00000001400302C8]
    cmp         rbp,rax
    jl          0000000140017AA5
    test        edi,edi
    jne         0000000140017B81
    mov         rcx,qword ptr [rbx+label_38]
    or          edi,label_0FFFFFFFF
    test        rcx,rcx
    je          0000000140017B4D
    mov         eax,edi
    lock xadd   dword ptr [rcx],eax
    add         eax,edi
    jne         0000000140017B4D
    mov         rcx,qword ptr [rbx+label_38]
    call        0000000140019CC4
    mov         rdx,qword ptr [rbx+label_30]
    test        rdx,rdx
    je          0000000140017B69
    mov         ecx,edi
    lock xadd   dword ptr [rdx],ecx
    add         ecx,edi
    jne         0000000140017B69
    mov         rcx,qword ptr [rbx+label_30]
    call        0000000140019CC4
    mov         qword ptr [rbx+label_30],r12
    mov         rax,r14
    mov         qword ptr [rbx+label_20],r12
    mov         qword ptr [rbx+label_38],rsi
    mov         qword ptr [rbx+label_28],r14
    jmp         0000000140017A41
    mov         rcx,rsi
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_38]
    or          edi,label_0FFFFFFFF
    test        rcx,rcx
    je          0000000140017BA8
    mov         eax,edi
    lock xadd   dword ptr [rcx],eax
    add         eax,edi
    jne         0000000140017BA8
    mov         rcx,qword ptr [rbx+label_38]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_30]
    test        rcx,rcx
    je          0000000140017BC4
    mov         eax,edi
    lock xadd   dword ptr [rcx],eax
    add         eax,edi
    jne         0000000140017BC4
    mov         rcx,qword ptr [rbx+label_30]
    call        0000000140019CC4
    mov         rax,qword ptr [rbx+label_68]
    mov         qword ptr [rbx+label_30],r12
    mov         qword ptr [rbx+label_20],r12
    mov         qword ptr [rbx+label_38],r12
    mov         qword ptr [rbx+label_28],r12
    jmp         0000000140017A41
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],r12
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_20],rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_210
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000000200],rax
    xor         r13d,r13d
    mov         rbx,r8
    mov         rdi,rcx
    test        edx,edx
    je          0000000140017C4A
    test        rbx,rbx
    je          0000000140017C39
    call        0000000140017E84
    jmp         0000000140017D9C
    movsxd      rax,edx
    shl         rax,5
    mov         rax,qword ptr [rax+rcx+label_28]
    jmp         0000000140017D9C
    mov         ebp,1
    mov         esi,r13d
    test        rbx,rbx
    je          0000000140017D97
    cmp         word ptr [r8],label_4C
    jne         0000000140017DCB
    cmp         word ptr [r8+2],label_43
    jne         0000000140017DCB
    cmp         word ptr [r8+4],label_5F
    jne         0000000140017DCB
    lea         rdx,[label_0000000140030360]
    mov         rcx,rbx
    call        00000001400233C8
    mov         r14,rax
    test        rax,rax
    je          0000000140017DC7
    mov         rbp,rax
    sub         rbp,rbx
    sar         rbp,1
    je          0000000140017DC7
    cmp         word ptr [rax],label_3B
    je          0000000140017DC7
    mov         r12d,1
    lea         r15,[label_0000000140030268]
    mov         rcx,qword ptr [r15]
    mov         r8,rbp
    mov         rdx,rbx
    call        00000001400195C0
    test        eax,eax
    jne         0000000140017CE7
    mov         rcx,qword ptr [r15]
    or          rax,label_0FFFFFFFFFFFFFFFF
    inc         rax
    cmp         word ptr [rcx+rax*2],r13w
    jne         0000000140017CD8
    cmp         rbp,rax
    je          0000000140017CFA
    inc         r12d
    lea         rax,[label_00000001400302C8]
    add         r15,label_18
    cmp         r15,rax
    jle         0000000140017CBF
    add         r14,2
    lea         rdx,[label_0000000140030368]
    mov         rcx,r14
    call        0000000140023388
    mov         rbx,rax
    test        rax,rax
    jne         0000000140017D20
    cmp         word ptr [r14],label_3B
    jne         0000000140017DC7
    cmp         r12d,5
    jg          0000000140017D70
    mov         r9,rbx
    lea         rcx,[rsp+label_40]
    mov         r8,r14
    mov         edx,label_83
    call        0000000140020464
    test        eax,eax
    jne         0000000140017E6F
    lea         rax,[rbx+rbx]
    cmp         rax,label_106
    jae         0000000140017E69
    lea         r8,[rsp+label_40]
    mov         word ptr [rsp+rax+label_40],r13w
    mov         edx,r12d
    mov         rcx,rdi
    call        0000000140017E84
    test        rax,rax
    je          0000000140017D70
    inc         esi
    lea         rbx,[r14+rbx*2]
    movzx       eax,word ptr [rbx]
    test        ax,ax
    je          0000000140017D8C
    add         rbx,2
    movzx       eax,word ptr [rbx]
    test        ax,ax
    jne         0000000140017C7E
    test        esi,esi
    je          0000000140017E61
    mov         rcx,rdi
    call        0000000140017A08
    mov         rcx,qword ptr [rsp+label_0000000000000200]
    xor         rcx,rsp
    call        00000001400099A0
    mov         rbx,qword ptr [rsp+label_0000000000000268]
    add         rsp,label_210
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_0000000140017DC6_end:
    xor         eax,eax
    jmp         0000000140017D9C
    lea         rax,[rsp+label_30]
    mov         r8d,label_83
    mov         qword ptr [rsp+label_28],rax
    lea         r9,[rsp+label_0000000000000150]
    lea         rdx,[rsp+label_40]
    mov         qword ptr [rsp+label_20],label_55
    mov         rcx,rbx
    call        000000014001747C
    test        rax,rax
    je          0000000140017D9C
    mov         ebx,r13d
    lea         r14,[rdi+label_28]
    test        ebx,ebx
    je          0000000140017E49
    mov         rdx,qword ptr [r14]
    lea         rax,[rsp+label_40]
    sub         rdx,rax
    movzx       ecx,word ptr [rax]
    movzx       r8d,word ptr [rax+rdx]
    sub         ecx,r8d
    jne         0000000140017E2A
    add         rax,2
    test        r8d,r8d
    jne         0000000140017E14
    test        ecx,ecx
    je          0000000140017E47
    lea         r8,[rsp+label_40]
    mov         edx,ebx
    mov         rcx,rdi
    call        0000000140017E84
    test        rax,rax
    jne         0000000140017E47
    mov         ebp,r13d
    jmp         0000000140017E49
    inc         esi
    inc         ebx
    add         r14,label_20
    cmp         ebx,5
    jle         0000000140017E05
    test        ebp,ebp
    jne         0000000140017D94
    jmp         0000000140017D8C
    mov         rax,r13
    jmp         0000000140017D9C
    call        000000014000A274
    int         3
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],r13
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    mov         qword ptr [rsp+label_20],rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    lea         rbp,[rsp+label_FFFFFFFFFFFFFDD0]
    sub         rsp,label_330
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_0000000000000220],rax
    mov         rbx,r8
    movsxd      r12,edx
    mov         rdi,rcx
    call        0000000140019964
    lea         r9,[rbp+label_70]
    mov         r8d,label_83
    lea         rdx,[rsp+label_60]
    mov         rcx,rbx
    lea         r15,[rax+label_00000000000002C8]
    lea         rax,[rsp+label_40]
    mov         qword ptr [rsp+label_28],rax
    mov         qword ptr [rsp+label_20],label_55
    call        000000014001747C
    xor         r10d,r10d
    test        rax,rax
    je          000000014001812B
    mov         rbx,r12
    lea         rcx,[rsp+label_60]
    shl         rbx,5
    mov         rax,qword ptr [rbx+rdi+label_28]
    mov         r9,rax
    sub         r9,rcx
    movzx       edx,word ptr [rcx]
    movzx       r8d,word ptr [rcx+r9]
    sub         edx,r8d
    jne         0000000140017F2C
    add         rcx,2
    test        r8d,r8d
    jne         0000000140017F16
    test        edx,edx
    je          000000014001812D
    lea         rax,[rsp+label_60]
    or          rsi,label_0FFFFFFFFFFFFFFFF
    inc         rsi
    cmp         word ptr [rax+rsi*2],r10w
    jne         0000000140017F3D
    lea         rcx,[rsi*2+label_0000000000000006]
    call        0000000140019D00
    mov         r13,rax
    test        rax,rax
    je          000000014001812B
    mov         rcx,qword ptr [rbx+rdi+label_28]
    lea         r8,[rsp+label_60]
    mov         qword ptr [rsp+label_48],rcx
    lea         rdx,[rsi+1]
    mov         rcx,qword ptr [rdi+r12*8+label_0000000000000128]
    mov         qword ptr [rsp+label_50],rcx
    mov         ecx,dword ptr [rdi+label_0C]
    mov         dword ptr [rsp+label_44],ecx
    lea         rcx,[rax+4]
    call        000000014001D0A0
    xor         esi,esi
    test        eax,eax
    jne         00000001400181BB
    cmp         word ptr [rsp+label_60],label_43
    lea         rax,[r13+4]
    mov         qword ptr [rbx+rdi+label_28],rax
    jne         0000000140017FB6
    cmp         word ptr [rsp+label_62],si
    jne         0000000140017FB6
    mov         eax,esi
    jmp         0000000140017FBF
    lea         rcx,[rbp+label_70]
    call        0000000140017084
    mov         qword ptr [rdi+r12*8+label_0000000000000128],rax
    cmp         r12d,2
    jne         00000001400180B6
    mov         eax,dword ptr [rsp+label_40]
    mov         r8d,esi
    mov         dword ptr [rdi+label_0C],eax
    mov         rdx,rsi
    mov         rcx,qword ptr [r15+label_20]
    mov         eax,dword ptr [r15+rdx*8]
    cmp         dword ptr [rdi+label_0C],eax
    je          0000000140018004
    mov         rax,qword ptr [r15+rdx*8]
    inc         r8d
    mov         qword ptr [r15+rdx*8],rcx
    inc         rdx
    mov         rcx,rax
    cmp         rdx,5
    jl          0000000140017FE2
    jmp         0000000140018017
    test        r8d,r8d
    je          0000000140018017
    movsxd      rdx,r8d
    mov         rax,qword ptr [r15+rdx*8]
    mov         qword ptr [r15],rax
    mov         qword ptr [r15+rdx*8],rcx
    cmp         r8d,5
    jne         00000001400180AB
    mov         eax,dword ptr [rdi+label_0C]
    lea         r9d,[r8+label_7A]
    mov         dword ptr [rsp+label_30],1
    lea         r8,[label_00000001400301D0]
    mov         dword ptr [rsp+label_28],eax
    lea         edx,[r9-label_7E]
    lea         rax,[rbp+label_0000000000000120]
    xor         ecx,ecx
    mov         qword ptr [rsp+label_20],rax
    call        000000014001CB44
    test        eax,eax
    je          0000000140018094
    mov         ecx,esi
    lea         rax,[rbp+label_0000000000000120]
    mov         edx,label_1FF
    inc         ecx
    and         word ptr [rax],dx
    lea         rax,[rax+2]
    cmp         ecx,label_7F
    jb          000000014001805F
    mov         rdx,qword ptr [label_000000014003C290]
    lea         rcx,[rbp+label_0000000000000120]
    mov         r8d,label_0FE
    call        000000014002A4C0
    test        eax,eax
    mov         edx,esi
    sete        dl
    jmp         0000000140018096
    mov         edx,esi
    mov         eax,4
    mov         rcx,r15
    add         rcx,rax
    mov         dword ptr [rcx],edx
    mov         eax,dword ptr [rdi+label_0C]
    mov         dword ptr [r15],eax
    jmp         00000001400180AF
    lea         rcx,[r15+4]
    mov         eax,dword ptr [rcx]
    mov         dword ptr [rdi+label_1C],eax
    jmp         00000001400180D2
    cmp         r12d,1
    jne         00000001400180C5
    mov         eax,dword ptr [rsp+label_40]
    mov         dword ptr [rdi+label_14],eax
    jmp         00000001400180D2
    cmp         r12d,5
    jne         00000001400180D2
    mov         eax,dword ptr [rsp+label_40]
    mov         dword ptr [rdi+label_18],eax
    lea         rax,[r12+r12*2]
    lea         rdx,[label_0000000140030260]
    mov         r10,label_0A11D36B876D77870
    mov         rax,qword ptr [rdx+rax*8]
    mov         rcx,rdi
    call label_000000014002C2C0
    test        eax,eax
    je          0000000140018157
    mov         rax,qword ptr [rsp+label_48]
    mov         qword ptr [rbx+rdi+label_28],rax
    mov         rcx,qword ptr [rdi+r12*8+label_0000000000000128]
    call        0000000140019CC4
    mov         rax,qword ptr [rsp+label_50]
    mov         rcx,r13
    mov         qword ptr [rdi+r12*8+label_0000000000000128],rax
    call        0000000140019CC4
    mov         eax,dword ptr [rsp+label_44]
    mov         dword ptr [rdi+label_0C],eax
    xor         eax,eax
    mov         rcx,qword ptr [rbp+label_0000000000000220]
    xor         rcx,rsp
    call        00000001400099A0
    mov         rbx,qword ptr [rsp+label_0000000000000388]
    add         rsp,label_330
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_0000000140018156_end:
    lea         rcx,[label_000000014003C418]
    cmp         qword ptr [rsp+label_48],rcx
    je          00000001400181A4
    mov         rax,qword ptr [rbx+rdi+label_38]
    or          ecx,label_0FFFFFFFF
    lock xadd   dword ptr [rax],ecx
    cmp         ecx,1
    jne         00000001400181A4
    mov         rcx,qword ptr [rbx+rdi+label_38]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+rdi+label_30]
    call        0000000140019CC4
    mov         rcx,qword ptr [rdi+r12*8+label_0000000000000128]
    call        0000000140019CC4
    mov         qword ptr [rbx+rdi+label_28],rsi
    mov         qword ptr [rdi+r12*8+label_0000000000000128],rsi
    mov         dword ptr [r13],1
    mov         rax,qword ptr [rbx+rdi+label_28]
    mov         qword ptr [rbx+rdi+label_38],r13
    jmp         000000014001812D
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rsi
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    mov         qword ptr [rsp+label_18],rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    lea         rbp,[rsp-label_27]
    sub         rsp,label_90
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_17],rax
    mov         r14,rdx
    mov         r8d,label_1CA
    xor         edx,edx
    mov         rbx,rcx
    call        000000014002A110
    xor         r13d,r13d
    lea         r12,[rbp-label_41]
    mov         edi,r13d
    lea         esi,[r13+1]
    mov         r15d,r13d
    cmp         rdi,4
    jae         00000001400183A2
    cmp         r15d,2
    je          000000014001823F
    lea         rdx,[label_0000000140030370]
    mov         rcx,r14
    call        0000000140023388
    jmp         000000014001824D
    or          rax,label_0FFFFFFFFFFFFFFFF
    inc         rax
    cmp         word ptr [r14+rax*2],r13w
    jne         0000000140018243
    mov         qword ptr [r12-8],r14
    add         rdi,rsi
    lea         r14,[r14+rax*2]
    mov         qword ptr [r12],rax
    movzx       eax,word ptr [r14]
    add         r14,2
    mov         dword ptr [r12+8],r15d
    mov         ecx,eax
    add         r12,label_18
    test        eax,eax
    je          0000000140018282
    sub         ecx,label_2D
    je          000000014001821B
    sub         ecx,esi
    je          00000001400182E7
    cmp         ecx,label_31
    je          000000014001821B
    sub         rdi,rsi
    je          0000000140018394
    sub         rdi,rsi
    je          000000014001834C
    sub         rdi,rsi
    je          00000001400182F2
    cmp         rdi,rsi
    jne         00000001400183A2
    lea         rdx,[rbp-label_49]
    mov         rcx,rbx
    call        0000000140018414
    test        al,al
    je          000000014001838C
    lea         rdx,[rbp-label_31]
    mov         rcx,rbx
    call        0000000140018594
    test        al,al
    je          000000014001838C
    lea         rdx,[rbp-label_19]
    mov         rcx,rbx
    call        00000001400184A0
    test        al,al
    je          000000014001838C
    lea         rdx,[rbp-1]
    jmp         0000000140018380
    mov         r15d,2
    jmp         000000014001821E
    lea         rdx,[rbp-label_49]
    mov         rcx,rbx
    call        0000000140018414
    test        al,al
    je          000000014001838C
    lea         rdx,[rbp-label_31]
    mov         rcx,rbx
    call        0000000140018594
    test        al,al
    je          0000000140018336
    lea         rdx,[rbp-label_19]
    mov         rcx,rbx
    call        00000001400184A0
    test        al,al
    jne         000000014001838F
    lea         rdx,[rbp-label_19]
    mov         rcx,rbx
    call        00000001400183CC
    test        al,al
    jne         000000014001838F
    lea         rdx,[rbp-label_31]
    mov         rcx,rbx
    call        00000001400184A0
    test        al,al
    je          000000014001838C
    lea         rdx,[rbp-label_19]
    jmp         0000000140018380
    lea         rdx,[rbp-label_49]
    mov         rcx,rbx
    call        0000000140018414
    test        al,al
    je          000000014001838C
    lea         rdx,[rbp-label_31]
    mov         rcx,rbx
    call        0000000140018594
    test        al,al
    jne         000000014001838F
    lea         rdx,[rbp-label_31]
    mov         rcx,rbx
    call        00000001400184A0
    test        al,al
    jne         000000014001838F
    lea         rdx,[rbp-label_31]
    mov         rcx,rbx
    call        00000001400183CC
    test        al,al
    jne         000000014001838F
    mov         sil,r13b
    mov         al,sil
    jmp         00000001400183A4
    lea         rdx,[rbp-label_49]
    mov         rcx,rbx
    call        0000000140018414
    jmp         00000001400183A4
    xor         al,al
    mov         rcx,qword ptr [rbp+label_17]
    xor         rcx,rsp
    call        00000001400099A0
    mov         rbx,qword ptr [rsp+label_00000000000000E0]
    add         rsp,label_90
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_00000001400183CA_end:
    int         3
    sub         rsp,label_38
    cmp         dword ptr [rdx+label_10],2
    je          00000001400183DD
    xor         al,al
    add         rsp,label_38
    ret
func_00000001400183DC_end:
    mov         r9,qword ptr [rdx+8]
    add         rcx,label_100
    mov         r8,qword ptr [rdx]
    mov         edx,label_10
    call        0000000140020464
    test        eax,eax
    jne         00000001400183FD
    mov         al,1
    jmp         00000001400183D8
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_30
    cmp         dword ptr [rdx+label_10],0
    mov         rbx,rdx
    mov         rdi,rcx
    jne         000000014001847A
    mov         rdx,qword ptr [rdx+8]
    lea         rax,[rdx-2]
    cmp         rax,1
    ja          000000014001847A
    mov         rcx,qword ptr [rbx]
    call        0000000140018624
    test        al,al
    je          000000014001847A
    mov         r9,qword ptr [rbx+8]
    mov         edx,label_40
    mov         r8,qword ptr [rbx]
    mov         rcx,rdi
    call        0000000140020464
    test        eax,eax
    jne         0000000140018487
    mov         r9,qword ptr [rbx+8]
    lea         rcx,[rdi+label_0000000000000120]
    mov         r8,qword ptr [rbx]
    lea         edx,[rax+label_55]
    call        0000000140020464
    test        eax,eax
    jne         0000000140018487
    mov         al,1
    jmp         000000014001847C
    xor         al,al
    mov         rbx,qword ptr [rsp+label_40]
    add         rsp,label_30
    pop         rdi
    ret
func_0000000140018486_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_18],rbp
    push        rsi
    push        rdi
    push        r14
    sub         rsp,label_30
    cmp         dword ptr [rdx+label_10],0
    mov         rbx,rdx
    mov         rbp,rcx
    jne         0000000140018569
    mov         edx,2
    cmp         qword ptr [rbx+8],rdx
    jne         00000001400184D9
    mov         rcx,qword ptr [rbx]
    call        0000000140018624
    test        al,al
    jne         0000000140018510
    cmp         qword ptr [rbx+8],3
    jne         0000000140018569
    mov         r14,qword ptr [rbx]
    xor         edi,edi
    movzx       esi,word ptr [r14+rdi*2]
    call        000000014001302C
    mov         ecx,label_0FF
    cmp         si,cx
    ja          0000000140018569
    movzx       eax,word ptr [rax+rsi*2]
    bt          eax,2
    jae         0000000140018569
    inc         rdi
    cmp         rdi,3
    jb          00000001400184E9
    mov         r9,qword ptr [rbx+8]
    lea         rcx,[rbp+label_0000000000000080]
    mov         r8,qword ptr [rbx]
    mov         edx,label_40
    call        0000000140020464
    test        eax,eax
    jne         000000014001857E
    lea         edi,[rax+label_55]
    mov         edx,edi
    lea         r9d,[rax+1]
    lea         r8,[label_000000014002D974]
    lea         rcx,[rbp+label_0000000000000120]
    call        0000000140023290
    test        eax,eax
    jne         000000014001857E
    mov         r9,qword ptr [rbx+8]
    lea         rcx,[rbp+label_0000000000000120]
    mov         r8,qword ptr [rbx]
    mov         edx,edi
    call        0000000140023290
    test        eax,eax
    jne         000000014001857E
    mov         al,1
    jmp         000000014001856B
    xor         al,al
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_60]
    add         rsp,label_30
    pop         r14
    pop         rdi
    pop         rsi
    ret
func_000000014001857D_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_30
    cmp         dword ptr [rdx+label_10],0
    mov         rbx,rdx
    mov         rdi,rcx
    jne         0000000140018600
    mov         edx,4
    cmp         qword ptr [rbx+8],rdx
    jne         0000000140018600
    mov         rcx,qword ptr [rbx]
    call        0000000140018624
    test        al,al
    je          0000000140018600
    mov         r9d,1
    lea         r8,[label_000000014002D974]
    lea         rcx,[rdi+label_0000000000000120]
    lea         edx,[r9+label_54]
    call        0000000140023290
    test        eax,eax
    jne         000000014001860D
    mov         r9,qword ptr [rbx+8]
    lea         edx,[rax+label_55]
    mov         r8,qword ptr [rbx]
    lea         rcx,[rdi+label_0000000000000120]
    call        0000000140023290
    test        eax,eax
    jne         000000014001860D
    mov         al,1
    jmp         0000000140018602
    xor         al,al
    mov         rbx,qword ptr [rsp+label_40]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014001860C_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_18],rsi
    mov         qword ptr [rsp+label_20],rdi
    push        r14
    sub         rsp,label_20
    xor         ebx,ebx
    mov         rdi,rdx
    mov         r14,rcx
    test        rdx,rdx
    je          0000000140018671
    movzx       esi,word ptr [r14+rbx*2]
    call        000000014001302C
    mov         rdx,rax
    mov         eax,label_0FF
    cmp         si,ax
    ja          0000000140018689
    movzx       ecx,word ptr [rdx+rsi*2]
    test        ecx,label_103
    je          0000000140018689
    inc         rbx
    cmp         rbx,rdi
    jb          0000000140018646
    mov         al,1
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_0000000140018688_end:
    xor         al,al
    jmp         0000000140018673
    int         3
    int         3
    int         3
    mov         eax,dword ptr [label_000000014003E294]
    nop
    ret
func_0000000140018697_end:
    sub         rsp,label_28
    cmp         ecx,1
    jbe         00000001400186B6
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    jmp         00000001400186BE
    xchg        ecx,dword ptr [label_000000014003E294]
    mov         eax,ecx
    add         rsp,label_28
    ret
func_00000001400186C2_end:
    int         3
    lea         rax,[label_000000014003E298]
    ret
func_00000001400186CB_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rcx,rdi
    call        0000000140018744
    mov         edi,eax
    mov         ecx,dword ptr [rbx]
    call        0000000140012CB4
    mov         eax,edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140018706_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rcx,rdi
    call        00000001400188F4
    mov         edi,eax
    mov         ecx,dword ptr [rbx]
    call        0000000140012CB4
    mov         eax,edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140018742_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_20
    mov         rax,qword ptr [rcx]
    xor         ebp,ebp
    mov         r15,rcx
    mov         rdx,qword ptr [rax]
    test        rdx,rdx
    je          00000001400188D8
    mov         r10,qword ptr [label_000000014003C040]
    mov         ecx,r10d
    mov         rsi,r10
    xor         rsi,qword ptr [rdx]
    and         ecx,label_3F
    mov         r9,r10
    ror         rsi,cl
    xor         r9,qword ptr [rdx+8]
    mov         rbx,r10
    xor         rbx,qword ptr [rdx+label_10]
    ror         r9,cl
    ror         rbx,cl
    cmp         r9,rbx
    jne         000000014001884A
    sub         rbx,rsi
    mov         eax,label_200
    sar         rbx,3
    cmp         rbx,rax
    mov         rdi,rbx
    cmova       rdi,rax
    lea         eax,[rbp+label_20]
    add         rdi,rbx
    cmove       rdi,rax
    cmp         rdi,rbx
    jb          00000001400187E6
    lea         r8d,[rbp+8]
    mov         rdx,rdi
    mov         rcx,rsi
    call        0000000140024C70
    xor         ecx,ecx
    mov         r14,rax
    call        0000000140019CC4
    test        r14,r14
    jne         000000014001880E
    lea         rdi,[rbx+4]
    mov         r8d,8
    mov         rdx,rdi
    mov         rcx,rsi
    call        0000000140024C70
    xor         ecx,ecx
    mov         r14,rax
    call        0000000140019CC4
    test        r14,r14
    je          00000001400188D8
    mov         r10,qword ptr [label_000000014003C040]
    lea         r9,[r14+rbx*8]
    lea         rbx,[r14+rdi*8]
    mov         rsi,r14
    mov         rcx,rbx
    sub         rcx,r9
    add         rcx,7
    shr         rcx,3
    cmp         r9,rbx
    cmova       rcx,rbp
    test        rcx,rcx
    je          000000014001884A
    mov         rax,r10
    mov         rdi,r9
    rep stos    qword ptr [rdi]
    mov         r10,qword ptr [label_000000014003C040]
    mov         r8d,label_40
    lea         rdi,[r9+8]
    mov         ecx,r8d
    mov         eax,r10d
    and         eax,label_3F
    sub         ecx,eax
    mov         rax,qword ptr [r15+8]
    mov         rdx,qword ptr [rax]
    mov         eax,r8d
    ror         rdx,cl
    xor         rdx,r10
    mov         qword ptr [r9],rdx
    mov         rdx,qword ptr [label_000000014003C040]
    mov         ecx,edx
    and         ecx,label_3F
    sub         eax,ecx
    mov         cl,al
    mov         rax,qword ptr [r15]
    ror         rsi,cl
    xor         rsi,rdx
    mov         rcx,qword ptr [rax]
    mov         qword ptr [rcx],rsi
    mov         ecx,r8d
    mov         rdx,qword ptr [label_000000014003C040]
    mov         eax,edx
    and         eax,label_3F
    sub         ecx,eax
    mov         rax,qword ptr [r15]
    ror         rdi,cl
    xor         rdi,rdx
    mov         rdx,qword ptr [rax]
    mov         qword ptr [rdx+8],rdi
    mov         rdx,qword ptr [label_000000014003C040]
    mov         eax,edx
    and         eax,label_3F
    sub         r8d,eax
    mov         rax,qword ptr [r15]
    mov         cl,r8b
    ror         rbx,cl
    xor         rbx,rdx
    mov         rcx,qword ptr [rax]
    xor         eax,eax
    mov         qword ptr [rcx+label_10],rbx
    jmp         00000001400188DB
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         rdi
    ret
func_00000001400188F3_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_20
    mov         rax,qword ptr [rcx]
    mov         rsi,rcx
    mov         rdx,qword ptr [rax]
    test        rdx,rdx
    jne         0000000140018922
    or          eax,label_0FFFFFFFF
    jmp         00000001400189FB
    mov         r8,qword ptr [label_000000014003C040]
    mov         ecx,r8d
    mov         rdi,r8
    xor         rdi,qword ptr [rdx]
    and         ecx,label_3F
    ror         rdi,cl
    mov         rbx,r8
    xor         rbx,qword ptr [rdx+8]
    ror         rbx,cl
    lea         rax,[rdi-1]
    cmp         rax,label_0FFFFFFFFFFFFFFFD
    ja          00000001400189F9
    mov         ecx,r8d
    mov         r14,r8
    and         ecx,label_3F
    mov         r15,rdi
    mov         rbp,rbx
    sub         rbx,8
    cmp         rbx,rdi
    jb          00000001400189C7
    mov         rax,qword ptr [rbx]
    cmp         rax,r14
    je          000000014001895F
    xor         rax,r8
    mov         qword ptr [rbx],r14
    ror         rax,cl
    mov         r10,label_85F13E9656DA4870
    call label_000000014002C2C0
    mov         r8,qword ptr [label_000000014003C040]
    mov         rax,qword ptr [rsi]
    mov         ecx,r8d
    and         ecx,label_3F
    mov         r9,r8
    mov         rdx,qword ptr [rax]
    mov         rax,r8
    xor         r9,qword ptr [rdx]
    xor         rax,qword ptr [rdx+8]
    ror         r9,cl
    ror         rax,cl
    cmp         r9,r15
    jne         00000001400189B9
    cmp         rax,rbp
    je          000000014001895F
    mov         r15,r9
    mov         rdi,r9
    mov         rbp,rax
    mov         rbx,rax
    jmp         000000014001895F
    cmp         rdi,label_0FFFFFFFFFFFFFFFF
    je          00000001400189DC
    mov         rcx,rdi
    call        0000000140019CC4
    mov         r8,qword ptr [label_000000014003C040]
    mov         rax,qword ptr [rsi]
    mov         rcx,qword ptr [rax]
    mov         qword ptr [rcx],r8
    mov         rax,qword ptr [rsi]
    mov         rcx,qword ptr [rax]
    mov         qword ptr [rcx+8],r8
    mov         rax,qword ptr [rsi]
    mov         rcx,qword ptr [rax]
    mov         qword ptr [rcx+label_10],r8
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         rdi
    ret
func_0000000140018A13_end:
    mov         rdx,rcx
    lea         rcx,[label_000000014003E2A0]
    jmp         0000000140018A90
    int         3
    mov         r11,rsp
    mov         qword ptr [r11+8],rcx
    sub         rsp,label_38
    mov         qword ptr [r11-label_10],label_0FFFFFFFFFFFFFFFE
    lea         rax,[r11+8]
    mov         qword ptr [r11-label_18],rax
    mov         eax,2
    mov         dword ptr [rsp+label_50],eax
    mov         dword ptr [rsp+label_58],eax
    lea         r9,[r11+label_18]
    lea         r8,[r11-label_18]
    lea         rdx,[r11+label_20]
    lea         rcx,[r11+label_10]
    call        0000000140018708
    nop
    add         rsp,label_38
    ret
func_0000000140018A66_end:
    int         3
    test        rcx,rcx
    jne         0000000140018A71
    or          eax,label_0FFFFFFFF
    ret
func_0000000140018A70_end:
    mov         rax,qword ptr [rcx+label_10]
    cmp         qword ptr [rcx],rax
    jne         0000000140018A8C
    mov         rax,qword ptr [label_000000014003C040]
    mov         qword ptr [rcx],rax
    mov         qword ptr [rcx+8],rax
    mov         qword ptr [rcx+label_10],rax
    xor         eax,eax
    ret
func_0000000140018A8E_end:
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_40
    lea         rax,[rbp+label_10]
    mov         qword ptr [rbp-label_18],rax
    lea         r9,[rbp+label_28]
    lea         rax,[rbp+label_18]
    mov         qword ptr [rbp-label_10],rax
    lea         r8,[rbp-label_18]
    mov         eax,2
    lea         rdx,[rbp-label_20]
    lea         rcx,[rbp+label_20]
    mov         dword ptr [rbp+label_28],eax
    mov         dword ptr [rbp-label_20],eax
    call        00000001400186CC
    add         rsp,label_40
    pop         rbp
    ret
func_0000000140018AD7_end:
    lea         rax,[label_000000014003C2B0]
    mov         qword ptr [label_000000014003E2D0],rax
    mov         al,1
    ret
func_0000000140018AE8_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    lea         rcx,[label_000000014003E2A0]
    call        0000000140018A68
    lea         rcx,[label_000000014003E2B8]
    call        0000000140018A68
    mov         al,1
    add         rsp,label_28
    ret
func_0000000140018B0E_end:
    int         3
    sub         rsp,label_28
    call        00000001400168F0
    mov         al,1
    add         rsp,label_28
    ret
func_0000000140018B1F_end:
    push        rbx
    sub         rsp,label_20
    mov         rbx,qword ptr [label_000000014003C040]
    mov         rcx,rbx
    call        000000014001048C
    mov         rcx,rbx
    call        0000000140015F84
    mov         rcx,rbx
    call        000000014001FDD4
    mov         rcx,rbx
    call        00000001400161B8
    mov         rcx,rbx
    call        0000000140016CAC
    mov         al,1
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140018B5C_end:
    int         3
    int         3
    int         3
    xor         ecx,ecx
    jmp         000000014000B9C0
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rcx,qword ptr [label_000000014003E9D0]
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rcx],eax
    cmp         eax,1
    jne         0000000140018BA0
    mov         rcx,qword ptr [label_000000014003E9D0]
    lea         rbx,[label_000000014003C720]
    cmp         rcx,rbx
    je          0000000140018BA0
    call        0000000140019CC4
    mov         qword ptr [label_000000014003E9D0],rbx
    mov         al,1
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140018BA7_end:
    sub         rsp,label_28
    mov         rcx,qword ptr [label_000000014003E2E8]
    call        0000000140019CC4
    mov         rcx,qword ptr [label_000000014003E2F0]
    and         qword ptr [label_000000014003E2E8],0
    call        0000000140019CC4
    mov         rcx,qword ptr [label_000000014003E270]
    and         qword ptr [label_000000014003E2F0],0
    call        0000000140019CC4
    mov         rcx,qword ptr [label_000000014003E278]
    and         qword ptr [label_000000014003E270],0
    call        0000000140019CC4
    and         qword ptr [label_000000014003E278],0
    mov         al,1
    add         rsp,label_28
    ret
func_0000000140018C02_end:
    int         3
    lea         rdx,[label_00000001400304C0]
    lea         rcx,[label_00000001400303C0]
    jmp         0000000140024D30
    int         3
    sub         rsp,label_28
    test        cl,cl
    je          0000000140018C36
    cmp         qword ptr [label_000000014003E0F0],0
    je          0000000140018C2F
    call        0000000140014038
    mov         al,1
    add         rsp,label_28
    ret
func_0000000140018C35_end:
    lea         rdx,[label_00000001400304C0]
    lea         rcx,[label_00000001400303C0]
    add         rsp,label_28
    jmp         0000000140024DC4
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call        0000000140019964
    mov         rax,qword ptr [rax+label_18]
    test        rax,rax
    je          0000000140018C74
    mov         r10,label_85F13E9656DA4870
    call label_000000014002C2C0
    jmp         0000000140018C74
    call        0000000140015954
    nop
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    xor         ebx,ebx
    test        rcx,rcx
    je          0000000140018C95
    test        rdx,rdx
    je          0000000140018C95
    test        r8,r8
    jne         0000000140018CAE
    mov         byte ptr [rcx],bl
    call        0000000140015374
    mov         ebx,label_16
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         eax,ebx
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140018CAD_end:
    mov         r9,rcx
    sub         r8,rcx
    mov         al,byte ptr [r8+r9]
    mov         byte ptr [r9],al
    inc         r9
    test        al,al
    je          0000000140018CA6
    sub         rdx,1
    jne         0000000140018CB4
    test        rdx,rdx
    jne         0000000140018CA6
    mov         byte ptr [rcx],bl
    call        0000000140015374
    mov         ebx,label_22
    jmp         0000000140018C9F
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+8],rcx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_0A0
    mov         r12,qword ptr [rdx]
    xor         ebp,ebp
    movzx       esi,r9b
    mov         r15d,r8d
    mov         qword ptr [rsp+label_0000000000000090],r12
    mov         rdi,rdx
    test        r12,r12
    jne         0000000140018D26
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    jmp         0000000140018D58
    test        r15d,r15d
    je          0000000140018D70
    lea         eax,[r8-2]
    cmp         eax,label_22
    jbe         0000000140018D70
    mov         qword ptr [rsp+label_28],rcx
    xor         r9d,r9d
    mov         byte ptr [rcx+label_30],1
    xor         r8d,r8d
    mov         dword ptr [rcx+label_2C],label_16
    xor         edx,edx
    xor         ecx,ecx
    mov         qword ptr [rsp+label_20],rbp
    call        0000000140010530
    mov         rcx,qword ptr [rdi+8]
    test        rcx,rcx
    je          00000001400193C2
    mov         rax,qword ptr [rdi]
    mov         qword ptr [rcx],rax
    jmp         00000001400193C2
    movzx       ebx,word ptr [r12]
    lea         rax,[r12+2]
    mov         qword ptr [rdx],rax
    mov         r14d,ebp
    cmp         byte ptr [rcx+label_28],bpl
    jne         0000000140018D9A
    call        0000000140012780
    jmp         0000000140018D9A
    mov         rax,qword ptr [rdi]
    movzx       ebx,word ptr [rax]
    add         rax,2
    mov         qword ptr [rdi],rax
    mov         edx,8
    movzx       ecx,bx
    call        000000014001FCDC
    test        eax,eax
    jne         0000000140018D8D
    mov         eax,esi
    mov         ecx,label_0FFFD
    or          esi,2
    cmp         bx,label_2D
    cmovne      esi,eax
    lea         eax,[rbx-label_2B]
    test        cx,ax
    jne         0000000140018DD1
    mov         rax,qword ptr [rdi]
    movzx       ebx,word ptr [rax]
    add         rax,2
    mov         qword ptr [rdi],rax
    mov         dword ptr [rsp+label_00000000000000E8],label_0A70
    mov         eax,label_0A66
    mov         dword ptr [rsp+label_30],label_0AE6
    mov         ecx,label_30
    mov         dword ptr [rsp+label_34],label_0AF0
    mov         edx,label_0FF10
    mov         dword ptr [rsp+label_38],label_0B66
    mov         r8d,label_660
    mov         dword ptr [rsp+label_3C],label_0B70
    lea         r11d,[rax-label_80]
    mov         dword ptr [rsp+label_40],label_0C66
    mov         r9d,label_6F0
    mov         dword ptr [rsp+label_44],label_0C70
    mov         r10d,label_966
    mov         dword ptr [rsp+label_48],label_0CE6
    mov         dword ptr [rsp+label_4C],label_0CF0
    mov         dword ptr [rsp+label_50],label_0D66
    mov         dword ptr [rsp+label_54],label_0D70
    mov         dword ptr [rsp+label_58],label_0E50
    mov         dword ptr [rsp+label_5C],label_0E5A
    mov         dword ptr [rsp+label_60],label_0ED0
    mov         dword ptr [rsp+label_64],label_0EDA
    mov         dword ptr [rsp+label_68],label_0F20
    mov         dword ptr [rsp+label_6C],label_0F2A
    mov         dword ptr [rsp+label_70],label_1040
    mov         dword ptr [rsp+label_74],label_104A
    mov         dword ptr [rsp+label_78],label_17E0
    mov         dword ptr [rsp+label_7C],label_17EA
    mov         dword ptr [rsp+label_0000000000000080],label_1810
    mov         dword ptr [rsp+label_0000000000000084],label_0FF1A
    mov         dword ptr [rsp+label_0000000000000088],label_19
    test        r15d,label_0FFFFFFEF
    jne         0000000140019111
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,label_3A
    jae         0000000140018EE8
    movzx       eax,bx
    sub         eax,ecx
    jmp         0000000140019094
    cmp         bx,dx
    jae         0000000140019085
    cmp         bx,r8w
    jb          0000000140019099
    mov         ecx,label_66A
    cmp         bx,cx
    jae         0000000140018F10
    movzx       eax,bx
    sub         eax,r8d
    jmp         0000000140019094
    cmp         bx,r9w
    jb          0000000140019099
    mov         ecx,label_6FA
    cmp         bx,cx
    jae         0000000140018F2F
    movzx       eax,bx
    sub         eax,r9d
    jmp         0000000140019094
    cmp         bx,r10w
    jb          0000000140019099
    mov         ecx,label_970
    cmp         bx,cx
    jae         0000000140018F4E
    movzx       eax,bx
    sub         eax,r10d
    jmp         0000000140019094
    cmp         bx,r11w
    jb          0000000140019099
    mov         ecx,label_9F0
    cmp         bx,cx
    jae         0000000140018F6D
    movzx       eax,bx
    sub         eax,r11d
    jmp         0000000140019094
    cmp         bx,ax
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_00000000000000E8]
    jae         0000000140018F8D
    movzx       eax,bx
    sub         eax,label_0A66
    jmp         0000000140019094
    mov         ecx,dword ptr [rsp+label_30]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_34]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_38]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_3C]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_40]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_44]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_48]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_4C]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_50]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_54]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_58]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_5C]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_60]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_64]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_68]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_6C]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_70]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_74]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_78]
    cmp         bx,cx
    jb          0000000140019099
    cmp         bx,word ptr [rsp+label_7C]
    jb          0000000140018EDE
    mov         ecx,dword ptr [rsp+label_0000000000000080]
    movzx       eax,bx
    sub         ax,cx
    cmp         ax,9
    ja          0000000140019099
    jmp         0000000140018EDE
    cmp         bx,word ptr [rsp+label_0000000000000084]
    jae         0000000140019099
    movzx       eax,bx
    sub         eax,edx
    cmp         eax,label_0FFFFFFFF
    jne         00000001400190BF
    mov         edx,dword ptr [rsp+label_0000000000000088]
    movzx       ecx,bx
    lea         eax,[rcx-label_41]
    cmp         eax,edx
    lea         eax,[rcx-label_61]
    jbe         00000001400190B5
    cmp         eax,edx
    ja          000000014001916B
    cmp         eax,edx
    ja          00000001400190BC
    add         ecx,label_0FFFFFFE0
    lea         eax,[rcx-label_37]
    xor         r10d,r10d
    test        eax,eax
    jne         000000014001916E
    mov         rcx,qword ptr [rdi]
    mov         r9d,label_0FFDF
    movzx       edx,word ptr [rcx]
    lea         r8,[rcx+2]
    mov         qword ptr [rdi],r8
    lea         eax,[rdx-label_58]
    test        r9w,ax
    je          000000014001914F
    test        r15d,r15d
    mov         qword ptr [rdi],rcx
    lea         eax,[r10+8]
    cmovne      eax,r15d
    mov         r15d,eax
    test        dx,dx
    je          0000000140019114
    cmp         word ptr [rcx],dx
    je          0000000140019114
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    xor         r10d,r10d
    xor         edx,edx
    or          eax,label_0FFFFFFFF
    div         eax,r15d
    mov         r11d,label_61
    mov         ebp,label_660
    mov         r9d,eax
    mov         r13d,label_0FF10
    lea         r12d,[r11-label_31]
    cmp         bx,r12w
    jb          0000000140019303
    cmp         bx,label_3A
    jae         0000000140019175
    movzx       ecx,bx
    sub         ecx,r12d
    jmp         00000001400192FE
    movzx       ebx,word ptr [r8]
    lea         rax,[r8+2]
    mov         qword ptr [rdi],rax
    mov         eax,label_10
    test        r15d,r15d
    cmovne      eax,r15d
    mov         r15d,eax
    jmp         0000000140019114
    xor         r10d,r10d
    mov         eax,label_0A
    jmp         000000014001915F
    cmp         bx,r13w
    jae         00000001400192EE
    cmp         bx,bp
    jb          0000000140019303
    mov         eax,label_66A
    cmp         bx,ax
    jae         000000014001919C
    movzx       ecx,bx
    sub         ecx,ebp
    jmp         00000001400192FE
    mov         eax,label_6F0
    cmp         bx,ax
    jb          0000000140019303
    lea         ecx,[rax+label_0A]
    cmp         bx,cx
    jae         00000001400191BC
    movzx       ecx,bx
    sub         ecx,eax
    jmp         00000001400192FE
    mov         eax,label_966
    cmp         bx,ax
    jb          0000000140019303
    lea         ecx,[rax+label_0A]
    cmp         bx,cx
    jb          00000001400191B2
    lea         eax,[rcx+label_76]
    cmp         bx,ax
    jb          0000000140019303
    lea         ecx,[rax+label_0A]
    cmp         bx,cx
    jb          00000001400191B2
    lea         eax,[rcx+label_76]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_00000000000000E8]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_30]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_34]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_38]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_3C]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_40]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_44]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_48]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_4C]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_50]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_54]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_58]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_5C]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_60]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_64]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_68]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_6C]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_70]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_74]
    jb          00000001400191B2
    mov         eax,dword ptr [rsp+label_78]
    cmp         bx,ax
    jb          0000000140019303
    cmp         bx,word ptr [rsp+label_7C]
    jb          00000001400191B2
    mov         edx,dword ptr [rsp+label_0000000000000080]
    movzx       eax,bx
    sub         ax,dx
    cmp         ax,9
    ja          0000000140019303
    movzx       ecx,bx
    sub         ecx,edx
    jmp         00000001400192FE
    cmp         bx,word ptr [rsp+label_0000000000000084]
    jae         0000000140019303
    movzx       ecx,bx
    sub         ecx,r13d
    cmp         ecx,label_0FFFFFFFF
    jne         0000000140019337
    movzx       ecx,bx
    cmp         ecx,label_41
    jb          0000000140019310
    cmp         ecx,label_5A
    jbe         000000014001931B
    cmp         ecx,r11d
    jb          0000000140019334
    cmp         bx,label_7A
    ja          0000000140019334
    movzx       eax,bx
    sub         ax,r11w
    cmp         ax,word ptr [rsp+label_0000000000000088]
    ja          000000014001932F
    add         ecx,label_0FFFFFFE0
    add         ecx,label_0FFFFFFC9
    jmp         0000000140019337
    or          ecx,label_0FFFFFFFF
    mov         r8,qword ptr [rdi]
    cmp         ecx,r15d
    jae         0000000140019377
    movzx       ebx,word ptr [r8]
    mov         eax,r14d
    imul        eax,r15d
    lea         edx,[rax+rcx]
    mov         ecx,r10d
    cmp         edx,eax
    mov         eax,r10d
    setb        cl
    cmp         r14d,r9d
    mov         r14d,edx
    seta        al
    or          ecx,eax
    lea         rax,[r8+2]
    shl         ecx,2
    or          ecx,8
    mov         qword ptr [rdi],rax
    or          esi,ecx
    jmp         0000000140019134
    mov         r13,qword ptr [rsp+label_00000000000000E0]
    lea         rax,[r8-2]
    mov         r12,qword ptr [rsp+label_0000000000000090]
    mov         ebp,2
    mov         qword ptr [rdi],rax
    test        bx,bx
    je          00000001400193AD
    cmp         word ptr [rax],bx
    je          00000001400193AD
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    test        sil,8
    jne         00000001400193C9
    mov         rax,qword ptr [rdi+8]
    mov         qword ptr [rdi],r12
    test        rax,rax
    je          00000001400193C2
    mov         qword ptr [rax],r12
    xor         eax,eax
    jmp         000000014001945B
    mov         r8d,label_80000000
    lea         r9d,[r8-1]
    test        sil,4
    je          00000001400193E2
    mov         eax,1
    mov         ecx,esi
    jmp         0000000140019400
    test        sil,1
    je          0000000140019441
    test        bpl,sil
    je          00000001400193F4
    cmp         r14d,r8d
    jbe         0000000140019446
    jmp         00000001400193F9
    cmp         r14d,r9d
    jbe         0000000140019449
    mov         ecx,1
    mov         eax,esi
    and         ebp,esi
    mov         byte ptr [r13+label_30],1
    mov         dword ptr [r13+label_2C],label_22
    test        eax,ecx
    jne         0000000140019419
    or          r14d,label_0FFFFFFFF
    jmp         0000000140019449
    mov         rdx,qword ptr [rdi+8]
    test        ebp,ebp
    je          0000000140019431
    test        rdx,rdx
    je          000000014001942C
    mov         rcx,qword ptr [rdi]
    mov         qword ptr [rdx],rcx
    mov         eax,r8d
    jmp         000000014001945B
    test        rdx,rdx
    je          000000014001943C
    mov         rcx,qword ptr [rdi]
    mov         qword ptr [rdx],rcx
    mov         eax,r9d
    jmp         000000014001945B
    test        bpl,sil
    je          0000000140019449
    neg         r14d
    mov         rdx,qword ptr [rdi+8]
    test        rdx,rdx
    je          0000000140019458
    mov         rcx,qword ptr [rdi]
    mov         qword ptr [rdx],rcx
    mov         eax,r14d
    mov         rbx,qword ptr [rsp+label_00000000000000F0]
    add         rsp,label_0A0
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_0000000140019475_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_70
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         00000001400194B8
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    and         qword ptr [rbp-label_48],0
    lea         rdx,[rbp-label_50]
    mov         qword ptr [rbp-label_50],rcx
    mov         r9b,1
    lea         rcx,[rbp-label_40]
    mov         r8d,label_0A
    call        0000000140018CDC
    cmp         byte ptr [rbp-label_18],2
    mov         edi,eax
    jne         00000001400194EA
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          00000001400194FF
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          0000000140019514
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    lea         r11,[rsp+label_70]
    mov         eax,edi
    mov         rbx,qword ptr [r11+label_10]
    mov         rdi,qword ptr [r11+label_18]
    mov         rsp,r11
    pop         rbp
    ret
func_0000000140019527_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    sub         rdx,rcx
    test        r8,r8
    je          00000001400195B2
    test        ecx,7
    je          000000014001956D
    movzx       eax,byte ptr [rcx]
    cmp         al,byte ptr [rdx+rcx]
    jne         00000001400195B5
    inc         rcx
    dec         r8
    je          00000001400195B2
    test        al,al
    je          00000001400195B2
    test        rcx,7
    jne         0000000140019550
    mov         r11,label_8080808080808080
    mov         r10,label_0FEFEFEFEFEFEFEFF
    lea         eax,[rdx+rcx]
    and         eax,label_0FFF
    cmp         eax,label_0FF8
    ja          0000000140019550
    mov         rax,qword ptr [rcx]
    cmp         rax,qword ptr [rdx+rcx]
    jne         0000000140019550
    add         rcx,8
    sub         r8,8
    jbe         00000001400195B2
    lea         r9,[r10+rax]
    not         rax
    and         rax,r9
    test        r11,rax
    je          0000000140019581
    xor         eax,eax
    ret
func_00000001400195B4_end:
    sbb         rax,rax
    or          rax,1
    ret
func_00000001400195BC_end:
    int         3
    int         3
    int         3
    test        r8,r8
    jne         00000001400195DD
    xor         eax,eax
    ret
func_00000001400195C7_end:
    movzx       eax,word ptr [rcx]
    test        ax,ax
    je          00000001400195E3
    cmp         ax,word ptr [rdx]
    jne         00000001400195E3
    add         rcx,2
    add         rdx,2
    sub         r8,1
    jne         00000001400195C8
    movzx       eax,word ptr [rcx]
    movzx       ecx,word ptr [rdx]
    sub         eax,ecx
    ret
func_00000001400195EB_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rax,qword ptr [rdi]
    mov         rcx,qword ptr [rax]
    mov         rax,qword ptr [rcx+label_0000000000000088]
    lock inc    dword ptr [rax]
    mov         ecx,dword ptr [rbx]
    call        0000000140012CB4
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001962A_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rcx,qword ptr [rdi]
    xor         edx,edx
    mov         rcx,qword ptr [rcx]
    call        00000001400198FC
    nop
    mov         ecx,dword ptr [rbx]
    call        0000000140012CB4
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140019668_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rax,qword ptr [rdi+8]
    mov         rdx,qword ptr [rax]
    mov         rcx,qword ptr [rdi]
    mov         rdx,qword ptr [rdx]
    mov         rcx,qword ptr [rcx]
    call        00000001400198FC
    nop
    mov         ecx,dword ptr [rbx]
    call        0000000140012CB4
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400196B0_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rax,qword ptr [rdi]
    mov         rcx,qword ptr [rax]
    mov         rcx,qword ptr [rcx+label_0000000000000088]
    test        rcx,rcx
    je          0000000140019701
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rcx],eax
    cmp         eax,1
    jne         0000000140019701
    lea         rax,[label_000000014003C720]
    cmp         rcx,rax
    je          0000000140019701
    call        0000000140019CC4
    nop
    mov         ecx,dword ptr [rbx]
    call        0000000140012CB4
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140019712_end:
    int         3
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_50
    mov         qword ptr [rbp-label_28],rcx
    lea         rax,[rbp-label_28]
    mov         qword ptr [rbp-label_18],rax
    lea         r9,[rbp+label_20]
    mov         edx,1
    lea         r8,[rbp-label_18]
    mov         eax,5
    mov         dword ptr [rbp+label_20],eax
    mov         dword ptr [rbp+label_28],eax
    lea         rax,[rbp-label_28]
    mov         qword ptr [rbp-label_10],rax
    lea         rax,[rbp-label_20]
    mov         qword ptr [rbp-8],rax
    mov         eax,4
    mov         dword ptr [rbp-label_30],eax
    mov         dword ptr [rbp-label_2C],eax
    lea         rax,[label_000000014003E2D0]
    mov         qword ptr [rbp-label_20],rax
    mov         dword ptr [rcx+label_28],edx
    lea         rcx,[label_0000000140030050]
    mov         rax,qword ptr [rbp-label_28]
    mov         qword ptr [rax],rcx
    lea         rcx,[label_000000014003C720]
    mov         rax,qword ptr [rbp-label_28]
    mov         dword ptr [rax+label_00000000000003A8],edx
    mov         rax,qword ptr [rbp-label_28]
    mov         qword ptr [rax+label_0000000000000088],rcx
    lea         ecx,[rdx+label_42]
    mov         rax,qword ptr [rbp-label_28]
    lea         rdx,[rbp+label_28]
    mov         word ptr [rax+label_00000000000000BC],cx
    mov         rax,qword ptr [rbp-label_28]
    mov         word ptr [rax+label_00000000000001C2],cx
    lea         rcx,[rbp+label_18]
    mov         rax,qword ptr [rbp-label_28]
    and         qword ptr [rax+label_00000000000003A0],0
    call        00000001400195EC
    lea         r9,[rbp-label_30]
    lea         r8,[rbp-label_10]
    lea         rdx,[rbp-label_2C]
    lea         rcx,[rbp+label_18]
    call        000000014001966C
    add         rsp,label_50
    pop         rbp
    ret
func_00000001400197E0_end:
    int         3
    int         3
    int         3
    test        rcx,rcx
    je          0000000140019803
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    call        0000000140019804
    mov         rcx,rbx
    call        0000000140019CC4
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140019803_end:
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_40
    lea         rax,[rbp-label_18]
    mov         qword ptr [rbp-label_18],rcx
    mov         qword ptr [rbp-label_10],rax
    lea         rdx,[label_0000000140030050]
    mov         eax,5
    mov         dword ptr [rbp+label_20],eax
    mov         dword ptr [rbp+label_28],eax
    lea         rax,[rbp-label_18]
    mov         qword ptr [rbp-8],rax
    mov         eax,4
    mov         dword ptr [rbp-label_20],eax
    mov         dword ptr [rbp-label_1C],eax
    mov         rax,qword ptr [rcx]
    cmp         rax,rdx
    je          0000000140019852
    mov         rcx,rax
    call        0000000140019CC4
    mov         rcx,qword ptr [rbp-label_18]
    mov         rcx,qword ptr [rcx+label_70]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbp-label_18]
    mov         rcx,qword ptr [rcx+label_58]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbp-label_18]
    mov         rcx,qword ptr [rcx+label_60]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbp-label_18]
    mov         rcx,qword ptr [rcx+label_68]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbp-label_18]
    mov         rcx,qword ptr [rcx+label_48]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbp-label_18]
    mov         rcx,qword ptr [rcx+label_50]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbp-label_18]
    mov         rcx,qword ptr [rcx+label_78]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbp-label_18]
    mov         rcx,qword ptr [rcx+label_0000000000000080]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbp-label_18]
    mov         rcx,qword ptr [rcx+label_00000000000003C0]
    call        0000000140019CC4
    lea         r9,[rbp+label_20]
    lea         r8,[rbp-label_10]
    lea         rdx,[rbp+label_28]
    lea         rcx,[rbp+label_18]
    call        00000001400196B4
    lea         r9,[rbp-label_20]
    lea         r8,[rbp-8]
    lea         rdx,[rbp-label_1C]
    lea         rcx,[rbp+label_18]
    call        000000014001962C
    add         rsp,label_40
    pop         rbp
    ret
func_00000001400198F8_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,rcx
    mov         rbx,rdx
    mov         rcx,qword ptr [rcx+label_0000000000000090]
    test        rcx,rcx
    je          0000000140019944
    call        0000000140023688
    mov         rcx,qword ptr [rdi+label_0000000000000090]
    cmp         rcx,qword ptr [label_000000014003E2D0]
    je          0000000140019944
    lea         rax,[label_000000014003C2B0]
    cmp         rcx,rax
    je          0000000140019944
    cmp         dword ptr [rcx+label_10],0
    jne         0000000140019944
    call        0000000140023488
    mov         qword ptr [rdi+label_0000000000000090],rbx
    test        rbx,rbx
    je          0000000140019958
    mov         rcx,rbx
    call        00000001400233FC
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140019962_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    call label_000000014002C0F8
    mov         ecx,dword ptr [label_000000014003C2A0]
    xor         esi,esi
    mov         ebx,eax
    cmp         ecx,label_0FFFFFFFF
    je          00000001400199A5
    call        000000014001B80C
    mov         rdi,rax
    test        rax,rax
    je          000000014001999F
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    cmove       rdi,rsi
    jmp         0000000140019A11
    mov         ecx,dword ptr [label_000000014003C2A0]
    or          rdx,label_0FFFFFFFFFFFFFFFF
    call        000000014001B814
    test        eax,eax
    jne         00000001400199B7
    mov         rdi,rsi
    jmp         0000000140019A11
    mov         edx,label_3C8
    mov         ecx,1
    call        000000014001BDB0
    mov         ecx,dword ptr [label_000000014003C2A0]
    mov         rdi,rax
    test        rax,rax
    jne         00000001400199E4
    xor         edx,edx
    call        000000014001B814
    xor         ecx,ecx
    call        0000000140019CC4
    jmp         00000001400199B2
    mov         rdx,rdi
    call        000000014001B814
    test        eax,eax
    jne         0000000140019A02
    mov         ecx,dword ptr [label_000000014003C2A0]
    xor         edx,edx
    call        000000014001B814
    mov         rcx,rdi
    jmp         00000001400199DD
    mov         rcx,rdi
    call        0000000140019714
    xor         ecx,ecx
    call        0000000140019CC4
    mov         ecx,ebx
    call label_000000014002C100
    test        rdi,rdi
    je          0000000140019A31
    mov         rbx,qword ptr [rsp+label_30]
    mov         rax,rdi
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140019A30_end:
    call        0000000140015954
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         ecx,dword ptr [label_000000014003C2A0]
    cmp         ecx,label_0FFFFFFFF
    je          0000000140019A64
    call        000000014001B80C
    mov         rbx,rax
    test        rax,rax
    je          0000000140019A5E
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          0000000140019AD4
    jmp         0000000140019ACB
    mov         ecx,dword ptr [label_000000014003C2A0]
    or          rdx,label_0FFFFFFFFFFFFFFFF
    call        000000014001B814
    test        eax,eax
    je          0000000140019AD4
    mov         edx,label_3C8
    mov         ecx,1
    call        000000014001BDB0
    mov         ecx,dword ptr [label_000000014003C2A0]
    mov         rbx,rax
    test        rax,rax
    jne         0000000140019A9E
    xor         edx,edx
    call        000000014001B814
    xor         ecx,ecx
    call        0000000140019CC4
    jmp         0000000140019AD4
    mov         rdx,rbx
    call        000000014001B814
    test        eax,eax
    jne         0000000140019ABC
    mov         ecx,dword ptr [label_000000014003C2A0]
    xor         edx,edx
    call        000000014001B814
    mov         rcx,rbx
    jmp         0000000140019A97
    mov         rcx,rbx
    call        0000000140019714
    xor         ecx,ecx
    call        0000000140019CC4
    mov         rax,rbx
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140019AD3_end:
    call        0000000140015954
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    call label_000000014002C0F8
    mov         ecx,dword ptr [label_000000014003C2A0]
    xor         esi,esi
    mov         ebx,eax
    cmp         ecx,label_0FFFFFFFF
    je          0000000140019B1D
    call        000000014001B80C
    mov         rdi,rax
    test        rax,rax
    je          0000000140019B17
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    cmove       rdi,rsi
    jmp         0000000140019B89
    mov         ecx,dword ptr [label_000000014003C2A0]
    or          rdx,label_0FFFFFFFFFFFFFFFF
    call        000000014001B814
    test        eax,eax
    jne         0000000140019B2F
    mov         rdi,rsi
    jmp         0000000140019B89
    mov         edx,label_3C8
    mov         ecx,1
    call        000000014001BDB0
    mov         ecx,dword ptr [label_000000014003C2A0]
    mov         rdi,rax
    test        rax,rax
    jne         0000000140019B5C
    xor         edx,edx
    call        000000014001B814
    xor         ecx,ecx
    call        0000000140019CC4
    jmp         0000000140019B2A
    mov         rdx,rdi
    call        000000014001B814
    test        eax,eax
    jne         0000000140019B7A
    mov         ecx,dword ptr [label_000000014003C2A0]
    xor         edx,edx
    call        000000014001B814
    mov         rcx,rdi
    jmp         0000000140019B55
    mov         rcx,rdi
    call        0000000140019714
    xor         ecx,ecx
    call        0000000140019CC4
    mov         ecx,ebx
    call label_000000014002C100
    mov         rbx,qword ptr [rsp+label_30]
    mov         rax,rdi
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140019BA3_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         ecx,dword ptr [label_000000014003C2A0]
    xor         ebx,ebx
    mov         rsi,rdx
    cmp         ecx,label_0FFFFFFFF
    je          0000000140019BDE
    call        000000014001B80C
    mov         rdi,rax
    test        rax,rax
    je          0000000140019BD8
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          0000000140019C4F
    jmp         0000000140019C45
    mov         ecx,dword ptr [label_000000014003C2A0]
    or          rdx,label_0FFFFFFFFFFFFFFFF
    call        000000014001B814
    test        eax,eax
    je          0000000140019C4F
    mov         edx,label_3C8
    mov         ecx,1
    call        000000014001BDB0
    mov         ecx,dword ptr [label_000000014003C2A0]
    mov         rdi,rax
    test        rax,rax
    jne         0000000140019C18
    xor         edx,edx
    call        000000014001B814
    xor         ecx,ecx
    call        0000000140019CC4
    jmp         0000000140019C4F
    mov         rdx,rdi
    call        000000014001B814
    test        eax,eax
    jne         0000000140019C36
    mov         ecx,dword ptr [label_000000014003C2A0]
    xor         edx,edx
    call        000000014001B814
    mov         rcx,rdi
    jmp         0000000140019C11
    mov         rcx,rdi
    call        0000000140019714
    xor         ecx,ecx
    call        0000000140019CC4
    imul        rbx,rsi,label_3C8
    add         rbx,rdi
    mov         rsi,qword ptr [rsp+label_38]
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140019C61_end:
    int         3
    int         3
    sub         rsp,label_28
    lea         rcx,[label_00000001400197E4]
    call        000000014001B7FC
    mov         dword ptr [label_000000014003C2A0],eax
    cmp         eax,label_0FFFFFFFF
    jne         0000000140019C83
    xor         al,al
    jmp         0000000140019C98
    call        0000000140019ADC
    test        rax,rax
    jne         0000000140019C96
    xor         ecx,ecx
    call        0000000140019CA0
    jmp         0000000140019C7F
    mov         al,1
    add         rsp,label_28
    ret
func_0000000140019C9C_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    mov         ecx,dword ptr [label_000000014003C2A0]
    cmp         ecx,label_0FFFFFFFF
    je          0000000140019CBB
    call        000000014001B804
    or          dword ptr [label_000000014003C2A0],label_0FFFFFFFF
    mov         al,1
    add         rsp,label_28
    ret
func_0000000140019CC1_end:
    int         3
    int         3
    test        rcx,rcx
    je          0000000140019CFF
    push        rbx
    sub         rsp,label_20
    mov         r8,rcx
    xor         edx,edx
    mov         rcx,qword ptr [label_000000014003E9E8]
    call label_000000014002C180
    test        eax,eax
    jne         0000000140019CFA
    call label_000000014002C0F8
    mov         ecx,eax
    call        00000001400152A0
    mov         ebx,eax
    call        0000000140015374
    mov         dword ptr [rax],ebx
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140019CFF_end:
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    cmp         rcx,label_0FFFFFFFFFFFFFFE0
    ja          0000000140019D4B
    test        rcx,rcx
    mov         eax,1
    cmove       rbx,rax
    jmp         0000000140019D32
    call        0000000140018690
    test        eax,eax
    je          0000000140019D4B
    mov         rcx,rbx
    call        0000000140015F8C
    test        eax,eax
    je          0000000140019D4B
    mov         rcx,qword ptr [label_000000014003E9E8]
    mov         r8,rbx
    xor         edx,edx
    call label_000000014002C188
    test        rax,rax
    je          0000000140019D1D
    jmp         0000000140019D58
    call        0000000140015374
    mov         dword ptr [rax],label_0C
    xor         eax,eax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140019D5D_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rax,qword ptr [label_000000014003E2D0]
    mov         rbx,rdx
    cmp         qword ptr [rdx],rax
    je          0000000140019D8B
    mov         eax,dword ptr [rcx+label_00000000000003A8]
    test        dword ptr [label_000000014003C468],eax
    jne         0000000140019D8B
    call        0000000140023730
    mov         qword ptr [rbx],rax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140019D90_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    lea         rax,[label_000000014003E2D0]
    mov         rbx,rdx
    mov         rax,qword ptr [rax+r8*8]
    cmp         qword ptr [rdx],rax
    je          0000000140019DC3
    mov         eax,dword ptr [rcx+label_00000000000003A8]
    test        dword ptr [label_000000014003C468],eax
    jne         0000000140019DC3
    call        0000000140023730
    mov         qword ptr [rbx],rax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140019DC8_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rax,qword ptr [label_000000014003E9D0]
    mov         rbx,rdx
    cmp         qword ptr [rdx],rax
    je          0000000140019DF7
    mov         eax,dword ptr [rcx+label_00000000000003A8]
    test        dword ptr [label_000000014003C468],eax
    jne         0000000140019DF7
    call        000000014002179C
    mov         qword ptr [rbx],rax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140019DFC_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    lea         rax,[label_000000014003E9D0]
    mov         rbx,rdx
    mov         rax,qword ptr [rax+r8*8]
    cmp         qword ptr [rdx],rax
    je          0000000140019E2F
    mov         eax,dword ptr [rcx+label_00000000000003A8]
    test        dword ptr [label_000000014003C468],eax
    jne         0000000140019E2F
    call        000000014002179C
    mov         qword ptr [rbx],rax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140019E34_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_18],rbp
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_50
    mov         eax,dword ptr [rsp+label_00000000000000A8]
    xor         r11d,r11d
    test        eax,eax
    mov         byte ptr [rdx],r11b
    mov         edi,r11d
    mov         r10,r9
    cmovns      edi,eax
    mov         rbx,rdx
    mov         r14,rcx
    lea         eax,[rdi+label_0B]
    movsxd      r9,eax
    cmp         r8,r9
    ja          0000000140019EB0
    mov         rcx,qword ptr [rsp+label_00000000000000C8]
    lea         ebx,[r11+label_22]
    mov         qword ptr [rsp+label_28],rcx
    xor         r9d,r9d
    xor         r8d,r8d
    mov         qword ptr [rsp+label_20],r11
    xor         edx,edx
    mov         byte ptr [rcx+label_30],1
    mov         dword ptr [rcx+label_2C],ebx
    xor         ecx,ecx
    call        0000000140010530
    mov         eax,ebx
    jmp         000000014001A1B1
    mov         rax,qword ptr [rcx]
    mov         ecx,label_7FF
    shr         rax,label_34
    and         rax,rcx
    cmp         rax,rcx
    jne         0000000140019F49
    mov         rax,qword ptr [rsp+label_00000000000000C8]
    mov         r9,r10
    mov         qword ptr [rsp+label_48],rax
    mov         rcx,r14
    mov         eax,dword ptr [rsp+label_00000000000000C0]
    mov         dword ptr [rsp+label_40],eax
    mov         eax,dword ptr [rsp+label_00000000000000B8]
    mov         dword ptr [rsp+label_38],eax
    mov         rax,qword ptr [rsp+label_00000000000000A0]
    mov         byte ptr [rsp+label_30],r11b
    mov         dword ptr [rsp+label_28],edi
    mov         qword ptr [rsp+label_20],rax
    call        000000014001A1D0
    test        eax,eax
    je          0000000140019F18
    mov         byte ptr [rbx],0
    jmp         000000014001A1B1
    mov         edx,label_65
    mov         rcx,rbx
    call        00000001400297CC
    test        rax,rax
    je          000000014001A1AF
    mov         cl,byte ptr [rsp+label_00000000000000B0]
    xor         cl,1
    shl         cl,5
    add         cl,label_50
    mov         byte ptr [rax],cl
    mov         byte ptr [rax+3],0
    jmp         000000014001A1AF
    mov         eax,label_2D
    cmp         qword ptr [r14],r11
    jge         0000000140019F58
    mov         byte ptr [rdx],al
    inc         rbx
    mov         al,byte ptr [rsp+label_00000000000000B0]
    lea         r12,[rbx+1]
    xor         al,1
    mov         r15d,label_3FF
    movzx       r13d,al
    mov         r8d,label_30
    mov         ebp,r13d
    mov         rax,label_7FF0000000000000
    shl         ebp,5
    mov         r9,label_0FFFFFFFFFFFFF
    add         ebp,7
    test        qword ptr [r14],rax
    jne         0000000140019FAF
    mov         byte ptr [rbx],r8b
    mov         rax,qword ptr [r14]
    and         rax,r9
    neg         rax
    sbb         r15,r15
    and         r15d,label_3FE
    jmp         0000000140019FB2
    mov         byte ptr [rbx],label_31
    lea         rsi,[r12+1]
    test        edi,edi
    jne         0000000140019FC0
    mov         al,r11b
    jmp         0000000140019FF7
    mov         rbx,qword ptr [rsp+label_00000000000000C8]
    cmp         byte ptr [rbx+label_28],r11b
    jne         0000000140019FE7
    mov         rcx,rbx
    call        0000000140012780
    xor         r11d,r11d
    mov         r9,label_0FFFFFFFFFFFFF
    lea         r8d,[r11+label_30]
    mov         rax,qword ptr [rbx+label_18]
    mov         rcx,qword ptr [rax+label_00000000000000F8]
    mov         rax,qword ptr [rcx]
    mov         al,byte ptr [rax]
    mov         byte ptr [r12],al
    test        qword ptr [r14],r9
    jbe         000000014001A08E
    movzx       edx,r8w
    mov         r10,label_0F000000000000
    movzx       ecx,dx
    test        edi,edi
    jle         000000014001A045
    mov         rax,qword ptr [r14]
    and         rax,r10
    and         rax,r9
    shr         rax,cl
    add         ax,r8w
    cmp         ax,label_39
    jbe         000000014001A032
    add         ax,bp
    mov         byte ptr [rsi],al
    dec         edi
    inc         rsi
    shr         r10,4
    add         dx,label_0FFFC
    jns         000000014001A012
    jmp         000000014001A08E
    mov         r9d,dword ptr [rsp+label_00000000000000C0]
    movzx       r8d,cx
    mov         rcx,r14
    mov         rdx,r10
    call        000000014001A834
    xor         r11d,r11d
    test        al,al
    je          000000014001A0AF
    lea         rcx,[rsi-1]
    mov         dl,byte ptr [rcx]
    lea         eax,[rdx-label_46]
    test        al,label_0DF
    jne         000000014001A078
    mov         byte ptr [rcx],label_30
    dec         rcx
    jmp         000000014001A067
    cmp         rcx,r12
    je          000000014001A08B
    cmp         dl,label_39
    jne         000000014001A085
    add         dl,bpl
    inc         dl
    mov         byte ptr [rcx],dl
    jmp         000000014001A08E
    inc         byte ptr [rcx-1]
    test        edi,edi
    jle         000000014001A0AF
    mov         r8d,edi
    mov         rcx,rsi
    mov         ebx,edi
    mov         edi,label_30
    mov         dl,dil
    call        000000014002A110
    add         rsi,rbx
    xor         r11d,r11d
    jmp         000000014001A0B4
    mov         edi,label_30
    cmp         byte ptr [r12],r11b
    cmove       rsi,r12
    shl         r13b,5
    add         r13b,label_50
    mov         byte ptr [rsi],r13b
    lea         r9,[rsi+2]
    mov         rax,qword ptr [r14]
    shr         rax,label_34
    and         eax,label_7FF
    mov         ecx,eax
    sub         rcx,r15
    mov         rdx,rcx
    jns         000000014001A0E7
    mov         rcx,r15
    sub         rcx,rax
    test        rdx,rdx
    mov         eax,label_2B
    mov         r8,r9
    lea         edx,[rax+2]
    cmovs       eax,edx
    mov         byte ptr [rsi+1],al
    mov         byte ptr [r9],dil
    cmp         rcx,label_3E8
    jl          000000014001A13B
    mov         rax,label_20C49BA5E353F7CF
    lea         r8,[r9+1]
    imul        rcx
    sar         rdx,7
    mov         rax,rdx
    shr         rax,label_3F
    add         rdx,rax
    lea         eax,[rdi+rdx]
    mov         byte ptr [r9],al
    imul        rax,rdx,label_0FFFFFFFFFFFFFC18
    add         rcx,rax
    cmp         r8,r9
    jne         000000014001A141
    cmp         rcx,label_64
    jl          000000014001A174
    mov         rax,label_0A3D70A3D70A3D70B
    imul        rcx
    add         rdx,rcx
    sar         rdx,6
    mov         rax,rdx
    shr         rax,label_3F
    add         rdx,rax
    lea         eax,[rdi+rdx]
    mov         byte ptr [r8],al
    inc         r8
    imul        rax,rdx,label_0FFFFFFFFFFFFFF9C
    add         rcx,rax
    cmp         r8,r9
    jne         000000014001A17A
    cmp         rcx,label_0A
    jl          000000014001A1A5
    mov         rax,label_6666666666666667
    imul        rcx
    sar         rdx,2
    mov         rax,rdx
    shr         rax,label_3F
    add         rdx,rax
    lea         eax,[rdi+rdx]
    mov         byte ptr [r8],al
    inc         r8
    imul        rax,rdx,label_0FFFFFFFFFFFFFFF6
    add         rcx,rax
    add         cl,dil
    mov         byte ptr [r8],cl
    mov         byte ptr [r8+1],r11b
    xor         eax,eax
    lea         r11,[rsp+label_50]
    mov         rbx,qword ptr [r11+label_30]
    mov         rbp,qword ptr [r11+label_40]
    mov         rsi,qword ptr [r11+label_48]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_000000014001A1CE_end:
    int         3
    mov         r11,rsp
    mov         qword ptr [r11+8],rbx
    mov         qword ptr [r11+label_10],rbp
    mov         qword ptr [r11+label_18],rsi
    mov         qword ptr [r11+label_20],rdi
    push        r14
    sub         rsp,label_50
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         rsi,r8
    mov         ebp,dword ptr [rsp+label_0000000000000088]
    mov         rdi,rdx
    mov         rcx,qword ptr [rcx]
    mov         r8d,1
    mov         qword ptr [r11-label_30],rax
    mov         qword ptr [r11-label_38],r9
    lea         r9,[r11-label_18]
    lea         edx,[rbp+1]
    call        0000000140024FEC
    mov         r14,qword ptr [rsp+label_00000000000000A8]
    lea         r8d,[rbp+1]
    xor         r9d,r9d
    mov         qword ptr [rsp+label_30],r14
    cmp         dword ptr [rsp+label_40],label_2D
    mov         r10d,eax
    mov         eax,dword ptr [rsp+label_00000000000000A0]
    mov         rdx,rsi
    sete        r9b
    mov         dword ptr [rsp+label_28],eax
    xor         ecx,ecx
    mov         dword ptr [rsp+label_20],r10d
    test        ebp,ebp
    setg        cl
    sub         rdx,rcx
    sub         rdx,r9
    cmp         rsi,label_0FFFFFFFFFFFFFFFF
    cmove       rdx,rsi
    add         rcx,r9
    add         rcx,rdi
    lea         r9,[rsp+label_40]
    call        0000000140024EDC
    test        eax,eax
    je          000000014001A27C
    mov         byte ptr [rdi],0
    jmp         000000014001A2B1
    mov         r9b,byte ptr [rsp+label_0000000000000090]
    lea         rax,[rsp+label_40]
    mov         qword ptr [rsp+label_38],r14
    mov         r8d,ebp
    mov         byte ptr [rsp+label_30],0
    mov         rdx,rsi
    mov         qword ptr [rsp+label_28],rax
    mov         rcx,rdi
    mov         eax,dword ptr [rsp+label_0000000000000098]
    mov         dword ptr [rsp+label_20],eax
    call        000000014001A2CC
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_50
    pop         r14
    ret
func_000000014001A2CB_end:
    mov         r11,rsp
    mov         qword ptr [r11+8],rbx
    mov         qword ptr [r11+label_10],rbp
    mov         qword ptr [r11+label_18],rsi
    mov         qword ptr [r11+label_20],rdi
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    xor         eax,eax
    movsxd      rbp,r8d
    test        r8d,r8d
    mov         r13b,r9b
    mov         r15,rdx
    mov         rdi,rcx
    cmovg       eax,ebp
    add         eax,9
    cdqe
    cmp         rdx,rax
    ja          000000014001A354
    mov         rcx,qword ptr [rsp+label_0000000000000088]
    mov         ebx,label_22
    mov         qword ptr [r11-label_20],rcx
    xor         r9d,r9d
    and         qword ptr [r11-label_28],0
    xor         r8d,r8d
    xor         edx,edx
    mov         byte ptr [rcx+label_30],1
    mov         dword ptr [rcx+label_2C],ebx
    xor         ecx,ecx
    call        0000000140010530
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    mov         rdi,qword ptr [rsp+label_68]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    ret
func_000000014001A353_end:
    cmp         byte ptr [rsp+label_0000000000000080],0
    mov         rsi,qword ptr [rsp+label_78]
    je          000000014001A38D
    xor         edx,edx
    cmp         dword ptr [rsi],label_2D
    sete        dl
    add         rdx,rdi
    test        r8d,r8d
    jle         000000014001A38D
    or          r8,label_0FFFFFFFFFFFFFFFF
    inc         r8
    cmp         byte ptr [rdx+r8],0
    jne         000000014001A377
    inc         r8
    lea         rcx,[rdx+1]
    call        0000000140029A70
    cmp         dword ptr [rsi],label_2D
    mov         rbx,rdi
    jne         000000014001A39C
    mov         byte ptr [rdi],label_2D
    lea         rbx,[rdi+1]
    test        ebp,ebp
    jle         000000014001A3D1
    mov         al,byte ptr [rbx+1]
    mov         r14,qword ptr [rsp+label_0000000000000088]
    mov         byte ptr [rbx],al
    inc         rbx
    cmp         byte ptr [r14+label_28],0
    jne         000000014001A3BF
    mov         rcx,r14
    call        0000000140012780
    mov         rax,qword ptr [r14+label_18]
    mov         rcx,qword ptr [rax+label_00000000000000F8]
    mov         rax,qword ptr [rcx]
    mov         cl,byte ptr [rax]
    mov         byte ptr [rbx],cl
    movzx       ecx,byte ptr [rsp+label_0000000000000080]
    lea         r8,[label_0000000140030C0C]
    xor         rcx,1
    add         rbx,rbp
    add         rbx,rcx
    sub         rdi,rbx
    mov         rcx,rbx
    cmp         r15,label_0FFFFFFFFFFFFFFFF
    lea         rdx,[r15+rdi]
    cmove       rdx,r15
    call        0000000140018C7C
    test        eax,eax
    jne         000000014001A497
    lea         rcx,[rbx+2]
    test        r13b,r13b
    je          000000014001A415
    mov         byte ptr [rbx],label_45
    mov         rax,qword ptr [rsi+8]
    cmp         byte ptr [rax],label_30
    je          000000014001A475
    mov         r8d,dword ptr [rsi+4]
    sub         r8d,1
    jns         000000014001A42F
    neg         r8d
    mov         byte ptr [rbx+1],label_2D
    cmp         r8d,label_64
    jl          000000014001A450
    mov         eax,label_51EB851F
    imul        r8d
    sar         edx,5
    mov         eax,edx
    shr         eax,label_1F
    add         edx,eax
    add         byte ptr [rbx+2],dl
    imul        eax,edx,label_0FFFFFF9C
    add         r8d,eax
    cmp         r8d,label_0A
    jl          000000014001A471
    mov         eax,label_66666667
    imul        r8d
    sar         edx,2
    mov         eax,edx
    shr         eax,label_1F
    add         edx,eax
    add         byte ptr [rbx+3],dl
    imul        eax,edx,label_0FFFFFFF6
    add         r8d,eax
    add         byte ptr [rbx+4],r8b
    cmp         dword ptr [rsp+label_70],2
    jne         000000014001A490
    cmp         byte ptr [rcx],label_30
    jne         000000014001A490
    lea         rdx,[rcx+1]
    mov         r8d,3
    call        0000000140029A70
    xor         eax,eax
    jmp         000000014001A335
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    int         3
    mov         r11,rsp
    mov         qword ptr [r11+8],rbx
    mov         qword ptr [r11+label_10],rbp
    mov         qword ptr [r11+label_18],rsi
    push        rdi
    sub         rsp,label_50
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         rdi,r8
    mov         esi,dword ptr [rsp+label_0000000000000088]
    mov         rbx,rdx
    mov         rcx,qword ptr [rcx]
    xorps       xmm0,xmm0
    mov         qword ptr [r11-label_30],rax
    xor         r8d,r8d
    mov         qword ptr [r11-label_38],r9
    mov         edx,esi
    lea         r9,[r11-label_18]
    movups      xmmword ptr [rsp+label_40],xmm0
    call        0000000140024FEC
    mov         r8d,dword ptr [rsp+label_44]
    xor         r9d,r9d
    cmp         dword ptr [rsp+label_40],label_2D
    mov         r10d,eax
    mov         eax,dword ptr [rsp+label_0000000000000090]
    mov         rdx,rdi
    mov         rbp,qword ptr [rsp+label_0000000000000098]
    sete        r9b
    sub         rdx,r9
    mov         qword ptr [rsp+label_30],rbp
    add         r8d,esi
    mov         dword ptr [rsp+label_28],eax
    cmp         rdi,label_0FFFFFFFFFFFFFFFF
    mov         dword ptr [rsp+label_20],r10d
    lea         rcx,[r9+rbx]
    cmove       rdx,rdi
    lea         r9,[rsp+label_40]
    call        0000000140024EDC
    test        eax,eax
    je          000000014001A553
    mov         byte ptr [rbx],0
    jmp         000000014001A570
    mov         qword ptr [rsp+label_28],rbp
    lea         r9,[rsp+label_40]
    mov         r8d,esi
    mov         byte ptr [rsp+label_20],0
    mov         rdx,rdi
    mov         rcx,rbx
    call        000000014001A588
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    add         rsp,label_50
    pop         rdi
    ret
func_000000014001A584_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_20
    cmp         byte ptr [rsp+label_60],0
    mov         rbx,rcx
    movsxd      rcx,dword ptr [r9+4]
    mov         r14,r9
    mov         ebp,r8d
    je          000000014001A5CF
    lea         eax,[rcx-1]
    cmp         eax,r8d
    jne         000000014001A5CF
    xor         eax,eax
    cmp         dword ptr [r9],label_2D
    sete        al
    add         rax,rbx
    mov         word ptr [rcx+rax-1],label_30
    cmp         dword ptr [r9],label_2D
    jne         000000014001A5DB
    mov         byte ptr [rbx],label_2D
    inc         rbx
    movsxd      rax,dword ptr [r9+4]
    or          rdi,label_0FFFFFFFFFFFFFFFF
    test        eax,eax
    jg          000000014001A630
    jne         000000014001A5F6
    mov         rax,qword ptr [r9+8]
    cmp         byte ptr [rax],label_30
    jne         000000014001A5F6
    mov         al,1
    jmp         000000014001A5F8
    xor         al,al
    cmp         byte ptr [rsp+label_60],0
    je          000000014001A609
    test        al,al
    je          000000014001A609
    lea         rsi,[rbx+1]
    jmp         000000014001A628
    lea         rsi,[rbx+1]
    mov         r8,rdi
    inc         r8
    cmp         byte ptr [rbx+r8],0
    jne         000000014001A610
    inc         r8
    mov         rdx,rbx
    mov         rcx,rsi
    call        0000000140029A70
    mov         byte ptr [rbx],label_30
    mov         rbx,rsi
    jmp         000000014001A633
    add         rbx,rax
    test        ebp,ebp
    jle         000000014001A6C3
    lea         rsi,[rbx+1]
    mov         r8,rdi
    inc         r8
    cmp         byte ptr [rbx+r8],0
    jne         000000014001A642
    inc         r8
    mov         rdx,rbx
    mov         rcx,rsi
    call        0000000140029A70
    mov         r15,qword ptr [rsp+label_68]
    cmp         byte ptr [r15+label_28],0
    jne         000000014001A66E
    mov         rcx,r15
    call        0000000140012780
    mov         rax,qword ptr [r15+label_18]
    mov         rcx,qword ptr [rax+label_00000000000000F8]
    mov         rax,qword ptr [rcx]
    mov         cl,byte ptr [rax]
    mov         byte ptr [rbx],cl
    mov         eax,dword ptr [r14+4]
    test        eax,eax
    jns         000000014001A6C3
    neg         eax
    cmp         byte ptr [rsp+label_60],0
    jne         000000014001A695
    cmp         eax,ebp
    jge         000000014001A697
    mov         ebp,eax
    movsxd      rbx,ebp
    inc         rdi
    cmp         byte ptr [rsi+rdi],0
    jne         000000014001A69A
    lea         r8,[rdi+1]
    mov         rdx,rsi
    lea         rcx,[rbx+rsi]
    call        0000000140029A70
    mov         r8,rbx
    mov         edx,label_30
    mov         rcx,rsi
    call        000000014002A110
    mov         rbx,qword ptr [rsp+label_40]
    xor         eax,eax
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         rdi
    ret
func_000000014001A6DD_end:
    int         3
    int         3
    mov         r11,rsp
    mov         qword ptr [r11+8],rbx
    mov         qword ptr [r11+label_10],rbp
    mov         qword ptr [r11+label_18],rdi
    mov         qword ptr [r11+label_20],r14
    push        r15
    sub         rsp,label_50
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         rbp,r8
    mov         rcx,qword ptr [rcx]
    mov         rdi,rdx
    mov         edx,dword ptr [rsp+label_0000000000000088]
    xorps       xmm0,xmm0
    mov         qword ptr [r11-label_30],rax
    xor         r8d,r8d
    mov         qword ptr [r11-label_38],r9
    lea         r9,[r11-label_18]
    movups      xmmword ptr [rsp+label_40],xmm0
    call        0000000140024FEC
    mov         r15d,dword ptr [rsp+label_44]
    xor         r8d,r8d
    cmp         dword ptr [rsp+label_40],label_2D
    mov         r9d,eax
    mov         eax,dword ptr [rsp+label_00000000000000A0]
    mov         rdx,rbp
    mov         r14,qword ptr [rsp+label_00000000000000A8]
    sete        r8b
    sub         rdx,r8
    mov         qword ptr [rsp+label_30],r14
    mov         dword ptr [rsp+label_28],eax
    dec         r15d
    mov         dword ptr [rsp+label_20],r9d
    cmp         rbp,label_0FFFFFFFFFFFFFFFF
    lea         rbx,[r8+rdi]
    mov         r8d,dword ptr [rsp+label_0000000000000088]
    cmove       rdx,rbp
    lea         r9,[rsp+label_40]
    mov         rcx,rbx
    call        0000000140024EDC
    test        eax,eax
    je          000000014001A794
    mov         byte ptr [rdi],0
    jmp         000000014001A817
    mov         eax,dword ptr [rsp+label_44]
    dec         eax
    cmp         eax,label_0FFFFFFFC
    jl          000000014001A7DD
    cmp         eax,dword ptr [rsp+label_0000000000000088]
    jge         000000014001A7DD
    cmp         r15d,eax
    jge         000000014001A7B9
    mov         al,byte ptr [rbx]
    inc         rbx
    test        al,al
    jne         000000014001A7AD
    mov         byte ptr [rbx-2],al
    mov         r8d,dword ptr [rsp+label_0000000000000088]
    lea         r9,[rsp+label_40]
    mov         qword ptr [rsp+label_28],r14
    mov         rdx,rbp
    mov         rcx,rdi
    mov         byte ptr [rsp+label_20],1
    call        000000014001A588
    jmp         000000014001A817
    mov         r9b,byte ptr [rsp+label_0000000000000090]
    lea         rax,[rsp+label_40]
    mov         r8d,dword ptr [rsp+label_0000000000000088]
    mov         rdx,rbp
    mov         qword ptr [rsp+label_38],r14
    mov         rcx,rdi
    mov         byte ptr [rsp+label_30],1
    mov         qword ptr [rsp+label_28],rax
    mov         eax,dword ptr [rsp+label_0000000000000098]
    mov         dword ptr [rsp+label_20],eax
    call        000000014001A2CC
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rdi,qword ptr [rsp+label_70]
    mov         r14,qword ptr [rsp+label_78]
    add         rsp,label_50
    pop         r15
    ret
func_000000014001A831_end:
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_20
    mov         rbx,qword ptr [rcx]
    mov         r12,label_0FFFFFFFFFFFFF
    and         rbx,rdx
    movsx       r14d,r8w
    and         rbx,r12
    mov         rdi,rcx
    mov         ecx,r14d
    xor         r15d,r15d
    shr         rbx,cl
    mov         rbp,rdx
    test        r9d,r9d
    jne         000000014001A888
    cmp         bx,8
    setae       al
    jmp         000000014001A92B
    call        000000014001FD48
    test        eax,eax
    jne         000000014001A903
    mov         r8,qword ptr [rdi]
    mov         ecx,r14d
    mov         rax,r8
    and         rax,rbp
    and         rax,r12
    shr         rax,cl
    cmp         ax,8
    jbe         000000014001A8B0
    mov         edx,1
    jmp         000000014001A8FF
    jae         000000014001A8B7
    mov         dl,r15b
    jmp         000000014001A8FF
    mov         edx,1
    mov         eax,edx
    shl         rax,cl
    sub         rax,rdx
    and         rax,r8
    test        r12,rax
    jne         000000014001A8FF
    cmp         r14d,label_30
    je          000000014001A8EB
    shr         r8,4
    mov         rax,label_0FFFFFFFFFFFF
    and         r8,rbp
    and         r8,rax
    shr         r8,cl
    jmp         000000014001A8FC
    mov         rax,label_7FF0000000000000
    test        rax,r8
    setne       r8b
    and         dl,r8b
    mov         al,dl
    jmp         000000014001A92B
    cmp         eax,label_200
    jne         000000014001A916
    test        bx,bx
    je          000000014001A8B2
    cmp         qword ptr [rdi],r15
    jl          000000014001A8B2
    jmp         000000014001A8A9
    cmp         eax,label_100
    jne         000000014001A929
    test        bx,bx
    je          000000014001A8B2
    cmp         qword ptr [rdi],r15
    jge         000000014001A8B2
    jmp         000000014001A8A9
    xor         al,al
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r12
    ret
func_000000014001A949_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_50
    mov         r11,r8
    mov         r10,rdx
    mov         rdi,rcx
    test        rdx,rdx
    jne         000000014001A99C
    mov         rcx,qword ptr [rsp+label_00000000000000A8]
    lea         ebx,[rdx+label_16]
    mov         qword ptr [rsp+label_28],rcx
    mov         byte ptr [rcx+label_30],1
    mov         dword ptr [rcx+label_2C],ebx
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    mov         eax,ebx
    jmp         000000014001AC0B
    test        r11,r11
    jne         000000014001A9BC
    mov         rax,qword ptr [rsp+label_00000000000000A8]
    mov         ebx,label_16
    mov         qword ptr [rsp+label_28],rax
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],ebx
    jmp         000000014001A980
    test        r9,r9
    je          000000014001A9A1
    mov         r8,qword ptr [rsp+label_0000000000000080]
    test        r8,r8
    je          000000014001A9A1
    mov         ecx,dword ptr [rsp+label_0000000000000088]
    cmp         ecx,label_41
    je          000000014001A9E7
    lea         eax,[rcx-label_45]
    cmp         eax,2
    jbe         000000014001A9E7
    xor         sil,sil
    jmp         000000014001A9EA
    mov         sil,1
    mov         rbx,qword ptr [rsp+label_0000000000000098]
    test        bl,8
    jne         000000014001AAE1
    mov         rdx,qword ptr [rdi]
    mov         rax,rdx
    shr         rax,label_34
    and         eax,label_7FF
    cmp         rax,label_7FF
    jne         000000014001AAE1
    mov         rcx,label_0FFFFFFFFFFFFF
    mov         rax,rdx
    mov         r8d,label_0C
    and         rax,rcx
    jne         000000014001AA32
    xor         ecx,ecx
    jmp         000000014001AA5F
    mov         rcx,label_8000000000000
    test        rdx,rdx
    jns         000000014001AA4B
    cmp         rax,rcx
    jne         000000014001AA4B
    mov         rcx,r8
    jmp         000000014001AA5F
    mov         rax,rdx
    and         rax,rcx
    neg         rax
    sbb         rcx,rcx
    and         rcx,label_0FFFFFFFFFFFFFFFC
    add         rcx,8
    shr         rdx,label_3F
    lea         rax,[rdx+4]
    cmp         r11,rax
    jae         000000014001AA72
    mov         byte ptr [r10],0
    jmp         000000014001AAD9
    or          r8,label_0FFFFFFFFFFFFFFFF
    test        dl,dl
    je          000000014001AA8D
    mov         byte ptr [r10],label_2D
    inc         r10
    mov         byte ptr [r10],0
    cmp         r11,r8
    je          000000014001AA8D
    dec         r11
    movzx       edx,sil
    lea         rbx,[label_0000000140030B40]
    xor         edx,1
    add         edx,edx
    mov         eax,edx
    add         rax,rcx
    mov         r9,qword ptr [rbx+rax*8]
    inc         r8
    cmp         byte ptr [r9+r8],0
    jne         000000014001AAA6
    xor         eax,eax
    cmp         r11,r8
    setbe       al
    lea         r8d,[rdx+rax]
    mov         rdx,r11
    add         r8,rcx
    mov         rcx,r10
    mov         r8,qword ptr [rbx+r8*8]
    call        0000000140018C7C
    test        eax,eax
    jne         000000014001AC1B
    xor         r8d,r8d
    mov         eax,r8d
    jmp         000000014001AC0B
    mov         rdx,rbx
    and         bl,label_20
    shr         rdx,4
    and         edx,1
    or          edx,2
    neg         bl
    sbb         ebx,ebx
    and         ebx,dword ptr [rsp+label_00000000000000A0]
    sub         ecx,label_41
    je          000000014001ABD3
    sub         ecx,4
    je          000000014001AB99
    sub         ecx,1
    je          000000014001AB68
    sub         ecx,1
    je          000000014001AB2B
    sub         ecx,label_1A
    je          000000014001ABD3
    sub         ecx,4
    je          000000014001AB99
    cmp         ecx,1
    je          000000014001AB68
    mov         rax,qword ptr [rsp+label_00000000000000A8]
    mov         rcx,rdi
    mov         qword ptr [rsp+label_48],rax
    mov         eax,dword ptr [rsp+label_0000000000000090]
    mov         dword ptr [rsp+label_40],ebx
    mov         dword ptr [rsp+label_38],edx
    mov         rdx,r10
    mov         byte ptr [rsp+label_30],sil
    mov         dword ptr [rsp+label_28],eax
    mov         qword ptr [rsp+label_20],r8
    mov         r8,r11
    call        000000014001A6E0
    jmp         000000014001AC0B
    mov         rax,qword ptr [rsp+label_00000000000000A8]
    mov         rdx,r10
    mov         qword ptr [rsp+label_38],rax
    mov         rcx,rdi
    mov         eax,dword ptr [rsp+label_0000000000000090]
    mov         dword ptr [rsp+label_30],ebx
    mov         dword ptr [rsp+label_28],eax
    mov         qword ptr [rsp+label_20],r8
    mov         r8,r11
    call        000000014001A4B0
    jmp         000000014001AC0B
    mov         rax,qword ptr [rsp+label_00000000000000A8]
    mov         rcx,rdi
    mov         qword ptr [rsp+label_48],rax
    mov         eax,dword ptr [rsp+label_0000000000000090]
    mov         dword ptr [rsp+label_40],ebx
    mov         dword ptr [rsp+label_38],edx
    mov         rdx,r10
    mov         byte ptr [rsp+label_30],sil
    mov         dword ptr [rsp+label_28],eax
    mov         qword ptr [rsp+label_20],r8
    mov         r8,r11
    call        000000014001A1D0
    jmp         000000014001AC0B
    mov         rax,qword ptr [rsp+label_00000000000000A8]
    mov         rcx,rdi
    mov         qword ptr [rsp+label_48],rax
    mov         eax,dword ptr [rsp+label_0000000000000090]
    mov         dword ptr [rsp+label_40],ebx
    mov         dword ptr [rsp+label_38],edx
    mov         rdx,r10
    mov         byte ptr [rsp+label_30],sil
    mov         dword ptr [rsp+label_28],eax
    mov         qword ptr [rsp+label_20],r8
    mov         r8,r11
    call        0000000140019E38
    mov         rbx,qword ptr [rsp+label_60]
    mov         rsi,qword ptr [rsp+label_68]
    add         rsp,label_50
    pop         rdi
    ret
func_000000014001AC1A_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_18],rbp
    mov         word ptr [rsp+label_20],r9w
    push        rsi
    push        rdi
    push        r14
    sub         rsp,label_40
    xor         ebx,ebx
    mov         rbp,r8
    mov         r14,rdx
    mov         rsi,rcx
    test        rdx,rdx
    jne         000000014001AC71
    test        r8,r8
    je          000000014001AC71
    test        rcx,rcx
    je          000000014001AD8E
    mov         dword ptr [rcx],ebx
    jmp         000000014001AD8E
    test        rsi,rsi
    je          000000014001AC79
    or          dword ptr [rcx],label_0FFFFFFFF
    mov         rdi,qword ptr [rsp+label_0000000000000080]
    cmp         rbp,label_7FFFFFFF
    jbe         000000014001AC94
    mov         esi,label_16
    jmp         000000014001ADBD
    cmp         byte ptr [rdi+label_28],bl
    jne         000000014001ACA7
    mov         rcx,rdi
    call        0000000140012780
    movzx       r9d,word ptr [rsp+label_78]
    mov         rax,qword ptr [rdi+label_18]
    mov         ecx,dword ptr [rax+label_0C]
    cmp         ecx,label_0FDE9
    jne         000000014001ACEB
    movzx       edx,r9w
    lea         r8,[rsp+label_68]
    mov         r9,rdi
    mov         qword ptr [rsp+label_68],rbx
    mov         rcx,r14
    call        000000014002627C
    test        rsi,rsi
    je          000000014001ACD6
    mov         dword ptr [rsi],eax
    cmp         eax,4
    jle         000000014001AD8E
    cmp         byte ptr [rdi+label_30],bl
    je          000000014001ACE7
    mov         ebx,dword ptr [rdi+label_2C]
    mov         eax,ebx
    jmp         000000014001AD22
    cmp         qword ptr [rax+label_0000000000000138],rbx
    jne         000000014001AD4F
    mov         eax,label_0FF
    cmp         r9w,ax
    jbe         000000014001AD35
    test        r14,r14
    je          000000014001AD16
    test        rbp,rbp
    je          000000014001AD16
    mov         r8,rbp
    xor         edx,edx
    mov         rcx,r14
    call        000000014002A110
    mov         eax,label_2A
    mov         dword ptr [rdi+label_2C],eax
    mov         byte ptr [rdi+label_30],1
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_70]
    add         rsp,label_40
    pop         r14
    pop         rdi
    pop         rsi
    ret
func_000000014001AD34_end:
    test        r14,r14
    je          000000014001AD42
    test        rbp,rbp
    je          000000014001ADB8
    mov         byte ptr [r14],r9b
    test        rsi,rsi
    je          000000014001AD8E
    mov         dword ptr [rsi],1
    jmp         000000014001AD8E
    lea         rax,[rsp+label_68]
    mov         dword ptr [rsp+label_68],ebx
    mov         qword ptr [rsp+label_38],rax
    lea         r8,[rsp+label_78]
    mov         qword ptr [rsp+label_30],rbx
    mov         r9d,1
    mov         dword ptr [rsp+label_28],ebp
    xor         edx,edx
    mov         qword ptr [rsp+label_20],r14
    call        0000000140020100
    test        eax,eax
    je          000000014001AD92
    cmp         dword ptr [rsp+label_68],ebx
    jne         000000014001AD16
    test        rsi,rsi
    je          000000014001AD8E
    mov         dword ptr [rsi],eax
    xor         eax,eax
    jmp         000000014001AD22
    call label_000000014002C0F8
    cmp         eax,label_7A
    jne         000000014001AD16
    test        r14,r14
    je          000000014001ADB8
    test        rbp,rbp
    je          000000014001ADB8
    mov         r8,rbp
    xor         edx,edx
    mov         rcx,r14
    call        000000014002A110
    mov         esi,label_22
    mov         dword ptr [rdi+label_2C],esi
    xor         r9d,r9d
    mov         qword ptr [rsp+label_28],rdi
    xor         r8d,r8d
    xor         edx,edx
    mov         byte ptr [rdi+label_30],1
    xor         ecx,ecx
    mov         qword ptr [rsp+label_20],rbx
    call        0000000140010530
    mov         eax,esi
    jmp         000000014001AD22
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_30
    xor         r14d,r14d
    mov         rbx,r9
    mov         rbp,r8
    mov         rsi,rdx
    mov         rdi,rcx
    test        rdx,rdx
    je          000000014001AF38
    test        r8,r8
    je          000000014001AF38
    cmp         byte ptr [rdx],r14b
    jne         000000014001AE35
    test        rcx,rcx
    je          000000014001AF3F
    mov         word ptr [rcx],r14w
    jmp         000000014001AF3F
    cmp         byte ptr [r9+label_28],r14b
    jne         000000014001AE43
    mov         rcx,rbx
    call        0000000140012780
    mov         rdx,qword ptr [rbx+label_18]
    mov         r10d,dword ptr [rdx+label_0C]
    cmp         r10d,label_0FDE9
    jne         000000014001AE7B
    lea         r9,[label_000000014003E2D8]
    mov         qword ptr [rsp+label_20],rbx
    mov         r8,rbp
    mov         rdx,rsi
    mov         rcx,rdi
    call        0000000140026320
    or          ecx,label_0FFFFFFFF
    test        eax,eax
    cmovs       eax,ecx
    jmp         000000014001AF41
    cmp         qword ptr [rdx+label_0000000000000138],r14
    jne         000000014001AE98
    test        rdi,rdi
    je          000000014001AF31
    movzx       eax,byte ptr [rsi]
    mov         word ptr [rdi],ax
    jmp         000000014001AF31
    movzx       ecx,byte ptr [rsi]
    mov         rax,qword ptr [rdx]
    cmp         word ptr [rax+rcx*2],r14w
    jge         000000014001AF06
    mov         r9d,dword ptr [rdx+8]
    cmp         r9d,1
    jle         000000014001AEDA
    cmp         ebp,r9d
    jl          000000014001AEDA
    mov         eax,r14d
    test        rdi,rdi
    mov         r8,rsi
    mov         edx,9
    setne       al
    mov         ecx,r10d
    mov         dword ptr [rsp+label_28],eax
    mov         qword ptr [rsp+label_20],rdi
    call        0000000140020070
    test        eax,eax
    jne         000000014001AEED
    mov         rax,qword ptr [rbx+label_18]
    movsxd      rcx,dword ptr [rax+8]
    cmp         rbp,rcx
    jb          000000014001AEF6
    cmp         byte ptr [rsi+1],r14b
    je          000000014001AEF6
    mov         rax,qword ptr [rbx+label_18]
    mov         eax,dword ptr [rax+8]
    jmp         000000014001AF41
    mov         byte ptr [rbx+label_30],1
    or          eax,label_0FFFFFFFF
    mov         dword ptr [rbx+label_2C],label_2A
    jmp         000000014001AF41
    mov         eax,r14d
    mov         r9d,1
    test        rdi,rdi
    mov         r8,rsi
    mov         ecx,r10d
    setne       al
    mov         dword ptr [rsp+label_28],eax
    lea         edx,[r9+8]
    mov         qword ptr [rsp+label_20],rdi
    call        0000000140020070
    test        eax,eax
    je          000000014001AEF6
    mov         eax,1
    jmp         000000014001AF41
    mov         qword ptr [label_000000014003E2D8],r14
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_30
    pop         r14
    ret
func_000000014001AF5B_end:
    sub         rsp,label_28
    test        rcx,rcx
    jne         000000014001AF7A
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    jmp         000000014001AF7E
    mov         eax,dword ptr [rcx+label_18]
    nop
    add         rsp,label_28
    ret
func_000000014001AF82_end:
    int         3
    mov         rcx,qword ptr [label_000000014003C040]
    xor         eax,eax
    or          rcx,1
    cmp         qword ptr [label_000000014003E2E0],rcx
    sete        al
    ret
func_000000014001AF9B_end:
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         ecx,2
    call        0000000140013A2C
    cmp         rbx,rax
    je          000000014001AFDD
    mov         ecx,1
    call        0000000140013A2C
    cmp         rbx,rax
    jne         000000014001AFD9
    mov         rcx,rbx
    call        000000014001AF5C
    mov         ecx,eax
    call        0000000140026508
    test        eax,eax
    setne       al
    jmp         000000014001AFDF
    xor         al,al
    jmp         000000014001AFDF
    mov         al,1
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001AFE4_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    call        000000014001AF9C
    test        al,al
    je          000000014001B0A2
    mov         ecx,1
    call        0000000140013A2C
    cmp         rbx,rax
    jne         000000014001B01A
    lea         rdi,[label_000000014003E2E8]
    jmp         000000014001B030
    mov         ecx,2
    call        0000000140013A2C
    cmp         rbx,rax
    jne         000000014001B0A2
    lea         rdi,[label_000000014003E2F0]
    inc         dword ptr [label_000000014003E0F8]
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        eax,label_4C0
    jne         000000014001B0A2
    lock or     dword ptr [rbx+label_14],label_282
    cmp         qword ptr [rdi],0
    jne         000000014001B063
    mov         ecx,label_1000
    call        0000000140019D00
    xor         ecx,ecx
    mov         qword ptr [rdi],rax
    call        0000000140019CC4
    mov         rcx,qword ptr [rdi]
    test        rcx,rcx
    jne         000000014001B088
    lea         rcx,[rbx+label_1C]
    mov         dword ptr [rbx+label_10],2
    mov         qword ptr [rbx+8],rcx
    mov         qword ptr [rbx],rcx
    mov         dword ptr [rbx+label_20],2
    mov         al,1
    jmp         000000014001B0A4
    mov         qword ptr [rbx+8],rcx
    mov         rax,qword ptr [rdi]
    mov         qword ptr [rbx],rax
    mov         dword ptr [rbx+label_10],label_1000
    mov         dword ptr [rbx+label_20],label_1000
    jmp         000000014001B084
    xor         al,al
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001B0AE_end:
    int         3
    test        cl,cl
    je          000000014001B0EC
    push        rbx
    sub         rsp,label_20
    mov         eax,dword ptr [rdx+label_14]
    mov         rbx,rdx
    shr         eax,9
    nop
    test        al,1
    je          000000014001B0E7
    mov         rdx,r8
    mov         rcx,rbx
    call        0000000140013ED8
    lock and    dword ptr [rbx+label_14],label_0FFFFFD7F
    and         dword ptr [rbx+label_20],0
    and         qword ptr [rbx+8],0
    and         qword ptr [rbx],0
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001B0EC_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_90
    lea         rcx,[rax-label_78]
    call label_000000014002C0C8
    xor         r14d,r14d
    cmp         word ptr [rsp+label_62],r14w
    je          000000014001B1BF
    mov         rax,qword ptr [rsp+label_68]
    test        rax,rax
    je          000000014001B1BF
    movsxd      rbx,dword ptr [rax]
    lea         rsi,[rax+4]
    mov         edi,label_2000
    add         rbx,rsi
    cmp         dword ptr [rax],edi
    cmovl       edi,dword ptr [rax]
    mov         ecx,edi
    call        00000001400221B4
    cmp         edi,dword ptr [label_000000014003E700]
    cmovg       edi,dword ptr [label_000000014003E700]
    test        edi,edi
    je          000000014001B1BF
    mov         ebp,r14d
    cmp         qword ptr [rbx],label_0FFFFFFFFFFFFFFFF
    je          000000014001B1AF
    cmp         qword ptr [rbx],label_0FFFFFFFFFFFFFFFE
    je          000000014001B1AF
    test        byte ptr [rsi],1
    je          000000014001B1AF
    test        byte ptr [rsi],8
    jne         000000014001B185
    mov         rcx,qword ptr [rbx]
    call label_000000014002C190
    test        eax,eax
    je          000000014001B1AF
    mov         rax,rbp
    lea         r8,[label_000000014003E300]
    mov         rcx,rbp
    sar         rcx,6
    and         eax,label_3F
    mov         rcx,qword ptr [r8+rcx*8]
    lea         rdx,[rax+rax*8]
    mov         rax,qword ptr [rbx]
    mov         qword ptr [rcx+rdx*8+label_28],rax
    mov         al,byte ptr [rsi]
    mov         byte ptr [rcx+rdx*8+label_38],al
    inc         rbp
    inc         rsi
    add         rbx,8
    sub         rdi,1
    jne         000000014001B162
    lea         r11,[rsp+label_0000000000000090]
    mov         rbx,qword ptr [r11+label_10]
    mov         rbp,qword ptr [r11+label_18]
    mov         rsi,qword ptr [r11+label_20]
    mov         rdi,qword ptr [r11+label_28]
    mov         rsp,r11
    pop         r14
    ret
func_000000014001B1DC_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    xor         esi,esi
    xor         r14d,r14d
    movsxd      rcx,esi
    lea         rdi,[label_000000014003E300]
    mov         rax,rcx
    and         ecx,label_3F
    sar         rax,6
    lea         rbx,[rcx+rcx*8]
    mov         rdi,qword ptr [rdi+rax*8]
    mov         rax,qword ptr [rdi+rbx*8+label_28]
    add         rax,2
    cmp         rax,1
    jbe         000000014001B233
    or          byte ptr [rdi+rbx*8+label_38],label_80
    jmp         000000014001B2BE
    mov         byte ptr [rdi+rbx*8+label_38],label_81
    mov         ecx,esi
    test        esi,esi
    je          000000014001B254
    sub         ecx,1
    je          000000014001B24D
    cmp         ecx,1
    mov         ecx,label_0FFFFFFF4
    jmp         000000014001B259
    mov         ecx,label_0FFFFFFF5
    jmp         000000014001B259
    mov         ecx,label_0FFFFFFF6
    call label_000000014002C148
    mov         rbp,rax
    lea         rcx,[rax+1]
    cmp         rcx,1
    jbe         000000014001B299
    mov         rcx,rax
    call label_000000014002C190
    test        eax,eax
    je          000000014001B299
    movzx       eax,al
    mov         qword ptr [rdi+rbx*8+label_28],rbp
    cmp         eax,2
    jne         000000014001B28D
    or          byte ptr [rdi+rbx*8+label_38],label_40
    jmp         000000014001B2BE
    cmp         eax,3
    jne         000000014001B2BE
    or          byte ptr [rdi+rbx*8+label_38],8
    jmp         000000014001B2BE
    or          byte ptr [rdi+rbx*8+label_38],label_40
    mov         qword ptr [rdi+rbx*8+label_28],label_0FFFFFFFFFFFFFFFE
    mov         rax,qword ptr [label_000000014003E0F0]
    test        rax,rax
    je          000000014001B2BE
    mov         rax,qword ptr [r14+rax]
    mov         dword ptr [rax+label_18],label_0FFFFFFFE
    inc         esi
    add         r14,8
    cmp         esi,3
    jne         000000014001B1FE
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_000000014001B2E7_end:
    push        rbx
    sub         rsp,label_20
    mov         ecx,7
    call        0000000140012C60
    xor         ebx,ebx
    xor         ecx,ecx
    call        00000001400221B4
    test        eax,eax
    jne         000000014001B311
    call        000000014001B0F0
    call        000000014001B1E0
    mov         bl,1
    mov         ecx,7
    call        0000000140012CB4
    mov         al,bl
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001B322_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    xor         ebx,ebx
    lea         rdi,[label_000000014003E300]
    mov         rcx,qword ptr [rbx+rdi]
    test        rcx,rcx
    je          000000014001B34A
    call        0000000140022164
    and         qword ptr [rbx+rdi],0
    add         rbx,8
    cmp         rbx,label_400
    jb          000000014001B330
    mov         rbx,qword ptr [rsp+label_30]
    mov         al,1
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001B363_end:
    mov         rdx,qword ptr [label_000000014003C040]
    mov         r9,rcx
    mov         rax,qword ptr [label_000000014003E8B8]
    mov         ecx,edx
    and         ecx,label_3F
    xor         rax,rdx
    ror         rax,cl
    mov         r10,label_0C9E89F0B32597370
    xor         r8d,r8d
    xor         edx,edx
    mov         rcx,r9
    jmp         qword ptr [label_000000014002C2C0]
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rbx,r9
    mov         rdi,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rax,qword ptr [rdi]
    mov         r8,qword ptr [rax]
    mov         rdx,qword ptr [label_000000014003C040]
    mov         eax,edx
    and         eax,label_3F
    mov         ecx,label_40
    sub         ecx,eax
    ror         r8,cl
    xor         r8,rdx
    mov         qword ptr [label_000000014003E8B8],r8
    mov         edx,1
    lea         rcx,[label_000000014001B364]
    call label_000000014002C1E0
    mov         edi,eax
    mov         rcx,qword ptr [label_000000014003C040]
    mov         qword ptr [label_000000014003E8B8],rcx
    mov         ecx,dword ptr [rbx]
    call        0000000140012CB4
    mov         eax,edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001B414_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_20
    mov         r15d,ecx
    lea         r14,[label_0000000140000000]
    or          rdi,label_0FFFFFFFFFFFFFFFF
    mov         r12,r9
    mov         rbp,r8
    mov         r13,rdx
    mov         r10,qword ptr [r14+r15*8+label_000000000003E7C0]
    nop
    mov         r11,qword ptr [label_000000014003C040]
    xor         r10,r11
    mov         ecx,r11d
    and         ecx,label_3F
    ror         r10,cl
    cmp         r10,rdi
    je          000000014001B55B
    test        r10,r10
    je          000000014001B47D
    mov         rax,r10
    jmp         000000014001B55D
    cmp         r8,r12
    je          000000014001B540
    mov         esi,dword ptr [rbp]
    mov         rbx,qword ptr [r14+rsi*8+label_000000000003E710]
    nop
    test        rbx,rbx
    je          000000014001B4A5
    cmp         rbx,rdi
    jne         000000014001B59A
    jmp         000000014001B52C
    mov         r14,qword ptr [r14+rsi*8+label_0000000000030C20]
    xor         edx,edx
    mov         rcx,r14
    mov         r8d,label_800
    call label_000000014002C140
    mov         rbx,rax
    test        rax,rax
    jne         000000014001B57A
    call label_000000014002C0F8
    cmp         eax,label_57
    jne         000000014001B51A
    lea         ebx,[rax-label_50]
    mov         rcx,r14
    mov         r8d,ebx
    lea         rdx,[label_000000014002EA50]
    call        00000001400195C0
    test        eax,eax
    je          000000014001B51A
    mov         r8d,ebx
    lea         rdx,[label_0000000140031168]
    mov         rcx,r14
    call        00000001400195C0
    test        eax,eax
    je          000000014001B51A
    xor         r8d,r8d
    xor         edx,edx
    mov         rcx,r14
    call label_000000014002C140
    mov         rbx,rax
    test        rax,rax
    jne         000000014001B57A
    mov         rax,rdi
    lea         r14,[label_0000000140000000]
    xchg        rax,qword ptr [r14+rsi*8+label_000000000003E710]
    add         rbp,4
    cmp         rbp,r12
    jne         000000014001B486
    mov         r11,qword ptr [label_000000014003C040]
    mov         eax,r11d
    mov         ecx,label_40
    and         eax,label_3F
    sub         ecx,eax
    ror         rdi,cl
    xor         rdi,r11
    xchg        rdi,qword ptr [r14+r15*8+label_000000000003E7C0]
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_000000014001B579_end:
    mov         rax,rbx
    lea         r14,[label_0000000140000000]
    xchg        rax,qword ptr [r14+rsi*8+label_000000000003E710]
    test        rax,rax
    je          000000014001B59A
    mov         rcx,rbx
    call label_000000014002C130
    mov         rdx,r13
    mov         rcx,rbx
    call label_000000014002C138
    test        rax,rax
    je          000000014001B539
    mov         r8,qword ptr [label_000000014003C040]
    mov         edx,label_40
    mov         ecx,r8d
    and         ecx,label_3F
    sub         edx,ecx
    mov         cl,dl
    mov         rdx,rax
    ror         rdx,cl
    xor         rdx,r8
    xchg        rdx,qword ptr [r14+r15*8+label_000000000003E7C0]
    jmp         000000014001B55D
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    lea         r9,[label_00000001400312B8]
    mov         ecx,label_19
    lea         r8,[label_00000001400312B4]
    lea         rdx,[label_00000001400312B8]
    call        000000014001B418
    test        rax,rax
    je          000000014001B621
    mov         r10,label_0BDC017DA34D1C070
    mov         rdx,rbx
    mov         rcx,label_0FFFFFFFFFFFFFFFA
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C2C0]
    mov         eax,label_0C0000225
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001B62B_end:
    sub         rsp,label_28
    lea         r9,[label_000000014003117C]
    xor         ecx,ecx
    lea         r8,[label_0000000140031178]
    lea         rdx,[label_0000000140031180]
    call        000000014001B418
    test        rax,rax
    je          000000014001B666
    mov         r10,label_0D30527475E523070
    add         rsp,label_28
    jmp         qword ptr [label_000000014002C2C0]
    mov         eax,1
    add         rsp,label_28
    ret
func_000000014001B66F_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_50
    mov         ebx,r9d
    mov         rdi,r8
    mov         esi,edx
    lea         r9,[label_0000000140031198]
    mov         rbp,rcx
    lea         r8,[label_0000000140031190]
    lea         rdx,[label_0000000140031198]
    mov         ecx,1
    call        000000014001B418
    mov         r11,rax
    test        rax,rax
    je          000000014001B715
    mov         r10,label_0AB8817F47A550870
    mov         rdx,qword ptr [rsp+label_00000000000000A0]
    mov         r9d,ebx
    mov         rcx,qword ptr [rsp+label_0000000000000098]
    mov         r8,rdi
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rsp+label_40],rdx
    mov         edx,esi
    mov         qword ptr [rsp+label_38],rcx
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    mov         qword ptr [rsp+label_30],rcx
    mov         ecx,dword ptr [rsp+label_0000000000000088]
    mov         dword ptr [rsp+label_28],ecx
    mov         rcx,rbp
    mov         qword ptr [rsp+label_20],rax
    mov         rax,r11
    call label_000000014002C2C0
    jmp         000000014001B747
    xor         edx,edx
    mov         rcx,rbp
    call        000000014001BB5C
    mov         ecx,eax
    mov         r9d,ebx
    mov         eax,dword ptr [rsp+label_0000000000000088]
    mov         r8,rdi
    mov         dword ptr [rsp+label_28],eax
    mov         edx,esi
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rsp+label_20],rax
    call label_000000014002C1B8
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    add         rsp,label_50
    pop         rdi
    ret
func_000000014001B75B_end:
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    mov         qword ptr [rsp+8],rcx
    push        rdi
    sub         rsp,label_50
    mov         rbx,r9
    mov         rdi,r8
    mov         esi,edx
    lea         r9,[label_00000001400311B0]
    lea         r8,[label_00000001400311A8]
    mov         ecx,2
    lea         rdx,[label_00000001400311B0]
    call        000000014001B418
    test        rax,rax
    je          000000014001B7BB
    mov         r10,label_0B780274838DFD370
    mov         rcx,qword ptr [rsp+label_60]
    mov         r9,rbx
    mov         r8,rdi
    mov         edx,esi
    call label_000000014002C2C0
    jmp         000000014001B7EB
    lea         rax,[rsp+label_60]
    mov         qword ptr [rsp+label_40],rax
    lea         r9,[rsp+label_34]
    mov         eax,4
    lea         r8,[rsp+label_40]
    lea         rdx,[rsp+label_38]
    mov         dword ptr [rsp+label_34],eax
    lea         rcx,[rsp+label_30]
    mov         dword ptr [rsp+label_38],eax
    call        000000014001B39C
    mov         rbx,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    add         rsp,label_50
    pop         rdi
    ret
func_000000014001B7FA_end:
    int         3
    jmp         qword ptr [label_000000014002C198]
    int         3
    jmp         qword ptr [label_000000014002C1B0]
    int         3
    jmp         qword ptr [label_000000014002C1A0]
    int         3
    jmp         qword ptr [label_000000014002C1A8]
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_30
    mov         ebx,r9d
    mov         rdi,r8
    mov         esi,edx
    lea         r9,[label_00000001400311E8]
    mov         rbp,rcx
    lea         r8,[label_00000001400311E0]
    lea         rdx,[label_00000001400311E8]
    mov         ecx,8
    call        000000014001B418
    test        rax,rax
    je          000000014001B87C
    mov         r10,label_0E375262D7CD44270
    mov         r9d,ebx
    mov         r8,rdi
    mov         edx,esi
    mov         rcx,rbp
    call label_000000014002C2C0
    jmp         000000014001B896
    xor         edx,edx
    mov         rcx,rbp
    call        000000014001BB5C
    mov         ecx,eax
    mov         r9d,ebx
    mov         r8,rdi
    mov         edx,esi
    call label_000000014002C1C8
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014001B8AA_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         ebx,edx
    lea         r9,[label_0000000140031218]
    mov         rdi,rcx
    lea         rdx,[label_0000000140031218]
    mov         ecx,label_0C
    lea         r8,[label_0000000140031210]
    call        000000014001B418
    test        rax,rax
    je          000000014001B8F6
    mov         r10,label_0D12D96655EDBEB70
    mov         edx,ebx
    mov         rcx,rdi
    call label_000000014002C2C0
    jmp         000000014001B90C
    call label_000000014002C1D8
    xor         r9d,r9d
    mov         r8d,ebx
    mov         ecx,eax
    mov         rdx,rdi
    call        000000014001B9EC
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001B916_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         esi,r8d
    lea         r9,[label_0000000140031240]
    mov         ebx,edx
    lea         r8,[label_0000000140031238]
    mov         rdi,rcx
    lea         rdx,[label_000000014002EAC0]
    mov         ecx,label_0F
    call        000000014001B418
    test        rax,rax
    je          000000014001B96D
    mov         r10,label_82A03E5032D2DA70
    mov         r8d,esi
    mov         edx,ebx
    mov         rcx,rdi
    call label_000000014002C2C0
    jmp         000000014001B978
    mov         edx,ebx
    mov         rcx,rdi
    call label_000000014002C108
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001B987_end:
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    lea         r9,[label_0000000140031248]
    mov         ecx,label_10
    lea         r8,[label_0000000140031240]
    lea         rdx,[label_0000000140031248]
    call        000000014001B418
    test        rax,rax
    je          000000014001B9CE
    mov         r10,label_0C25D1EF85A5BC870
    mov         rcx,rbx
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C2C0]
    xor         edx,edx
    mov         rcx,rbx
    call        000000014001BB5C
    mov         ecx,eax
    mov         edx,1
    add         rsp,label_20
    pop         rbx
    jmp         qword ptr [label_000000014002C1D0]
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_30
    mov         ebp,r9d
    mov         ebx,r8d
    mov         rdi,rdx
    lea         r9,[label_0000000140031280]
    mov         esi,ecx
    lea         r8,[label_0000000140031278]
    lea         rdx,[label_0000000140031280]
    mov         ecx,label_12
    call        000000014001B418
    test        rax,rax
    je          000000014001BA4C
    mov         r10,label_0F3552E1936D87370
    mov         r9d,ebp
    mov         r8d,ebx
    mov         rdx,rdi
    mov         ecx,esi
    call label_000000014002C2C0
    jmp         000000014001BA59
    mov         r8d,ebx
    mov         rdx,rdi
    mov         ecx,esi
    call        0000000140026568
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014001BA6D_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_50
    mov         ebx,r9d
    mov         rdi,r8
    mov         esi,edx
    lea         r9,[label_0000000140031268]
    mov         rbp,rcx
    lea         r8,[label_0000000140031260]
    lea         rdx,[label_0000000140031268]
    mov         ecx,label_11
    call        000000014001B418
    mov         r11,rax
    test        rax,rax
    je          000000014001BB15
    mov         r10,label_0E3A11F625057E270
    mov         rdx,qword ptr [rsp+label_00000000000000A0]
    mov         r9d,ebx
    mov         rcx,qword ptr [rsp+label_0000000000000098]
    mov         r8,rdi
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rsp+label_40],rdx
    mov         edx,esi
    mov         qword ptr [rsp+label_38],rcx
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    mov         qword ptr [rsp+label_30],rcx
    mov         ecx,dword ptr [rsp+label_0000000000000088]
    mov         dword ptr [rsp+label_28],ecx
    mov         rcx,rbp
    mov         qword ptr [rsp+label_20],rax
    mov         rax,r11
    call label_000000014002C2C0
    jmp         000000014001BB47
    xor         edx,edx
    mov         rcx,rbp
    call        000000014001BB5C
    mov         ecx,eax
    mov         r9d,ebx
    mov         eax,dword ptr [rsp+label_0000000000000088]
    mov         r8,rdi
    mov         dword ptr [rsp+label_28],eax
    mov         edx,esi
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rsp+label_20],rax
    call label_000000014002C1C0
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    add         rsp,label_50
    pop         rdi
    ret
func_000000014001BB5B_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         edi,edx
    lea         r9,[label_00000001400312A0]
    mov         rbx,rcx
    lea         rdx,[label_00000001400312A0]
    mov         ecx,label_13
    lea         r8,[label_0000000140031298]
    call        000000014001B418
    test        rax,rax
    je          000000014001BBA6
    mov         r10,label_0EADD062354D83270
    mov         edx,edi
    mov         rcx,rbx
    call label_000000014002C2C0
    jmp         000000014001BBAE
    mov         rcx,rbx
    call        0000000140026650
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001BBB8_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    lea         r9,[label_0000000140031198]
    mov         ecx,1
    lea         r8,[label_0000000140031190]
    lea         rdx,[label_0000000140031198]
    call        000000014001B418
    test        rax,rax
    setne       al
    add         rsp,label_28
    ret
func_000000014001BBE9_end:
    int         3
    int         3
    sub         rsp,label_28
    lea         r9,[label_000000014003117C]
    xor         ecx,ecx
    lea         r8,[label_0000000140031178]
    lea         rdx,[label_0000000140031180]
    call        000000014001B418
    lea         r9,[label_0000000140031198]
    mov         ecx,1
    lea         r8,[label_0000000140031190]
    lea         rdx,[label_0000000140031198]
    call        000000014001B418
    lea         r9,[label_00000001400311B0]
    mov         ecx,2
    lea         r8,[label_00000001400311A8]
    lea         rdx,[label_00000001400311B0]
    call        000000014001B418
    lea         r9,[label_00000001400311D0]
    mov         ecx,4
    lea         r8,[label_00000001400311C8]
    lea         rdx,[label_00000001400311D0]
    call        000000014001B418
    lea         r9,[label_00000001400311E8]
    mov         ecx,8
    lea         r8,[label_00000001400311E0]
    lea         rdx,[label_00000001400311E8]
    call        000000014001B418
    lea         r9,[label_0000000140031200]
    mov         ecx,label_0B
    lea         r8,[label_00000001400311F8]
    lea         rdx,[label_0000000140031200]
    call        000000014001B418
    lea         r9,[label_0000000140031218]
    mov         ecx,label_0C
    lea         r8,[label_0000000140031210]
    lea         rdx,[label_0000000140031218]
    call        000000014001B418
    lea         r9,[label_0000000140031248]
    mov         ecx,label_10
    lea         r8,[label_0000000140031240]
    lea         rdx,[label_0000000140031248]
    call        000000014001B418
    lea         r9,[label_0000000140031268]
    mov         ecx,label_11
    lea         r8,[label_0000000140031260]
    lea         rdx,[label_0000000140031268]
    call        000000014001B418
    lea         r9,[label_0000000140031280]
    mov         ecx,label_12
    lea         r8,[label_0000000140031278]
    lea         rdx,[label_0000000140031280]
    call        000000014001B418
    lea         r9,[label_00000001400312A0]
    mov         ecx,label_13
    lea         r8,[label_0000000140031298]
    lea         rdx,[label_00000001400312A0]
    add         rsp,label_28
    jmp         000000014001B418
    int         3
    int         3
    mov         qword ptr [rsp+8],rdi
    mov         rax,qword ptr [label_000000014003C040]
    lea         rdi,[label_000000014003E7C0]
    mov         ecx,label_1F
    rep stos    qword ptr [rdi]
    mov         rdi,qword ptr [rsp+8]
    mov         al,1
    ret
func_000000014001BD6A_end:
    int         3
    push        rbx
    sub         rsp,label_20
    test        cl,cl
    jne         000000014001BDA5
    lea         rbx,[label_000000014003E710]
    mov         rcx,qword ptr [rbx]
    test        rcx,rcx
    je          000000014001BD95
    cmp         rcx,label_0FFFFFFFFFFFFFFFF
    je          000000014001BD91
    call label_000000014002C130
    and         qword ptr [rbx],0
    add         rbx,8
    lea         rax,[label_000000014003E7B8]
    cmp         rbx,rax
    jne         000000014001BD7D
    mov         al,1
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001BDAC_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         r8,rdx
    mov         rbx,rcx
    test        rcx,rcx
    je          000000014001BDCF
    xor         edx,edx
    lea         rax,[rdx-label_20]
    div         rax,rbx
    cmp         rax,r8
    jb          000000014001BE12
    imul        rbx,r8
    mov         eax,1
    test        rbx,rbx
    cmove       rbx,rax
    jmp         000000014001BDF6
    call        0000000140018690
    test        eax,eax
    je          000000014001BE12
    mov         rcx,rbx
    call        0000000140015F8C
    test        eax,eax
    je          000000014001BE12
    mov         rcx,qword ptr [label_000000014003E9E8]
    mov         r8,rbx
    mov         edx,8
    call label_000000014002C188
    test        rax,rax
    je          000000014001BDE1
    jmp         000000014001BE1F
    call        0000000140015374
    mov         dword ptr [rax],label_0C
    xor         eax,eax
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001BE24_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r14
    sub         rsp,label_30
    xor         ebx,ebx
    mov         rax,r9
    mov         rbp,r8
    mov         rsi,rdx
    mov         r14,rcx
    mov         r12d,ebx
    test        rdx,rdx
    jne         000000014001BE5D
    test        r8,r8
    je          000000014001BE96
    jmp         000000014001BE62
    test        rbp,rbp
    jne         000000014001BE93
    mov         rax,qword ptr [rsp+label_78]
    mov         esi,label_16
    mov         qword ptr [rsp+label_28],rax
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],esi
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rbx
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    mov         eax,esi
    jmp         000000014001BF2E
    mov         word ptr [rdx],bx
    test        r14,r14
    je          000000014001BE9E
    mov         qword ptr [rcx],rbx
    mov         r8,qword ptr [rsp+label_70]
    mov         rdi,qword ptr [rsp+label_78]
    cmp         r8,rbp
    cmova       r8,rbp
    cmp         r8,label_7FFFFFFF
    jbe         000000014001BEBF
    mov         esi,label_16
    jmp         000000014001BF04
    mov         r9,rdi
    mov         rdx,rax
    mov         rcx,rsi
    call        000000014001BF48
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    jne         000000014001BEE7
    test        rsi,rsi
    je          000000014001BEDB
    mov         word ptr [rsi],bx
    cmp         byte ptr [rdi+label_30],bl
    je          000000014001BEE3
    mov         ebx,dword ptr [rdi+label_2C]
    mov         eax,ebx
    jmp         000000014001BF2E
    inc         rax
    test        rsi,rsi
    je          000000014001BF23
    cmp         rax,rbp
    jbe         000000014001BF1E
    cmp         qword ptr [rsp+label_70],label_0FFFFFFFFFFFFFFFF
    je          000000014001BF15
    mov         word ptr [rsi],bx
    mov         esi,label_22
    mov         dword ptr [rdi+label_2C],esi
    mov         byte ptr [rdi+label_30],1
    mov         qword ptr [rsp+label_28],rdi
    jmp         000000014001BE78
    mov         rax,rbp
    mov         r12d,label_50
    mov         word ptr [rsi+rax*2-2],bx
    test        r14,r14
    je          000000014001BF2B
    mov         qword ptr [r14],rax
    mov         eax,r12d
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_30
    pop         r14
    pop         r12
    pop         rdi
    ret
func_000000014001BF46_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rdx
    push        rsi
    push        rdi
    push        r14
    sub         rsp,label_40
    mov         qword ptr [rax-label_28],label_0FFFFFFFFFFFFFFFE
    mov         qword ptr [rax+label_18],rbx
    mov         qword ptr [rax+label_20],rbp
    mov         rbx,r9
    mov         rbp,r8
    mov         rsi,rcx
    xor         r14d,r14d
    mov         edi,r14d
    test        rcx,rcx
    je          000000014001BF8B
    test        r8,r8
    jne         000000014001BF87
    xor         eax,eax
    jmp         000000014001C130
    mov         word ptr [rcx],r14w
    test        rdx,rdx
    jne         000000014001BFBD
    mov         byte ptr [r9+label_30],1
    mov         dword ptr [r9+label_2C],label_16
    mov         qword ptr [rsp+label_28],rbx
    mov         qword ptr [rsp+label_20],r14
    xor         r9d,r9d
    xor         r8d,r8d
    xor         ecx,ecx
    call        0000000140010530
    or          rax,label_0FFFFFFFFFFFFFFFF
    jmp         000000014001C130
    cmp         byte ptr [r9+label_28],r14b
    jne         000000014001BFD0
    mov         rcx,rbx
    call        0000000140012780
    mov         rdx,qword ptr [rsp+label_68]
    mov         rax,qword ptr [rbx+label_18]
    mov         ecx,dword ptr [rax+label_0C]
    cmp         ecx,label_0FDE9
    jne         000000014001C003
    mov         qword ptr [rsp+label_60],r14
    mov         qword ptr [rsp+label_20],rbx
    lea         r9,[rsp+label_60]
    mov         r8,rbp
    lea         rdx,[rsp+label_68]
    mov         rcx,rsi
    call        0000000140026364
    jmp         000000014001C130
    mov         rax,qword ptr [rax+label_0000000000000138]
    test        rsi,rsi
    je          000000014001C0E5
    test        rax,rax
    jne         000000014001C03E
    test        rbp,rbp
    je          000000014001C036
    movzx       eax,byte ptr [rdi+rdx]
    mov         word ptr [rsi],ax
    cmp         byte ptr [rdi+rdx],r14b
    je          000000014001C036
    inc         rdi
    add         rsi,2
    cmp         rdi,rbp
    jb          000000014001C01D
    mov         rax,rdi
    jmp         000000014001C130
    mov         dword ptr [rsp+label_28],ebp
    mov         qword ptr [rsp+label_20],rsi
    or          rdi,label_0FFFFFFFFFFFFFFFF
    mov         r9d,edi
    mov         r8,rdx
    lea         edx,[rdi+label_0A]
    call        0000000140020070
    cdqe
    test        rax,rax
    jne         000000014001C12D
    call label_000000014002C0F8
    cmp         eax,label_7A
    je          000000014001C080
    mov         byte ptr [rbx+label_30],1
    mov         dword ptr [rbx+label_2C],label_2A
    mov         word ptr [rsi],r14w
    jmp         000000014001C036
    mov         r9d,ebp
    mov         r10,qword ptr [rsp+label_68]
    mov         r8,r10
    test        ebp,ebp
    je          000000014001C0B9
    dec         r9d
    cmp         byte ptr [r8],r14b
    je          000000014001C0B9
    movzx       edx,byte ptr [r8]
    mov         rax,qword ptr [rbx+label_18]
    mov         rcx,qword ptr [rax]
    cmp         word ptr [rcx+rdx*2],r14w
    jge         000000014001C0B1
    inc         r8
    cmp         byte ptr [r8],r14b
    je          000000014001C06F
    inc         r8
    test        r9d,r9d
    jmp         000000014001C08D
    sub         r8d,r10d
    mov         rax,qword ptr [rbx+label_18]
    mov         dword ptr [rsp+label_28],ebp
    mov         qword ptr [rsp+label_20],rsi
    mov         r9d,r8d
    mov         r8,r10
    mov         edx,1
    mov         ecx,dword ptr [rax+label_0C]
    call        0000000140020070
    cdqe
    test        rax,rax
    jne         000000014001C130
    jmp         000000014001C06F
    or          rdi,label_0FFFFFFFFFFFFFFFF
    test        rax,rax
    jne         000000014001C0FC
    inc         rdi
    cmp         byte ptr [rdx+rdi],r14b
    jne         000000014001C0EE
    jmp         000000014001C036
    mov         dword ptr [rsp+label_28],r14d
    mov         qword ptr [rsp+label_20],r14
    mov         r9d,edi
    mov         r8,rdx
    mov         edx,9
    call        0000000140020070
    cdqe
    test        rax,rax
    jne         000000014001C12D
    mov         byte ptr [rbx+label_30],1
    mov         dword ptr [rbx+label_2C],label_2A
    jmp         000000014001C036
    dec         rax
    mov         rbx,qword ptr [rsp+label_70]
    mov         rbp,qword ptr [rsp+label_78]
    add         rsp,label_40
    pop         r14
    pop         rdi
    pop         rsi
    ret
func_000000014001C142_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_70
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         000000014001C184
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         rax,[rbp-label_40]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rbp+label_30]
    mov         qword ptr [rsp+label_20],rax
    call        000000014001BE28
    cmp         byte ptr [rbp-label_18],2
    mov         edi,eax
    jne         000000014001C1AE
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          000000014001C1C3
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          000000014001C1D8
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    lea         r11,[rsp+label_70]
    mov         eax,edi
    mov         rbx,qword ptr [r11+label_10]
    mov         rdi,qword ptr [r11+label_18]
    mov         rsp,r11
    pop         rbp
    ret
func_000000014001C1EB_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r14
    sub         rsp,label_30
    xor         ebx,ebx
    mov         rax,r9
    mov         rbp,r8
    mov         rsi,rdx
    mov         r14,rcx
    mov         r12d,ebx
    test        rdx,rdx
    je          000000014001C24A
    test        r8,r8
    je          000000014001C24F
    mov         byte ptr [rdx],bl
    test        r14,r14
    je          000000014001C229
    mov         qword ptr [rcx],rbx
    mov         r8,qword ptr [rsp+label_70]
    mov         rdi,qword ptr [rsp+label_78]
    cmp         r8,rbp
    cmova       r8,rbp
    cmp         r8,label_7FFFFFFF
    jbe         000000014001C27D
    mov         esi,label_16
    jmp         000000014001C2C0
    test        rbp,rbp
    je          000000014001C221
    mov         rax,qword ptr [rsp+label_78]
    mov         esi,label_16
    mov         qword ptr [rsp+label_28],rax
    mov         byte ptr [rax+label_30],1
    mov         dword ptr [rax+label_2C],esi
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rbx
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    mov         eax,esi
    jmp         000000014001C2E6
    mov         r9,rdi
    mov         rdx,rax
    mov         rcx,rsi
    call        000000014001C300
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    jne         000000014001C2A4
    test        rsi,rsi
    je          000000014001C298
    mov         byte ptr [rsi],bl
    cmp         byte ptr [rdi+label_30],bl
    je          000000014001C2A0
    mov         ebx,dword ptr [rdi+label_2C]
    mov         eax,ebx
    jmp         000000014001C2E6
    inc         rax
    test        rsi,rsi
    je          000000014001C2DB
    cmp         rax,rbp
    jbe         000000014001C2D7
    cmp         qword ptr [rsp+label_70],label_0FFFFFFFFFFFFFFFF
    je          000000014001C2CE
    mov         byte ptr [rsi],bl
    mov         esi,label_22
    mov         dword ptr [rdi+label_2C],esi
    mov         byte ptr [rdi+label_30],1
    mov         qword ptr [rsp+label_28],rdi
    jmp         000000014001C265
    mov         rax,rbp
    mov         r12d,label_50
    mov         byte ptr [rax+rsi-1],bl
    test        r14,r14
    je          000000014001C2E3
    mov         qword ptr [r14],rax
    mov         eax,r12d
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_30
    pop         r14
    pop         r12
    pop         rdi
    ret
func_000000014001C2FE_end:
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    mov         rbp,rsp
    sub         rsp,label_78
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp-label_18],rax
    xor         r12d,r12d
    mov         qword ptr [rbp-label_30],rdx
    mov         dword ptr [rbp-label_38],r12d
    mov         rbx,r9
    mov         rsi,r8
    mov         r15,rcx
    mov         edi,r12d
    test        rcx,rcx
    je          000000014001C34A
    test        r8,r8
    jne         000000014001C34A
    xor         eax,eax
    jmp         000000014001C622
    test        rdx,rdx
    jne         000000014001C37C
    mov         byte ptr [r9+label_30],1
    xor         r8d,r8d
    mov         dword ptr [r9+label_2C],label_16
    xor         ecx,ecx
    xor         r9d,r9d
    mov         qword ptr [rsp+label_28],rbx
    mov         qword ptr [rsp+label_20],r12
    call        0000000140010530
    or          rax,label_0FFFFFFFFFFFFFFFF
    jmp         000000014001C622
    cmp         byte ptr [r9+label_28],r12b
    jne         000000014001C38E
    mov         rcx,rbx
    call        0000000140012780
    mov         rdx,qword ptr [rbp-label_30]
    mov         rax,qword ptr [rbx+label_18]
    mov         r10d,dword ptr [rax+label_0C]
    cmp         r10d,label_0FDE9
    jne         000000014001C3C0
    lea         r9,[rbp-label_28]
    mov         qword ptr [rbp-label_28],r12
    mov         r8,rsi
    mov         qword ptr [rsp+label_20],rbx
    lea         rdx,[rbp-label_30]
    mov         rcx,r15
    call        00000001400266F4
    jmp         000000014001C622
    mov         rcx,qword ptr [rax+label_0000000000000138]
    test        r15,r15
    je          000000014001C5A2
    test        rcx,rcx
    jne         000000014001C421
    test        rsi,rsi
    je          000000014001C61F
    mov         r8d,label_0FF
    cmp         word ptr [rdx],r8w
    ja          000000014001C411
    mov         al,byte ptr [rdx]
    mov         byte ptr [r15+rdi],al
    movzx       eax,word ptr [rdx]
    add         rdx,2
    mov         qword ptr [rbp-label_30],rdx
    test        ax,ax
    je          000000014001C61F
    inc         rdi
    cmp         rdi,rsi
    jb          000000014001C3E4
    jmp         000000014001C61F
    mov         byte ptr [rbx+label_30],1
    mov         dword ptr [rbx+label_2C],label_2A
    jmp         000000014001C373
    cmp         dword ptr [rax+8],1
    jne         000000014001C496
    test        rsi,rsi
    je          000000014001C450
    mov         rax,rdx
    mov         rcx,rsi
    cmp         word ptr [rax],r12w
    je          000000014001C444
    add         rax,2
    sub         rcx,1
    jne         000000014001C432
    jmp         000000014001C450
    mov         rsi,rax
    sub         rsi,rdx
    sar         rsi,1
    inc         rsi
    lea         rax,[rbp-label_38]
    mov         r8,rdx
    mov         qword ptr [rsp+label_38],rax
    mov         r9d,esi
    mov         qword ptr [rsp+label_30],r12
    xor         edx,edx
    mov         dword ptr [rsp+label_28],esi
    mov         ecx,r10d
    mov         qword ptr [rsp+label_20],r15
    call        0000000140020100
    movsxd      rcx,eax
    test        eax,eax
    je          000000014001C411
    cmp         dword ptr [rbp-label_38],r12d
    jne         000000014001C411
    cmp         byte ptr [r15+rcx-1],r12b
    lea         rax,[rcx-1]
    cmovne      rax,rcx
    jmp         000000014001C622
    lea         rax,[rbp-label_38]
    mov         r8,rdx
    mov         qword ptr [rsp+label_38],rax
    or          rdi,label_0FFFFFFFFFFFFFFFF
    mov         qword ptr [rsp+label_30],r12
    mov         r9d,edi
    mov         dword ptr [rsp+label_28],esi
    xor         edx,edx
    mov         ecx,r10d
    mov         qword ptr [rsp+label_20],r15
    call        0000000140020100
    movsxd      r14,eax
    cmp         dword ptr [rbp-label_38],r12d
    jne         000000014001C614
    test        eax,eax
    je          000000014001C4DB
    lea         rax,[r14-1]
    jmp         000000014001C622
    call label_000000014002C0F8
    cmp         eax,label_7A
    jne         000000014001C614
    test        rsi,rsi
    je          000000014001C59A
    mov         rdx,qword ptr [rbp-label_30]
    lea         r13d,[rax-label_75]
    mov         rcx,qword ptr [rbx+label_18]
    lea         r8,[rbp-label_38]
    mov         qword ptr [rsp+label_38],r8
    mov         r9d,1
    mov         qword ptr [rsp+label_30],r12
    mov         r8,rdx
    mov         eax,dword ptr [rcx+8]
    cmp         eax,r13d
    mov         ecx,dword ptr [rcx+label_0C]
    cmovg       eax,r13d
    xor         edx,edx
    mov         dword ptr [rsp+label_28],eax
    lea         rax,[rbp-label_20]
    mov         qword ptr [rsp+label_20],rax
    call        0000000140020100
    test        eax,eax
    je          000000014001C614
    cmp         dword ptr [rbp-label_38],r12d
    jne         000000014001C614
    test        eax,eax
    js          000000014001C614
    movsxd      rdx,eax
    cmp         rdx,r13
    ja          000000014001C614
    lea         rax,[rdx+r14]
    cmp         rax,rsi
    ja          000000014001C59A
    mov         rcx,r12
    test        rdx,rdx
    jle         000000014001C585
    mov         al,byte ptr [rbp+rcx-label_20]
    mov         byte ptr [r15+r14],al
    test        al,al
    je          000000014001C59A
    inc         rcx
    inc         r14
    cmp         rcx,rdx
    jl          000000014001C56E
    mov         rdx,qword ptr [rbp-label_30]
    add         rdx,2
    mov         qword ptr [rbp-label_30],rdx
    cmp         r14,rsi
    jb          000000014001C4FB
    mov         rax,r14
    jmp         000000014001C622
    test        rcx,rcx
    jne         000000014001C5D6
    movzx       eax,word ptr [rdx]
    mov         rcx,r12
    test        ax,ax
    je          000000014001C5D1
    mov         r8d,label_0FF
    cmp         ax,r8w
    ja          000000014001C411
    add         rdx,2
    inc         rcx
    movzx       eax,word ptr [rdx]
    test        ax,ax
    jne         000000014001C5B8
    mov         rax,rcx
    jmp         000000014001C622
    lea         rax,[rbp-label_38]
    mov         r8,rdx
    mov         qword ptr [rsp+label_38],rax
    or          rdi,label_0FFFFFFFFFFFFFFFF
    mov         qword ptr [rsp+label_30],r12
    mov         r9d,edi
    mov         dword ptr [rsp+label_28],r12d
    xor         edx,edx
    mov         ecx,r10d
    mov         qword ptr [rsp+label_20],r12
    call        0000000140020100
    cdqe
    test        rax,rax
    je          000000014001C614
    cmp         dword ptr [rbp-label_38],r12d
    jne         000000014001C614
    dec         rax
    jmp         000000014001C622
    mov         dword ptr [rbx+label_2C],label_2A
    mov         byte ptr [rbx+label_30],1
    mov         rax,rdi
    mov         rcx,qword ptr [rbp-label_18]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_78
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_000000014001C63E_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_70
    and         qword ptr [rbp-label_40],0
    mov         rax,qword ptr [rbp+label_38]
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    test        rax,rax
    je          000000014001C675
    movups      xmm0,xmmword ptr [rax]
    jmp         000000014001C685
    cmp         dword ptr [label_000000014003E290],0
    jne         000000014001C68E
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         rax,[rbp-label_40]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rbp+label_30]
    mov         qword ptr [rsp+label_20],rax
    call        000000014001C1EC
    cmp         byte ptr [rbp-label_18],2
    mov         edi,eax
    jne         000000014001C6B8
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          000000014001C6CD
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          000000014001C6E2
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    lea         r11,[rsp+label_70]
    mov         eax,edi
    mov         rbx,qword ptr [r11+label_10]
    mov         rdi,qword ptr [r11+label_18]
    mov         rsp,r11
    pop         rbp
    ret
func_000000014001C6F5_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_80
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp-label_10],rax
    mov         esi,edx
    movsxd      rdi,ecx
    mov         rdx,r8
    lea         rcx,[rbp-label_38]
    call        0000000140015394
    lea         eax,[rdi+1]
    xor         ebx,ebx
    cmp         eax,label_100
    ja          000000014001C74A
    mov         rax,qword ptr [rbp-label_30]
    mov         rcx,qword ptr [rax]
    movzx       eax,word ptr [rcx+rdi*2]
    jmp         000000014001C7C9
    mov         rdx,qword ptr [rbp-label_30]
    mov         eax,edi
    sar         eax,8
    mov         r10d,1
    movzx       ecx,al
    mov         rax,qword ptr [rdx]
    cmp         word ptr [rax+rcx*2],bx
    jge         000000014001C775
    mov         byte ptr [rbp-label_40],cl
    lea         r9d,[r10+1]
    mov         byte ptr [rbp-label_3F],dil
    mov         byte ptr [rbp-label_3E],bl
    jmp         000000014001C77F
    mov         byte ptr [rbp-label_40],dil
    mov         r9d,r10d
    mov         byte ptr [rbp-label_3F],bl
    xor         eax,eax
    mov         dword ptr [rsp+label_30],r10d
    mov         dword ptr [rbp-label_18],eax
    lea         r8,[rbp-label_40]
    mov         word ptr [rbp-label_14],ax
    lea         rcx,[rbp-label_30]
    mov         eax,dword ptr [rdx+label_0C]
    mov         edx,r10d
    mov         dword ptr [rsp+label_28],eax
    lea         rax,[rbp-label_18]
    mov         qword ptr [rsp+label_20],rax
    call        000000014001CB44
    test        eax,eax
    jne         000000014001C7C5
    cmp         byte ptr [rbp-label_20],bl
    je          000000014001C7C1
    mov         rax,qword ptr [rbp-label_38]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    xor         eax,eax
    jmp         000000014001C7DB
    movzx       eax,word ptr [rbp-label_18]
    and         eax,esi
    cmp         byte ptr [rbp-label_20],bl
    je          000000014001C7DB
    mov         rcx,qword ptr [rbp-label_38]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    mov         rcx,qword ptr [rbp-label_10]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000000080]
    mov         rbx,qword ptr [r11+label_10]
    mov         rsi,qword ptr [r11+label_18]
    mov         rdi,qword ptr [r11+label_20]
    mov         rsp,r11
    pop         rbp
    ret
func_000000014001C7FF_end:
    push        rbp
    push        r14
    push        r15
    sub         rsp,label_70
    lea         rbp,[rsp+label_40]
    mov         qword ptr [rbp+label_50],rbx
    mov         qword ptr [rbp+label_58],rsi
    mov         qword ptr [rbp+label_60],rdi
    mov         qword ptr [rbp+label_68],r12
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rbp
    mov         qword ptr [rbp+label_28],rax
    mov         r14,rdx
    mov         r15,r9
    mov         rdx,rcx
    mov         esi,r8d
    lea         rcx,[rbp+8]
    call        0000000140015394
    mov         rax,qword ptr [rbp+label_10]
    xor         r9d,r9d
    xor         r8d,r8d
    mov         edx,esi
    mov         rcx,r14
    mov         r12d,dword ptr [rax+label_0C]
    call        000000014001B81C
    movsxd      rdi,eax
    test        eax,eax
    jne         000000014001C868
    xor         edi,edi
    jmp         000000014001C942
    mov         rax,rdi
    add         rax,rax
    lea         rcx,[rax+label_10]
    cmp         rax,rcx
    sbb         rdx,rdx
    and         rdx,rcx
    je          000000014001C928
    cmp         rdx,label_400
    ja          000000014001C8BB
    lea         rax,[rdx+label_0F]
    cmp         rax,rdx
    ja          000000014001C89D
    mov         rax,label_0FFFFFFFFFFFFFF0
    and         rax,label_0FFFFFFFFFFFFFFF0
    call        0000000140009F30
    sub         rsp,rax
    lea         rbx,[rsp+label_40]
    test        rbx,rbx
    je          000000014001C92A
    mov         dword ptr [rbx],label_0CCCC
    jmp         000000014001C8D1
    mov         rcx,rdx
    call        0000000140019D00
    mov         rbx,rax
    test        rax,rax
    je          000000014001C8D5
    mov         dword ptr [rax],label_0DDDD
    add         rbx,label_10
    test        rbx,rbx
    je          000000014001C92A
    mov         r9d,edi
    mov         r8,rbx
    mov         edx,esi
    mov         rcx,r14
    call        000000014001B81C
    test        eax,eax
    je          000000014001C92A
    mov         r8d,dword ptr [rbp+label_70]
    mov         ecx,r12d
    mov         eax,r8d
    neg         eax
    sbb         rdx,rdx
    and         qword ptr [rsp+label_38],0
    and         qword ptr [rsp+label_30],0
    and         rdx,r15
    mov         dword ptr [rsp+label_28],r8d
    or          r9d,label_0FFFFFFFF
    mov         qword ptr [rsp+label_20],rdx
    mov         r8,rbx
    xor         edx,edx
    call        0000000140020100
    mov         edi,eax
    jmp         000000014001C931
    xor         ebx,ebx
    xor         edi,edi
    test        rbx,rbx
    je          000000014001C942
    lea         rcx,[rbx-label_10]
    cmp         dword ptr [rcx],label_0DDDD
    jne         000000014001C942
    call        0000000140019CC4
    cmp         byte ptr [rbp+label_20],0
    je          000000014001C953
    mov         rax,qword ptr [rbp+8]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         eax,edi
    mov         rcx,qword ptr [rbp+label_28]
    xor         rcx,rbp
    call        00000001400099A0
    mov         rbx,qword ptr [rbp+label_50]
    mov         rsi,qword ptr [rbp+label_58]
    mov         rdi,qword ptr [rbp+label_60]
    mov         r12,qword ptr [rbp+label_68]
    lea         rsp,[rbp+label_30]
    pop         r15
    pop         r14
    pop         rbp
    ret
func_000000014001C97A_end:
    int         3
    push        rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_0D0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_00000000000000C0],rax
    mov         rsi,qword ptr [rsp+label_0000000000000130]
    xor         edi,edi
    mov         ebp,r9d
    mov         r14,r8
    mov         r12,rcx
    mov         qword ptr [rsi],rdi
    cmp         edx,1
    jne         000000014001CA99
    lea         r9,[rsp+label_40]
    mov         dword ptr [rsp+label_20],label_80
    mov         r8d,ebp
    mov         rdx,r14
    call        000000014001C800
    movsxd      rbx,eax
    test        eax,eax
    je          000000014001CA21
    lea         edx,[rdi+1]
    mov         rcx,rbx
    call        000000014001BDB0
    xor         ecx,ecx
    mov         qword ptr [rsi],rax
    call        0000000140019CC4
    cmp         qword ptr [rsi],rdi
    je          000000014001CB0A
    mov         rcx,qword ptr [rsi]
    lea         eax,[rbx-1]
    movsxd      r9,eax
    lea         r8,[rsp+label_40]
    mov         rdx,rbx
    call        0000000140026848
    test        eax,eax
    jne         000000014001CB2F
    xor         eax,eax
    jmp         000000014001CB0D
    call label_000000014002C0F8
    cmp         eax,label_7A
    jne         000000014001CB0A
    xor         r9d,r9d
    mov         dword ptr [rsp+label_20],edi
    mov         r8d,ebp
    mov         rdx,r14
    mov         rcx,r12
    call        000000014001C800
    movsxd      r15,eax
    test        eax,eax
    je          000000014001CB0A
    mov         rcx,r15
    mov         edx,1
    call        000000014001BDB0
    mov         rbx,rax
    test        rax,rax
    je          000000014001CA8A
    mov         r9,rax
    mov         dword ptr [rsp+label_20],r15d
    mov         r8d,ebp
    mov         rdx,r14
    mov         rcx,r12
    call        000000014001C800
    test        eax,eax
    je          000000014001CA8A
    mov         rax,rbx
    mov         rbx,rdi
    mov         qword ptr [rsi],rax
    jmp         000000014001CA8D
    or          edi,label_0FFFFFFFF
    mov         rcx,rbx
    call        0000000140019CC4
    mov         eax,edi
    jmp         000000014001CB0D
    mov         ebx,2
    cmp         edx,ebx
    jne         000000014001CADD
    xor         r9d,r9d
    xor         r8d,r8d
    mov         edx,ebp
    mov         rcx,r14
    call        000000014001B81C
    movsxd      r15,eax
    test        eax,eax
    je          000000014001CB0A
    mov         rcx,r15
    mov         edx,ebx
    call        000000014001BDB0
    mov         rbx,rax
    test        rax,rax
    je          000000014001CA8A
    mov         r9d,r15d
    mov         r8,rax
    mov         edx,ebp
    mov         rcx,r14
    call        000000014001B81C
    jmp         000000014001CA7B
    test        edx,edx
    jne         000000014001CB0A
    bts         ebp,label_1D
    mov         dword ptr [rsp+label_30],edi
    mov         edx,ebp
    lea         r8,[rsp+label_30]
    mov         r9d,ebx
    mov         rcx,r14
    call        000000014001B81C
    test        eax,eax
    je          000000014001CB0A
    mov         al,byte ptr [rsp+label_30]
    mov         byte ptr [rsi],al
    jmp         000000014001CA1A
    or          eax,label_0FFFFFFFF
    mov         rcx,qword ptr [rsp+label_00000000000000C0]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_0D0
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    pop         rbx
    ret
func_000000014001CB2E_end:
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rdi
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    push        rbp
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_60
    lea         rbp,[rsp+label_30]
    mov         qword ptr [rbp+label_60],rbx
    mov         qword ptr [rbp+label_68],rsi
    mov         qword ptr [rbp+label_70],rdi
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rbp
    mov         qword ptr [rbp+label_28],rax
    mov         r13d,edx
    mov         r15d,r9d
    mov         rdx,rcx
    mov         r12,r8
    lea         rcx,[rbp+8]
    call        0000000140015394
    mov         edi,dword ptr [rbp+label_0000000000000088]
    test        edi,edi
    jne         000000014001CB97
    mov         rax,qword ptr [rbp+label_10]
    mov         edi,dword ptr [rax+label_0C]
    neg         dword ptr [rbp+label_0000000000000090]
    mov         r9d,r15d
    mov         r8,r12
    mov         ecx,edi
    sbb         edx,edx
    and         dword ptr [rsp+label_28],0
    and         qword ptr [rsp+label_20],0
    and         edx,8
    inc         edx
    call        0000000140020070
    movsxd      r14,eax
    test        eax,eax
    jne         000000014001CBCA
    xor         edi,edi
    jmp         000000014001CC9A
    mov         rsi,r14
    add         rsi,rsi
    lea         rax,[rsi+label_10]
    cmp         rsi,rax
    sbb         rcx,rcx
    and         rcx,rax
    je          000000014001CC80
    cmp         rcx,label_400
    ja          000000014001CC1D
    lea         rax,[rcx+label_0F]
    cmp         rax,rcx
    ja          000000014001CBFF
    mov         rax,label_0FFFFFFFFFFFFFF0
    and         rax,label_0FFFFFFFFFFFFFFF0
    call        0000000140009F30
    sub         rsp,rax
    lea         rbx,[rsp+label_30]
    test        rbx,rbx
    je          000000014001CC82
    mov         dword ptr [rbx],label_0CCCC
    jmp         000000014001CC30
    call        0000000140019D00
    mov         rbx,rax
    test        rax,rax
    je          000000014001CC34
    mov         dword ptr [rax],label_0DDDD
    add         rbx,label_10
    test        rbx,rbx
    je          000000014001CC82
    mov         r8,rsi
    xor         edx,edx
    mov         rcx,rbx
    call        000000014002A110
    mov         r9d,r15d
    mov         dword ptr [rsp+label_28],r14d
    mov         r8,r12
    mov         qword ptr [rsp+label_20],rbx
    mov         edx,1
    mov         ecx,edi
    call        0000000140020070
    test        eax,eax
    je          000000014001CC82
    mov         r9,qword ptr [rbp+label_0000000000000080]
    mov         r8d,eax
    mov         rdx,rbx
    mov         ecx,r13d
    call label_000000014002C048
    mov         edi,eax
    jmp         000000014001CC89
    xor         ebx,ebx
    xor         edi,edi
    test        rbx,rbx
    je          000000014001CC9A
    lea         rcx,[rbx-label_10]
    cmp         dword ptr [rcx],label_0DDDD
    jne         000000014001CC9A
    call        0000000140019CC4
    cmp         byte ptr [rbp+label_20],0
    je          000000014001CCAB
    mov         rax,qword ptr [rbp+8]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         eax,edi
    mov         rcx,qword ptr [rbp+label_28]
    xor         rcx,rbp
    call        00000001400099A0
    mov         rbx,qword ptr [rbp+label_60]
    mov         rsi,qword ptr [rbp+label_68]
    mov         rdi,qword ptr [rbp+label_70]
    lea         rsp,[rbp+label_30]
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rbp
    ret
func_000000014001CCD2_end:
    int         3
    push        rbp
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_60
    lea         rbp,[rsp+label_50]
    mov         qword ptr [rbp+label_40],rbx
    mov         qword ptr [rbp+label_48],rsi
    mov         qword ptr [rbp+label_50],rdi
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rbp
    mov         qword ptr [rbp+8],rax
    movsxd      rdi,dword ptr [rbp+label_60]
    mov         rsi,r9
    mov         r12d,r8d
    mov         r13,rdx
    mov         rbx,rcx
    test        edi,edi
    jle         000000014001CD29
    mov         rdx,rdi
    mov         rcx,r9
    call        00000001400159AC
    cmp         eax,edi
    lea         edi,[rax+1]
    jl          000000014001CD29
    mov         edi,eax
    mov         r14d,dword ptr [rbp+label_78]
    test        r14d,r14d
    jne         000000014001CD39
    mov         rax,qword ptr [rbx]
    mov         r14d,dword ptr [rax+label_0C]
    neg         dword ptr [rbp+label_0000000000000080]
    mov         r9d,edi
    mov         r8,rsi
    mov         ecx,r14d
    sbb         edx,edx
    and         dword ptr [rsp+label_28],0
    and         qword ptr [rsp+label_20],0
    and         edx,8
    inc         edx
    call        0000000140020070
    xor         edx,edx
    movsxd      r15,eax
    test        eax,eax
    je          000000014001CFDF
    mov         rax,r15
    add         rax,rax
    lea         rcx,[rax+label_10]
    cmp         rax,rcx
    sbb         rax,rax
    and         rax,rcx
    je          000000014001CFC2
    mov         r8,label_0FFFFFFFFFFFFFF0
    cmp         rax,label_400
    ja          000000014001CDC8
    lea         rcx,[rax+label_0F]
    cmp         rcx,rax
    ja          000000014001CDA3
    mov         rcx,r8
    and         rcx,label_0FFFFFFFFFFFFFFF0
    mov         rax,rcx
    call        0000000140009F30
    sub         rsp,rcx
    lea         rbx,[rsp+label_50]
    test        rbx,rbx
    je          000000014001CFC5
    mov         dword ptr [rbx],label_0CCCC
    jmp         000000014001CDE0
    mov         rcx,rax
    call        0000000140019D00
    xor         edx,edx
    mov         rbx,rax
    test        rax,rax
    je          000000014001CDE4
    mov         dword ptr [rax],label_0DDDD
    add         rbx,label_10
    test        rbx,rbx
    je          000000014001CFC5
    mov         dword ptr [rsp+label_28],r15d
    mov         r9d,edi
    mov         r8,rsi
    mov         qword ptr [rsp+label_20],rbx
    mov         edx,1
    mov         ecx,r14d
    call        0000000140020070
    xor         edx,edx
    test        eax,eax
    je          000000014001CFC5
    mov         qword ptr [rsp+label_40],rdx
    mov         r9d,r15d
    mov         qword ptr [rsp+label_38],rdx
    mov         r8,rbx
    mov         qword ptr [rsp+label_30],rdx
    mov         rcx,r13
    mov         dword ptr [rsp+label_28],edx
    mov         qword ptr [rsp+label_20],rdx
    mov         edx,r12d
    call        000000014001BA70
    xor         edx,edx
    movsxd      rsi,eax
    test        eax,eax
    je          000000014001CFC5
    mov         r8d,label_400
    test        r8d,r12d
    je          000000014001CEA6
    mov         eax,dword ptr [rbp+label_70]
    test        eax,eax
    je          000000014001CFCC
    cmp         esi,eax
    jg          000000014001CFC5
    mov         qword ptr [rsp+label_40],rdx
    mov         r9d,r15d
    mov         qword ptr [rsp+label_38],rdx
    mov         r8,rbx
    mov         qword ptr [rsp+label_30],rdx
    mov         rcx,r13
    mov         dword ptr [rsp+label_28],eax
    mov         edx,r12d
    mov         rax,qword ptr [rbp+label_68]
    mov         qword ptr [rsp+label_20],rax
    call        000000014001BA70
    xor         edx,edx
    mov         esi,eax
    test        eax,eax
    jne         000000014001CFCC
    jmp         000000014001CFC5
    mov         rcx,rsi
    add         rcx,rcx
    lea         rax,[rcx+label_10]
    cmp         rcx,rax
    sbb         rcx,rcx
    and         rcx,rax
    je          000000014001CFA5
    cmp         rcx,r8
    ja          000000014001CEF9
    lea         rax,[rcx+label_0F]
    cmp         rax,rcx
    ja          000000014001CED7
    mov         rax,label_0FFFFFFFFFFFFFF0
    and         rax,label_0FFFFFFFFFFFFFFF0
    call        0000000140009F30
    sub         rsp,rax
    lea         rdi,[rsp+label_50]
    test        rdi,rdi
    je          000000014001CFBE
    mov         dword ptr [rdi],label_0CCCC
    jmp         000000014001CF0E
    call        0000000140019D00
    xor         edx,edx
    mov         rdi,rax
    test        rax,rax
    je          000000014001CF12
    mov         dword ptr [rax],label_0DDDD
    add         rdi,label_10
    test        rdi,rdi
    je          000000014001CFBE
    mov         qword ptr [rsp+label_40],rdx
    mov         r9d,r15d
    mov         qword ptr [rsp+label_38],rdx
    mov         r8,rbx
    mov         qword ptr [rsp+label_30],rdx
    mov         rcx,r13
    mov         dword ptr [rsp+label_28],esi
    mov         edx,r12d
    mov         qword ptr [rsp+label_20],rdi
    call        000000014001BA70
    xor         edx,edx
    test        eax,eax
    je          000000014001CFA8
    mov         eax,dword ptr [rbp+label_70]
    mov         r9d,esi
    mov         qword ptr [rsp+label_38],rdx
    mov         r8,rdi
    mov         qword ptr [rsp+label_30],rdx
    mov         ecx,r14d
    test        eax,eax
    jne         000000014001CF7A
    mov         dword ptr [rsp+label_28],edx
    mov         qword ptr [rsp+label_20],rdx
    call        0000000140020100
    mov         esi,eax
    test        eax,eax
    jne         000000014001CF92
    jmp         000000014001CFA8
    mov         dword ptr [rsp+label_28],eax
    mov         rax,qword ptr [rbp+label_68]
    mov         qword ptr [rsp+label_20],rax
    call        0000000140020100
    mov         esi,eax
    test        eax,eax
    je          000000014001CFAD
    lea         rcx,[rdi-label_10]
    cmp         dword ptr [rcx],label_0DDDD
    jne         000000014001CFCC
    call        0000000140019CC4
    jmp         000000014001CFCC
    mov         rdi,rdx
    test        rdi,rdi
    je          000000014001CFBE
    lea         rcx,[rdi-label_10]
    cmp         dword ptr [rcx],label_0DDDD
    jne         000000014001CFBE
    call        0000000140019CC4
    xor         esi,esi
    jmp         000000014001CFCC
    mov         rbx,rdx
    mov         esi,edx
    test        rbx,rbx
    je          000000014001CFDD
    lea         rcx,[rbx-label_10]
    cmp         dword ptr [rcx],label_0DDDD
    jne         000000014001CFDD
    call        0000000140019CC4
    mov         eax,esi
    mov         rcx,qword ptr [rbp+8]
    xor         rcx,rbp
    call        00000001400099A0
    mov         rbx,qword ptr [rbp+label_40]
    mov         rsi,qword ptr [rbp+label_48]
    mov         rdi,qword ptr [rbp+label_50]
    lea         rsp,[rbp+label_10]
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rbp
    ret
func_000000014001D004_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_70
    mov         rsi,rdx
    mov         rbx,r9
    mov         rdx,rcx
    mov         edi,r8d
    lea         rcx,[rsp+label_50]
    call        0000000140015394
    mov         eax,dword ptr [rsp+label_00000000000000C0]
    lea         rcx,[rsp+label_58]
    mov         dword ptr [rsp+label_40],eax
    mov         r9,rbx
    mov         eax,dword ptr [rsp+label_00000000000000B8]
    mov         r8d,edi
    mov         dword ptr [rsp+label_38],eax
    mov         rdx,rsi
    mov         eax,dword ptr [rsp+label_00000000000000B0]
    mov         dword ptr [rsp+label_30],eax
    mov         rax,qword ptr [rsp+label_00000000000000A8]
    mov         qword ptr [rsp+label_28],rax
    mov         eax,dword ptr [rsp+label_00000000000000A0]
    mov         dword ptr [rsp+label_20],eax
    call        000000014001CCD4
    cmp         byte ptr [rsp+label_68],0
    je          000000014001D08C
    mov         rcx,qword ptr [rsp+label_50]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    lea         r11,[rsp+label_70]
    mov         rbx,qword ptr [r11+label_10]
    mov         rsi,qword ptr [r11+label_18]
    mov         rsp,r11
    pop         rdi
    ret
func_000000014001D09D_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    xor         ebx,ebx
    test        rcx,rcx
    je          000000014001D0BA
    test        rdx,rdx
    je          000000014001D0BA
    test        r8,r8
    jne         000000014001D0D3
    mov         word ptr [rcx],bx
    call        0000000140015374
    mov         ebx,label_16
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         eax,ebx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001D0D2_end:
    mov         r9,rcx
    sub         r8,rcx
    movzx       eax,word ptr [r8+r9]
    mov         word ptr [r9],ax
    lea         r9,[r9+2]
    test        ax,ax
    je          000000014001D0CB
    sub         rdx,1
    jne         000000014001D0D9
    test        rdx,rdx
    jne         000000014001D0CB
    mov         word ptr [rcx],bx
    call        0000000140015374
    mov         ebx,label_22
    jmp         000000014001D0C4
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    push        rdi
    sub         rsp,label_30
    and         dword ptr [rsp+label_20],0
    mov         ecx,8
    call        0000000140012C60
    nop
    mov         ebx,3
    mov         dword ptr [rsp+label_24],ebx
    cmp         ebx,dword ptr [label_000000014003E0E8]
    je          000000014001D1A1
    movsxd      rdi,ebx
    mov         rax,qword ptr [label_000000014003E0F0]
    mov         rcx,qword ptr [rax+rdi*8]
    test        rcx,rcx
    jne         000000014001D148
    jmp         000000014001D19D
    mov         eax,dword ptr [rcx+label_14]
    nop
    shr         eax,label_0D
    and         al,1
    je          000000014001D16C
    mov         rcx,qword ptr [label_000000014003E0F0]
    mov         rcx,qword ptr [rcx+rdi*8]
    call        0000000140013C20
    cmp         eax,label_0FFFFFFFF
    je          000000014001D16C
    inc         dword ptr [rsp+label_20]
    mov         rax,qword ptr [label_000000014003E0F0]
    mov         rcx,qword ptr [rax+rdi*8]
    add         rcx,label_30
    call label_000000014002C018
    mov         rcx,qword ptr [label_000000014003E0F0]
    mov         rcx,qword ptr [rcx+rdi*8]
    call        0000000140019CC4
    mov         rax,qword ptr [label_000000014003E0F0]
    and         qword ptr [rax+rdi*8],0
    inc         ebx
    jmp         000000014001D127
    mov         ecx,8
    call        0000000140012CB4
    mov         eax,dword ptr [rsp+label_20]
    mov         rbx,qword ptr [rsp+label_48]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014001D1B9_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    mov         eax,dword ptr [rcx+label_14]
    mov         rbx,rcx
    shr         eax,label_0D
    nop
    test        al,1
    je          000000014001D1F8
    mov         eax,dword ptr [rcx+label_14]
    nop
    shr         eax,6
    test        al,1
    je          000000014001D1F8
    mov         rcx,qword ptr [rcx+8]
    call        0000000140019CC4
    lock and    dword ptr [rbx+label_14],label_0FFFFFEBF
    xor         eax,eax
    mov         qword ptr [rbx+8],rax
    mov         qword ptr [rbx],rax
    mov         dword ptr [rbx+label_10],eax
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001D1FD_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rdi,r9
    mov         rbx,r8
    mov         ecx,dword ptr [rdx]
    call        000000014002225C
    nop
    mov         rax,qword ptr [rbx]
    movsxd      rcx,dword ptr [rax]
    mov         r10,rcx
    mov         rdx,qword ptr [rbx+8]
    mov         rax,rcx
    sar         rax,6
    lea         r9,[label_000000014003E300]
    and         r10d,label_3F
    lea         r8,[r10+r10*8]
    mov         rax,qword ptr [r9+rax*8]
    test        byte ptr [rax+r8*8+label_38],1
    je          000000014001D255
    call        000000014001D33C
    mov         ebx,eax
    jmp         000000014001D263
    mov         byte ptr [rdx+label_30],1
    mov         dword ptr [rdx+label_2C],9
    or          ebx,label_0FFFFFFFF
    mov         ecx,dword ptr [rdi]
    call        0000000140022284
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001D276_end:
    int         3
    mov         dword ptr [rsp+8],ecx
    sub         rsp,label_58
    movsxd      r8,ecx
    xor         r9d,r9d
    cmp         r8d,label_0FFFFFFFE
    jne         000000014001D2A4
    mov         byte ptr [rdx+label_38],1
    mov         dword ptr [rdx+label_34],r9d
    mov         byte ptr [rdx+label_30],1
    mov         dword ptr [rdx+label_2C],9
    jmp         000000014001D331
    test        ecx,ecx
    js          000000014001D308
    cmp         r8d,dword ptr [label_000000014003E700]
    jae         000000014001D308
    mov         rcx,r8
    lea         r10,[label_000000014003E300]
    and         ecx,label_3F
    mov         rax,r8
    sar         rax,6
    lea         rcx,[rcx+rcx*8]
    mov         rax,qword ptr [r10+rax*8]
    test        byte ptr [rax+rcx*8+label_38],1
    je          000000014001D308
    lea         rax,[rsp+label_60]
    mov         qword ptr [rsp+label_40],rdx
    mov         dword ptr [rsp+label_78],r8d
    lea         rdx,[rsp+label_30]
    mov         dword ptr [rsp+label_30],r8d
    lea         r9,[rsp+label_78]
    lea         r8,[rsp+label_38]
    mov         qword ptr [rsp+label_38],rax
    lea         rcx,[rsp+label_70]
    call        000000014001D200
    jmp         000000014001D334
    mov         byte ptr [rdx+label_38],1
    xor         r8d,r8d
    mov         dword ptr [rdx+label_34],r9d
    xor         ecx,ecx
    mov         byte ptr [rdx+label_30],1
    mov         qword ptr [rsp+label_28],rdx
    mov         dword ptr [rdx+label_2C],9
    xor         edx,edx
    mov         qword ptr [rsp+label_20],r9
    call        0000000140010530
    or          eax,label_0FFFFFFFF
    add         rsp,label_58
    ret
func_000000014001D338_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    movsxd      rdi,ecx
    mov         rsi,rdx
    mov         ecx,edi
    call        0000000140022368
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    jne         000000014001D362
    xor         ebx,ebx
    jmp         000000014001D3BC
    mov         rax,qword ptr [label_000000014003E300]
    mov         ecx,2
    cmp         edi,1
    jne         000000014001D37C
    test        byte ptr [rax+label_00000000000000C8],dil
    jne         000000014001D389
    cmp         edi,ecx
    jne         000000014001D3A0
    test        byte ptr [rax+label_0000000000000080],1
    je          000000014001D3A0
    call        0000000140022368
    mov         ecx,1
    mov         rbx,rax
    call        0000000140022368
    cmp         rax,rbx
    je          000000014001D35E
    mov         ecx,edi
    call        0000000140022368
    mov         rcx,rax
    call label_000000014002C1E8
    test        eax,eax
    jne         000000014001D35E
    call label_000000014002C0F8
    mov         ebx,eax
    mov         ecx,edi
    call        00000001400222AC
    mov         rdx,rdi
    lea         r8,[label_000000014003E300]
    and         edx,label_3F
    mov         rcx,rdi
    sar         rcx,6
    lea         rdx,[rdx+rdx*8]
    mov         rcx,qword ptr [r8+rcx*8]
    mov         byte ptr [rcx+rdx*8+label_38],0
    test        ebx,ebx
    je          000000014001D3F7
    mov         rdx,rsi
    mov         ecx,ebx
    call        0000000140015330
    or          eax,label_0FFFFFFFF
    jmp         000000014001D3F9
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001D408_end:
    int         3
    int         3
    int         3
    or          dword ptr [rcx+label_18],label_0FFFFFFFF
    xor         eax,eax
    mov         qword ptr [rcx],rax
    mov         qword ptr [rcx+8],rax
    mov         dword ptr [rcx+label_10],eax
    mov         qword ptr [rcx+label_1C],rax
    mov         qword ptr [rcx+label_28],rax
    xchg        eax,dword ptr [rcx+label_14]
    ret
func_000000014001D427_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rdi,r9
    mov         rbx,r8
    mov         ecx,dword ptr [rdx]
    call        000000014002225C
    nop
    mov         rax,qword ptr [rbx]
    movsxd      rcx,dword ptr [rax]
    mov         rdx,rcx
    mov         rax,rcx
    sar         rax,6
    lea         r8,[label_000000014003E300]
    and         edx,label_3F
    lea         rdx,[rdx+rdx*8]
    mov         rax,qword ptr [r8+rax*8]
    test        byte ptr [rax+rdx*8+label_38],1
    je          000000014001D491
    call        0000000140022368
    mov         rcx,rax
    call label_000000014002C1F0
    xor         ebx,ebx
    test        eax,eax
    jne         000000014001D49F
    call label_000000014002C0F8
    mov         ebx,eax
    call        0000000140015354
    mov         dword ptr [rax],ebx
    call        0000000140015374
    mov         dword ptr [rax],9
    or          ebx,label_0FFFFFFFF
    mov         ecx,dword ptr [rdi]
    call        0000000140022284
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001D4B2_end:
    int         3
    mov         dword ptr [rsp+8],ecx
    sub         rsp,label_38
    movsxd      rdx,ecx
    cmp         edx,label_0FFFFFFFE
    jne         000000014001D4D1
    call        0000000140015374
    mov         dword ptr [rax],9
    jmp         000000014001D53D
    test        ecx,ecx
    js          000000014001D52D
    cmp         edx,dword ptr [label_000000014003E700]
    jae         000000014001D52D
    mov         rcx,rdx
    lea         r8,[label_000000014003E300]
    and         ecx,label_3F
    mov         rax,rdx
    sar         rax,6
    lea         rcx,[rcx+rcx*8]
    mov         rax,qword ptr [r8+rax*8]
    test        byte ptr [rax+rcx*8+label_38],1
    je          000000014001D52D
    lea         rax,[rsp+label_40]
    mov         dword ptr [rsp+label_50],edx
    mov         dword ptr [rsp+label_58],edx
    lea         r9,[rsp+label_50]
    lea         rdx,[rsp+label_58]
    mov         qword ptr [rsp+label_20],rax
    lea         r8,[rsp+label_20]
    lea         rcx,[rsp+label_48]
    call        000000014001D428
    jmp         000000014001D540
    call        0000000140015374
    mov         dword ptr [rax],9
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    add         rsp,label_38
    ret
func_000000014001D544_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    lea         rbp,[rax-label_57]
    sub         rsp,label_0D0
    mov         qword ptr [rbp-9],label_0FFFFFFFFFFFFFFFE
    mov         qword ptr [rax+8],rbx
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_17],rax
    mov         rsi,r8
    mov         qword ptr [rbp-label_41],r8
    movsxd      r14,edx
    mov         rbx,rcx
    mov         rax,qword ptr [rbp+label_7F]
    mov         qword ptr [rbp-label_59],rax
    mov         rax,r14
    mov         r13,r14
    sar         r13,6
    mov         qword ptr [rbp-label_39],r13
    lea         rcx,[label_0000000140000000]
    and         eax,label_3F
    lea         r15,[rax+rax*8]
    mov         rax,qword ptr [rcx+r13*8+label_000000000003E300]
    mov         rax,qword ptr [rax+r15*8+label_28]
    mov         qword ptr [rbp-label_19],rax
    mov         r12d,r9d
    add         r12,r8
    mov         qword ptr [rbp-label_61],r12
    call label_000000014002C1F8
    mov         dword ptr [rbp-label_49],eax
    xor         edi,edi
    mov         r10,qword ptr [rbp-label_59]
    cmp         byte ptr [r10+label_28],dil
    jne         000000014001D5E8
    mov         rcx,r10
    call        0000000140012780
    mov         r10,qword ptr [rbp-label_59]
    mov         rcx,qword ptr [r10+label_18]
    mov         ecx,dword ptr [rcx+label_0C]
    mov         dword ptr [rbp-label_45],ecx
    xor         eax,eax
    mov         qword ptr [rbx],rax
    mov         dword ptr [rbx+8],eax
    cmp         qword ptr [rbp-label_41],r12
    jae         000000014001D993
    mov         r9,r14
    sar         r9,6
    mov         qword ptr [rbp-label_11],r9
    mov         edx,edi
    mov         al,byte ptr [rsi]
    mov         byte ptr [rbp-label_71],al
    mov         dword ptr [rbp-label_6D],edi
    mov         r12d,1
    lea         r11,[label_0000000140000000]
    cmp         ecx,label_0FDE9
    jne         000000014001D7AD
    mov         edx,edi
    mov         r14,rdi
    lea         rcx,[r15*8+label_000000000000003E]
    add         rcx,qword ptr [r11+r9*8+label_000000000003E300]
    cmp         byte ptr [rcx],dil
    je          000000014001D65A
    inc         edx
    inc         r14
    inc         rcx
    cmp         r14,5
    jl          000000014001D647
    test        r14,r14
    jle         000000014001D743
    mov         rax,qword ptr [r11+r13*8+label_000000000003E300]
    movzx       ecx,byte ptr [rax+r15*8+label_3E]
    movsx       r12d,byte ptr [rcx+r11+label_000000000003C470]
    inc         r12d
    mov         eax,r12d
    sub         eax,edx
    mov         dword ptr [rbp-label_51],eax
    mov         rdx,qword ptr [rbp-label_61]
    sub         rdx,rsi
    movsxd      r8,eax
    cmp         r8,rdx
    jg          000000014001D910
    mov         rcx,rdi
    lea         rdx,[r15*8+label_000000000000003E]
    add         rdx,qword ptr [r11+r9*8+label_000000000003E300]
    mov         al,byte ptr [rdx]
    mov         byte ptr [rbp+rcx-1],al
    inc         rcx
    inc         rdx
    cmp         rcx,r14
    jl          000000014001D6AB
    test        r8,r8
    jle         000000014001D6DB
    lea         rcx,[rbp-1]
    add         rcx,r14
    mov         rdx,rsi
    call        0000000140029A70
    mov         r10,qword ptr [rbp-label_59]
    lea         r11,[label_0000000140000000]
    mov         rdx,rdi
    mov         rcx,qword ptr [r11+r13*8+label_000000000003E300]
    add         rcx,rdx
    mov         byte ptr [rcx+r15*8+label_3E],dil
    inc         rdx
    cmp         rdx,r14
    jl          000000014001D6DE
    mov         qword ptr [rbp-label_31],rdi
    lea         rax,[rbp-1]
    mov         qword ptr [rbp-label_29],rax
    mov         eax,edi
    cmp         r12d,4
    sete        al
    inc         eax
    mov         r12d,eax
    mov         r8d,eax
    mov         qword ptr [rsp+label_20],r10
    lea         r9,[rbp-label_31]
    lea         rdx,[rbp-label_29]
    lea         rcx,[rbp-label_6D]
    call        0000000140026364
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          000000014001D993
    mov         eax,dword ptr [rbp-label_51]
    dec         eax
    movsxd      rcx,eax
    add         rsi,rcx
    jmp         000000014001D83E
    movzx       eax,byte ptr [rsi]
    movsx       r13,byte ptr [rax+r11+label_000000000003C470]
    lea         ecx,[r13+1]
    mov         r8,qword ptr [rbp-label_61]
    sub         r8,rsi
    movsxd      rax,ecx
    cmp         rax,r8
    jg          000000014001D93E
    mov         qword ptr [rbp-label_51],rdi
    mov         qword ptr [rbp-label_21],rsi
    mov         eax,edi
    cmp         ecx,4
    sete        al
    inc         eax
    mov         r14d,eax
    mov         r8d,eax
    mov         qword ptr [rsp+label_20],r10
    lea         r9,[rbp-label_51]
    lea         rdx,[rbp-label_21]
    lea         rcx,[rbp-label_6D]
    call        0000000140026364
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          000000014001D993
    add         rsi,r13
    mov         r12d,r14d
    mov         r13,qword ptr [rbp-label_39]
    jmp         000000014001D83E
    mov         r8,qword ptr [r11+r13*8+label_000000000003E300]
    mov         cl,byte ptr [r8+r15*8+label_3D]
    test        cl,4
    je          000000014001D7E0
    mov         al,byte ptr [r8+r15*8+label_3E]
    mov         byte ptr [rbp+7],al
    mov         al,byte ptr [rsi]
    mov         byte ptr [rbp+8],al
    and         cl,label_0FB
    mov         byte ptr [r8+r15*8+label_3D],cl
    mov         r8d,2
    lea         rdx,[rbp+7]
    jmp         000000014001D829
    movzx       r9d,byte ptr [rsi]
    mov         rax,qword ptr [r10+label_18]
    mov         rcx,qword ptr [rax]
    cmp         word ptr [rcx+r9*2],di
    jge         000000014001D823
    lea         r14,[rsi+1]
    cmp         r14,qword ptr [rbp-label_61]
    jae         000000014001D970
    mov         r9,r10
    mov         r8d,2
    mov         rdx,rsi
    lea         rcx,[rbp-label_6D]
    call        000000014001ADE4
    cmp         eax,label_0FFFFFFFF
    je          000000014001D993
    mov         rsi,r14
    jmp         000000014001D83E
    mov         r8,r12
    mov         rdx,rsi
    mov         r9,r10
    lea         rcx,[rbp-label_6D]
    call        000000014001ADE4
    cmp         eax,label_0FFFFFFFF
    je          000000014001D993
    inc         rsi
    mov         qword ptr [rsp+label_38],rdi
    mov         qword ptr [rsp+label_30],rdi
    mov         dword ptr [rsp+label_28],5
    lea         rax,[rbp+label_0F]
    mov         qword ptr [rsp+label_20],rax
    mov         r9d,r12d
    lea         r8,[rbp-label_6D]
    xor         edx,edx
    mov         ecx,dword ptr [rbp-label_49]
    call        0000000140020100
    mov         r14d,eax
    test        eax,eax
    je          000000014001D993
    mov         qword ptr [rsp+label_20],rdi
    lea         r9,[rbp-label_69]
    mov         r8d,eax
    lea         rdx,[rbp+label_0F]
    mov         r12,qword ptr [rbp-label_19]
    mov         rcx,r12
    call label_000000014002C150
    test        eax,eax
    je          000000014001D98B
    mov         edx,esi
    sub         edx,dword ptr [rbp-label_41]
    add         edx,dword ptr [rbx+8]
    mov         dword ptr [rbx+4],edx
    cmp         dword ptr [rbp-label_69],r14d
    jb          000000014001D993
    cmp         byte ptr [rbp-label_71],label_0A
    jne         000000014001D8F6
    mov         eax,label_0D
    mov         word ptr [rbp-label_71],ax
    mov         qword ptr [rsp+label_20],rdi
    lea         r9,[rbp-label_69]
    lea         r8d,[rax-label_0C]
    lea         rdx,[rbp-label_71]
    mov         rcx,r12
    call label_000000014002C150
    test        eax,eax
    je          000000014001D98B
    cmp         dword ptr [rbp-label_69],1
    jb          000000014001D993
    inc         dword ptr [rbx+8]
    inc         dword ptr [rbx+4]
    mov         edx,dword ptr [rbx+4]
    cmp         rsi,qword ptr [rbp-label_61]
    jae         000000014001D993
    mov         r10,qword ptr [rbp-label_59]
    mov         r9,qword ptr [rbp-label_11]
    mov         ecx,dword ptr [rbp-label_45]
    jmp         000000014001D611
    test        rdx,rdx
    jle         000000014001D939
    sub         rsi,r14
    mov         rcx,qword ptr [r11+r13*8+label_000000000003E300]
    add         rcx,r14
    mov         al,byte ptr [rsi+r14]
    mov         byte ptr [rcx+r15*8+label_3E],al
    inc         edi
    inc         r14
    movsxd      rax,edi
    cmp         rax,rdx
    jl          000000014001D918
    add         dword ptr [rbx+4],edx
    jmp         000000014001D993
    test        r8,r8
    jle         000000014001D96A
    mov         rdx,rdi
    mov         r9,qword ptr [rbp-label_39]
    mov         rcx,qword ptr [r11+r9*8+label_000000000003E300]
    add         rcx,rdx
    mov         al,byte ptr [rdx+rsi]
    mov         byte ptr [rcx+r15*8+label_3E],al
    inc         edi
    inc         rdx
    movsxd      rax,edi
    cmp         rax,r8
    jl          000000014001D94A
    add         dword ptr [rbx+4],r8d
    jmp         000000014001D993
    mov         byte ptr [r8+r15*8+label_3E],r9b
    mov         rax,qword ptr [r11+r13*8+label_000000000003E300]
    or          byte ptr [rax+r15*8+label_3D],4
    lea         eax,[rdx+1]
    mov         dword ptr [rbx+4],eax
    jmp         000000014001D993
    call label_000000014002C0F8
    mov         dword ptr [rbx],eax
    mov         rax,rbx
    mov         rcx,qword ptr [rbp+label_17]
    xor         rcx,rsp
    call        00000001400099A0
    mov         rbx,qword ptr [rsp+label_0000000000000110]
    add         rsp,label_0D0
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014001D9BC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_18],rbp
    push        rsi
    push        rdi
    push        r14
    mov         eax,label_1450
    call        0000000140009F30
    sub         rsp,rax
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000001440],rax
    movsxd      r10,edx
    mov         rdi,rcx
    mov         rax,r10
    mov         ebp,r9d
    sar         rax,6
    lea         rcx,[label_000000014003E300]
    and         r10d,label_3F
    add         rbp,r8
    mov         rsi,r8
    mov         rax,qword ptr [rcx+rax*8]
    lea         rdx,[r10+r10*8]
    mov         r14,qword ptr [rax+rdx*8+label_28]
    xor         eax,eax
    mov         qword ptr [rdi],rax
    mov         dword ptr [rdi+8],eax
    cmp         r8,rbp
    jae         000000014001DA97
    lea         rbx,[rsp+label_40]
    cmp         rsi,rbp
    jae         000000014001DA56
    mov         al,byte ptr [rsi]
    inc         rsi
    cmp         al,label_0A
    jne         000000014001DA44
    inc         dword ptr [rdi+8]
    mov         byte ptr [rbx],label_0D
    inc         rbx
    mov         byte ptr [rbx],al
    inc         rbx
    lea         rax,[rsp+label_000000000000143F]
    cmp         rbx,rax
    jb          000000014001DA2D
    and         qword ptr [rsp+label_20],0
    lea         rax,[rsp+label_40]
    sub         ebx,eax
    lea         r9,[rsp+label_30]
    mov         r8d,ebx
    lea         rdx,[rsp+label_40]
    mov         rcx,r14
    call label_000000014002C150
    test        eax,eax
    je          000000014001DA8F
    mov         eax,dword ptr [rsp+label_30]
    add         dword ptr [rdi+4],eax
    cmp         eax,ebx
    jb          000000014001DA97
    cmp         rsi,rbp
    jb          000000014001DA28
    jmp         000000014001DA97
    call label_000000014002C0F8
    mov         dword ptr [rdi],eax
    mov         rax,rdi
    mov         rcx,qword ptr [rsp+label_0000000000001440]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000001450]
    mov         rbx,qword ptr [r11+label_20]
    mov         rbp,qword ptr [r11+label_30]
    mov         rsp,r11
    pop         r14
    pop         rdi
    pop         rsi
    ret
func_000000014001DAC1_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_18],rbp
    push        rsi
    push        rdi
    push        r14
    mov         eax,label_1450
    call        0000000140009F30
    sub         rsp,rax
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000001440],rax
    movsxd      r10,edx
    mov         rdi,rcx
    mov         rax,r10
    mov         ebp,r9d
    sar         rax,6
    lea         rcx,[label_000000014003E300]
    and         r10d,label_3F
    add         rbp,r8
    mov         rsi,r8
    mov         rax,qword ptr [rcx+rax*8]
    lea         rdx,[r10+r10*8]
    mov         r14,qword ptr [rax+rdx*8+label_28]
    xor         eax,eax
    mov         qword ptr [rdi],rax
    mov         dword ptr [rdi+8],eax
    cmp         r8,rbp
    jae         000000014001DBB2
    lea         rbx,[rsp+label_40]
    cmp         rsi,rbp
    jae         000000014001DB6B
    movzx       eax,word ptr [rsi]
    add         rsi,2
    cmp         ax,label_0A
    jne         000000014001DB57
    add         dword ptr [rdi+8],2
    mov         ecx,label_0D
    mov         word ptr [rbx],cx
    add         rbx,2
    mov         word ptr [rbx],ax
    add         rbx,2
    lea         rax,[rsp+label_000000000000143E]
    cmp         rbx,rax
    jb          000000014001DB35
    and         qword ptr [rsp+label_20],0
    lea         rax,[rsp+label_40]
    sub         rbx,rax
    lea         r9,[rsp+label_30]
    sar         rbx,1
    lea         rdx,[rsp+label_40]
    add         ebx,ebx
    mov         rcx,r14
    mov         r8d,ebx
    call label_000000014002C150
    test        eax,eax
    je          000000014001DBAA
    mov         eax,dword ptr [rsp+label_30]
    add         dword ptr [rdi+4],eax
    cmp         eax,ebx
    jb          000000014001DBB2
    cmp         rsi,rbp
    jb          000000014001DB30
    jmp         000000014001DBB2
    call label_000000014002C0F8
    mov         dword ptr [rdi],eax
    mov         rax,rdi
    mov         rcx,qword ptr [rsp+label_0000000000001440]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000001450]
    mov         rbx,qword ptr [r11+label_20]
    mov         rbp,qword ptr [r11+label_30]
    mov         rsp,r11
    pop         r14
    pop         rdi
    pop         rsi
    ret
func_000000014001DBDC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_18],rbp
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    mov         eax,label_1470
    call        0000000140009F30
    sub         rsp,rax
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000001460],rax
    movsxd      r10,edx
    mov         rbx,rcx
    mov         rax,r10
    mov         r14d,r9d
    sar         rax,6
    lea         rcx,[label_000000014003E300]
    and         r10d,label_3F
    add         r14,r8
    mov         r15,r8
    mov         rdi,r8
    mov         rax,qword ptr [rcx+rax*8]
    lea         rdx,[r10+r10*8]
    mov         r12,qword ptr [rax+rdx*8+label_28]
    xor         eax,eax
    mov         qword ptr [rbx],rax
    cmp         r8,r14
    mov         dword ptr [rbx+8],eax
    jae         000000014001DD21
    lea         rax,[rsp+label_50]
    cmp         rdi,r14
    jae         000000014001DC8A
    movzx       ecx,word ptr [rdi]
    add         rdi,2
    cmp         cx,label_0A
    jne         000000014001DC76
    mov         edx,label_0D
    mov         word ptr [rax],dx
    add         rax,2
    mov         word ptr [rax],cx
    add         rax,2
    lea         rcx,[rsp+label_00000000000006F8]
    cmp         rax,rcx
    jb          000000014001DC58
    and         qword ptr [rsp+label_38],0
    lea         rcx,[rsp+label_50]
    and         qword ptr [rsp+label_30],0
    lea         r8,[rsp+label_50]
    sub         rax,rcx
    mov         dword ptr [rsp+label_28],label_0D55
    lea         rcx,[rsp+label_0000000000000700]
    sar         rax,1
    mov         qword ptr [rsp+label_20],rcx
    mov         r9d,eax
    mov         ecx,label_0FDE9
    xor         edx,edx
    call        0000000140020100
    mov         ebp,eax
    test        eax,eax
    je          000000014001DD19
    xor         esi,esi
    test        eax,eax
    je          000000014001DD09
    and         qword ptr [rsp+label_20],0
    lea         rdx,[rsp+label_0000000000000700]
    mov         ecx,esi
    lea         r9,[rsp+label_40]
    mov         r8d,ebp
    add         rdx,rcx
    mov         rcx,r12
    sub         r8d,esi
    call label_000000014002C150
    test        eax,eax
    je          000000014001DD19
    add         esi,dword ptr [rsp+label_40]
    cmp         esi,ebp
    jb          000000014001DCD6
    mov         eax,edi
    sub         eax,r15d
    mov         dword ptr [rbx+4],eax
    cmp         rdi,r14
    jmp         000000014001DC4D
    call label_000000014002C0F8
    mov         dword ptr [rbx],eax
    mov         rax,rbx
    mov         rcx,qword ptr [rsp+label_0000000000001460]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000001470]
    mov         rbx,qword ptr [r11+label_30]
    mov         rbp,qword ptr [r11+label_40]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    ret
func_000000014001DD4F_end:
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_10],rdx
    mov         dword ptr [rsp+8],ecx
    push        rsi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         rbx,r9
    mov         r13d,r8d
    movsxd      rsi,ecx
    cmp         esi,label_0FFFFFFFE
    jne         000000014001DDA6
    mov         byte ptr [r9+label_38],1
    and         dword ptr [r9+label_34],0
    mov         byte ptr [r9+label_30],1
    mov         dword ptr [r9+label_2C],9
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_70]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rsi
    ret
func_000000014001DDA5_end:
    test        ecx,ecx
    js          000000014001DDB9
    cmp         esi,dword ptr [label_000000014003E700]
    jae         000000014001DDB9
    mov         eax,1
    jmp         000000014001DDBB
    xor         eax,eax
    test        eax,eax
    jne         000000014001DDF2
    mov         byte ptr [r9+label_38],1
    and         dword ptr [r9+label_34],0
    mov         byte ptr [r9+label_30],1
    mov         dword ptr [r9+label_2C],9
    mov         qword ptr [rsp+label_28],rbx
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    jmp         000000014001DD90
    mov         rax,rsi
    mov         r15,rsi
    sar         r15,6
    lea         rcx,[label_000000014003E300]
    and         eax,label_3F
    lea         r12,[rax+rax*8]
    mov         rax,qword ptr [rcx+r15*8]
    test        byte ptr [rax+r12*8+label_38],1
    je          000000014001DDBF
    mov         ecx,esi
    call        000000014002225C
    or          r14d,label_0FFFFFFFF
    lea         rax,[label_000000014003E300]
    mov         rax,qword ptr [rax+r15*8]
    test        byte ptr [rax+r12*8+label_38],1
    jne         000000014001DE49
    mov         byte ptr [rbx+label_30],1
    mov         dword ptr [rbx+label_2C],9
    mov         byte ptr [rbx+label_38],1
    and         dword ptr [rbx+label_34],0
    jmp         000000014001DE5E
    mov         r9,rbx
    mov         r8d,r13d
    mov         rdx,qword ptr [rsp+label_68]
    mov         ecx,esi
    call        000000014001DE70
    mov         r14d,eax
    mov         ecx,esi
    call        0000000140022284
    mov         eax,r14d
    jmp         000000014001DD93
    int         3
    int         3
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    mov         rbp,rsp
    sub         rsp,label_78
    xor         edi,edi
    mov         r14d,r8d
    movsxd      r15,ecx
    mov         rbx,r9
    mov         rsi,rdx
    test        r8d,r8d
    je          000000014001E163
    test        rdx,rdx
    jne         000000014001DED7
    mov         byte ptr [r9+label_38],1
    xor         r8d,r8d
    mov         dword ptr [r9+label_34],edi
    xor         edx,edx
    mov         byte ptr [r9+label_30],1
    xor         ecx,ecx
    mov         dword ptr [r9+label_2C],label_16
    xor         r9d,r9d
    mov         qword ptr [rsp+label_28],rbx
    mov         qword ptr [rsp+label_20],rdi
    call        0000000140010530
    or          eax,label_0FFFFFFFF
    jmp         000000014001E165
    mov         rax,r15
    lea         rcx,[label_000000014003E300]
    and         eax,label_3F
    mov         r12,r15
    sar         r12,6
    mov         qword ptr [rbp-label_18],r12
    lea         r13,[rax+rax*8]
    mov         rcx,qword ptr [rcx+r12*8]
    mov         al,byte ptr [rcx+r13*8+label_39]
    mov         byte ptr [rbp-label_48],al
    dec         al
    cmp         al,1
    ja          000000014001DF0E
    mov         eax,r14d
    not         eax
    test        al,1
    je          000000014001DEA0
    test        byte ptr [rcx+r13*8+label_38],label_20
    je          000000014001DF24
    xor         edx,edx
    mov         ecx,r15d
    lea         r8d,[rdx+2]
    call        000000014001F7BC
    mov         ecx,r15d
    mov         qword ptr [rbp-label_30],rdi
    call        0000000140026508
    lea         rdx,[label_000000014003E300]
    test        eax,eax
    je          000000014001E053
    mov         rax,qword ptr [rdx+r12*8]
    cmp         byte ptr [rax+r13*8+label_38],dil
    jge         000000014001E053
    cmp         byte ptr [rbx+label_28],dil
    jne         000000014001DF63
    mov         rcx,rbx
    call        0000000140012780
    lea         rdx,[label_000000014003E300]
    mov         rax,qword ptr [rbx+label_18]
    cmp         qword ptr [rax+label_0000000000000138],rdi
    jne         000000014001DF7F
    mov         rax,qword ptr [rdx+r12*8]
    cmp         byte ptr [rax+r13*8+label_39],dil
    je          000000014001E053
    mov         rcx,qword ptr [rdx+r12*8]
    lea         rdx,[rbp-label_20]
    mov         rcx,qword ptr [rcx+r13*8+label_28]
    call label_000000014002C200
    test        eax,eax
    je          000000014001E04C
    movsx       ecx,byte ptr [rbp-label_48]
    test        ecx,ecx
    je          000000014001E029
    sub         ecx,1
    je          000000014001DFB4
    cmp         ecx,1
    jne         000000014001E0ED
    lea         r12,[rsi+r14]
    mov         qword ptr [rbp-label_40],rdi
    mov         r15,rsi
    cmp         rsi,r12
    jae         000000014001E020
    mov         r14d,dword ptr [rbp-label_3C]
    movzx       eax,word ptr [r15]
    movzx       ecx,ax
    mov         word ptr [rbp-label_48],ax
    call        0000000140026938
    movzx       ecx,word ptr [rbp-label_48]
    cmp         ax,cx
    jne         000000014001E017
    add         r14d,2
    mov         dword ptr [rbp-label_3C],r14d
    cmp         cx,label_0A
    jne         000000014001E00C
    mov         ecx,label_0D
    call        0000000140026938
    mov         ecx,label_0D
    cmp         ax,cx
    jne         000000014001E017
    inc         r14d
    mov         dword ptr [rbp-label_3C],r14d
    inc         edi
    add         r15,2
    cmp         r15,r12
    jae         000000014001E020
    jmp         000000014001DFC8
    call label_000000014002C0F8
    mov         dword ptr [rbp-label_40],eax
    mov         r12,qword ptr [rbp-label_18]
    jmp         000000014001E0E3
    mov         r9d,r14d
    mov         qword ptr [rsp+label_20],rbx
    mov         r8,rsi
    lea         rcx,[rbp-label_40]
    mov         edx,r15d
    call        000000014001D548
    movsd       xmm0,mmword ptr [rax]
    mov         edi,dword ptr [rax+8]
    jmp         000000014001E0E8
    lea         rdx,[label_000000014003E300]
    mov         rcx,qword ptr [rdx+r12*8]
    cmp         byte ptr [rcx+r13*8+label_38],dil
    jge         000000014001E0B0
    movsx       ecx,byte ptr [rbp-label_48]
    test        ecx,ecx
    je          000000014001E09C
    sub         ecx,1
    je          000000014001E088
    cmp         ecx,1
    jne         000000014001E0F4
    mov         r9d,r14d
    lea         rcx,[rbp-label_40]
    mov         r8,rsi
    mov         edx,r15d
    call        000000014001DAC4
    jmp         000000014001E040
    mov         r9d,r14d
    lea         rcx,[rbp-label_40]
    mov         r8,rsi
    mov         edx,r15d
    call        000000014001DBE0
    jmp         000000014001E040
    mov         r9d,r14d
    lea         rcx,[rbp-label_40]
    mov         r8,rsi
    mov         edx,r15d
    call        000000014001D9C0
    jmp         000000014001E040
    mov         rcx,qword ptr [rcx+r13*8+label_28]
    lea         r9,[rbp-label_3C]
    xor         eax,eax
    mov         r8d,r14d
    and         qword ptr [rsp+label_20],rax
    mov         rdx,rsi
    mov         qword ptr [rbp-label_40],rax
    mov         dword ptr [rbp-label_38],eax
    call label_000000014002C150
    test        eax,eax
    jne         000000014001E0E0
    call label_000000014002C0F8
    mov         dword ptr [rbp-label_40],eax
    mov         edi,dword ptr [rbp-label_38]
    movsd       xmm0,mmword ptr [rbp-label_40]
    movsd       mmword ptr [rbp-label_30],xmm0
    lea         rdx,[label_000000014003E300]
    mov         rax,qword ptr [rbp-label_30]
    shr         rax,label_20
    test        eax,eax
    jne         000000014001E15C
    mov         eax,dword ptr [rbp-label_30]
    test        eax,eax
    je          000000014001E133
    cmp         eax,5
    jne         000000014001E123
    mov         byte ptr [rbx+label_30],1
    mov         dword ptr [rbx+label_2C],9
    mov         byte ptr [rbx+label_38],1
    mov         dword ptr [rbx+label_34],eax
    jmp         000000014001DECF
    mov         ecx,dword ptr [rbp-label_30]
    mov         rdx,rbx
    call        0000000140015330
    jmp         000000014001DECF
    mov         rax,qword ptr [rdx+r12*8]
    test        byte ptr [rax+r13*8+label_38],label_40
    je          000000014001E144
    cmp         byte ptr [rsi],label_1A
    je          000000014001E163
    and         dword ptr [rbx+label_34],0
    mov         byte ptr [rbx+label_30],1
    mov         dword ptr [rbx+label_2C],label_1C
    mov         byte ptr [rbx+label_38],1
    jmp         000000014001DECF
    mov         eax,dword ptr [rbp-label_2C]
    sub         eax,edi
    jmp         000000014001E165
    xor         eax,eax
    add         rsp,label_78
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_000000014001E175_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r14
    sub         rsp,label_20
    mov         rsi,rcx
    test        rcx,rcx
    jne         000000014001E1C0
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          edi,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_30]
    mov         eax,edi
    mov         rdi,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         r14
    ret
func_000000014001E1BF_end:
    mov         eax,dword ptr [rcx+label_14]
    nop
    shr         eax,label_0D
    test        al,1
    je          000000014001E1A5
    mov         eax,dword ptr [rcx+label_14]
    nop
    shr         eax,label_0C
    test        al,1
    jne         000000014001E1A5
    mov         eax,dword ptr [rcx+label_14]
    nop
    shr         eax,1
    test        al,1
    je          000000014001E1E7
    lock or     dword ptr [rcx+label_14],label_10
    jmp         000000014001E1A5
    lock or     dword ptr [rcx+label_14],1
    mov         eax,dword ptr [rcx+label_14]
    nop
    test        eax,label_4C0
    jne         000000014001E1FC
    call        000000014001F7C4
    mov         rdi,qword ptr [rsi+8]
    mov         rcx,rsi
    mov         ebx,dword ptr [rsi+label_20]
    mov         qword ptr [rsi],rdi
    call        000000014001AF5C
    mov         r8d,ebx
    mov         rdx,rdi
    mov         ecx,eax
    call        000000014001EF40
    mov         dword ptr [rsi+label_10],eax
    lea         ecx,[rax+1]
    cmp         ecx,1
    ja          000000014001E23D
    neg         eax
    sbb         eax,eax
    and         eax,8
    add         eax,8
    lock or     dword ptr [rsi+label_14],eax
    and         dword ptr [rsi+label_10],0
    jmp         000000014001E1A5
    mov         eax,dword ptr [rsi+label_14]
    or          edi,label_0FFFFFFFF
    nop
    test        al,6
    jne         000000014001E2A5
    mov         rcx,rsi
    call        000000014001AF5C
    cmp         eax,edi
    je          000000014001E290
    mov         rcx,rsi
    call        000000014001AF5C
    cmp         eax,label_0FFFFFFFE
    je          000000014001E290
    mov         rcx,rsi
    call        000000014001AF5C
    movsxd      rbx,eax
    lea         r14,[label_000000014003E300]
    mov         rcx,rsi
    sar         rbx,6
    call        000000014001AF5C
    and         eax,label_3F
    lea         rdx,[rax+rax*8]
    shl         rdx,3
    add         rdx,qword ptr [r14+rbx*8]
    jmp         000000014001E297
    lea         rdx,[label_000000014003C420]
    mov         al,byte ptr [rdx+label_38]
    and         al,label_82
    cmp         al,label_82
    jne         000000014001E2A5
    lock or     dword ptr [rsi+label_14],label_20
    cmp         dword ptr [rsi+label_20],label_200
    jne         000000014001E2CB
    mov         eax,dword ptr [rsi+label_14]
    nop
    shr         eax,6
    test        al,1
    je          000000014001E2CB
    mov         eax,dword ptr [rsi+label_14]
    nop
    shr         eax,8
    test        al,1
    jne         000000014001E2CB
    mov         dword ptr [rsi+label_20],label_1000
    mov         rax,qword ptr [rsi]
    add         dword ptr [rsi+label_10],edi
    movzx       edi,byte ptr [rax]
    inc         rax
    mov         qword ptr [rsi],rax
    jmp         000000014001E1A8
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+8],rcx
    push        rdi
    sub         rsp,label_30
    mov         rdi,rdx
    mov         rbx,rcx
    test        rcx,rcx
    jne         000000014001E32A
    mov         byte ptr [rdx+label_30],1
    mov         dword ptr [rdx+label_2C],label_16
    mov         qword ptr [rax-label_10],rdx
    and         qword ptr [rax-label_18],rcx
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    call        0000000140010530
    or          rax,label_0FFFFFFFFFFFFFFFF
    mov         rbx,qword ptr [rsp+label_48]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014001E329_end:
    call        0000000140013AE4
    nop
    mov         rdx,rdi
    mov         rcx,rbx
    call        000000014001E34C
    mov         rdi,rax
    mov         rcx,rbx
    call        0000000140013AF0
    mov         rax,rdi
    jmp         000000014001E31F
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rsi
    push        rdi
    sub         rsp,label_30
    mov         rdi,rdx
    mov         rbx,rcx
    test        rcx,rcx
    jne         000000014001E390
    mov         qword ptr [rax-label_10],rdx
    xor         r9d,r9d
    and         qword ptr [rax-label_18],rcx
    xor         r8d,r8d
    mov         byte ptr [rdx+label_30],1
    mov         dword ptr [rdx+label_2C],label_16
    xor         edx,edx
    call        0000000140010530
    or          rax,label_0FFFFFFFFFFFFFFFF
    jmp         000000014001E48C
    call        000000014001AF5C
    cmp         dword ptr [rbx+label_10],0
    movsxd      rsi,eax
    jge         000000014001E3A2
    and         dword ptr [rbx+label_10],0
    xor         edx,edx
    mov         r9,rdi
    mov         ecx,esi
    lea         r8d,[rdx+1]
    call        000000014001F718
    mov         r11,rax
    test        rax,rax
    js          000000014001E387
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        al,label_0C0
    jne         000000014001E3D1
    movsxd      rax,dword ptr [rbx+label_10]
    sub         r11,rax
    mov         rax,r11
    jmp         000000014001E48C
    mov         r10,qword ptr [rbx]
    lea         r8,[label_000000014003E300]
    sub         r10,qword ptr [rbx+8]
    mov         rax,rsi
    and         eax,label_3F
    mov         rcx,rsi
    sar         rcx,6
    lea         rdx,[rax+rax*8]
    mov         rax,qword ptr [r8+rcx*8]
    mov         sil,byte ptr [rax+rdx*8+label_39]
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        al,3
    je          000000014001E449
    cmp         sil,1
    jne         000000014001E422
    mov         rax,qword ptr [r8+rcx*8]
    test        byte ptr [rax+rdx*8+label_3D],2
    je          000000014001E422
    mov         r8,rdi
    mov         rdx,r11
    mov         rcx,rbx
    call        000000014001E5F8
    jmp         000000014001E48C
    mov         rax,qword ptr [r8+rcx*8]
    cmp         byte ptr [rax+rdx*8+label_38],0
    jge         000000014001E43F
    mov         rdx,qword ptr [rbx]
    mov         r8b,sil
    mov         rcx,qword ptr [rbx+8]
    call        000000014001E77C
    add         r10,rax
    test        r11,r11
    jne         000000014001E464
    mov         rax,r10
    jmp         000000014001E48C
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,2
    test        al,1
    jne         000000014001E43F
    mov         byte ptr [rdi+label_30],1
    mov         dword ptr [rdi+label_2C],label_16
    jmp         000000014001E387
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        al,1
    je          000000014001E47F
    mov         r9,rdi
    mov         r8,r10
    mov         rdx,r11
    mov         rcx,rbx
    call        000000014001E49C
    jmp         000000014001E48C
    cmp         sil,1
    jne         000000014001E488
    shr         r10,1
    lea         rax,[r10+r11]
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014001E49B_end:
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_20],r9
    mov         qword ptr [rsp+label_18],r8
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_20
    mov         r14,rdx
    mov         rbx,rcx
    call        000000014001AF5C
    movsxd      r12,eax
    lea         rdx,[label_000000014003E300]
    xor         edi,edi
    mov         rcx,r12
    and         ecx,label_3F
    mov         r15d,edi
    mov         rax,r12
    sar         rax,6
    mov         qword ptr [rsp+label_60],rax
    lea         r13,[rcx+rcx*8]
    mov         rax,qword ptr [rdx+rax*8]
    mov         sil,byte ptr [rax+r13*8+label_39]
    cmp         sil,1
    sete        r15b
    inc         r15
    cmp         dword ptr [rbx+label_10],edi
    jne         000000014001E50B
    mov         rax,r14
    jmp         000000014001E5E2
    movsxd      rbp,dword ptr [rbx+label_10]
    sub         rbp,qword ptr [rbx+8]
    add         rbp,qword ptr [rbx]
    cmp         byte ptr [rax+r13*8+label_38],dil
    jl          000000014001E525
    mov         rax,rbp
    jmp         000000014001E5CA
    mov         r9,qword ptr [rsp+label_78]
    xor         edx,edx
    mov         ecx,r12d
    lea         r8d,[rdx+2]
    call        000000014001F718
    cmp         rax,r14
    jne         000000014001E55C
    mov         rcx,qword ptr [rbx+8]
    mov         r8b,sil
    lea         rdx,[rcx+rbp]
    call        000000014001E77C
    lea         rdx,[rax+rbp]
    mov         eax,dword ptr [rbx+label_14]
    shr         eax,5
    nop
    test        al,1
    jmp         000000014001E5B4
    mov         r9,qword ptr [rsp+label_78]
    xor         r8d,r8d
    mov         rdx,r14
    mov         ecx,r12d
    call        000000014001F718
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    jne         000000014001E57A
    or          rax,rax
    jmp         000000014001E5E2
    mov         edx,label_200
    cmp         rbp,rdx
    jg          000000014001E59A
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,6
    test        al,1
    je          000000014001E59A
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,8
    test        al,1
    je          000000014001E59E
    movsxd      rdx,dword ptr [rbx+label_20]
    mov         rcx,qword ptr [rsp+label_60]
    lea         rax,[label_000000014003E300]
    mov         rcx,qword ptr [rax+rcx*8]
    test        byte ptr [rcx+r13*8+label_38],4
    je          000000014001E5C7
    dec         sil
    cmp         sil,1
    setbe       dil
    inc         rdi
    add         rdx,rdi
    mov         rax,rdx
    cqo
    idiv        rax,r15
    mov         rcx,rax
    mov         rax,qword ptr [rsp+label_70]
    cqo
    idiv        rax,r15
    sub         rax,rcx
    add         rax,r14
    mov         rbx,qword ptr [rsp+label_68]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014001E5F6_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    mov         eax,label_1050
    call        0000000140009F30
    sub         rsp,rax
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000001040],rax
    mov         r15,r8
    mov         rbp,rdx
    mov         rbx,rcx
    call        000000014001AF5C
    xor         edi,edi
    movsxd      r14,eax
    cmp         dword ptr [rbx+label_10],edi
    jne         000000014001E647
    mov         rax,rbp
    jmp         000000014001E74F
    mov         rax,qword ptr [rbx]
    mov         rcx,r14
    sub         rax,qword ptr [rbx+8]
    and         ecx,label_3F
    cqo
    mov         rbx,r14
    sub         rax,rdx
    sar         rbx,6
    sar         rax,1
    mov         r9,r15
    lea         r12,[rcx+rcx*8]
    mov         rsi,rax
    lea         rax,[label_0000000140000000]
    xor         r8d,r8d
    mov         rdx,qword ptr [rax+rbx*8+label_000000000003E300]
    mov         ecx,r14d
    mov         rdx,qword ptr [rdx+r12*8+label_30]
    call        000000014001F718
    mov         r13,rax
    lea         rax,[label_0000000140000000]
    mov         rcx,qword ptr [rax+rbx*8+label_000000000003E300]
    cmp         r13,qword ptr [rcx+r12*8+label_30]
    jne         000000014001E74B
    mov         rcx,qword ptr [rcx+r12*8+label_28]
    lea         r9,[rsp+label_30]
    mov         r8d,label_1000
    mov         qword ptr [rsp+label_20],rdi
    lea         rdx,[rsp+label_40]
    call label_000000014002C208
    test        eax,eax
    je          000000014001E74B
    mov         r9,r15
    xor         r8d,r8d
    mov         rdx,rbp
    mov         ecx,r14d
    call        000000014001F718
    test        rax,rax
    js          000000014001E74B
    mov         eax,dword ptr [rsp+label_30]
    cmp         rsi,rax
    jg          000000014001E74B
    lea         rdx,[rsp+label_40]
    add         rdx,rax
    lea         rcx,[rsp+label_40]
    test        rsi,rsi
    je          000000014001E73D
    lea         r8,[label_0000000140000000]
    cmp         rcx,rdx
    jae         000000014001E73D
    cmp         byte ptr [rcx],label_0D
    jne         000000014001E723
    lea         rax,[rdx-1]
    cmp         rcx,rax
    jae         000000014001E732
    cmp         byte ptr [rcx+1],label_0A
    jne         000000014001E732
    inc         rcx
    jmp         000000014001E732
    movzx       eax,byte ptr [rcx]
    movsx       rax,byte ptr [rax+r8+label_000000000003C470]
    add         rcx,rax
    inc         rdi
    inc         rcx
    cmp         rdi,rsi
    jne         000000014001E705
    lea         rax,[rsp+label_40]
    sub         rcx,rax
    lea         rax,[rcx+r13]
    jmp         000000014001E74F
    or          rax,label_0FFFFFFFFFFFFFFFF
    mov         rcx,qword ptr [rsp+label_0000000000001040]
    xor         rcx,rsp
    call        00000001400099A0
    mov         rbx,qword ptr [rsp+label_0000000000001090]
    add         rsp,label_1050
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014001E779_end:
    int         3
    int         3
    dec         r8b
    mov         r9,rcx
    cmp         r8b,1
    ja          000000014001E7AE
    xor         r8d,r8d
    cmp         rcx,rdx
    je          000000014001E7A9
    cmp         word ptr [r9],label_0A
    lea         rax,[r8+1]
    cmovne      rax,r8
    add         r9,2
    mov         r8,rax
    cmp         r9,rdx
    jne         000000014001E790
    lea         rax,[r8+r8]
    ret
func_000000014001E7AD_end:
    xor         r8d,r8d
    cmp         rcx,rdx
    je          000000014001E7CD
    cmp         byte ptr [r9],label_0A
    lea         rcx,[r8+1]
    cmovne      rcx,r8
    inc         r9
    mov         r8,rcx
    cmp         r9,rdx
    jne         000000014001E7B6
    mov         rax,r8
    ret
func_000000014001E7D0_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_60
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         000000014001E814
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         rdx,[rbp-label_40]
    call        000000014001E2E0
    cmp         byte ptr [rbp-label_18],2
    mov         rdi,rax
    jne         000000014001E831
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          000000014001E846
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          000000014001E85B
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         rbx,qword ptr [rsp+label_70]
    mov         rax,rdi
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rbp
    ret
func_000000014001E86D_end:
    int         3
    int         3
    jmp         000000014001E34C
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+label_18],rbp
    mov         qword ptr [rax+label_20],rsi
    mov         byte ptr [rax+8],cl
    push        rdi
    sub         rsp,label_20
    mov         rcx,rdx
    mov         rsi,r8
    mov         rbx,rdx
    call        000000014001AF5C
    mov         ecx,dword ptr [rbx+label_14]
    nop
    movsxd      r10,eax
    test        cl,label_0C0
    je          000000014001E93E
    mov         edi,dword ptr [rbx]
    xor         ebp,ebp
    mov         rdx,qword ptr [rbx+8]
    sub         edi,dword ptr [rbx+8]
    lea         rax,[rdx+1]
    mov         qword ptr [rbx],rax
    mov         eax,dword ptr [rbx+label_20]
    dec         eax
    mov         dword ptr [rbx+label_10],eax
    test        edi,edi
    jle         000000014001E8E9
    mov         r9,rsi
    mov         r8d,edi
    mov         ecx,r10d
    call        000000014001DD50
    mov         ebp,eax
    mov         rcx,qword ptr [rbx+8]
    cmp         ebp,edi
    mov         al,byte ptr [rsp+label_30]
    mov         byte ptr [rcx],al
    jmp         000000014001E957
    lea         eax,[r10+2]
    cmp         eax,1
    jbe         000000014001E914
    mov         rcx,r10
    lea         rdx,[label_000000014003E300]
    mov         rax,r10
    sar         rax,6
    and         ecx,label_3F
    mov         rax,qword ptr [rdx+rax*8]
    lea         rcx,[rcx+rcx*8]
    lea         rdx,[rax+rcx*8]
    jmp         000000014001E91B
    lea         rdx,[label_000000014003C420]
    test        byte ptr [rdx+label_38],label_20
    je          000000014001E8DB
    xor         edx,edx
    mov         ecx,r10d
    lea         r8d,[rdx+2]
    call        000000014001F67C
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    jne         000000014001E8DB
    lock or     dword ptr [rbx+label_14],label_10
    mov         al,1
    jmp         000000014001E95A
    mov         r9,rsi
    lea         rdx,[rsp+label_30]
    mov         r8d,1
    mov         ecx,r10d
    call        000000014001DD50
    cmp         eax,1
    sete        al
    mov         rbx,qword ptr [rsp+label_38]
    mov         rbp,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001E96E_end:
    int         3
    push        rbx
    sub         rsp,label_20
    mov         edx,dword ptr [rcx+label_14]
    nop
    shr         edx,3
    test        dl,1
    je          000000014001E986
    mov         al,1
    jmp         000000014001E9E6
    mov         eax,dword ptr [rcx+label_14]
    nop
    test        al,label_0C0
    je          000000014001E997
    mov         rax,qword ptr [rcx+8]
    cmp         qword ptr [rcx],rax
    je          000000014001E9E4
    mov         ecx,dword ptr [rcx+label_18]
    nop
    call        0000000140022368
    mov         rbx,rax
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          000000014001E9E4
    mov         r9d,1
    lea         r8,[rsp+label_38]
    xor         edx,edx
    mov         rcx,rax
    call label_000000014002C218
    test        eax,eax
    je          000000014001E9E4
    lea         rdx,[rsp+label_30]
    mov         rcx,rbx
    call label_000000014002C210
    test        eax,eax
    je          000000014001E9E4
    mov         rax,qword ptr [rsp+label_30]
    cmp         qword ptr [rsp+label_38],rax
    sete        al
    jmp         000000014001E9E6
    xor         al,al
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001E9EB_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         esi,ecx
    mov         rdi,r8
    mov         rcx,rdx
    mov         rbx,rdx
    call        000000014001AF5C
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        al,6
    jne         000000014001EA28
    mov         dword ptr [rdi+label_2C],9
    mov         byte ptr [rdi+label_30],1
    lock or     dword ptr [rbx+label_14],label_10
    or          eax,label_0FFFFFFFF
    jmp         000000014001EAA7
    mov         eax,dword ptr [rbx+label_14]
    nop
    shr         eax,label_0C
    test        al,1
    je          000000014001EA3C
    mov         dword ptr [rdi+label_2C],label_22
    jmp         000000014001EA1A
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        al,1
    je          000000014001EA60
    mov         rcx,rbx
    call        000000014001E970
    and         dword ptr [rbx+label_10],0
    test        al,al
    je          000000014001EA1E
    mov         rax,qword ptr [rbx+8]
    mov         qword ptr [rbx],rax
    lock and    dword ptr [rbx+label_14],label_0FFFFFFFE
    lock or     dword ptr [rbx+label_14],2
    lock and    dword ptr [rbx+label_14],label_0FFFFFFF7
    and         dword ptr [rbx+label_10],0
    mov         eax,dword ptr [rbx+label_14]
    nop
    test        eax,label_4C0
    jne         000000014001EA8D
    mov         rcx,rbx
    call        000000014001AF9C
    test        al,al
    jne         000000014001EA8D
    mov         rcx,rbx
    call        000000014001F7C4
    mov         r8,rdi
    mov         rdx,rbx
    mov         cl,sil
    call        000000014001E878
    test        al,al
    je          000000014001EA1E
    movzx       eax,sil
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001EAB6_end:
    int         3
    mov         qword ptr [rsp+label_20],rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    movsxd      r15,ecx
    lea         r9,[label_000000014003E300]
    mov         rax,r15
    mov         rbp,r15
    and         eax,label_3F
    sar         rbp,6
    mov         ecx,4
    xor         esi,esi
    mov         r14,rdx
    lea         rdi,[rax+rax*8]
    mov         rax,qword ptr [r9+rbp*8]
    lea         r13d,[rcx+6]
    mov         r10,qword ptr [rax+rdi*8+label_28]
    test        r8,r8
    je          000000014001EB0F
    cmp         word ptr [rdx],r13w
    jne         000000014001EB0F
    or          byte ptr [rax+rdi*8+label_38],cl
    jmp         000000014001EB14
    and         byte ptr [rax+rdi*8+label_38],label_0FB
    lea         r8,[rdx+r8*2]
    mov         rbx,r14
    cmp         r14,r8
    jae         000000014001EC39
    mov         r11d,label_0D
    lea         r12d,[r11-label_0B]
    movzx       ecx,word ptr [rdx]
    cmp         cx,label_1A
    je          000000014001EC5A
    lea         r9,[rdx+2]
    cmp         cx,r11w
    je          000000014001EB4D
    mov         rdx,r9
    mov         word ptr [rbx],cx
    jmp         000000014001EB74
    cmp         r9,r8
    jae         000000014001EB84
    cmp         word ptr [r9],r13w
    mov         rax,r12
    mov         ecx,4
    cmove       rax,rcx
    add         rdx,rax
    mov         eax,r13d
    cmp         word ptr [r9],r13w
    cmovne      ax,r11w
    mov         word ptr [rbx],ax
    mov         rax,r12
    add         rbx,rax
    cmp         rdx,r8
    jb          000000014001EB2E
    jmp         000000014001EC39
    lea         r9,[rsp+label_0000000000000080]
    mov         qword ptr [rsp+label_20],rsi
    mov         r8d,r12d
    lea         rdx,[rsp+label_70]
    mov         rcx,r10
    call label_000000014002C208
    test        eax,eax
    je          000000014001EC2E
    cmp         dword ptr [rsp+label_0000000000000080],esi
    je          000000014001EC2E
    lea         r8,[label_000000014003E300]
    mov         rax,qword ptr [r8+rbp*8]
    test        byte ptr [rax+rdi*8+label_38],label_48
    je          000000014001EC06
    movzx       eax,word ptr [rsp+label_70]
    cmp         ax,r13w
    jne         000000014001EBD6
    mov         word ptr [rbx],r13w
    jmp         000000014001EC36
    mov         ecx,label_0D
    mov         word ptr [rsp+label_78],ax
    mov         word ptr [rbx],cx
    mov         rax,qword ptr [r8+rbp*8]
    lea         rcx,[rax+rdi*8]
    mov         al,byte ptr [rsp+rsi+label_78]
    mov         byte ptr [rcx+rsi+label_3A],al
    inc         rsi
    cmp         rsi,r12
    jl          000000014001EBE3
    mov         rax,qword ptr [r8+rbp*8]
    mov         byte ptr [rax+rdi*8+label_3C],r13b
    jmp         000000014001EC36
    cmp         word ptr [rsp+label_70],r13w
    jne         000000014001EC13
    cmp         rbx,r14
    je          000000014001EBD0
    mov         rdx,label_0FFFFFFFFFFFFFFFE
    mov         ecx,r15d
    lea         r8d,[rdx+3]
    call        000000014001F720
    cmp         word ptr [rsp+label_70],r13w
    je          000000014001EC39
    mov         ecx,label_0D
    mov         word ptr [rbx],cx
    add         rbx,r12
    sub         rbx,r14
    sar         rbx,1
    lea         eax,[rbx+rbx]
    mov         rbx,qword ptr [rsp+label_0000000000000088]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014001EC59_end:
    lea         r8,[label_000000014003E300]
    mov         rdx,qword ptr [r8+rbp*8]
    mov         al,byte ptr [rdx+rdi*8+label_38]
    test        al,label_40
    jne         000000014001EC33
    or          al,r12b
    mov         byte ptr [rdx+rdi*8+label_38],al
    jmp         000000014001EC39
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_20],rbp
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_30
    movsxd      r14,ecx
    lea         r11,[label_0000000140000000]
    mov         rax,r14
    mov         rbp,r14
    and         eax,label_3F
    sar         rbp,6
    mov         r15,r9
    mov         rsi,rdx
    lea         rdi,[rax+rax*8]
    mov         rax,qword ptr [r11+rbp*8+label_000000000003E300]
    mov         r10,qword ptr [rax+rdi*8+label_28]
    test        r8,r8
    je          000000014001ECCD
    cmp         byte ptr [rdx],label_0A
    jne         000000014001ECCD
    or          byte ptr [rax+rdi*8+label_38],4
    jmp         000000014001ECD2
    and         byte ptr [rax+rdi*8+label_38],label_0FB
    lea         r9,[rdx+r8]
    mov         rax,rsi
    mov         rbx,rsi
    mov         r12d,1
    cmp         rsi,r9
    jae         000000014001EDE3
    mov         cl,byte ptr [rax]
    cmp         cl,label_1A
    je          000000014001EDC6
    lea         rdx,[rax+1]
    cmp         cl,label_0D
    je          000000014001ED06
    mov         rax,rdx
    mov         byte ptr [rbx],cl
    jmp         000000014001ED23
    cmp         rdx,r9
    jae         000000014001ED30
    cmp         byte ptr [rdx],label_0A
    jne         000000014001ED1A
    mov         byte ptr [rbx],label_0A
    mov         ecx,2
    jmp         000000014001ED20
    mov         byte ptr [rbx],label_0D
    mov         rcx,r12
    add         rax,rcx
    inc         rbx
    cmp         rax,r9
    jb          000000014001ECEB
    jmp         000000014001EDE3
    and         qword ptr [rsp+label_20],0
    lea         r9,[rsp+label_68]
    mov         r8d,r12d
    lea         rdx,[rsp+label_60]
    mov         rcx,r10
    call label_000000014002C208
    test        eax,eax
    je          000000014001EDBA
    cmp         dword ptr [rsp+label_68],0
    je          000000014001EDBA
    lea         r11,[label_0000000140000000]
    mov         rax,qword ptr [r11+rbp*8+label_000000000003E300]
    test        byte ptr [rax+rdi*8+label_38],label_48
    je          000000014001ED8C
    mov         cl,byte ptr [rsp+label_60]
    cmp         cl,label_0A
    jne         000000014001ED7B
    mov         byte ptr [rbx],label_0A
    jmp         000000014001EDE0
    mov         byte ptr [rbx],label_0D
    mov         rax,qword ptr [r11+rbp*8+label_000000000003E300]
    mov         byte ptr [rax+rdi*8+label_3A],cl
    jmp         000000014001EDE0
    cmp         byte ptr [rsp+label_60],label_0A
    jne         000000014001ED98
    cmp         rbx,rsi
    je          000000014001ED76
    mov         r8d,r12d
    or          rdx,label_0FFFFFFFFFFFFFFFF
    mov         ecx,r14d
    call        000000014001F720
    cmp         byte ptr [rsp+label_60],label_0A
    lea         r11,[label_0000000140000000]
    je          000000014001EDE3
    mov         byte ptr [rbx],label_0D
    jmp         000000014001EDE0
    mov         byte ptr [rbx],label_0D
    lea         r11,[label_0000000140000000]
    jmp         000000014001EDE0
    mov         rdx,qword ptr [r11+rbp*8+label_000000000003E300]
    mov         al,byte ptr [rdx+rdi*8+label_38]
    test        al,label_40
    jne         000000014001EDDE
    or          al,2
    mov         byte ptr [rdx+rdi*8+label_38],al
    jmp         000000014001EDE3
    mov         byte ptr [rbx],cl
    add         rbx,r12
    sub         ebx,esi
    jne         000000014001EDEE
    xor         eax,eax
    jmp         000000014001EF27
    mov         r8,qword ptr [r11+rbp*8+label_000000000003E300]
    cmp         byte ptr [r8+rdi*8+label_39],0
    jne         000000014001EE05
    mov         eax,ebx
    jmp         000000014001EF27
    movsxd      rcx,ebx
    add         rcx,rsi
    lea         rbx,[rcx-1]
    cmp         byte ptr [rbx],0
    jl          000000014001EE1C
    mov         rbx,rcx
    jmp         000000014001EEC2
    mov         edx,r12d
    jmp         000000014001EE31
    cmp         edx,4
    ja          000000014001EE3F
    cmp         rbx,rsi
    jb          000000014001EE3F
    sub         rbx,r12
    add         edx,r12d
    movzx       eax,byte ptr [rbx]
    cmp         byte ptr [rax+r11+label_000000000003C470],0
    je          000000014001EE21
    movzx       ecx,byte ptr [rbx]
    movsx       eax,byte ptr [rcx+r11+label_000000000003C470]
    test        eax,eax
    jne         000000014001EE62
    call        0000000140015374
    mov         dword ptr [rax],label_2A
    or          eax,label_0FFFFFFFF
    jmp         000000014001EF27
    inc         eax
    cmp         eax,edx
    jne         000000014001EE6F
    mov         eax,edx
    add         rbx,rax
    jmp         000000014001EEC2
    test        byte ptr [r8+rdi*8+label_38],label_48
    je          000000014001EEB2
    add         rbx,r12
    mov         byte ptr [r8+rdi*8+label_3A],cl
    cmp         edx,2
    jb          000000014001EE95
    mov         cl,byte ptr [rbx]
    add         rbx,r12
    mov         rax,qword ptr [r11+rbp*8+label_000000000003E300]
    mov         byte ptr [rax+rdi*8+label_3B],cl
    cmp         edx,3
    jne         000000014001EEAB
    mov         cl,byte ptr [rbx]
    add         rbx,r12
    mov         rax,qword ptr [r11+rbp*8+label_000000000003E300]
    mov         byte ptr [rax+rdi*8+label_3C],cl
    mov         eax,edx
    sub         rbx,rax
    jmp         000000014001EEC2
    neg         edx
    mov         r8d,r12d
    movsxd      rdx,edx
    mov         ecx,r14d
    call        000000014001F720
    mov         eax,dword ptr [rsp+label_0000000000000080]
    sub         ebx,esi
    mov         dword ptr [rsp+label_28],eax
    mov         r9d,ebx
    mov         r8,rsi
    mov         qword ptr [rsp+label_20],r15
    xor         edx,edx
    mov         ecx,label_0FDE9
    call        0000000140020070
    mov         r8d,eax
    test        eax,eax
    jne         000000014001EEFF
    call label_000000014002C0F8
    mov         ecx,eax
    call        00000001400152E8
    jmp         000000014001EE5A
    sub         eax,ebx
    lea         rdx,[label_0000000140000000]
    mov         rdx,qword ptr [rdx+rbp*8+label_000000000003E300]
    neg         eax
    sbb         cl,cl
    and         cl,2
    mov         al,byte ptr [rdx+rdi*8+label_3D]
    and         al,label_0FD
    or          cl,al
    lea         eax,[r8+r8]
    mov         byte ptr [rdx+rdi*8+label_3D],cl
    mov         rbx,qword ptr [rsp+label_70]
    mov         rbp,qword ptr [rsp+label_78]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    ret
func_000000014001EF3D_end:
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],r12
    mov         dword ptr [rax+8],ecx
    push        r13
    push        r14
    push        r15
    sub         rsp,label_20
    mov         r14d,r8d
    mov         r12,rdx
    movsxd      rsi,ecx
    cmp         esi,label_0FFFFFFFE
    jne         000000014001EF9A
    call        0000000140015354
    and         dword ptr [rax],0
    call        0000000140015374
    mov         dword ptr [rax],9
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    mov         r12,qword ptr [rsp+label_58]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r13
    ret
func_000000014001EF99_end:
    test        ecx,ecx
    js          000000014001EFAD
    cmp         esi,dword ptr [label_000000014003E700]
    jae         000000014001EFAD
    mov         eax,1
    jmp         000000014001EFAF
    xor         eax,eax
    test        eax,eax
    jne         000000014001EFCD
    call        0000000140015354
    and         dword ptr [rax],0
    call        0000000140015374
    mov         dword ptr [rax],9
    call        00000001400105FC
    jmp         000000014001EF7D
    mov         rax,rsi
    mov         r15,rsi
    sar         r15,6
    lea         rcx,[label_000000014003E300]
    and         eax,label_3F
    lea         r13,[rax+rax*8]
    mov         rax,qword ptr [rcx+r15*8]
    test        byte ptr [rax+r13*8+label_38],1
    je          000000014001EFB3
    cmp         r14d,label_7FFFFFFF
    jbe         000000014001F00F
    call        0000000140015354
    and         dword ptr [rax],0
    call        0000000140015374
    mov         dword ptr [rax],label_16
    jmp         000000014001EFC6
    mov         ecx,esi
    call        000000014002225C
    or          ebx,label_0FFFFFFFF
    lea         rax,[label_000000014003E300]
    mov         rax,qword ptr [rax+r15*8]
    test        byte ptr [rax+r13*8+label_38],1
    jne         000000014001F041
    call        0000000140015374
    mov         dword ptr [rax],9
    call        0000000140015354
    and         dword ptr [rax],0
    jmp         000000014001F050
    mov         r8d,r14d
    mov         rdx,r12
    mov         ecx,esi
    call        000000014001F060
    mov         ebx,eax
    mov         ecx,esi
    call        0000000140022284
    mov         eax,ebx
    jmp         000000014001EF80
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_10],rdx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_60
    movsxd      r13,ecx
    mov         r9,rdx
    mov         r12d,r8d
    cmp         r13d,label_0FFFFFFFE
    jne         000000014001F0A1
    call        0000000140015354
    xor         esi,esi
    mov         dword ptr [rax],esi
    call        0000000140015374
    mov         dword ptr [rax],9
    jmp         000000014001F492
    xor         esi,esi
    test        ecx,ecx
    js          000000014001F47B
    cmp         r13d,dword ptr [label_000000014003E700]
    jae         000000014001F47B
    mov         rax,r13
    lea         edx,[rsi+1]
    and         eax,label_3F
    mov         qword ptr [rsp+label_48],rdx
    mov         r8,r13
    lea         r11,[label_000000014003E300]
    shr         r8,6
    mov         qword ptr [rsp+label_40],r8
    lea         r14,[rax+rax*8]
    mov         rax,qword ptr [r11+r8*8]
    test        byte ptr [rax+r14*8+label_38],dl
    je          000000014001F47B
    cmp         r12d,label_7FFFFFFF
    jbe         000000014001F10C
    call        0000000140015354
    mov         dword ptr [rax],esi
    call        0000000140015374
    mov         dword ptr [rax],label_16
    jmp         000000014001F48D
    test        r12d,r12d
    je          000000014001F477
    test        byte ptr [rax+r14*8+label_38],2
    jne         000000014001F477
    test        r9,r9
    je          000000014001F0F5
    mov         rcx,qword ptr [rax+r14*8+label_28]
    mov         rbx,rsi
    movsx       r10d,byte ptr [rax+r14*8+label_39]
    mov         edi,4
    mov         qword ptr [rsp+label_38],rcx
    mov         ecx,r10d
    mov         byte ptr [rsp+label_00000000000000A0],r10b
    sub         ecx,edx
    je          000000014001F17E
    cmp         ecx,edx
    jne         000000014001F176
    mov         eax,r12d
    not         eax
    test        dl,al
    jne         000000014001F176
    call        0000000140015354
    mov         dword ptr [rax],esi
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    jmp         000000014001F304
    mov         ebp,r12d
    mov         r15,r9
    jmp         000000014001F1FC
    mov         eax,r12d
    not         eax
    test        dl,al
    je          000000014001F15A
    mov         ebp,r12d
    shr         ebp,1
    cmp         ebp,edi
    cmovb       ebp,edi
    mov         ecx,ebp
    call        0000000140019D00
    xor         ecx,ecx
    mov         rbx,rax
    call        0000000140019CC4
    xor         ecx,ecx
    call        0000000140019CC4
    mov         r15,rbx
    test        rbx,rbx
    jne         000000014001F1CC
    call        0000000140015374
    mov         dword ptr [rax],label_0C
    call        0000000140015354
    mov         dword ptr [rax],8
    jmp         000000014001F304
    xor         edx,edx
    mov         ecx,r13d
    lea         r8d,[rdx+1]
    call        000000014001F720
    mov         r8,qword ptr [rsp+label_40]
    lea         r11,[label_000000014003E300]
    mov         r10b,byte ptr [rsp+label_00000000000000A0]
    mov         edx,1
    mov         rcx,qword ptr [r11+r8*8]
    mov         qword ptr [rcx+r14*8+label_30],rax
    mov         rax,qword ptr [r11+r8*8]
    mov         edi,esi
    mov         qword ptr [rsp+label_50],r15
    mov         r9d,label_0A
    test        byte ptr [rax+r14*8+label_38],label_48
    je          000000014001F28E
    mov         al,byte ptr [rax+r14*8+label_3A]
    cmp         al,r9b
    je          000000014001F28E
    test        ebp,ebp
    je          000000014001F28E
    mov         byte ptr [r15],al
    dec         ebp
    mov         rax,qword ptr [r11+r8*8]
    add         r15,rdx
    mov         edi,edx
    mov         byte ptr [rax+r14*8+label_3A],r9b
    test        r10b,r10b
    je          000000014001F28E
    mov         rax,qword ptr [r11+r8*8]
    mov         cl,byte ptr [rax+r14*8+label_3B]
    cmp         cl,r9b
    je          000000014001F28E
    test        ebp,ebp
    je          000000014001F28E
    mov         byte ptr [r15],cl
    lea         edi,[r9-8]
    mov         rax,qword ptr [r11+r8*8]
    add         r15,rdx
    dec         ebp
    mov         byte ptr [rax+r14*8+label_3B],r9b
    cmp         r10b,dl
    jne         000000014001F28E
    mov         rax,qword ptr [r11+r8*8]
    mov         cl,byte ptr [rax+r14*8+label_3C]
    cmp         cl,r9b
    je          000000014001F28E
    test        ebp,ebp
    je          000000014001F28E
    mov         byte ptr [r15],cl
    lea         edi,[r9-7]
    mov         rax,qword ptr [r11+r8*8]
    add         r15,rdx
    dec         ebp
    mov         byte ptr [rax+r14*8+label_3C],r9b
    mov         ecx,r13d
    call        0000000140026508
    test        eax,eax
    je          000000014001F322
    mov         rax,qword ptr [rsp+label_40]
    lea         rcx,[label_000000014003E300]
    mov         rax,qword ptr [rcx+rax*8]
    cmp         byte ptr [rax+r14*8+label_38],sil
    jge         000000014001F322
    mov         rcx,qword ptr [rsp+label_38]
    lea         rdx,[rsp+label_30]
    call label_000000014002C200
    test        eax,eax
    je          000000014001F322
    cmp         byte ptr [rsp+label_00000000000000A0],2
    jne         000000014001F327
    mov         rcx,qword ptr [rsp+label_38]
    lea         r9,[rsp+label_00000000000000B8]
    shr         ebp,1
    mov         rdx,r15
    mov         r8d,ebp
    mov         qword ptr [rsp+label_20],rsi
    call label_000000014002C220
    test        eax,eax
    jne         000000014001F316
    call label_000000014002C0F8
    mov         ecx,eax
    call        00000001400152E8
    or          edi,label_0FFFFFFFF
    mov         rcx,rbx
    call        0000000140019CC4
    mov         eax,edi
    jmp         000000014001F495
    mov         eax,dword ptr [rsp+label_00000000000000B8]
    lea         edi,[rdi+rax*2]
    jmp         000000014001F362
    mov         byte ptr [rsp+label_48],sil
    mov         rcx,qword ptr [rsp+label_38]
    lea         r9,[rsp+label_00000000000000B8]
    mov         r8d,ebp
    mov         qword ptr [rsp+label_20],rsi
    mov         rdx,r15
    call label_000000014002C208
    test        eax,eax
    je          000000014001F441
    cmp         dword ptr [rsp+label_00000000000000B8],r12d
    ja          000000014001F441
    add         edi,dword ptr [rsp+label_00000000000000B8]
    mov         rdx,qword ptr [rsp+label_40]
    lea         r11,[label_000000014003E300]
    mov         rax,qword ptr [r11+rdx*8]
    cmp         byte ptr [rax+r14*8+label_38],sil
    jge         000000014001F307
    cmp         byte ptr [rsp+label_00000000000000A0],2
    movsxd      r8,edi
    je          000000014001F3AB
    mov         r9,qword ptr [rsp+label_00000000000000A8]
    mov         rax,r12
    shr         rax,1
    mov         rdx,r15
    mov         ecx,r13d
    mov         qword ptr [rsp+label_20],rax
    call        000000014001EC78
    mov         edi,eax
    jmp         000000014001F307
    shr         r8,1
    cmp         byte ptr [rsp+label_48],sil
    je          000000014001F42F
    mov         r10,qword ptr [rsp+label_50]
    mov         rax,r10
    mov         rdi,r10
    lea         r9,[r10+r8*2]
    cmp         r10,r9
    jae         000000014001F422
    mov         esi,label_0A
    movzx       ecx,word ptr [rax]
    cmp         cx,label_1A
    je          000000014001F411
    cmp         cx,label_0D
    jne         000000014001F3F7
    lea         r8,[rax+2]
    cmp         r8,r9
    jae         000000014001F3F7
    cmp         word ptr [r8],si
    jne         000000014001F3F7
    movzx       ecx,si
    mov         r11d,4
    jmp         000000014001F3FD
    mov         r11d,2
    add         rax,r11
    mov         word ptr [rdi],cx
    lea         r8,[rdi+2]
    mov         rdi,r8
    cmp         rax,r9
    jb          000000014001F3CE
    jmp         000000014001F422
    lea         rcx,[label_000000014003E300]
    mov         rax,qword ptr [rcx+rdx*8]
    or          byte ptr [rax+r14*8+label_38],2
    sub         rdi,r10
    sar         rdi,1
    add         edi,edi
    jmp         000000014001F307
    mov         rdx,qword ptr [rsp+label_50]
    mov         ecx,r13d
    call        000000014001EAB8
    jmp         000000014001F3A4
    call label_000000014002C0F8
    cmp         eax,5
    jne         000000014001F467
    call        0000000140015374
    mov         dword ptr [rax],9
    call        0000000140015354
    mov         dword ptr [rax],5
    jmp         000000014001F304
    cmp         eax,label_6D
    jne         000000014001F2FD
    mov         edi,esi
    jmp         000000014001F307
    xor         eax,eax
    jmp         000000014001F495
    call        0000000140015354
    mov         dword ptr [rax],esi
    call        0000000140015374
    mov         dword ptr [rax],9
    call        00000001400105FC
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_00000000000000B0]
    add         rsp,label_60
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014001F4AC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_10],rdx
    mov         dword ptr [rsp+8],ecx
    push        rsi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         rbx,r9
    mov         r13d,r8d
    movsxd      rsi,ecx
    cmp         esi,label_0FFFFFFFE
    jne         000000014001F507
    mov         byte ptr [r9+label_38],1
    and         dword ptr [r9+label_34],0
    mov         byte ptr [r9+label_30],1
    mov         dword ptr [r9+label_2C],9
    or          rax,label_0FFFFFFFFFFFFFFFF
    mov         rbx,qword ptr [rsp+label_70]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rsi
    ret
func_000000014001F506_end:
    test        ecx,ecx
    js          000000014001F51A
    cmp         esi,dword ptr [label_000000014003E700]
    jae         000000014001F51A
    mov         eax,1
    jmp         000000014001F51C
    xor         eax,eax
    test        eax,eax
    jne         000000014001F553
    mov         byte ptr [r9+label_38],1
    and         dword ptr [r9+label_34],0
    mov         byte ptr [r9+label_30],1
    mov         dword ptr [r9+label_2C],9
    mov         qword ptr [rsp+label_28],rbx
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140010530
    jmp         000000014001F4F0
    mov         rax,rsi
    mov         r15,rsi
    sar         r15,6
    lea         rcx,[label_000000014003E300]
    and         eax,label_3F
    lea         r12,[rax+rax*8]
    mov         rax,qword ptr [rcx+r15*8]
    test        byte ptr [rax+r12*8+label_38],1
    je          000000014001F520
    mov         ecx,esi
    call        000000014002225C
    or          r14,label_0FFFFFFFFFFFFFFFF
    lea         rax,[label_000000014003E300]
    mov         rax,qword ptr [rax+r15*8]
    test        byte ptr [rax+r12*8+label_38],1
    jne         000000014001F5AA
    mov         byte ptr [rbx+label_30],1
    mov         dword ptr [rbx+label_2C],9
    mov         byte ptr [rbx+label_38],1
    and         dword ptr [rbx+label_34],0
    jmp         000000014001F5BF
    mov         r9,rbx
    mov         r8d,r13d
    mov         rdx,qword ptr [rsp+label_68]
    mov         ecx,esi
    call        000000014001F5D0
    mov         r14,rax
    mov         ecx,esi
    call        0000000140022284
    mov         rax,r14
    jmp         000000014001F4F4
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_30
    movsxd      rdi,ecx
    mov         rbx,r9
    mov         ecx,edi
    mov         esi,r8d
    mov         rbp,rdx
    call        0000000140022368
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    jne         000000014001F60E
    mov         byte ptr [rbx+label_30],1
    mov         dword ptr [rbx+label_2C],9
    or          rax,label_0FFFFFFFFFFFFFFFF
    jmp         000000014001F664
    mov         r9d,esi
    lea         r8,[rsp+label_20]
    mov         rdx,rbp
    mov         rcx,rax
    call label_000000014002C218
    test        eax,eax
    jne         000000014001F638
    call label_000000014002C0F8
    mov         ecx,eax
    mov         rdx,rbx
    call        0000000140015330
    jmp         000000014001F608
    mov         rax,qword ptr [rsp+label_20]
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          000000014001F608
    mov         rdx,rdi
    lea         r8,[label_000000014003E300]
    and         edx,label_3F
    mov         rcx,rdi
    sar         rcx,6
    lea         rdx,[rdx+rdx*8]
    mov         rcx,qword ptr [r8+rcx*8]
    and         byte ptr [rcx+rdx*8+label_38],label_0FD
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_000000014001F678_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_60
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         000000014001F6BC
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         r9,[rbp-label_40]
    call        000000014001F4B0
    cmp         byte ptr [rbp-label_18],2
    mov         rdi,rax
    jne         000000014001F6D9
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          000000014001F6EE
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          000000014001F703
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         rbx,qword ptr [rsp+label_70]
    mov         rax,rdi
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rbp
    ret
func_000000014001F715_end:
    int         3
    int         3
    jmp         000000014001F4B0
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rdi
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_60
    and         qword ptr [rbp-label_40],0
    cmp         dword ptr [label_000000014003E290],0
    mov         byte ptr [rbp-label_30],0
    mov         byte ptr [rbp-label_18],0
    mov         byte ptr [rbp-label_10],0
    mov         byte ptr [rbp-8],0
    jne         000000014001F760
    movups      xmm0,xmmword ptr [label_000000014003C408]
    mov         byte ptr [rbp-label_18],1
    movdqu      xmmword ptr [rbp-label_28],xmm0
    lea         r9,[rbp-label_40]
    call        000000014001F5D0
    cmp         byte ptr [rbp-label_18],2
    mov         rdi,rax
    jne         000000014001F77D
    mov         rcx,qword ptr [rbp-label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    cmp         byte ptr [rbp-label_10],0
    je          000000014001F792
    mov         ebx,dword ptr [rbp-label_14]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_20],ebx
    cmp         byte ptr [rbp-8],0
    je          000000014001F7A7
    mov         ebx,dword ptr [rbp-label_0C]
    lea         rcx,[rbp-label_40]
    call        0000000140010210
    mov         dword ptr [rax+label_24],ebx
    mov         rbx,qword ptr [rsp+label_70]
    mov         rax,rdi
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rbp
    ret
func_000000014001F7B9_end:
    int         3
    int         3
    jmp         000000014001F5D0
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    mov         edx,1
    add         dword ptr [label_000000014003E0F8],edx
    mov         edi,label_1000
    mov         ecx,edi
    call        000000014001BDB0
    xor         ecx,ecx
    mov         qword ptr [rbx+8],rax
    call        0000000140019CC4
    cmp         qword ptr [rbx+8],0
    je          000000014001F801
    lock or     dword ptr [rbx+label_14],label_40
    jmp         000000014001F816
    lock or     dword ptr [rbx+label_14],label_400
    lea         rax,[rbx+label_1C]
    mov         edi,2
    mov         qword ptr [rbx+8],rax
    mov         dword ptr [rbx+label_20],edi
    mov         rax,qword ptr [rbx+8]
    and         dword ptr [rbx+label_10],0
    mov         qword ptr [rbx],rax
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001F82E_end:
    int         3
    sub         rsp,label_48
    and         dword ptr [rsp+label_30],0
    mov         rax,qword ptr [rsp+label_78]
    mov         qword ptr [rsp+label_28],rax
    mov         rax,qword ptr [rsp+label_70]
    mov         qword ptr [rsp+label_20],rax
    call        000000014001F858
    add         rsp,label_48
    ret
func_000000014001F856_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+label_10],rbx
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    mov         qword ptr [rax+8],rcx
    push        rbp
    mov         rbp,rsp
    sub         rsp,label_20
    mov         rbx,rdx
    mov         esi,r9d
    xor         edx,edx
    mov         edi,label_0C000000D
    mov         dword ptr [rcx+4],edx
    mov         rax,qword ptr [rbp+label_10]
    mov         dword ptr [rax+8],edx
    mov         rax,qword ptr [rbp+label_10]
    mov         dword ptr [rax+label_0C],edx
    test        r8b,label_10
    je          000000014001F8A4
    mov         rax,qword ptr [rbp+label_10]
    mov         edi,label_0C000008F
    or          dword ptr [rax+4],1
    test        r8b,2
    je          000000014001F8B7
    mov         rax,qword ptr [rbp+label_10]
    mov         edi,label_0C0000093
    or          dword ptr [rax+4],2
    test        r8b,1
    je          000000014001F8CA
    mov         rax,qword ptr [rbp+label_10]
    mov         edi,label_0C0000091
    or          dword ptr [rax+4],4
    test        r8b,4
    je          000000014001F8DD
    mov         rax,qword ptr [rbp+label_10]
    mov         edi,label_0C000008E
    or          dword ptr [rax+4],8
    test        r8b,8
    je          000000014001F8F0
    mov         rax,qword ptr [rbp+label_10]
    mov         edi,label_0C0000090
    or          dword ptr [rax+4],label_10
    mov         rcx,qword ptr [rbp+label_10]
    mov         rax,qword ptr [rbx]
    shr         rax,7
    shl         eax,4
    not         eax
    xor         eax,dword ptr [rcx+8]
    and         eax,label_10
    xor         dword ptr [rcx+8],eax
    mov         rcx,qword ptr [rbp+label_10]
    mov         rax,qword ptr [rbx]
    shr         rax,9
    shl         eax,3
    not         eax
    xor         eax,dword ptr [rcx+8]
    and         eax,8
    xor         dword ptr [rcx+8],eax
    mov         rcx,qword ptr [rbp+label_10]
    mov         rax,qword ptr [rbx]
    shr         rax,label_0A
    shl         eax,2
    not         eax
    xor         eax,dword ptr [rcx+8]
    and         eax,4
    xor         dword ptr [rcx+8],eax
    mov         rcx,qword ptr [rbp+label_10]
    mov         rax,qword ptr [rbx]
    shr         rax,label_0B
    add         eax,eax
    not         eax
    xor         eax,dword ptr [rcx+8]
    and         eax,2
    xor         dword ptr [rcx+8],eax
    mov         eax,dword ptr [rbx]
    mov         rcx,qword ptr [rbp+label_10]
    shr         rax,label_0C
    not         eax
    xor         eax,dword ptr [rcx+8]
    and         eax,1
    xor         dword ptr [rcx+8],eax
    call        000000014001FC4C
    mov         rdx,rax
    test        al,1
    je          000000014001F97C
    mov         rcx,qword ptr [rbp+label_10]
    or          dword ptr [rcx+label_0C],label_10
    test        dl,4
    je          000000014001F989
    mov         rcx,qword ptr [rbp+label_10]
    or          dword ptr [rcx+label_0C],8
    test        dl,8
    je          000000014001F996
    mov         rax,qword ptr [rbp+label_10]
    or          dword ptr [rax+label_0C],4
    test        dl,label_10
    je          000000014001F9A3
    mov         rax,qword ptr [rbp+label_10]
    or          dword ptr [rax+label_0C],2
    test        dl,label_20
    je          000000014001F9B0
    mov         rax,qword ptr [rbp+label_10]
    or          dword ptr [rax+label_0C],1
    mov         eax,dword ptr [rbx]
    mov         ecx,label_6000
    and         rax,rcx
    je          000000014001F9FA
    cmp         rax,label_2000
    je          000000014001F9EA
    cmp         rax,label_4000
    je          000000014001F9DA
    cmp         rax,rcx
    jne         000000014001FA01
    mov         rax,qword ptr [rbp+label_10]
    or          dword ptr [rax],3
    jmp         000000014001FA01
    mov         rax,qword ptr [rbp+label_10]
    and         dword ptr [rax],label_0FFFFFFFE
    mov         rax,qword ptr [rbp+label_10]
    or          dword ptr [rax],2
    jmp         000000014001FA01
    mov         rax,qword ptr [rbp+label_10]
    and         dword ptr [rax],label_0FFFFFFFD
    mov         rax,qword ptr [rbp+label_10]
    or          dword ptr [rax],1
    jmp         000000014001FA01
    mov         rax,qword ptr [rbp+label_10]
    and         dword ptr [rax],label_0FFFFFFFC
    mov         rax,qword ptr [rbp+label_10]
    and         esi,label_0FFF
    shl         esi,5
    and         dword ptr [rax],label_0FFFE001F
    mov         rax,qword ptr [rbp+label_10]
    or          dword ptr [rax],esi
    mov         rax,qword ptr [rbp+label_10]
    mov         rsi,qword ptr [rbp+label_38]
    or          dword ptr [rax+label_20],1
    cmp         dword ptr [rbp+label_40],0
    je          000000014001FA5F
    mov         rax,qword ptr [rbp+label_10]
    mov         edx,label_0FFFFFFE1
    and         dword ptr [rax+label_20],edx
    mov         rax,qword ptr [rbp+label_30]
    mov         ecx,dword ptr [rax]
    mov         rax,qword ptr [rbp+label_10]
    mov         dword ptr [rax+label_10],ecx
    mov         rax,qword ptr [rbp+label_10]
    or          dword ptr [rax+label_60],1
    mov         rax,qword ptr [rbp+label_10]
    and         dword ptr [rax+label_60],edx
    mov         rax,qword ptr [rbp+label_10]
    mov         ecx,dword ptr [rsi]
    mov         dword ptr [rax+label_50],ecx
    jmp         000000014001FAA7
    mov         rcx,qword ptr [rbp+label_10]
    mov         r8d,label_0FFFFFFE3
    mov         eax,dword ptr [rcx+label_20]
    and         eax,r8d
    or          eax,2
    mov         dword ptr [rcx+label_20],eax
    mov         rax,qword ptr [rbp+label_30]
    mov         rcx,qword ptr [rax]
    mov         rax,qword ptr [rbp+label_10]
    mov         qword ptr [rax+label_10],rcx
    mov         rax,qword ptr [rbp+label_10]
    or          dword ptr [rax+label_60],1
    mov         rdx,qword ptr [rbp+label_10]
    mov         eax,dword ptr [rdx+label_60]
    and         eax,r8d
    or          eax,2
    mov         dword ptr [rdx+label_60],eax
    mov         rax,qword ptr [rbp+label_10]
    mov         rdx,qword ptr [rsi]
    mov         qword ptr [rax+label_50],rdx
    call        000000014001FB90
    xor         edx,edx
    lea         r9,[rbp+label_10]
    mov         ecx,edi
    lea         r8d,[rdx+1]
    call label_000000014002C0E8
    mov         rcx,qword ptr [rbp+label_10]
    test        byte ptr [rcx+8],label_10
    je          000000014001FACD
    btr         qword ptr [rbx],7
    test        byte ptr [rcx+8],8
    je          000000014001FAD8
    btr         qword ptr [rbx],9
    test        byte ptr [rcx+8],4
    je          000000014001FAE3
    btr         qword ptr [rbx],label_0A
    test        byte ptr [rcx+8],2
    je          000000014001FAEE
    btr         qword ptr [rbx],label_0B
    test        byte ptr [rcx+8],1
    je          000000014001FAF9
    btr         qword ptr [rbx],label_0C
    mov         eax,dword ptr [rcx]
    and         eax,3
    je          000000014001FB30
    sub         eax,1
    je          000000014001FB24
    sub         eax,1
    je          000000014001FB18
    cmp         eax,1
    jne         000000014001FB37
    or          qword ptr [rbx],label_6000
    jmp         000000014001FB37
    btr         qword ptr [rbx],label_0D
    bts         qword ptr [rbx],label_0E
    jmp         000000014001FB37
    btr         qword ptr [rbx],label_0E
    bts         qword ptr [rbx],label_0D
    jmp         000000014001FB37
    and         qword ptr [rbx],label_0FFFFFFFFFFFF9FFF
    cmp         dword ptr [rbp+label_40],0
    je          000000014001FB44
    mov         eax,dword ptr [rcx+label_50]
    mov         dword ptr [rsi],eax
    jmp         000000014001FB4B
    mov         rax,qword ptr [rcx+label_50]
    mov         qword ptr [rsi],rax
    mov         rbx,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014001FB5F_end:
    sub         rsp,label_28
    sub         ecx,1
    je          000000014001FB80
    sub         ecx,1
    je          000000014001FB73
    cmp         ecx,1
    jne         000000014001FB8B
    call        0000000140015374
    mov         dword ptr [rax],label_22
    jmp         000000014001FB8B
    call        0000000140015374
    mov         dword ptr [rax],label_21
    add         rsp,label_28
    ret
func_000000014001FB8F_end:
    push        rbx
    sub         rsp,label_20
    call        0000000140026990
    mov         ebx,eax
    and         ebx,label_3F
    call        00000001400269AA
    mov         eax,ebx
    add         rsp,label_20
    pop         rbx
    ret
func_000000014001FBAC_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    sub         rsp,label_20
    mov         rbx,rdx
    mov         rdi,rcx
    call        0000000140026990
    mov         esi,eax
    mov         dword ptr [rsp+label_38],eax
    mov         ecx,ebx
    not         ecx
    or          ecx,label_0FFFF807F
    and         ecx,eax
    and         edi,ebx
    or          ecx,edi
    mov         dword ptr [rsp+label_30],ecx
    cmp         byte ptr [label_000000014003C570],0
    je          000000014001FC12
    test        cl,label_40
    je          000000014001FC12
    call        00000001400269A0
    jmp         000000014001FC1A
    mov         byte ptr [label_000000014003C570],0
    mov         ecx,dword ptr [rsp+label_30]
    and         ecx,label_0FFFFFFBF
    call        00000001400269A0
    mov         esi,dword ptr [rsp+label_38]
    jmp         000000014001FC1A
    and         ecx,label_0FFFFFFBF
    call        00000001400269A0
    mov         eax,esi
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001FC2B_end:
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    call        0000000140026990
    and         ebx,label_3F
    or          eax,ebx
    mov         ecx,eax
    add         rsp,label_20
    pop         rbx
    jmp         00000001400269A0
    int         3
    sub         rsp,label_28
    call        0000000140026990
    and         eax,label_3F
    add         rsp,label_28
    ret
func_000000014001FC5C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rdx
    mov         rdi,rcx
    test        rcx,rcx
    jne         000000014001FC7F
    mov         rcx,rdx
    call        0000000140019D00
    jmp         000000014001FC9E
    test        rbx,rbx
    jne         000000014001FC8B
    call        0000000140019CC4
    jmp         000000014001FC9C
    cmp         rbx,label_0FFFFFFFFFFFFFFE0
    jbe         000000014001FCBE
    call        0000000140015374
    mov         dword ptr [rax],label_0C
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001FCA8_end:
    call        0000000140018690
    test        eax,eax
    je          000000014001FC91
    mov         rcx,rbx
    call        0000000140015F8C
    test        eax,eax
    je          000000014001FC91
    mov         rcx,qword ptr [label_000000014003E9E8]
    mov         r9,rbx
    mov         r8,rdi
    xor         edx,edx
    call label_000000014002C228
    test        rax,rax
    je          000000014001FCA9
    jmp         000000014001FC9E
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    push        rdi
    sub         rsp,label_20
    mov         eax,label_0FFFF
    movzx       ebx,dx
    cmp         cx,ax
    je          000000014001FD3B
    mov         eax,label_100
    cmp         cx,ax
    jae         000000014001FD0F
    mov         rax,qword ptr [label_000000014003C0C8]
    movzx       ecx,cx
    movzx       eax,word ptr [rax+rcx*2]
    and         eax,ebx
    jmp         000000014001FD3D
    xor         edi,edi
    mov         word ptr [rsp+label_40],cx
    lea         r9,[rsp+label_30]
    mov         word ptr [rsp+label_30],di
    lea         rdx,[rsp+label_40]
    lea         ecx,[rdi+1]
    mov         r8d,ecx
    call        00000001400269E0
    test        eax,eax
    je          000000014001FD3B
    movzx       eax,word ptr [rsp+label_30]
    jmp         000000014001FD0B
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001FD47_end:
    sub         rsp,label_28
    call        00000001400269F4
    mov         ecx,eax
    add         rsp,label_28
    jmp         00000001400269E8
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_20
    mov         rdi,r9
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rax,qword ptr [label_000000014003C040]
    mov         ecx,eax
    and         ecx,label_3F
    mov         rbx,qword ptr [label_000000014003E8D0]
    xor         rbx,rax
    ror         rbx,cl
    mov         ecx,dword ptr [rdi]
    call        0000000140012CB4
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014001FDA3_end:
    mov         r11,rsp
    sub         rsp,label_28
    mov         eax,3
    lea         r9,[r11+label_10]
    lea         r8,[r11+8]
    mov         dword ptr [rsp+label_38],eax
    lea         rdx,[r11+label_18]
    mov         dword ptr [rsp+label_40],eax
    lea         rcx,[r11+8]
    call        000000014001FD5C
    add         rsp,label_28
    ret
func_000000014001FDD1_end:
    int         3
    int         3
    mov         qword ptr [label_000000014003E8C0],rcx
    mov         qword ptr [label_000000014003E8C8],rcx
    mov         qword ptr [label_000000014003E8D0],rcx
    mov         qword ptr [label_000000014003E8D8],rcx
    ret
func_000000014001FDF0_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_40
    mov         ebx,ecx
    xor         r15d,r15d
    and         dword ptr [rsp+label_78],r15d
    mov         r14b,1
    mov         byte ptr [rsp+label_70],r14b
    mov         edx,ecx
    sub         edx,2
    je          000000014001FE4B
    sub         edx,2
    je          000000014001FE7B
    sub         edx,2
    je          000000014001FE4B
    sub         edx,2
    je          000000014001FE7B
    sub         edx,3
    je          000000014001FE7B
    sub         edx,4
    je          000000014001FE4B
    sub         edx,6
    je          000000014001FE4B
    cmp         edx,1
    jne         000000014001FECD
    sub         ecx,2
    je          000000014001FF08
    sub         ecx,4
    je          000000014001FEED
    sub         ecx,9
    je          000000014001FEFF
    sub         ecx,6
    je          000000014001FEF6
    cmp         ecx,1
    je          000000014001FEED
    xor         edi,edi
    jmp         000000014001FF0F
    call        0000000140019ADC
    mov         r15,rax
    test        rax,rax
    jne         000000014001FEA5
    or          eax,label_0FFFFFFFF
    lea         r11,[rsp+label_40]
    mov         rbx,qword ptr [r11+label_40]
    mov         rsi,qword ptr [r11+label_48]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_000000014001FEA4_end:
    mov         rax,qword ptr [rax]
    mov         rcx,qword ptr [label_0000000140030110]
    shl         rcx,4
    add         rcx,rax
    jmp         000000014001FEC1
    cmp         dword ptr [rax+4],ebx
    je          000000014001FEC8
    add         rax,label_10
    cmp         rax,rcx
    jne         000000014001FEB8
    xor         eax,eax
    test        rax,rax
    jne         000000014001FEDF
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    jmp         000000014001FE88
    lea         rdi,[rax+8]
    xor         r14b,r14b
    mov         byte ptr [rsp+label_70],r14b
    jmp         000000014001FF0F
    lea         rdi,[label_000000014003E8D0]
    jmp         000000014001FF0F
    lea         rdi,[label_000000014003E8C8]
    jmp         000000014001FF0F
    lea         rdi,[label_000000014003E8D8]
    jmp         000000014001FF0F
    lea         rdi,[label_000000014003E8C0]
    xor         r13d,r13d
    test        r14b,r14b
    je          000000014001FF21
    lea         ecx,[r13+3]
    call        0000000140012C60
    nop
    mov         rsi,qword ptr [rdi]
    test        r14b,r14b
    je          000000014001FF3B
    mov         rax,qword ptr [label_000000014003C040]
    mov         ecx,eax
    and         ecx,label_3F
    xor         rsi,rax
    ror         rsi,cl
    cmp         rsi,1
    je          000000014001FFD0
    test        rsi,rsi
    je          0000000140020054
    mov         r12d,label_910
    cmp         ebx,label_0B
    ja          000000014001FF8E
    bt          r12d,ebx
    jae         000000014001FF8E
    mov         r13,qword ptr [r15+8]
    mov         qword ptr [rsp+label_30],r13
    and         qword ptr [r15+8],0
    cmp         ebx,8
    jne         000000014001FFC4
    call        0000000140019964
    mov         eax,dword ptr [rax+label_10]
    mov         dword ptr [rsp+label_78],eax
    mov         dword ptr [rsp+label_20],eax
    call        0000000140019964
    mov         dword ptr [rax+label_10],label_8C
    cmp         ebx,8
    jne         000000014001FFC4
    mov         rax,qword ptr [label_0000000140030118]
    shl         rax,4
    add         rax,qword ptr [r15]
    mov         rcx,qword ptr [label_0000000140030120]
    shl         rcx,4
    add         rcx,rax
    mov         qword ptr [rsp+label_28],rax
    cmp         rax,rcx
    je          000000014001FFD6
    and         qword ptr [rax+8],0
    add         rax,label_10
    jmp         000000014001FFAF
    mov         rax,qword ptr [label_000000014003C040]
    mov         qword ptr [rdi],rax
    jmp         000000014001FFD6
    mov         r12d,label_910
    test        r14b,r14b
    je          000000014001FFE5
    mov         ecx,3
    call        0000000140012CB4
    cmp         rsi,1
    jne         000000014001FFF2
    xor         eax,eax
    jmp         000000014001FE8B
    cmp         ebx,8
    jne         000000014002001A
    call        0000000140019964
    mov         r10,label_8B9C1F4F30D33370
    mov         edx,dword ptr [rax+label_10]
    mov         ecx,ebx
    mov         rax,rsi
    mov         r8,qword ptr [label_000000014002C2C0]
    call        r8
    jmp         0000000140020032
    mov         r10,label_0C6C1864950D77370
    mov         ecx,ebx
    mov         rax,rsi
    mov         rdx,qword ptr [label_000000014002C2C0]
    call        rdx
    cmp         ebx,label_0B
    ja          000000014001FFEB
    bt          r12d,ebx
    jae         000000014001FFEB
    mov         qword ptr [r15+8],r13
    cmp         ebx,8
    jne         000000014001FFEB
    call        0000000140019964
    mov         ecx,dword ptr [rsp+label_78]
    mov         dword ptr [rax+label_10],ecx
    jmp         000000014001FFEB
    test        r14b,r14b
    je          0000000140020061
    lea         ecx,[rsi+3]
    call        0000000140012CB4
    mov         ecx,3
    call        0000000140016CD4
    nop
    int         3
    int         3
    int         3
    int         3
    mov         eax,label_0DEAC
    cmp         ecx,eax
    ja          00000001400200C8
    je          00000001400200BF
    mov         eax,label_0C433
    cmp         ecx,eax
    ja          00000001400200A3
    je          00000001400200BF
    mov         eax,ecx
    sub         eax,label_2A
    je          00000001400200BF
    sub         eax,label_0C402
    je          00000001400200BF
    sub         eax,1
    je          00000001400200BF
    sub         eax,1
    je          00000001400200BF
    cmp         eax,3
    jmp         00000001400200BD
    mov         eax,ecx
    sub         eax,label_0C435
    je          00000001400200BF
    sub         eax,label_1263
    je          00000001400200FB
    sub         eax,label_812
    je          00000001400200BF
    cmp         eax,1
    jne         00000001400200C1
    xor         edx,edx
    jmp         qword ptr [label_000000014002C030]
    mov         eax,ecx
    sub         eax,label_0DEAD
    je          00000001400200BF
    sub         eax,1
    je          00000001400200BF
    sub         eax,1
    je          00000001400200BF
    sub         eax,1
    je          00000001400200BF
    sub         eax,1
    je          00000001400200BF
    sub         eax,1
    je          00000001400200BF
    sub         eax,1
    je          00000001400200BF
    sub         eax,label_1F35
    je          00000001400200BF
    cmp         eax,1
    jne         00000001400200C1
    and         edx,8
    jmp         00000001400200C1
    mov         qword ptr [rsp+8],rbx
    push        rdi
    lea         eax,[rcx+label_FFFFFFFFFFFF0218]
    mov         r11d,r9d
    cmp         eax,1
    mov         rbx,r8
    mov         eax,label_0DEAC
    setbe       r10b
    xor         edi,edi
    cmp         ecx,eax
    ja          0000000140020165
    je          000000014002019E
    mov         eax,label_0C433
    cmp         ecx,eax
    ja          000000014002014E
    je          000000014002019E
    mov         eax,ecx
    sub         eax,label_2A
    je          000000014002019E
    sub         eax,label_0C402
    je          000000014002019E
    sub         eax,1
    je          000000014002019E
    sub         eax,1
    je          000000014002019E
    cmp         eax,3
    jmp         0000000140020196
    mov         eax,ecx
    sub         eax,label_0C435
    je          000000014002019E
    sub         eax,label_1263
    je          000000014002019E
    sub         eax,label_812
    jmp         0000000140020191
    mov         eax,ecx
    sub         eax,label_0DEAD
    je          000000014002019E
    sub         eax,1
    je          000000014002019E
    sub         eax,1
    je          000000014002019E
    sub         eax,1
    je          000000014002019E
    sub         eax,1
    je          000000014002019E
    sub         eax,1
    je          000000014002019E
    sub         eax,1
    je          000000014002019E
    sub         eax,label_1F35
    je          000000014002019E
    cmp         eax,1
    je          000000014002019E
    btr         edx,7
    jmp         00000001400201A0
    mov         edx,edi
    mov         rax,qword ptr [rsp+label_48]
    test        r10b,r10b
    mov         r9,qword ptr [rsp+label_40]
    mov         r8,rax
    cmovne      r8,rdi
    cmovne      r9,rdi
    je          00000001400201C1
    test        rax,rax
    je          00000001400201C1
    mov         dword ptr [rax],edi
    mov         qword ptr [rsp+label_48],r8
    mov         r8,rbx
    mov         qword ptr [rsp+label_40],r9
    mov         r9d,r11d
    mov         rbx,qword ptr [rsp+label_10]
    pop         rdi
    jmp         qword ptr [label_000000014002C038]
    int         3
    int         3
    mov         r11,rdx
    mov         r10,rcx
    movzx       r8d,word ptr [r10]
    lea         r10,[r10+2]
    movzx       edx,word ptr [r11]
    lea         r11,[r11+2]
    lea         eax,[r8-label_41]
    cmp         eax,label_19
    lea         r9d,[r8+label_20]
    lea         eax,[rdx-label_41]
    cmova       r9d,r8d
    lea         ecx,[rdx+label_20]
    cmp         eax,label_19
    mov         eax,r9d
    cmova       ecx,edx
    sub         eax,ecx
    jne         000000014002021D
    test        r9d,r9d
    jne         00000001400201E6
    ret
func_000000014002021D_end:
    int         3
    int         3
    sub         rsp,label_28
    cmp         dword ptr [label_000000014003E290],0
    jne         000000014002025A
    test        rcx,rcx
    jne         000000014002024C
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         eax,label_7FFFFFFF
    add         rsp,label_28
    ret
func_000000014002024B_end:
    test        rdx,rdx
    je          0000000140020232
    add         rsp,label_28
    jmp         00000001400201E0
    xor         r8d,r8d
    add         rsp,label_28
    jmp         0000000140020268
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_40
    mov         rdi,rdx
    mov         rbx,rcx
    test        rcx,rcx
    jne         00000001400202A5
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         eax,label_7FFFFFFF
    jmp         0000000140020380
    test        rdi,rdi
    je          000000014002028B
    mov         rdx,r8
    lea         rcx,[rsp+label_20]
    call        0000000140015394
    mov         rcx,qword ptr [rsp+label_28]
    cmp         qword ptr [rcx+label_0000000000000138],0
    jne         00000001400202D8
    mov         rdx,rdi
    mov         rcx,rbx
    call        00000001400201E0
    mov         esi,eax
    jmp         000000014002036B
    mov         r14d,label_100
    lea         r15,[label_000000014002F300]
    movzx       eax,word ptr [rbx]
    lea         rbx,[rbx+2]
    cmp         ax,r14w
    jae         000000014002030C
    movzx       edx,al
    test        byte ptr [r15+rdx*2+2],1
    je          0000000140020307
    mov         rax,qword ptr [rcx+label_0000000000000110]
    mov         dl,byte ptr [rdx+rax]
    movzx       eax,dl
    jmp         000000014002031E
    lea         rdx,[rsp+label_28]
    movzx       ecx,ax
    call        0000000140026CDC
    mov         rcx,qword ptr [rsp+label_28]
    movzx       ebp,ax
    movzx       eax,word ptr [rdi]
    mov         esi,ebp
    add         rdi,2
    cmp         ax,r14w
    jae         000000014002034A
    movzx       edx,al
    test        byte ptr [r15+rdx*2+2],1
    je          0000000140020345
    mov         rax,qword ptr [rcx+label_0000000000000110]
    mov         dl,byte ptr [rdx+rax]
    movzx       eax,dl
    jmp         000000014002035C
    lea         rdx,[rsp+label_28]
    movzx       ecx,ax
    call        0000000140026CDC
    mov         rcx,qword ptr [rsp+label_28]
    movzx       eax,ax
    sub         esi,eax
    jne         000000014002036B
    test        ebp,ebp
    jne         00000001400202E5
    cmp         byte ptr [rsp+label_38],0
    je          000000014002037E
    mov         rax,qword ptr [rsp+label_20]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         eax,esi
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    add         rsp,label_40
    pop         r15
    pop         r14
    pop         rdi
    ret
func_0000000140020398_end:
    int         3
    int         3
    int         3
    mov         rax,label_708000007080
    mov         dword ptr [label_000000014003E8E0],eax
    mov         rax,label_100000001
    mov         dword ptr [label_000000014003E8E4],eax
    mov         rax,label_0FFFFF1F0FFFFF1F0
    mov         dword ptr [label_000000014003E8E8],eax
    lea         rax,[label_000000014003C700]
    mov         qword ptr [label_000000014003E8F0],rax
    lea         rax,[label_000000014003C710]
    mov         qword ptr [label_000000014003E8F8],rax
    xor         eax,eax
    ret
func_00000001400203EA_end:
    int         3
    push        rbx
    sub         rsp,label_20
    xor         ebx,ebx
    mov         r9,rcx
    test        rcx,rcx
    je          0000000140020409
    test        rdx,rdx
    je          0000000140020409
    test        r8,r8
    jne         0000000140020422
    mov         word ptr [rcx],bx
    call        0000000140015374
    mov         ebx,label_16
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         eax,ebx
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140020421_end:
    cmp         word ptr [rcx],bx
    je          0000000140020437
    add         rcx,2
    sub         rdx,1
    jne         0000000140020422
    mov         word ptr [r9],bx
    jmp         0000000140020409
    sub         r8,rcx
    movzx       eax,word ptr [r8+rcx]
    mov         word ptr [rcx],ax
    lea         rcx,[rcx+2]
    test        ax,ax
    je          000000014002041A
    sub         rdx,1
    jne         000000014002043A
    mov         word ptr [r9],bx
    call        0000000140015374
    mov         ebx,label_22
    jmp         0000000140020413
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    xor         r10d,r10d
    mov         rbx,r8
    mov         r11,rdx
    test        r9,r9
    jne         00000001400204B2
    test        rcx,rcx
    jne         00000001400204B7
    test        rdx,rdx
    je          000000014002049F
    call        0000000140015374
    mov         ebx,label_16
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         r10d,ebx
    mov         rbx,qword ptr [rsp+label_30]
    mov         eax,r10d
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400204B1_end:
    test        rcx,rcx
    je          000000014002048B
    test        r11,r11
    je          000000014002048B
    test        r9,r9
    jne         00000001400204C7
    mov         word ptr [rcx],r10w
    jmp         000000014002049F
    test        rbx,rbx
    jne         00000001400204D2
    mov         word ptr [rcx],r10w
    jmp         000000014002048B
    sub         rbx,rcx
    mov         rdx,rcx
    mov         r8,r11
    mov         rdi,r9
    cmp         r9,label_0FFFFFFFFFFFFFFFF
    jne         00000001400204FC
    movzx       eax,word ptr [rbx+rdx]
    mov         word ptr [rdx],ax
    lea         rdx,[rdx+2]
    test        ax,ax
    je          000000014002049F
    sub         r8,1
    jne         00000001400204E4
    jmp         000000014002052F
    movzx       eax,word ptr [rbx+rdx]
    mov         rsi,rdi
    mov         word ptr [rdx],ax
    lea         rdx,[rdx+2]
    test        ax,ax
    je          000000014002049F
    sub         r8,1
    je          000000014002051B
    sub         rdi,1
    jne         00000001400204FC
    test        r8,r8
    lea         rax,[rsi-1]
    cmove       rax,rsi
    test        rax,rax
    jne         000000014002052F
    mov         word ptr [rdx],r10w
    test        r8,r8
    jne         000000014002049F
    cmp         r9,label_0FFFFFFFFFFFFFFFF
    jne         000000014002054D
    mov         word ptr [rcx+r11*2-2],r10w
    lea         r10d,[r8+label_50]
    jmp         000000014002049F
    mov         word ptr [rcx],r10w
    call        0000000140015374
    mov         ebx,label_22
    jmp         0000000140020495
    cmp         rcx,rdx
    jae         0000000140020569
    or          eax,label_0FFFFFFFF
    ret
func_0000000140020568_end:
    xor         eax,eax
    cmp         rcx,rdx
    seta        al
    ret
func_0000000140020571_end:
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_40
    xor         r14d,r14d
    mov         ebp,r9d
    mov         rbx,rdx
    mov         rdi,rcx
    test        rcx,rcx
    jne         00000001400205C2
    cmp         byte ptr [rdx+label_28],r14b
    je          00000001400205B1
    mov         rcx,qword ptr [rdx+label_10]
    call        0000000140019CC4
    mov         byte ptr [rbx+label_28],r14b
    mov         qword ptr [rbx+label_10],r14
    mov         qword ptr [rbx+label_18],r14
    mov         qword ptr [rbx+label_20],r14
    jmp         00000001400206E2
    cmp         word ptr [rcx],r14w
    jne         000000014002061C
    cmp         qword ptr [rdx+label_18],r14
    jne         0000000140020613
    cmp         byte ptr [rdx+label_28],r14b
    je          00000001400205E1
    mov         rcx,qword ptr [rdx+label_10]
    call        0000000140019CC4
    mov         byte ptr [rbx+label_28],r14b
    mov         ecx,1
    call        0000000140019D00
    mov         qword ptr [rbx+label_10],rax
    mov         rdx,r14
    neg         rax
    sbb         eax,eax
    not         eax
    and         eax,label_0C
    sete        dl
    test        eax,eax
    sete        cl
    mov         byte ptr [rbx+label_28],cl
    mov         qword ptr [rbx+label_18],rdx
    test        eax,eax
    jne         00000001400206E4
    mov         rax,qword ptr [rbx+label_10]
    mov         byte ptr [rax],r14b
    jmp         00000001400205B9
    mov         qword ptr [rsp+label_38],r14
    or          r9d,label_0FFFFFFFF
    mov         qword ptr [rsp+label_30],r14
    mov         r8,rdi
    mov         dword ptr [rsp+label_28],r14d
    xor         edx,edx
    mov         ecx,ebp
    mov         qword ptr [rsp+label_20],r14
    call        0000000140020100
    movsxd      rsi,eax
    test        eax,eax
    jne         0000000140020660
    call label_000000014002C0F8
    mov         ecx,eax
    call        00000001400152E8
    call        0000000140015374
    mov         eax,dword ptr [rax]
    jmp         00000001400206E4
    mov         rdx,qword ptr [rbx+label_18]
    cmp         rsi,rdx
    jbe         00000001400206A9
    cmp         byte ptr [rbx+label_28],r14b
    je          000000014002067C
    mov         rcx,qword ptr [rbx+label_10]
    call        0000000140019CC4
    mov         byte ptr [rbx+label_28],r14b
    mov         rcx,rsi
    call        0000000140019D00
    mov         qword ptr [rbx+label_10],rax
    mov         rdx,r14
    neg         rax
    sbb         eax,eax
    not         eax
    and         eax,label_0C
    cmove       rdx,rsi
    test        eax,eax
    sete        cl
    mov         byte ptr [rbx+label_28],cl
    mov         qword ptr [rbx+label_18],rdx
    test        eax,eax
    jne         00000001400206E4
    mov         rax,qword ptr [rbx+label_10]
    or          r9d,label_0FFFFFFFF
    mov         qword ptr [rsp+label_38],r14
    mov         r8,rdi
    mov         qword ptr [rsp+label_30],r14
    mov         ecx,ebp
    mov         dword ptr [rsp+label_28],edx
    xor         edx,edx
    mov         qword ptr [rsp+label_20],rax
    call        0000000140020100
    cdqe
    test        rax,rax
    je          0000000140020647
    dec         rax
    mov         qword ptr [rbx+label_20],rax
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    mov         rdi,qword ptr [rsp+label_68]
    add         rsp,label_40
    pop         r14
    ret
func_00000001400206FE_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    mov         rbp,rsp
    sub         rsp,label_50
    xor         r15d,r15d
    mov         r13,rdx
    mov         rbx,rcx
    test        rdx,rdx
    jne         000000014002073C
    call        0000000140015374
    lea         ebx,[r13+label_16]
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         eax,ebx
    jmp         0000000140020913
    xorps       xmm0,xmm0
    mov         qword ptr [rdx],r15
    mov         rax,qword ptr [rcx]
    movdqu      xmmword ptr [rbp-label_20],xmm0
    mov         qword ptr [rbp-label_10],r15
    test        rax,rax
    je          00000001400207F4
    lea         rdx,[rbp+label_48]
    mov         word ptr [rbp+label_48],label_3F2A
    mov         rcx,rax
    mov         byte ptr [rbp+label_4A],r15b
    call        0000000140027280
    mov         rcx,qword ptr [rbx]
    test        rax,rax
    jne         00000001400207B1
    lea         r9,[rbp-label_20]
    xor         r8d,r8d
    xor         edx,edx
    call        0000000140020944
    mov         esi,eax
    test        eax,eax
    je          00000001400207C3
    mov         rdi,qword ptr [rbp-label_20]
    mov         rbx,rdi
    cmp         rdi,qword ptr [rbp-label_18]
    je          0000000140020877
    mov         rcx,qword ptr [rbx]
    call        0000000140019CC4
    add         rbx,8
    cmp         rbx,qword ptr [rbp-label_18]
    jne         000000014002079A
    jmp         0000000140020877
    lea         r8,[rbp-label_20]
    mov         rdx,rax
    call        0000000140020AC8
    mov         esi,eax
    test        eax,eax
    jne         00000001400207CC
    add         rbx,8
    mov         rax,qword ptr [rbx]
    jmp         000000014002074E
    mov         rdi,qword ptr [rbp-label_20]
    mov         rbx,rdi
    cmp         rdi,qword ptr [rbp-label_18]
    je          0000000140020877
    mov         rcx,qword ptr [rbx]
    call        0000000140019CC4
    add         rbx,8
    cmp         rbx,qword ptr [rbp-label_18]
    jne         00000001400207DD
    jmp         0000000140020877
    mov         rdi,qword ptr [rbp-label_20]
    or          r12,label_0FFFFFFFFFFFFFFFF
    mov         rsi,qword ptr [rbp-label_18]
    mov         rdx,r15
    mov         r14,rsi
    mov         qword ptr [rbp+label_50],rdx
    sub         r14,rdi
    mov         rax,rdi
    sar         r14,3
    inc         r14
    cmp         rdi,rsi
    je          000000014002083E
    mov         r8,qword ptr [rax]
    mov         rcx,r12
    inc         rcx
    cmp         byte ptr [r8+rcx],r15b
    jne         0000000140020822
    inc         rdx
    add         rax,8
    add         rdx,rcx
    cmp         rax,rsi
    jne         000000014002081C
    mov         qword ptr [rbp+label_50],rdx
    mov         r8d,1
    mov         rcx,r14
    call        00000001400163EC
    mov         rbx,rax
    test        rax,rax
    jne         0000000140020886
    xor         ecx,ecx
    call        0000000140019CC4
    mov         rbx,rdi
    cmp         rdi,rsi
    je          0000000140020874
    mov         rcx,qword ptr [rbx]
    call        0000000140019CC4
    add         rbx,8
    cmp         rbx,rsi
    jne         0000000140020863
    mov         esi,r12d
    mov         rcx,rdi
    call        0000000140019CC4
    mov         eax,esi
    jmp         0000000140020913
    lea         rcx,[rax+r14*8]
    mov         r14,rdi
    mov         qword ptr [rbp+label_58],rcx
    mov         r12,rcx
    cmp         rdi,rsi
    je          00000001400208E5
    sub         rax,rdi
    mov         qword ptr [rbp+label_48],rax
    mov         r8,qword ptr [r14]
    or          r15,label_0FFFFFFFFFFFFFFFF
    inc         r15
    cmp         byte ptr [r8+r15],0
    jne         00000001400208A7
    mov         rdx,rcx
    inc         r15
    sub         rdx,r12
    mov         r9,r15
    add         rdx,qword ptr [rbp+label_50]
    mov         rcx,r12
    call        0000000140026848
    test        eax,eax
    jne         000000014002092B
    mov         rax,qword ptr [rbp+label_48]
    mov         rcx,qword ptr [rbp+label_58]
    mov         qword ptr [rax+r14],r12
    add         r12,r15
    add         r14,8
    cmp         r14,rsi
    jne         00000001400208A0
    xor         ecx,ecx
    mov         qword ptr [r13],rbx
    call        0000000140019CC4
    mov         rbx,rdi
    cmp         rdi,rsi
    je          0000000140020909
    mov         rcx,qword ptr [rbx]
    call        0000000140019CC4
    add         rbx,8
    cmp         rbx,rsi
    jne         00000001400208F8
    mov         rcx,rdi
    call        0000000140019CC4
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_0000000000000090]
    add         rsp,label_50
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_000000014002092A_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    or          rbp,label_0FFFFFFFFFFFFFFFF
    mov         rsi,r9
    xor         edi,edi
    mov         r14,r8
    mov         r13,rdx
    mov         r12,rcx
    inc         rbp
    cmp         byte ptr [rcx+rbp],dil
    jne         0000000140020972
    mov         edx,1
    mov         rax,r14
    add         rbp,rdx
    not         rax
    cmp         rbp,rax
    jbe         00000001400209AE
    lea         eax,[rdx+label_0B]
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_00000001400209AD_end:
    lea         r15,[r8+1]
    add         r15,rbp
    mov         rcx,r15
    call        000000014001BDB0
    mov         rbx,rax
    test        r14,r14
    je          00000001400209DE
    mov         r9,r14
    mov         r8,r13
    mov         rdx,r15
    mov         rcx,rax
    call        0000000140026848
    test        eax,eax
    jne         0000000140020AB3
    sub         r15,r14
    lea         rcx,[rbx+r14]
    mov         rdx,r15
    mov         r9,rbp
    mov         r8,r12
    call        0000000140026848
    test        eax,eax
    jne         0000000140020AB3
    mov         r14,qword ptr [rsi+label_10]
    lea         r15d,[rax+8]
    cmp         qword ptr [rsi+8],r14
    jne         0000000140020A9A
    cmp         qword ptr [rsi],rdi
    jne         0000000140020A3D
    mov         edx,r15d
    lea         ecx,[rax+4]
    call        000000014001BDB0
    xor         ecx,ecx
    mov         qword ptr [rsi],rax
    call        0000000140019CC4
    mov         rax,qword ptr [rsi]
    test        rax,rax
    je          0000000140020A71
    mov         qword ptr [rsi+8],rax
    add         rax,label_20
    mov         qword ptr [rsi+label_10],rax
    jmp         0000000140020A9A
    sub         r14,qword ptr [rsi]
    mov         rax,label_7FFFFFFFFFFFFFFF
    sar         r14,3
    cmp         r14,rax
    ja          0000000140020A71
    mov         rcx,qword ptr [rsi]
    lea         rbp,[r14+r14]
    mov         rdx,rbp
    mov         r8,r15
    call        0000000140024C70
    test        rax,rax
    jne         0000000140020A80
    xor         ecx,ecx
    call        0000000140019CC4
    mov         rcx,rbx
    mov         edi,label_0C
    call        0000000140019CC4
    jmp         0000000140020AA5
    lea         rcx,[rax+r14*8]
    mov         qword ptr [rsi],rax
    mov         qword ptr [rsi+8],rcx
    lea         rcx,[rax+rbp*8]
    mov         qword ptr [rsi+label_10],rcx
    xor         ecx,ecx
    call        0000000140019CC4
    mov         rcx,qword ptr [rsi+8]
    mov         qword ptr [rcx],rbx
    add         qword ptr [rsi+8],r15
    xor         ecx,ecx
    call        0000000140019CC4
    mov         eax,edi
    jmp         0000000140020991
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rdi
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    lea         rbp,[rsp+label_FFFFFFFFFFFFFDC0]
    sub         rsp,label_340
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_0000000000000230],rax
    mov         r12,r8
    mov         rdi,rcx
    mov         rbx,label_200000000801
    cmp         rdx,rcx
    je          0000000140020B2A
    mov         al,byte ptr [rdx]
    sub         al,label_2F
    cmp         al,label_2D
    ja          0000000140020B1A
    movsx       rax,al
    bt          rbx,rax
    jb          0000000140020B2A
    mov         rcx,rdi
    call        0000000140027648
    mov         rdx,rax
    cmp         rax,rdi
    jne         0000000140020B08
    mov         r8b,byte ptr [rdx]
    cmp         r8b,label_3A
    jne         0000000140020B51
    lea         rax,[rdi+1]
    cmp         rdx,rax
    je          0000000140020B51
    mov         r9,r12
    xor         r8d,r8d
    xor         edx,edx
    mov         rcx,rdi
    call        0000000140020944
    jmp         0000000140020DF4
    sub         r8b,label_2F
    xor         r14d,r14d
    cmp         r8b,label_2D
    ja          0000000140020B6A
    movsx       rax,r8b
    bt          rbx,rax
    mov         al,1
    jb          0000000140020B6D
    mov         al,r14b
    sub         rdx,rdi
    mov         qword ptr [rsp+label_40],r14
    inc         rdx
    mov         qword ptr [rsp+label_48],r14
    neg         al
    mov         qword ptr [rsp+label_50],r14
    lea         rcx,[rsp+label_70]
    mov         qword ptr [rsp+label_58],r14
    sbb         r13,r13
    mov         qword ptr [rsp+label_60],r14
    and         r13,rdx
    mov         byte ptr [rsp+label_68],r14b
    xor         edx,edx
    mov         qword ptr [rsp+label_38],r13
    call        0000000140015394
    mov         rax,qword ptr [rsp+label_78]
    mov         ecx,label_0FDE9
    cmp         dword ptr [rax+label_0C],ecx
    jne         0000000140020BD0
    cmp         byte ptr [rbp-label_78],r14b
    je          0000000140020BCB
    mov         rax,qword ptr [rsp+label_70]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,ecx
    jmp         0000000140020C08
    call        000000014001B62C
    test        eax,eax
    jne         0000000140020BF3
    cmp         byte ptr [rbp-label_78],r14b
    je          0000000140020BEB
    mov         rax,qword ptr [rsp+label_70]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,1
    jmp         0000000140020C08
    cmp         byte ptr [rbp-label_78],r14b
    je          0000000140020C05
    mov         rax,qword ptr [rsp+label_70]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,r14d
    lea         r8,[rsp+label_30]
    mov         rcx,rdi
    lea         rdx,[rsp+label_40]
    call        00000001400159C4
    mov         rcx,qword ptr [rsp+label_50]
    lea         r8,[rbp-label_20]
    test        eax,eax
    mov         dword ptr [rsp+label_28],r14d
    mov         qword ptr [rsp+label_20],r14
    cmovne      rcx,r14
    xor         r9d,r9d
    xor         edx,edx
    call label_000000014002C238
    mov         rbx,rax
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    jne         0000000140020C71
    mov         r9,r12
    xor         r8d,r8d
    xor         edx,edx
    mov         rcx,rdi
    call        0000000140020944
    mov         ebx,eax
    cmp         byte ptr [rsp+label_68],r14b
    je          0000000140020C6A
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140019CC4
    mov         eax,ebx
    jmp         0000000140020DF4
    mov         rsi,qword ptr [r12+8]
    sub         rsi,qword ptr [r12]
    sar         rsi,3
    xor         edx,edx
    mov         qword ptr [rbp-label_50],r14
    lea         rcx,[rbp-label_70]
    mov         qword ptr [rbp-label_48],r14
    mov         qword ptr [rbp-label_40],r14
    mov         qword ptr [rbp-label_38],r14
    mov         qword ptr [rbp-label_30],r14
    mov         byte ptr [rbp-label_28],r14b
    call        0000000140015394
    mov         rax,qword ptr [rbp-label_68]
    mov         ecx,label_0FDE9
    cmp         dword ptr [rax+label_0C],ecx
    jne         0000000140020CC5
    cmp         byte ptr [rbp-label_58],r14b
    je          0000000140020CC0
    mov         rax,qword ptr [rbp-label_70]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,ecx
    jmp         0000000140020CFB
    call        000000014001B62C
    test        eax,eax
    jne         0000000140020CE7
    cmp         byte ptr [rbp-label_58],r14b
    je          0000000140020CDF
    mov         rax,qword ptr [rbp-label_70]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,1
    jmp         0000000140020CFB
    cmp         byte ptr [rbp-label_58],r14b
    je          0000000140020CF8
    mov         rax,qword ptr [rbp-label_70]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,r14d
    lea         r8,[rsp+label_30]
    lea         rdx,[rbp-label_50]
    lea         rcx,[rbp+label_0C]
    call        0000000140020574
    mov         r14,qword ptr [rbp-label_40]
    xor         edx,edx
    test        eax,eax
    mov         rcx,r14
    cmovne      rcx,rdx
    cmp         byte ptr [rcx],label_2E
    jne         0000000140020D40
    mov         al,byte ptr [rcx+1]
    test        al,al
    jne         0000000140020D37
    cmp         byte ptr [rbp-label_28],dl
    je          0000000140020D67
    mov         rcx,r14
    call        0000000140019CC4
    jmp         0000000140020D67
    cmp         al,label_2E
    jne         0000000140020D40
    cmp         byte ptr [rcx+2],dl
    je          0000000140020D28
    mov         r9,r12
    mov         r8,r13
    mov         rdx,rdi
    call        0000000140020944
    mov         r13d,eax
    test        eax,eax
    jne         0000000140020DC9
    cmp         byte ptr [rbp-label_28],al
    je          0000000140020D62
    mov         rcx,r14
    call        0000000140019CC4
    mov         r13,qword ptr [rsp+label_38]
    lea         rdx,[rbp-label_20]
    mov         rcx,rbx
    call label_000000014002C240
    xor         r14d,r14d
    test        eax,eax
    jne         0000000140020C7E
    mov         rax,qword ptr [r12]
    mov         rdx,qword ptr [r12+8]
    sub         rdx,rax
    sar         rdx,3
    cmp         rsi,rdx
    je          0000000140020DAB
    sub         rdx,rsi
    lea         rcx,[rax+rsi*8]
    lea         r9,[label_0000000140020560]
    lea         r8d,[r14+8]
    call        0000000140026DD0
    mov         rcx,rbx
    call label_000000014002C230
    cmp         byte ptr [rsp+label_68],r14b
    je          0000000140020DC5
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140019CC4
    xor         eax,eax
    jmp         0000000140020DF4
    cmp         byte ptr [rbp-label_28],0
    je          0000000140020DD7
    mov         rcx,r14
    call        0000000140019CC4
    mov         rcx,rbx
    call label_000000014002C230
    cmp         byte ptr [rsp+label_68],0
    je          0000000140020DF1
    mov         rcx,qword ptr [rsp+label_50]
    call        0000000140019CC4
    mov         eax,r13d
    mov         rcx,qword ptr [rbp+label_0000000000000230]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_340
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_0000000140020E14_end:
    int         3
    int         3
    int         3
    jmp         0000000140020700
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rdi
    push        rbp
    lea         rbp,[rsp+label_FFFFFFFFFFFFFE60]
    sub         rsp,label_2A0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_0000000000000190],rax
    mov         edi,r8d
    mov         rbx,rdx
    mov         r8d,label_105
    lea         rdx,[rbp-label_80]
    call label_000000014002C158
    test        eax,eax
    jne         0000000140020E79
    call label_000000014002C0F8
    mov         ecx,eax
    call        00000001400152E8
    xor         eax,eax
    jmp         0000000140020F1D
    and         qword ptr [rsp+label_68],0
    lea         rcx,[rsp+label_28]
    mov         rax,rdi
    mov         qword ptr [rsp+label_48],rbx
    xor         edx,edx
    mov         qword ptr [rsp+label_50],rax
    mov         qword ptr [rsp+label_60],rax
    mov         qword ptr [rsp+label_58],rbx
    mov         byte ptr [rsp+label_70],0
    call        0000000140015394
    mov         rax,qword ptr [rsp+label_30]
    mov         r9d,label_0FDE9
    cmp         dword ptr [rax+label_0C],r9d
    jne         0000000140020ECD
    cmp         byte ptr [rsp+label_40],0
    je          0000000140020F06
    mov         rax,qword ptr [rsp+label_28]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    jmp         0000000140020F06
    call        000000014001B62C
    test        eax,eax
    jne         0000000140020EF0
    cmp         byte ptr [rsp+label_40],al
    je          0000000140020EE8
    mov         rax,qword ptr [rsp+label_28]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,1
    jmp         0000000140020F06
    cmp         byte ptr [rsp+label_40],0
    je          0000000140020F03
    mov         rax,qword ptr [rsp+label_28]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    xor         r9d,r9d
    lea         r8,[rsp+label_20]
    lea         rdx,[rsp+label_48]
    lea         rcx,[rbp-label_80]
    call        0000000140015B40
    mov         eax,dword ptr [rsp+label_68]
    mov         rcx,qword ptr [rbp+label_0000000000000190]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_00000000000002A0]
    mov         rbx,qword ptr [r11+label_18]
    mov         rdi,qword ptr [r11+label_20]
    mov         rsp,r11
    pop         rbp
    ret
func_0000000140020F40_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_20],r9
    push        rdi
    sub         rsp,label_40
    mov         rdi,r9
    mov         rbx,r8
    mov         ecx,dword ptr [rdx]
    call        0000000140012C60
    nop
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax]
    mov         rax,qword ptr [rcx+label_0000000000000088]
    add         rax,label_18
    mov         qword ptr [rsp+label_58],rax
    mov         rcx,qword ptr [label_000000014003E9C0]
    mov         qword ptr [rsp+label_20],rcx
    test        rcx,rcx
    je          0000000140020FF7
    test        rax,rax
    je          0000000140020FEA
    mov         r8d,2
    mov         r9d,r8d
    lea         edx,[r8+label_7E]
    movups      xmm0,xmmword ptr [rax]
    movups      xmmword ptr [rcx],xmm0
    movups      xmm1,xmmword ptr [rax+label_10]
    movups      xmmword ptr [rcx+label_10],xmm1
    movups      xmm0,xmmword ptr [rax+label_20]
    movups      xmmword ptr [rcx+label_20],xmm0
    movups      xmm1,xmmword ptr [rax+label_30]
    movups      xmmword ptr [rcx+label_30],xmm1
    movups      xmm0,xmmword ptr [rax+label_40]
    movups      xmmword ptr [rcx+label_40],xmm0
    movups      xmm1,xmmword ptr [rax+label_50]
    movups      xmmword ptr [rcx+label_50],xmm1
    movups      xmm0,xmmword ptr [rax+label_60]
    movups      xmmword ptr [rcx+label_60],xmm0
    add         rcx,rdx
    movups      xmm1,xmmword ptr [rax+label_70]
    movups      xmmword ptr [rcx-label_10],xmm1
    add         rax,rdx
    sub         r9,1
    jne         0000000140020F9A
    mov         al,byte ptr [rax]
    mov         byte ptr [rcx],al
    jmp         0000000140021011
    xor         edx,edx
    mov         r8d,label_101
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         r8d,2
    lea         edx,[r8+label_7E]
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax]
    mov         rax,qword ptr [rcx+label_0000000000000088]
    add         rax,label_119
    mov         qword ptr [rsp+label_28],rax
    mov         rcx,qword ptr [label_000000014003E9C8]
    mov         qword ptr [rsp+label_30],rcx
    test        rcx,rcx
    je          0000000140021098
    test        rax,rax
    je          000000014002108B
    movups      xmm0,xmmword ptr [rax]
    movups      xmmword ptr [rcx],xmm0
    movups      xmm1,xmmword ptr [rax+label_10]
    movups      xmmword ptr [rcx+label_10],xmm1
    movups      xmm0,xmmword ptr [rax+label_20]
    movups      xmmword ptr [rcx+label_20],xmm0
    movups      xmm1,xmmword ptr [rax+label_30]
    movups      xmmword ptr [rcx+label_30],xmm1
    movups      xmm0,xmmword ptr [rax+label_40]
    movups      xmmword ptr [rcx+label_40],xmm0
    movups      xmm1,xmmword ptr [rax+label_50]
    movups      xmmword ptr [rcx+label_50],xmm1
    movups      xmm0,xmmword ptr [rax+label_60]
    movups      xmmword ptr [rcx+label_60],xmm0
    add         rcx,rdx
    movups      xmm1,xmmword ptr [rax+label_70]
    movups      xmmword ptr [rcx-label_10],xmm1
    add         rax,rdx
    sub         r8,1
    jne         000000014002103F
    jmp         00000001400210A8
    xor         edx,edx
    mov         r8d,label_100
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         rax,qword ptr [rbx+8]
    mov         rcx,qword ptr [rax]
    mov         rdx,qword ptr [rcx]
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rdx],eax
    cmp         eax,1
    jne         00000001400210D9
    mov         rax,qword ptr [rbx+8]
    mov         rcx,qword ptr [rax]
    lea         rax,[label_000000014003C720]
    cmp         qword ptr [rcx],rax
    je          00000001400210D9
    mov         rcx,qword ptr [rcx]
    call        0000000140019CC4
    mov         rax,qword ptr [rbx]
    mov         rdx,qword ptr [rax]
    mov         rax,qword ptr [rbx+8]
    mov         rcx,qword ptr [rax]
    mov         rax,qword ptr [rdx+label_0000000000000088]
    mov         qword ptr [rcx],rax
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax]
    mov         rax,qword ptr [rcx+label_0000000000000088]
    lock inc    dword ptr [rax]
    mov         ecx,dword ptr [rdi]
    call        0000000140012CB4
    mov         rbx,qword ptr [rsp+label_50]
    add         rsp,label_40
    pop         rdi
    ret
func_0000000140021111_end:
    int         3
    int         3
    push        rbx
    sub         rsp,label_40
    mov         ebx,ecx
    xor         edx,edx
    lea         rcx,[rsp+label_20]
    call        0000000140015394
    and         dword ptr [label_000000014003E9D8],0
    cmp         ebx,label_0FFFFFFFE
    jne         0000000140021146
    mov         dword ptr [label_000000014003E9D8],1
    call label_000000014002C258
    jmp         000000014002115B
    cmp         ebx,label_0FFFFFFFD
    jne         000000014002115F
    mov         dword ptr [label_000000014003E9D8],1
    call label_000000014002C250
    mov         ebx,eax
    jmp         0000000140021176
    cmp         ebx,label_0FFFFFFFC
    jne         0000000140021176
    mov         rax,qword ptr [rsp+label_28]
    mov         dword ptr [label_000000014003E9D8],1
    mov         ebx,dword ptr [rax+label_0C]
    cmp         byte ptr [rsp+label_38],0
    je          0000000140021189
    mov         rcx,qword ptr [rsp+label_20]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    mov         eax,ebx
    add         rsp,label_40
    pop         rbx
    ret
func_0000000140021190_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    xor         edx,edx
    add         rcx,label_18
    mov         r8d,label_101
    call        000000014002A110
    xor         edx,edx
    lea         rdi,[rbx+label_0C]
    movzx       eax,dx
    lea         r9,[label_000000014003C720]
    mov         qword ptr [rbx+4],rdx
    mov         r8,rbx
    mov         qword ptr [rbx+label_0000000000000220],rdx
    lea         ecx,[rdx+6]
    rep stos    word ptr [rdi]
    lea         rax,[label_000000014003C738]
    mov         edi,edx
    sub         r8,rax
    lea         rcx,[rdi+r9]
    inc         rdi
    mov         al,byte ptr [rcx+label_18]
    mov         byte ptr [r8+rcx+label_30],al
    cmp         rdi,label_101
    jl          00000001400211E2
    lea         rax,[label_000000014003C839]
    sub         rbx,rax
    lea         rcx,[rdx+r9]
    inc         rdx
    mov         al,byte ptr [rcx+label_0000000000000119]
    mov         byte ptr [rbx+rcx+label_0000000000000232],al
    cmp         rdx,label_100
    jl          0000000140021204
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014002122B_end:
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rdi
    push        rbp
    lea         rbp,[rsp+label_FFFFFFFFFFFFF980]
    sub         rsp,label_780
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_0000000000000670],rax
    mov         rdi,rcx
    mov         ecx,dword ptr [rcx+4]
    cmp         ecx,label_0FDE9
    je          00000001400213B0
    lea         rdx,[rsp+label_50]
    call label_000000014002C050
    test        eax,eax
    je          00000001400213B0
    xor         eax,eax
    lea         rcx,[rsp+label_70]
    mov         ebx,label_100
    mov         byte ptr [rcx],al
    inc         eax
    inc         rcx
    cmp         eax,ebx
    jb          0000000140021288
    mov         al,byte ptr [rsp+label_56]
    lea         rdx,[rsp+label_56]
    mov         byte ptr [rsp+label_70],label_20
    jmp         00000001400212C3
    movzx       r8d,byte ptr [rdx+1]
    movzx       ecx,al
    jmp         00000001400212B8
    cmp         ecx,ebx
    jae         00000001400212BD
    mov         byte ptr [rsp+rcx+label_70],label_20
    inc         ecx
    cmp         ecx,r8d
    jbe         00000001400212AD
    add         rdx,2
    mov         al,byte ptr [rdx]
    test        al,al
    jne         00000001400212A3
    mov         eax,dword ptr [rdi+4]
    lea         r8,[rsp+label_70]
    and         dword ptr [rsp+label_30],0
    mov         r9d,ebx
    mov         dword ptr [rsp+label_28],eax
    mov         edx,1
    lea         rax,[rbp+label_0000000000000270]
    xor         ecx,ecx
    mov         qword ptr [rsp+label_20],rax
    call        000000014001CB44
    and         dword ptr [rsp+label_40],0
    lea         r9,[rsp+label_70]
    mov         eax,dword ptr [rdi+4]
    mov         r8d,ebx
    mov         rdx,qword ptr [rdi+label_0000000000000220]
    xor         ecx,ecx
    mov         dword ptr [rsp+label_38],eax
    lea         rax,[rbp+label_70]
    mov         dword ptr [rsp+label_30],ebx
    mov         qword ptr [rsp+label_28],rax
    mov         dword ptr [rsp+label_20],ebx
    call        000000014001D008
    and         dword ptr [rsp+label_40],0
    lea         r9,[rsp+label_70]
    mov         eax,dword ptr [rdi+4]
    mov         r8d,label_200
    mov         rdx,qword ptr [rdi+label_0000000000000220]
    xor         ecx,ecx
    mov         dword ptr [rsp+label_38],eax
    lea         rax,[rbp+label_0000000000000170]
    mov         dword ptr [rsp+label_30],ebx
    mov         qword ptr [rsp+label_28],rax
    mov         dword ptr [rsp+label_20],ebx
    call        000000014001D008
    lea         r8,[rbp+label_70]
    sub         r8,rdi
    lea         r9,[rbp+label_0000000000000170]
    sub         r9,rdi
    lea         rdx,[rbp+label_0000000000000270]
    lea         rax,[rdi+label_19]
    test        byte ptr [rdx],1
    je          000000014002138A
    or          byte ptr [rax],label_10
    mov         cl,byte ptr [r8+rax-label_19]
    jmp         000000014002139B
    test        byte ptr [rdx],2
    je          0000000140021399
    or          byte ptr [rax],label_20
    mov         cl,byte ptr [r9+rax-label_19]
    jmp         000000014002139B
    xor         cl,cl
    mov         byte ptr [rax+label_0000000000000100],cl
    add         rdx,2
    inc         rax
    sub         rbx,1
    jne         000000014002137B
    jmp         00000001400213EF
    xor         edx,edx
    lea         rcx,[rdi+label_19]
    mov         ebx,label_100
    lea         r8d,[rdx-label_61]
    lea         eax,[r8+label_20]
    cmp         eax,label_19
    ja          00000001400213D0
    or          byte ptr [rcx],label_10
    lea         eax,[rdx+label_20]
    jmp         00000001400213E0
    cmp         r8d,label_19
    ja          00000001400213DE
    or          byte ptr [rcx],label_20
    lea         eax,[rdx-label_20]
    jmp         00000001400213E0
    xor         al,al
    mov         byte ptr [rcx+label_0000000000000100],al
    inc         edx
    inc         rcx
    cmp         edx,ebx
    jb          00000001400213BB
    mov         rcx,qword ptr [rbp+label_0000000000000670]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000000780]
    mov         rbx,qword ptr [r11+label_18]
    mov         rdi,qword ptr [r11+label_20]
    mov         rsp,r11
    pop         rbp
    ret
func_0000000140021412_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rsi
    mov         qword ptr [rax+label_20],r9
    mov         qword ptr [rax+label_18],r8
    push        rbp
    push        rdi
    push        r14
    lea         rbp,[rax+label_FFFFFFFFFFFFFE78]
    sub         rsp,label_270
    mov         r14b,dl
    mov         ebx,ecx
    mov         rdx,r9
    mov         rcx,r8
    call        0000000140021684
    mov         ecx,ebx
    call        0000000140021114
    mov         rcx,qword ptr [rbp+label_00000000000001A0]
    mov         edi,eax
    mov         r8,qword ptr [rcx+label_0000000000000088]
    cmp         eax,dword ptr [r8+4]
    jne         000000014002146D
    xor         eax,eax
    jmp         000000014002166B
    mov         ecx,label_228
    call        0000000140019D00
    mov         rbx,rax
    test        rax,rax
    jne         000000014002148E
    xor         ecx,ecx
    call        0000000140019CC4
    or          eax,label_0FFFFFFFF
    jmp         000000014002166B
    mov         rax,qword ptr [rbp+label_00000000000001A0]
    lea         rcx,[rsp+label_40]
    mov         edx,4
    mov         r8d,edx
    mov         rax,qword ptr [rax+label_0000000000000088]
    lea         r9d,[rdx+label_7C]
    movups      xmm0,xmmword ptr [rax]
    movups      xmm1,xmmword ptr [rax+label_10]
    movups      xmmword ptr [rcx],xmm0
    movups      xmm0,xmmword ptr [rax+label_20]
    movups      xmmword ptr [rcx+label_10],xmm1
    movups      xmm1,xmmword ptr [rax+label_30]
    movups      xmmword ptr [rcx+label_20],xmm0
    movups      xmm0,xmmword ptr [rax+label_40]
    movups      xmmword ptr [rcx+label_30],xmm1
    movups      xmm1,xmmword ptr [rax+label_50]
    movups      xmmword ptr [rcx+label_40],xmm0
    movups      xmm0,xmmword ptr [rax+label_60]
    movups      xmmword ptr [rcx+label_50],xmm1
    movups      xmm1,xmmword ptr [rax+label_70]
    add         rax,r9
    movups      xmmword ptr [rcx+label_60],xmm0
    add         rcx,r9
    movups      xmmword ptr [rcx-label_10],xmm1
    sub         r8,1
    jne         00000001400214AD
    movups      xmm0,xmmword ptr [rax]
    movups      xmm1,xmmword ptr [rax+label_10]
    mov         rax,qword ptr [rax+label_20]
    movups      xmmword ptr [rcx],xmm0
    movups      xmmword ptr [rcx+label_10],xmm1
    mov         qword ptr [rcx+label_20],rax
    mov         rcx,rbx
    lea         rax,[rsp+label_40]
    movups      xmm0,xmmword ptr [rax]
    movups      xmm1,xmmword ptr [rax+label_10]
    movups      xmmword ptr [rcx],xmm0
    movups      xmm0,xmmword ptr [rax+label_20]
    movups      xmmword ptr [rcx+label_10],xmm1
    movups      xmm1,xmmword ptr [rax+label_30]
    movups      xmmword ptr [rcx+label_20],xmm0
    movups      xmm0,xmmword ptr [rax+label_40]
    movups      xmmword ptr [rcx+label_30],xmm1
    movups      xmm1,xmmword ptr [rax+label_50]
    movups      xmmword ptr [rcx+label_40],xmm0
    movups      xmm0,xmmword ptr [rax+label_60]
    movups      xmmword ptr [rcx+label_50],xmm1
    movups      xmm1,xmmword ptr [rax+label_70]
    add         rax,r9
    movups      xmmword ptr [rcx+label_60],xmm0
    add         rcx,r9
    movups      xmmword ptr [rcx-label_10],xmm1
    sub         rdx,1
    jne         0000000140021515
    movups      xmm0,xmmword ptr [rax]
    movups      xmm1,xmmword ptr [rax+label_10]
    mov         rax,qword ptr [rax+label_20]
    movups      xmmword ptr [rcx],xmm0
    movups      xmmword ptr [rcx+label_10],xmm1
    mov         qword ptr [rcx+label_20],rax
    mov         ecx,edi
    and         dword ptr [rbx],edx
    mov         rdx,rbx
    call        00000001400217B8
    or          edi,label_0FFFFFFFF
    mov         esi,eax
    cmp         eax,edi
    jne         00000001400215A4
    call        0000000140015374
    mov         rcx,rbx
    mov         dword ptr [rax],label_16
    call        0000000140019CC4
    mov         eax,edi
    jmp         000000014002166B
    test        r14b,r14b
    jne         00000001400215AE
    call        0000000140017108
    mov         rax,qword ptr [rbp+label_00000000000001A0]
    mov         rcx,qword ptr [rax+label_0000000000000088]
    mov         eax,edi
    lock xadd   dword ptr [rcx],eax
    add         eax,edi
    jne         00000001400215E5
    mov         rax,qword ptr [rbp+label_00000000000001A0]
    mov         rcx,qword ptr [rax+label_0000000000000088]
    lea         rax,[label_000000014003C720]
    cmp         rcx,rax
    je          00000001400215E5
    call        0000000140019CC4
    mov         dword ptr [rbx],1
    mov         rax,qword ptr [rbp+label_00000000000001A0]
    mov         qword ptr [rax+label_0000000000000088],rbx
    mov         rax,qword ptr [rbp+label_00000000000001A0]
    mov         ecx,dword ptr [rax+label_00000000000003A8]
    test        dword ptr [label_000000014003C468],ecx
    jne         0000000140021662
    lea         rax,[rbp+label_00000000000001A0]
    mov         qword ptr [rsp+label_30],rax
    lea         r9,[rsp+label_24]
    lea         rax,[rbp+label_00000000000001A8]
    mov         qword ptr [rsp+label_38],rax
    lea         r8,[rsp+label_30]
    mov         eax,5
    lea         rdx,[rsp+label_28]
    lea         rcx,[rsp+label_20]
    mov         dword ptr [rsp+label_24],eax
    mov         dword ptr [rsp+label_28],eax
    call        0000000140020F44
    test        r14b,r14b
    je          0000000140021662
    mov         rax,qword ptr [rbp+label_00000000000001A8]
    mov         rcx,qword ptr [rax]
    mov         qword ptr [label_000000014003C410],rcx
    xor         ecx,ecx
    call        0000000140019CC4
    mov         eax,esi
    lea         r11,[rsp+label_0000000000000270]
    mov         rbx,qword ptr [r11+label_20]
    mov         rsi,qword ptr [r11+label_28]
    mov         rsp,r11
    pop         r14
    pop         rdi
    pop         rbp
    ret
func_0000000140021682_end:
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         rsi,rdx
    mov         rdi,rcx
    mov         eax,dword ptr [label_000000014003C468]
    test        dword ptr [rcx+label_00000000000003A8],eax
    je          00000001400216BA
    cmp         qword ptr [rcx+label_0000000000000090],0
    je          00000001400216BA
    mov         rbx,qword ptr [rcx+label_0000000000000088]
    jmp         000000014002171E
    mov         ecx,5
    call        0000000140012C60
    nop
    mov         rbx,qword ptr [rdi+label_0000000000000088]
    mov         qword ptr [rsp+label_30],rbx
    cmp         rbx,qword ptr [rsi]
    je          0000000140021714
    test        rbx,rbx
    je          00000001400216FD
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rbx],eax
    cmp         eax,1
    jne         00000001400216FD
    lea         rax,[label_000000014003C720]
    mov         rcx,qword ptr [rsp+label_30]
    cmp         rcx,rax
    je          00000001400216FD
    call        0000000140019CC4
    mov         rax,qword ptr [rsi]
    mov         qword ptr [rdi+label_0000000000000088],rax
    mov         qword ptr [rsp+label_30],rax
    lock inc    dword ptr [rax]
    mov         rbx,qword ptr [rsp+label_30]
    mov         ecx,5
    call        0000000140012CB4
    test        rbx,rbx
    je          0000000140021736
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140021735_end:
    call        0000000140015954
    nop
    sub         rsp,label_28
    cmp         byte ptr [label_000000014003E9DC],0
    jne         0000000140021795
    lea         rcx,[label_000000014003CA60]
    mov         qword ptr [label_000000014003E9C8],rcx
    lea         rax,[label_000000014003C720]
    lea         rcx,[label_000000014003C950]
    mov         qword ptr [label_000000014003E9D0],rax
    mov         qword ptr [label_000000014003E9C0],rcx
    call        0000000140019A38
    lea         r9,[label_000000014003E9D0]
    mov         r8,rax
    mov         dl,1
    mov         ecx,label_0FFFFFFFD
    call        0000000140021414
    mov         byte ptr [label_000000014003E9DC],1
    mov         al,1
    add         rsp,label_28
    ret
func_000000014002179B_end:
    sub         rsp,label_28
    call        0000000140019964
    lea         rdx,[label_000000014003E9D0]
    mov         rcx,rax
    add         rsp,label_28
    jmp         0000000140021684
    mov         qword ptr [rsp+label_18],rbx
    mov         qword ptr [rsp+label_20],rbp
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_40
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_38],rax
    mov         rsi,rdx
    call        0000000140021114
    xor         ebx,ebx
    mov         edi,eax
    test        eax,eax
    je          0000000140021A45
    lea         r12,[label_000000014003CB70]
    mov         r14d,ebx
    mov         rax,r12
    lea         ebp,[rbx+1]
    cmp         dword ptr [rax],edi
    je          000000014002194F
    add         r14d,ebp
    add         rax,label_30
    cmp         r14d,5
    jb          0000000140021801
    cmp         edi,label_0FDE8
    je          0000000140021947
    movzx       ecx,di
    call label_000000014002C248
    test        eax,eax
    je          0000000140021947
    mov         eax,label_0FDE9
    cmp         edi,eax
    jne         0000000140021862
    mov         qword ptr [rsi+4],rax
    mov         qword ptr [rsi+label_0000000000000220],rbx
    mov         dword ptr [rsi+label_18],ebx
    mov         word ptr [rsi+label_1C],bx
    lea         rdi,[rsi+label_0C]
    movzx       eax,bx
    mov         ecx,6
    rep stos    word ptr [rdi]
    jmp         0000000140021A3B
    lea         rdx,[rsp+label_20]
    mov         ecx,edi
    call label_000000014002C050
    test        eax,eax
    je          000000014002193B
    lea         rcx,[rsi+label_18]
    xor         edx,edx
    mov         r8d,label_101
    call        000000014002A110
    cmp         dword ptr [rsp+label_20],2
    mov         dword ptr [rsi+4],edi
    mov         qword ptr [rsi+label_0000000000000220],rbx
    jne         0000000140021931
    lea         rcx,[rsp+label_26]
    cmp         byte ptr [rsp+label_26],bl
    je          00000001400218D4
    cmp         byte ptr [rcx+1],bl
    je          00000001400218D4
    movzx       eax,byte ptr [rcx+1]
    movzx       edx,byte ptr [rcx]
    cmp         edx,eax
    ja          00000001400218CC
    sub         eax,edx
    lea         edi,[rdx+1]
    lea         edx,[rax+rbp]
    or          byte ptr [rdi+rsi+label_18],4
    add         edi,ebp
    sub         rdx,rbp
    jne         00000001400218C0
    add         rcx,2
    cmp         byte ptr [rcx],bl
    jne         00000001400218A8
    lea         rax,[rsi+label_1A]
    mov         ecx,label_0FE
    or          byte ptr [rax],8
    add         rax,rbp
    sub         rcx,rbp
    jne         00000001400218DD
    mov         ecx,dword ptr [rsi+4]
    sub         ecx,label_3A4
    je          0000000140021921
    sub         ecx,4
    je          0000000140021918
    sub         ecx,label_0D
    je          000000014002190F
    cmp         ecx,ebp
    je          0000000140021906
    mov         rax,rbx
    jmp         0000000140021928
    mov         rax,qword ptr [label_0000000140031350]
    jmp         0000000140021928
    mov         rax,qword ptr [label_0000000140031348]
    jmp         0000000140021928
    mov         rax,qword ptr [label_0000000140031340]
    jmp         0000000140021928
    mov         rax,qword ptr [label_0000000140031338]
    mov         qword ptr [rsi+label_0000000000000220],rax
    jmp         0000000140021933
    mov         ebp,ebx
    mov         dword ptr [rsi+8],ebp
    jmp         000000014002184E
    cmp         dword ptr [label_000000014003E9D8],ebx
    jne         0000000140021A45
    or          eax,label_0FFFFFFFF
    jmp         0000000140021A4F
    lea         rcx,[rsi+label_18]
    xor         edx,edx
    mov         r8d,label_101
    call        000000014002A110
    mov         eax,r14d
    lea         r9,[r12+label_10]
    lea         r11,[label_000000014003CB60]
    mov         r14d,4
    lea         r15,[rax+rax*2]
    shl         r15,4
    add         r9,r15
    mov         rdx,r9
    cmp         byte ptr [r9],bl
    je          00000001400219C6
    cmp         byte ptr [rdx+1],bl
    je          00000001400219C6
    movzx       r8d,byte ptr [rdx]
    movzx       eax,byte ptr [rdx+1]
    cmp         r8d,eax
    ja          00000001400219BE
    lea         r10d,[r8+1]
    cmp         r10d,label_101
    jae         00000001400219BE
    mov         al,byte ptr [r11]
    add         r8d,ebp
    or          byte ptr [r10+rsi+label_18],al
    add         r10d,ebp
    movzx       eax,byte ptr [rdx+1]
    cmp         r8d,eax
    jbe         000000014002199E
    add         rdx,2
    cmp         byte ptr [rdx],bl
    jne         0000000140021988
    add         r9,8
    add         r11,rbp
    sub         r14,rbp
    jne         0000000140021980
    mov         dword ptr [rsi+4],edi
    mov         dword ptr [rsi+8],ebp
    sub         edi,label_3A4
    je          0000000140021A09
    sub         edi,4
    je          0000000140021A00
    sub         edi,label_0D
    je          00000001400219F7
    cmp         edi,ebp
    jne         0000000140021A10
    mov         rbx,qword ptr [label_0000000140031350]
    jmp         0000000140021A10
    mov         rbx,qword ptr [label_0000000140031348]
    jmp         0000000140021A10
    mov         rbx,qword ptr [label_0000000140031340]
    jmp         0000000140021A10
    mov         rbx,qword ptr [label_0000000140031338]
    lea         rdi,[r12+4]
    mov         qword ptr [rsi+label_0000000000000220],rbx
    add         rdi,r15
    lea         rdx,[rsi+label_0C]
    mov         ecx,6
    movzx       eax,word ptr [rdi]
    lea         rdi,[rdi+2]
    mov         word ptr [rdx],ax
    lea         rdx,[rdx+2]
    sub         rcx,rbp
    jne         0000000140021A28
    mov         rcx,rsi
    call        000000014002122C
    jmp         0000000140021A4D
    mov         rcx,rsi
    call        0000000140021194
    xor         eax,eax
    mov         rcx,qword ptr [rsp+label_38]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_40]
    mov         rbx,qword ptr [r11+label_40]
    mov         rbp,qword ptr [r11+label_48]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    ret
func_0000000140021A74_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_40
    mov         ebx,edx
    mov         edi,r9d
    mov         rdx,rcx
    mov         esi,r8d
    lea         rcx,[rsp+label_20]
    call        0000000140015394
    mov         rax,qword ptr [rsp+label_30]
    movzx       edx,bl
    test        byte ptr [rdx+rax+label_19],dil
    jne         0000000140021AC3
    test        esi,esi
    je          0000000140021ABF
    mov         rax,qword ptr [rsp+label_28]
    mov         rcx,qword ptr [rax]
    movzx       eax,word ptr [rcx+rdx*2]
    test        esi,eax
    jne         0000000140021AC3
    xor         eax,eax
    jmp         0000000140021AC8
    mov         eax,1
    cmp         byte ptr [rsp+label_38],0
    je          0000000140021ADB
    mov         rcx,qword ptr [rsp+label_20]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    mov         rbx,qword ptr [rsp+label_50]
    mov         rsi,qword ptr [rsp+label_58]
    add         rsp,label_40
    pop         rdi
    ret
func_0000000140021AEA_end:
    int         3
    mov         edx,ecx
    mov         r9d,4
    xor         ecx,ecx
    xor         r8d,r8d
    jmp         0000000140021A78
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_40
    call label_000000014002C260
    xor         esi,esi
    mov         rbx,rax
    test        rax,rax
    jne         0000000140021B30
    xor         eax,eax
    jmp         0000000140021BF3
    mov         rbp,rbx
    cmp         word ptr [rax],si
    je          0000000140021B55
    or          rax,label_0FFFFFFFFFFFFFFFF
    inc         rax
    cmp         word ptr [rbp+rax*2],si
    jne         0000000140021B3C
    lea         rbp,[rbp+rax*2]
    add         rbp,2
    cmp         word ptr [rbp],si
    jne         0000000140021B38
    mov         qword ptr [rsp+label_38],rsi
    sub         rbp,rbx
    mov         qword ptr [rsp+label_30],rsi
    add         rbp,2
    sar         rbp,1
    mov         r8,rbx
    mov         r9d,ebp
    mov         dword ptr [rsp+label_28],esi
    xor         edx,edx
    mov         qword ptr [rsp+label_20],rsi
    xor         ecx,ecx
    call        0000000140020100
    movsxd      r14,eax
    test        eax,eax
    jne         0000000140021B93
    mov         rcx,rbx
    call label_000000014002C268
    jmp         0000000140021B29
    mov         rcx,r14
    call        0000000140019D00
    mov         rdi,rax
    test        rax,rax
    jne         0000000140021BAC
    xor         ecx,ecx
    call        0000000140019CC4
    jmp         0000000140021B88
    mov         qword ptr [rsp+label_38],rsi
    mov         r9d,ebp
    mov         qword ptr [rsp+label_30],rsi
    mov         r8,rbx
    mov         dword ptr [rsp+label_28],r14d
    xor         edx,edx
    xor         ecx,ecx
    mov         qword ptr [rsp+label_20],rdi
    call        0000000140020100
    test        eax,eax
    jne         0000000140021BDD
    mov         rcx,rdi
    call        0000000140019CC4
    jmp         0000000140021BE7
    xor         ecx,ecx
    call        0000000140019CC4
    mov         rsi,rdi
    mov         rcx,rbx
    call label_000000014002C268
    mov         rax,rsi
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    mov         rdi,qword ptr [rsp+label_68]
    add         rsp,label_40
    pop         r14
    ret
func_0000000140021C0D_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_18],rbx
    mov         dword ptr [rsp+label_10],edx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    xor         esi,esi
    mov         ebx,edx
    mov         r15,rcx
    test        rcx,rcx
    jne         0000000140021C44
    call        0000000140015374
    mov         dword ptr [rax],label_16
    jmp         0000000140021F37
    mov         edx,label_3D
    mov         rdi,r15
    call        0000000140029908
    mov         r13,rax
    test        rax,rax
    je          0000000140021F24
    cmp         rax,r15
    je          0000000140021F24
    mov         r14,qword ptr [label_000000014003E228]
    cmp         r14,qword ptr [label_000000014003E240]
    mov         bpl,byte ptr [rax+1]
    mov         byte ptr [rsp+label_70],bpl
    jne         0000000140021C91
    mov         rcx,r14
    call        0000000140021F68
    mov         r14,rax
    mov         qword ptr [label_000000014003E228],rax
    mov         r12d,1
    test        r14,r14
    jne         0000000140021D6A
    test        ebx,ebx
    je          0000000140021CF9
    cmp         qword ptr [label_000000014003E230],rsi
    je          0000000140021CF9
    call        00000001400168B4
    test        rax,rax
    jne         0000000140021CD5
    call        0000000140015374
    mov         dword ptr [rax],label_16
    or          rbp,label_0FFFFFFFFFFFFFFFF
    mov         rcx,r15
    call        0000000140019CC4
    mov         eax,ebp
    jmp         0000000140021F3B
    mov         r14,qword ptr [label_000000014003E228]
    cmp         r14,qword ptr [label_000000014003E240]
    jne         0000000140021D61
    mov         rcx,r14
    call        0000000140021F68
    mov         r14,rax
    mov         qword ptr [label_000000014003E228],rax
    jmp         0000000140021D61
    test        bpl,bpl
    je          0000000140021E1A
    mov         edx,8
    mov         rcx,r12
    call        000000014001BDB0
    xor         ecx,ecx
    mov         qword ptr [label_000000014003E228],rax
    call        0000000140019CC4
    mov         r14,qword ptr [label_000000014003E228]
    test        r14,r14
    je          0000000140021CC2
    cmp         qword ptr [label_000000014003E230],rsi
    jne         0000000140021D61
    mov         edx,8
    mov         rcx,r12
    call        000000014001BDB0
    xor         ecx,ecx
    mov         qword ptr [label_000000014003E230],rax
    call        0000000140019CC4
    cmp         qword ptr [label_000000014003E230],rsi
    je          0000000140021CC2
    mov         r14,qword ptr [label_000000014003E228]
    test        r14,r14
    je          0000000140021CC2
    mov         rax,qword ptr [r14]
    mov         r12,r13
    sub         r12,r15
    mov         rbx,r14
    test        rax,rax
    je          0000000140021DAF
    mov         r8,r12
    mov         rdx,rax
    mov         rcx,r15
    call        00000001400276FC
    test        eax,eax
    jne         0000000140021D9D
    mov         rax,qword ptr [rbx]
    cmp         byte ptr [r12+rax],label_3D
    je          0000000140021DA6
    cmp         byte ptr [r12+rax],sil
    je          0000000140021DA6
    add         rbx,8
    mov         rax,qword ptr [rbx]
    jmp         0000000140021D76
    sub         rbx,r14
    sar         rbx,3
    jmp         0000000140021DB9
    sub         rbx,r14
    sar         rbx,3
    neg         rbx
    test        rbx,rbx
    js          0000000140021E15
    cmp         qword ptr [r14],rsi
    je          0000000140021E15
    mov         rcx,qword ptr [r14+rbx*8]
    call        0000000140019CC4
    test        bpl,bpl
    je          0000000140021DE6
    mov         qword ptr [r14+rbx*8],r15
    jmp         0000000140021E75
    mov         rax,qword ptr [r14+rbx*8+8]
    mov         qword ptr [r14+rbx*8],rax
    inc         rbx
    cmp         qword ptr [r14+rbx*8],rsi
    jne         0000000140021DDA
    mov         r8d,8
    mov         rdx,rbx
    mov         rcx,r14
    call        0000000140024C70
    xor         ecx,ecx
    mov         rbx,rax
    call        0000000140019CC4
    test        rbx,rbx
    je          0000000140021E78
    mov         qword ptr [label_000000014003E228],rbx
    jmp         0000000140021E78
    test        bpl,bpl
    jne         0000000140021E21
    mov         ebp,esi
    jmp         0000000140021CC6
    neg         rbx
    lea         rdx,[rbx+2]
    cmp         rdx,rbx
    jb          0000000140021CC2
    mov         rax,label_1FFFFFFFFFFFFFFF
    cmp         rdx,rax
    jae         0000000140021CC2
    mov         r8d,8
    mov         rcx,r14
    call        0000000140024C70
    xor         ecx,ecx
    mov         r14,rax
    call        0000000140019CC4
    test        r14,r14
    je          0000000140021CC2
    mov         qword ptr [r14+rbx*8],r15
    mov         qword ptr [r14+rbx*8+8],rsi
    mov         qword ptr [label_000000014003E228],r14
    mov         rdi,rsi
    cmp         dword ptr [rsp+label_78],esi
    je          0000000140021F18
    or          rbp,label_0FFFFFFFFFFFFFFFF
    mov         r14,rbp
    inc         r14
    cmp         byte ptr [r15+r14],sil
    jne         0000000140021E89
    mov         edx,1
    lea         rcx,[r14+2]
    call        000000014001BDB0
    mov         rbx,rax
    test        rax,rax
    jne         0000000140021EB1
    xor         ecx,ecx
    call        0000000140019CC4
    jmp         0000000140021F04
    mov         r8,r15
    lea         rdx,[r14+2]
    mov         rcx,rbx
    call        0000000140018C7C
    test        eax,eax
    jne         0000000140021F53
    mov         rax,rbx
    lea         rcx,[r13+1]
    sub         rax,r15
    add         rcx,rax
    neg         byte ptr [rsp+label_70]
    sbb         rdx,rdx
    mov         byte ptr [rax+r13],sil
    and         rdx,rcx
    mov         rcx,rbx
    call        0000000140027814
    test        eax,eax
    jne         0000000140021F10
    call        0000000140015374
    mov         rcx,rbx
    mov         dword ptr [rax],label_2A
    call        0000000140019CC4
    mov         esi,ebp
    mov         rcx,rdi
    call        0000000140019CC4
    mov         eax,esi
    jmp         0000000140021F3B
    mov         rcx,rbx
    call        0000000140019CC4
    mov         rcx,rdi
    call        0000000140019CC4
    xor         eax,eax
    jmp         0000000140021F3B
    call        0000000140015374
    mov         rcx,r15
    mov         dword ptr [rax],label_16
    call        0000000140019CC4
    or          rax,label_0FFFFFFFFFFFFFFFF
    mov         rbx,qword ptr [rsp+label_0000000000000080]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_0000000140021F52_end:
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rsi
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r14
    sub         rsp,label_30
    mov         rdi,rcx
    test        rcx,rcx
    jne         0000000140021F9D
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    mov         rdi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         r14
    ret
func_0000000140021F9C_end:
    xor         ecx,ecx
    mov         rax,rdi
    cmp         qword ptr [rdi],rcx
    je          0000000140021FB4
    inc         rcx
    lea         rax,[rax+8]
    cmp         qword ptr [rax],0
    jne         0000000140021FA7
    inc         rcx
    mov         edx,8
    call        000000014001BDB0
    mov         rbx,rax
    test        rax,rax
    je          0000000140022047
    mov         rax,qword ptr [rdi]
    test        rax,rax
    je          0000000140022022
    mov         r14,rbx
    sub         r14,rdi
    or          rsi,label_0FFFFFFFFFFFFFFFF
    inc         rsi
    cmp         byte ptr [rax+rsi],0
    jne         0000000140021FDB
    mov         edx,1
    lea         rcx,[rsi+1]
    call        000000014001BDB0
    xor         ecx,ecx
    mov         qword ptr [r14+rdi],rax
    call        0000000140019CC4
    mov         rcx,qword ptr [r14+rdi]
    test        rcx,rcx
    je          0000000140022047
    mov         r8,qword ptr [rdi]
    lea         rdx,[rsi+1]
    call        0000000140018C7C
    test        eax,eax
    jne         0000000140022031
    add         rdi,8
    mov         rax,qword ptr [rdi]
    test        rax,rax
    jne         0000000140021FD7
    xor         ecx,ecx
    call        0000000140019CC4
    mov         rax,rbx
    jmp         0000000140021F87
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    call        0000000140015954
    int         3
    int         3
    int         3
    int         3
    jmp         0000000140021C10
    int         3
    int         3
    int         3
    mov         rax,qword ptr gs:[label_0000000000000030]
    mov         rcx,qword ptr [rax+label_60]
    mov         eax,dword ptr [rcx+label_00000000000000BC]
    shr         eax,8
    and         al,1
    ret
func_0000000140022070_end:
    int         3
    int         3
    int         3
    mov         rax,qword ptr gs:[label_0000000000000030]
    mov         rcx,qword ptr [rax+label_60]
    mov         rax,qword ptr [rcx+label_20]
    mov         eax,dword ptr [rax+8]
    shr         eax,label_1F
    ret
func_000000014002208B_end:
    push        rbx
    sub         rsp,label_20
    xor         ebx,ebx
    mov         dword ptr [rsp+label_30],ebx
    call        0000000140022074
    test        al,al
    jne         00000001400220AB
    lea         rcx,[rsp+label_30]
    call        000000014001B5D4
    cmp         dword ptr [rsp+label_30],1
    setne       bl
    mov         eax,ebx
    add         rsp,label_20
    pop         rbx
    ret
func_00000001400220BA_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         edx,label_48
    lea         ecx,[rdx-8]
    call        000000014001BDB0
    xor         esi,esi
    mov         rbx,rax
    test        rax,rax
    je          0000000140022142
    lea         rbp,[rax+label_0000000000001200]
    cmp         rax,rbp
    je          000000014002213F
    lea         rdi,[rax+label_30]
    lea         rcx,[rdi-label_30]
    xor         r8d,r8d
    mov         edx,label_0FA0
    call        000000014001B918
    or          qword ptr [rdi-8],label_0FFFFFFFFFFFFFFFF
    lea         rcx,[rdi+label_0E]
    and         byte ptr [rdi+label_0D],label_0F8
    mov         eax,esi
    mov         qword ptr [rdi],rsi
    mov         dword ptr [rdi+8],label_0A0A0000
    mov         byte ptr [rdi+label_0C],label_0A
    mov         byte ptr [rcx],sil
    inc         eax
    inc         rcx
    cmp         eax,5
    jb          0000000140022125
    add         rdi,label_48
    lea         rax,[rdi-label_30]
    cmp         rax,rbp
    jne         00000001400220F7
    mov         rsi,rbx
    xor         ecx,ecx
    call        0000000140019CC4
    mov         rbx,qword ptr [rsp+label_30]
    mov         rax,rsi
    mov         rsi,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140022160_end:
    int         3
    int         3
    int         3
    test        rcx,rcx
    je          00000001400221B3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    lea         rsi,[rcx+label_0000000000001200]
    mov         rbx,rcx
    mov         rdi,rcx
    cmp         rcx,rsi
    je          000000014002219C
    mov         rcx,rdi
    call label_000000014002C018
    add         rdi,label_48
    cmp         rdi,rsi
    jne         000000014002218A
    mov         rcx,rbx
    call        0000000140019CC4
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400221B3_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r15
    sub         rsp,label_30
    mov         esi,ecx
    cmp         ecx,label_2000
    jb          00000001400221FC
    call        0000000140015374
    mov         ebx,9
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_40]
    mov         rsi,qword ptr [rsp+label_48]
    mov         rdi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         r15
    ret
func_00000001400221FB_end:
    xor         edi,edi
    lea         ecx,[rdi+7]
    call        0000000140012C60
    nop
    mov         ebx,edi
    mov         eax,dword ptr [label_000000014003E700]
    mov         qword ptr [rsp+label_20],rbx
    cmp         esi,eax
    jl          000000014002224E
    lea         r15,[label_000000014003E300]
    cmp         qword ptr [r15+rbx*8],rdi
    je          0000000140022227
    jmp         0000000140022249
    call        00000001400220BC
    mov         qword ptr [r15+rbx*8],rax
    test        rax,rax
    jne         000000014002223A
    lea         edi,[rax+label_0C]
    jmp         000000014002224E
    mov         eax,dword ptr [label_000000014003E700]
    add         eax,label_40
    mov         dword ptr [label_000000014003E700],eax
    inc         rbx
    jmp         000000014002220F
    mov         ecx,7
    call        0000000140012CB4
    mov         eax,edi
    jmp         00000001400221E6
    movsxd      rdx,ecx
    lea         r8,[label_000000014003E300]
    mov         rax,rdx
    and         edx,label_3F
    sar         rax,6
    lea         rcx,[rdx+rdx*8]
    mov         rax,qword ptr [r8+rax*8]
    lea         rcx,[rax+rcx*8]
    jmp         qword ptr [label_000000014002C000]
    int         3
    movsxd      rdx,ecx
    lea         r8,[label_000000014003E300]
    mov         rax,rdx
    and         edx,label_3F
    sar         rax,6
    lea         rcx,[rdx+rdx*8]
    mov         rax,qword ptr [r8+rax*8]
    lea         rcx,[rax+rcx*8]
    jmp         qword ptr [label_000000014002C008]
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        r14
    sub         rsp,label_20
    movsxd      rbx,ecx
    test        ecx,ecx
    js          000000014002233A
    cmp         ebx,dword ptr [label_000000014003E700]
    jae         000000014002233A
    mov         rax,rbx
    lea         r14,[label_000000014003E300]
    and         eax,label_3F
    mov         rsi,rbx
    shr         rsi,6
    lea         rdi,[rax+rax*8]
    mov         rax,qword ptr [r14+rsi*8]
    test        byte ptr [rax+rdi*8+label_38],1
    je          000000014002233A
    cmp         qword ptr [rax+rdi*8+label_28],label_0FFFFFFFFFFFFFFFF
    je          000000014002233A
    call        0000000140016188
    cmp         eax,1
    jne         000000014002232C
    test        ebx,ebx
    je          000000014002231F
    sub         ebx,eax
    je          0000000140022318
    cmp         ebx,eax
    jne         000000014002232C
    mov         ecx,label_0FFFFFFF4
    jmp         0000000140022324
    mov         ecx,label_0FFFFFFF5
    jmp         0000000140022324
    mov         ecx,label_0FFFFFFF6
    xor         edx,edx
    call label_000000014002C278
    mov         rax,qword ptr [r14+rsi*8]
    or          qword ptr [rax+rdi*8+label_28],label_0FFFFFFFFFFFFFFFF
    xor         eax,eax
    jmp         0000000140022350
    call        0000000140015374
    mov         dword ptr [rax],9
    call        0000000140015354
    and         dword ptr [rax],0
    or          eax,label_0FFFFFFFF
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    mov         rdi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         r14
    ret
func_0000000140022365_end:
    int         3
    int         3
    sub         rsp,label_28
    cmp         ecx,label_0FFFFFFFE
    jne         0000000140022386
    call        0000000140015354
    and         dword ptr [rax],0
    call        0000000140015374
    mov         dword ptr [rax],9
    jmp         00000001400223D4
    test        ecx,ecx
    js          00000001400223BC
    cmp         ecx,dword ptr [label_000000014003E700]
    jae         00000001400223BC
    movsxd      rcx,ecx
    lea         r8,[label_000000014003E300]
    mov         rax,rcx
    and         ecx,label_3F
    shr         rax,6
    lea         rdx,[rcx+rcx*8]
    mov         rax,qword ptr [r8+rax*8]
    test        byte ptr [rax+rdx*8+label_38],1
    je          00000001400223BC
    mov         rax,qword ptr [rax+rdx*8+label_28]
    jmp         00000001400223D8
    call        0000000140015354
    and         dword ptr [rax],0
    call        0000000140015374
    mov         dword ptr [rax],9
    call        00000001400105FC
    or          rax,label_0FFFFFFFFFFFFFFFF
    add         rsp,label_28
    ret
func_00000001400223DC_end:
    int         3
    int         3
    int         3
    mov         eax,dword ptr [label_000000014003E9E0]
    mov         ecx,label_4000
    test        eax,eax
    cmove       eax,ecx
    mov         dword ptr [label_000000014003E9E0],eax
    xor         eax,eax
    ret
func_00000001400223F8_end:
    int         3
    int         3
    int         3
    test        rcx,rcx
    je          0000000140022505
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         rcx,qword ptr [rcx+label_18]
    cmp         rcx,qword ptr [label_000000014003C1F8]
    je          000000014002241F
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_20]
    cmp         rcx,qword ptr [label_000000014003C200]
    je          0000000140022431
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_28]
    cmp         rcx,qword ptr [label_000000014003C208]
    je          0000000140022443
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_30]
    cmp         rcx,qword ptr [label_000000014003C210]
    je          0000000140022455
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_38]
    cmp         rcx,qword ptr [label_000000014003C218]
    je          0000000140022467
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_40]
    cmp         rcx,qword ptr [label_000000014003C220]
    je          0000000140022479
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_48]
    cmp         rcx,qword ptr [label_000000014003C228]
    je          000000014002248B
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_68]
    cmp         rcx,qword ptr [label_000000014003C248]
    je          000000014002249D
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_70]
    cmp         rcx,qword ptr [label_000000014003C250]
    je          00000001400224AF
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_78]
    cmp         rcx,qword ptr [label_000000014003C258]
    je          00000001400224C1
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_0000000000000080]
    cmp         rcx,qword ptr [label_000000014003C260]
    je          00000001400224D6
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_0000000000000088]
    cmp         rcx,qword ptr [label_000000014003C268]
    je          00000001400224EB
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_0000000000000090]
    cmp         rcx,qword ptr [label_000000014003C270]
    je          0000000140022500
    call        0000000140019CC4
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140022505_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        rbp
    push        r12
    push        r13
    push        r14
    push        r15
    mov         rbp,rsp
    sub         rsp,label_40
    xor         r15d,r15d
    mov         qword ptr [rbp-label_10],rcx
    and         qword ptr [rbp-8],r15
    mov         r14,rcx
    cmp         qword ptr [rcx+label_0000000000000140],r15
    jne         000000014002255D
    cmp         qword ptr [rcx+label_0000000000000148],r15
    jne         000000014002255D
    xor         r12d,r12d
    lea         rsi,[label_000000014003C1E0]
    lea         rbx,[rcx+label_00000000000000F8]
    jmp         00000001400229B7
    mov         r13d,1
    mov         edx,label_98
    mov         ecx,r13d
    call        000000014001BDB0
    xor         ecx,ecx
    mov         rsi,rax
    call        0000000140019CC4
    test        rsi,rsi
    jne         0000000140022587
    mov         eax,r13d
    jmp         0000000140022A05
    mov         ebx,4
    mov         rcx,r13
    mov         edx,ebx
    call        000000014001BDB0
    xor         ecx,ecx
    mov         r12,rax
    call        0000000140019CC4
    test        r12,r12
    jne         00000001400225AF
    mov         rcx,rsi
    call        0000000140019CC4
    jmp         000000014002257F
    cmp         qword ptr [r14+label_0000000000000140],r15
    je          000000014002290A
    mov         rdx,rbx
    mov         rcx,r13
    call        000000014001BDB0
    xor         ecx,ecx
    mov         r15,rax
    call        0000000140019CC4
    test        r15,r15
    jne         00000001400225E3
    mov         rcx,rsi
    call        0000000140019CC4
    mov         rcx,r12
    jmp         00000001400225A8
    mov         rdi,qword ptr [r14+label_0000000000000140]
    lea         rax,[rsi+label_18]
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    mov         r9d,label_15
    lea         rcx,[rbp-label_10]
    mov         edx,r13d
    call        000000014001C97C
    lea         rcx,[rsi+label_20]
    mov         r9d,label_14
    mov         qword ptr [rsp+label_20],rcx
    mov         r8,rdi
    lea         rcx,[rbp-label_10]
    mov         edx,r13d
    mov         ebx,eax
    call        000000014001C97C
    lea         rcx,[rsi+label_28]
    mov         r9d,label_16
    mov         qword ptr [rsp+label_20],rcx
    mov         r8,rdi
    lea         rcx,[rbp-label_10]
    mov         edx,r13d
    or          ebx,eax
    call        000000014001C97C
    or          ebx,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rsi+label_30]
    mov         r9d,label_17
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    mov         edx,r13d
    call        000000014001C97C
    mov         r9d,label_18
    lea         r13,[rsi+label_38]
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],r13
    lea         rcx,[rbp-label_10]
    or          ebx,eax
    lea         edx,[r9-label_17]
    call        000000014001C97C
    mov         r9d,label_50
    lea         rcx,[rbp-label_10]
    or          ebx,eax
    mov         r8,rdi
    lea         rax,[rsi+label_40]
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9-label_4F]
    call        000000014001C97C
    mov         r9d,label_51
    lea         rcx,[rbp-label_10]
    or          ebx,eax
    mov         r8,rdi
    lea         rax,[rsi+label_48]
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9-label_50]
    call        000000014001C97C
    or          ebx,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rsi+label_50]
    mov         r9d,label_1A
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    call        000000014001C97C
    or          ebx,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rsi+label_51]
    mov         r9d,label_19
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    call        000000014001C97C
    or          ebx,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rsi+label_52]
    mov         r9d,label_54
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    call        000000014001C97C
    or          ebx,eax
    lea         rax,[rsi+label_53]
    mov         r9d,label_55
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    lea         rcx,[rbp-label_10]
    call        000000014001C97C
    or          ebx,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rsi+label_54]
    mov         r9d,label_56
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    call        000000014001C97C
    or          ebx,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rsi+label_55]
    mov         r9d,label_57
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    call        000000014001C97C
    or          ebx,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rsi+label_56]
    mov         r9d,label_52
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    call        000000014001C97C
    or          ebx,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rsi+label_57]
    mov         r9d,label_53
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    xor         edx,edx
    call        000000014001C97C
    mov         r9d,label_15
    lea         rcx,[rbp-label_10]
    or          ebx,eax
    mov         r8,rdi
    lea         rax,[rsi+label_68]
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9-label_13]
    call        000000014001C97C
    mov         r9d,label_14
    lea         rcx,[rbp-label_10]
    or          ebx,eax
    mov         r8,rdi
    lea         rax,[rsi+label_70]
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9-label_12]
    call        000000014001C97C
    mov         r9d,label_16
    lea         rcx,[rbp-label_10]
    or          ebx,eax
    mov         r8,rdi
    lea         rax,[rsi+label_78]
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9-label_14]
    call        000000014001C97C
    mov         r9d,label_17
    lea         rcx,[rbp-label_10]
    or          ebx,eax
    mov         r8,rdi
    lea         rax,[rsi+label_0000000000000080]
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9-label_15]
    call        000000014001C97C
    mov         r9d,label_50
    lea         rcx,[rbp-label_10]
    or          ebx,eax
    mov         r8,rdi
    lea         rax,[rsi+label_0000000000000088]
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9-label_4E]
    call        000000014001C97C
    or          ebx,eax
    lea         rax,[rsi+label_0000000000000090]
    mov         r9d,label_51
    mov         qword ptr [rsp+label_20],rax
    mov         r8,rdi
    lea         rcx,[rbp-label_10]
    lea         edx,[r9-label_4F]
    call        000000014001C97C
    or          eax,ebx
    je          00000001400228C0
    mov         rcx,rsi
    call        00000001400223FC
    mov         rcx,rsi
    call        0000000140019CC4
    mov         rcx,r12
    call        0000000140019CC4
    mov         rcx,r15
    call        0000000140019CC4
    mov         eax,1
    jmp         0000000140022A05
    mov         rdx,qword ptr [r13]
    mov         al,byte ptr [rdx]
    test        al,al
    je          0000000140022969
    lea         ecx,[rax-label_30]
    cmp         cl,9
    ja          00000001400228EC
    mov         byte ptr [rdx],cl
    mov         r13d,1
    add         rdx,r13
    mov         al,byte ptr [rdx]
    test        al,al
    jne         00000001400228CE
    jmp         000000014002296F
    cmp         al,label_3B
    jne         00000001400228D8
    mov         r8,rdx
    mov         cl,byte ptr [r8+1]
    mov         byte ptr [r8],cl
    lea         r8,[r8+1]
    test        cl,cl
    jne         00000001400228F3
    mov         r13d,1
    jmp         00000001400228E1
    lea         rax,[label_000000014003C1E0]
    mov         edx,label_80
    movups      xmm0,xmmword ptr [rax]
    movups      xmmword ptr [rsi],xmm0
    movups      xmm1,xmmword ptr [rax+label_10]
    movups      xmmword ptr [rsi+label_10],xmm1
    movups      xmm0,xmmword ptr [rax+label_20]
    movups      xmmword ptr [rsi+label_20],xmm0
    movups      xmm1,xmmword ptr [rax+label_30]
    movups      xmmword ptr [rsi+label_30],xmm1
    movups      xmm0,xmmword ptr [rax+label_40]
    movups      xmmword ptr [rsi+label_40],xmm0
    movups      xmm1,xmmword ptr [rax+label_50]
    movups      xmmword ptr [rsi+label_50],xmm1
    movups      xmm0,xmmword ptr [rax+label_60]
    movups      xmmword ptr [rsi+label_60],xmm0
    movups      xmm0,xmmword ptr [rax+label_70]
    movups      xmmword ptr [rsi+rdx-label_10],xmm0
    movups      xmm1,xmmword ptr [rax+rdx]
    movups      xmmword ptr [rsi+rdx],xmm1
    mov         rax,qword ptr [rax+rdx+label_10]
    mov         qword ptr [rsi+rdx+label_10],rax
    jmp         000000014002296F
    mov         r13d,1
    lea         rbx,[r14+label_00000000000000F8]
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax]
    mov         qword ptr [rsi],rcx
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax+8]
    mov         qword ptr [rsi+8],rcx
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax+label_10]
    mov         qword ptr [rsi+label_10],rcx
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax+label_58]
    mov         qword ptr [rsi+label_58],rcx
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rax+label_60]
    mov         qword ptr [rsi+label_60],rcx
    mov         dword ptr [r12],r13d
    test        r15,r15
    je          00000001400229B7
    mov         dword ptr [r15],r13d
    mov         rax,qword ptr [r14+label_00000000000000F0]
    test        rax,rax
    je          00000001400229C6
    lock dec    dword ptr [rax]
    mov         rcx,qword ptr [r14+label_00000000000000E0]
    test        rcx,rcx
    je          00000001400229F2
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rcx],eax
    cmp         eax,1
    jne         00000001400229F2
    mov         rcx,qword ptr [rbx]
    call        0000000140019CC4
    mov         rcx,qword ptr [r14+label_00000000000000E0]
    call        0000000140019CC4
    mov         qword ptr [r14+label_00000000000000F0],r15
    xor         eax,eax
    mov         qword ptr [r14+label_00000000000000E0],r12
    mov         qword ptr [rbx],rsi
    lea         r11,[rsp+label_40]
    mov         rbx,qword ptr [r11+label_30]
    mov         rsi,qword ptr [r11+label_38]
    mov         rdi,qword ptr [r11+label_40]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rbp
    ret
func_0000000140022A22_end:
    int         3
    test        rcx,rcx
    je          0000000140022A8F
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    mov         rcx,qword ptr [rcx]
    cmp         rcx,qword ptr [label_000000014003C1E0]
    je          0000000140022A42
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+8]
    cmp         rcx,qword ptr [label_000000014003C1E8]
    je          0000000140022A54
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_10]
    cmp         rcx,qword ptr [label_000000014003C1F0]
    je          0000000140022A66
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_58]
    cmp         rcx,qword ptr [label_000000014003C238]
    je          0000000140022A78
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_60]
    cmp         rcx,qword ptr [label_000000014003C240]
    je          0000000140022A8A
    call        0000000140019CC4
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140022A8F_end:
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_40
    xor         ebx,ebx
    mov         qword ptr [rax-label_38],rcx
    mov         rbp,rcx
    mov         qword ptr [rax-label_30],rbx
    cmp         qword ptr [rcx+label_0000000000000148],rbx
    jne         0000000140022AE1
    cmp         qword ptr [rcx+label_0000000000000140],rbx
    jne         0000000140022AE1
    mov         r15d,ebx
    lea         rsi,[label_000000014003C1E0]
    lea         r13,[rcx+label_00000000000000F8]
    jmp         0000000140022D06
    mov         r14d,1
    mov         edx,label_98
    mov         ecx,r14d
    call        000000014001BDB0
    mov         rsi,rax
    test        rax,rax
    jne         0000000140022B04
    mov         eax,r14d
    jmp         0000000140022D59
    mov         edx,label_80
    lea         r13,[rbp+label_00000000000000F8]
    mov         rax,qword ptr [r13]
    lea         edi,[rdx-label_7C]
    movups      xmm0,xmmword ptr [rax]
    mov         ecx,edi
    movups      xmmword ptr [rsi],xmm0
    movups      xmm1,xmmword ptr [rax+label_10]
    movups      xmmword ptr [rsi+label_10],xmm1
    movups      xmm0,xmmword ptr [rax+label_20]
    movups      xmmword ptr [rsi+label_20],xmm0
    movups      xmm1,xmmword ptr [rax+label_30]
    movups      xmmword ptr [rsi+label_30],xmm1
    movups      xmm0,xmmword ptr [rax+label_40]
    movups      xmmword ptr [rsi+label_40],xmm0
    movups      xmm1,xmmword ptr [rax+label_50]
    movups      xmmword ptr [rsi+label_50],xmm1
    movups      xmm0,xmmword ptr [rax+label_60]
    movups      xmmword ptr [rsi+label_60],xmm0
    movups      xmm0,xmmword ptr [rax+label_70]
    movups      xmmword ptr [rsi+rdx-label_10],xmm0
    movups      xmm1,xmmword ptr [rax+rdx]
    movups      xmmword ptr [rsi+rdx],xmm1
    mov         rax,qword ptr [rax+rdx+label_10]
    mov         qword ptr [rsi+rdx+label_10],rax
    call        0000000140019D00
    xor         ecx,ecx
    mov         r15,rax
    call        0000000140019CC4
    test        r15,r15
    jne         0000000140022B8B
    mov         rcx,rsi
    call        0000000140019CC4
    jmp         0000000140022AFC
    mov         dword ptr [r15],ebx
    cmp         qword ptr [rbp+label_0000000000000148],rbx
    je          0000000140022CCD
    mov         rcx,rdi
    call        0000000140019D00
    xor         ecx,ecx
    mov         r12,rax
    call        0000000140019CC4
    test        r12,r12
    jne         0000000140022BBF
    mov         rcx,rsi
    call        0000000140019CC4
    jmp         0000000140022C8B
    mov         dword ptr [r12],ebx
    lea         rcx,[rsp+label_30]
    mov         rdi,qword ptr [rbp+label_0000000000000148]
    mov         r9d,label_0E
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rsi
    mov         edx,r14d
    call        000000014001C97C
    lea         rcx,[rsi+8]
    mov         r9d,label_0F
    mov         qword ptr [rsp+label_20],rcx
    mov         r8,rdi
    lea         rcx,[rsp+label_30]
    mov         edx,r14d
    mov         ebx,eax
    call        000000014001C97C
    or          ebx,eax
    lea         rcx,[rsp+label_30]
    lea         rax,[rsi+label_10]
    mov         r9d,label_10
    mov         r8,rdi
    mov         qword ptr [rsp+label_20],rax
    mov         edx,r14d
    call        000000014001C97C
    mov         r9d,label_0E
    lea         rcx,[rsp+label_30]
    or          ebx,eax
    mov         r8,rdi
    lea         rax,[rsi+label_58]
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9-label_0C]
    call        000000014001C97C
    mov         r9d,label_0F
    lea         rcx,[rsp+label_30]
    or          ebx,eax
    mov         r8,rdi
    lea         rax,[rsi+label_60]
    mov         qword ptr [rsp+label_20],rax
    lea         edx,[r9-label_0D]
    call        000000014001C97C
    or          eax,ebx
    je          0000000140022C93
    mov         rcx,rsi
    call        0000000140022A24
    mov         rcx,rsi
    call        0000000140019CC4
    mov         rcx,r12
    call        0000000140019CC4
    or          r14d,label_0FFFFFFFF
    mov         rcx,r15
    jmp         0000000140022B81
    mov         rdx,qword ptr [rsi+label_10]
    jmp         0000000140022CA6
    lea         ecx,[rax-label_30]
    cmp         cl,9
    ja          0000000140022CB5
    mov         byte ptr [rdx],cl
    add         rdx,r14
    mov         al,byte ptr [rdx]
    test        al,al
    jne         0000000140022C99
    mov         dword ptr [r15],r14d
    mov         dword ptr [r12],r14d
    jmp         0000000140022D09
    cmp         al,label_3B
    jne         0000000140022CA3
    mov         r8,rdx
    mov         cl,byte ptr [r8+1]
    mov         byte ptr [r8],cl
    lea         r8,[r8+1]
    test        cl,cl
    jne         0000000140022CBC
    jmp         0000000140022CA6
    mov         rax,qword ptr [label_000000014003C1E0]
    mov         qword ptr [rsi],rax
    mov         rax,qword ptr [label_000000014003C1E8]
    mov         qword ptr [rsi+8],rax
    mov         rax,qword ptr [label_000000014003C1F0]
    mov         qword ptr [rsi+label_10],rax
    mov         rax,qword ptr [label_000000014003C238]
    mov         qword ptr [rsi+label_58],rax
    mov         rax,qword ptr [label_000000014003C240]
    mov         qword ptr [rsi+label_60],rax
    mov         dword ptr [r15],r14d
    mov         r12,rbx
    mov         rax,qword ptr [rbp+label_00000000000000E8]
    test        rax,rax
    je          0000000140022D18
    lock dec    dword ptr [rax]
    mov         rcx,qword ptr [rbp+label_00000000000000E0]
    test        rcx,rcx
    je          0000000140022D45
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rcx],eax
    cmp         eax,1
    jne         0000000140022D45
    mov         rcx,qword ptr [rbp+label_00000000000000E0]
    call        0000000140019CC4
    mov         rcx,qword ptr [r13]
    call        0000000140019CC4
    mov         qword ptr [rbp+label_00000000000000E8],r12
    xor         eax,eax
    mov         qword ptr [rbp+label_00000000000000E0],r15
    mov         qword ptr [r13],rsi
    lea         r11,[rsp+label_40]
    mov         rbx,qword ptr [r11+label_30]
    mov         rbp,qword ptr [r11+label_38]
    mov         rsi,qword ptr [r11+label_40]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_0000000140022D76_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    lea         rdi,[rcx+rdx*8]
    mov         rbx,rcx
    cmp         rcx,rdi
    je          0000000140022D9F
    mov         rcx,qword ptr [rbx]
    call        0000000140019CC4
    add         rbx,8
    cmp         rbx,rdi
    jne         0000000140022D8E
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140022DA9_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    mov         qword ptr [rsp+label_18],rdi
    push        rbp
    push        r12
    push        r13
    push        r14
    push        r15
    mov         rbp,rsp
    sub         rsp,label_40
    mov         r14,qword ptr [rdx+label_0000000000000150]
    mov         r12,rcx
    xor         esi,esi
    mov         qword ptr [rbp-label_10],rdx
    mov         rcx,r14
    mov         qword ptr [rbp-8],rsi
    call        0000000140017084
    mov         qword ptr [r12+label_00000000000002B8],rax
    lea         r15d,[rsi+label_31]
    lea         r13d,[rsi+7]
    lea         ecx,[r15-label_30]
    mov         eax,label_24924925
    mul         eax,ecx
    mov         eax,ecx
    mov         r9d,r15d
    sub         eax,edx
    mov         r8,r14
    shr         eax,1
    add         eax,edx
    mov         edx,1
    shr         eax,2
    imul        eax,eax,7
    sub         ecx,eax
    lea         rdi,[r12+rcx*8]
    lea         rcx,[rbp-label_10]
    mov         qword ptr [rsp+label_20],rdi
    call        000000014001C97C
    or          esi,eax
    lea         r9d,[r15-7]
    lea         rax,[rdi+label_38]
    mov         r8,r14
    mov         edx,1
    mov         qword ptr [rsp+label_20],rax
    lea         rcx,[rbp-label_10]
    call        000000014001C97C
    or          esi,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rdi+label_0000000000000160]
    mov         r9d,r15d
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rax
    mov         edx,2
    call        000000014001C97C
    or          esi,eax
    lea         r9d,[r15-7]
    lea         rax,[rdi+label_0000000000000198]
    mov         r8,r14
    mov         edx,2
    mov         qword ptr [rsp+label_20],rax
    lea         rcx,[rbp-label_10]
    call        000000014001C97C
    or          esi,eax
    inc         r15d
    sub         r13,1
    jne         0000000140022DF7
    lea         r15d,[r13+label_38]
    lea         r13d,[r15-label_2C]
    lea         rdi,[r12+label_00000000000000D0]
    lea         rax,[rdi-label_60]
    mov         r8,r14
    lea         r9d,[r15+label_0C]
    mov         qword ptr [rsp+label_20],rax
    mov         edx,1
    lea         rcx,[rbp-label_10]
    call        000000014001C97C
    mov         r9d,r15d
    mov         qword ptr [rsp+label_20],rdi
    mov         r8,r14
    lea         rcx,[rbp-label_10]
    mov         edx,1
    or          esi,eax
    call        000000014001C97C
    or          esi,eax
    lea         r9d,[r15+label_0C]
    lea         rax,[rdi+label_0000000000000100]
    mov         ebx,2
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rax
    mov         edx,ebx
    lea         rcx,[rbp-label_10]
    call        000000014001C97C
    or          esi,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[rdi+label_0000000000000160]
    mov         r9d,r15d
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rax
    mov         edx,ebx
    call        000000014001C97C
    or          esi,eax
    add         rdi,8
    inc         r15d
    sub         r13,1
    jne         0000000140022EB3
    lea         rax,[r12+label_0000000000000130]
    mov         r8,r14
    lea         edi,[rbx+label_26]
    mov         qword ptr [rsp+label_20],rax
    mov         r9d,edi
    lea         edx,[rbx-1]
    lea         rcx,[rbp-label_10]
    call        000000014001C97C
    or          esi,eax
    lea         ebx,[rdi+1]
    lea         rax,[r12+label_0000000000000138]
    mov         r9d,ebx
    lea         r13d,[rdi-label_27]
    mov         qword ptr [rsp+label_20],rax
    mov         r8,r14
    lea         rcx,[rbp-label_10]
    mov         edx,r13d
    call        000000014001C97C
    mov         r9d,edi
    lea         rcx,[rbp-label_10]
    or          esi,eax
    lea         edi,[rbx-label_27]
    lea         rax,[r12+label_0000000000000290]
    mov         edx,edi
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rax
    call        000000014001C97C
    or          esi,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[r12+label_0000000000000298]
    mov         r9d,ebx
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rax
    mov         edx,edi
    call        000000014001C97C
    or          esi,eax
    lea         r15d,[rbx-label_0A]
    lea         rax,[r12+label_0000000000000140]
    mov         r9d,r15d
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rax
    mov         edx,r13d
    lea         rcx,[rbp-label_10]
    call        000000014001C97C
    or          esi,eax
    lea         edi,[rbx-9]
    lea         rax,[r12+label_0000000000000148]
    mov         r9d,edi
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rax
    mov         edx,r13d
    lea         rcx,[rbp-label_10]
    call        000000014001C97C
    or          esi,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[r12+label_0000000000000150]
    mov         ebx,label_1003
    mov         r9d,ebx
    mov         qword ptr [rsp+label_20],rax
    mov         r8,r14
    mov         edx,r13d
    call        000000014001C97C
    or          esi,eax
    lea         r9d,[rbx+6]
    lea         rax,[r12+label_0000000000000158]
    mov         r8,r14
    xor         edx,edx
    mov         qword ptr [rsp+label_20],rax
    lea         rcx,[rbp-label_10]
    call        000000014001C97C
    mov         r9d,r15d
    lea         rcx,[rbp-label_10]
    or          esi,eax
    lea         r15d,[r13+1]
    lea         rax,[r12+label_00000000000002A0]
    mov         edx,r15d
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rax
    call        000000014001C97C
    or          esi,eax
    lea         rax,[r12+label_00000000000002A8]
    mov         r9d,edi
    mov         qword ptr [rsp+label_20],rax
    mov         r8,r14
    lea         rcx,[rbp-label_10]
    mov         edx,r15d
    call        000000014001C97C
    or          esi,eax
    lea         rcx,[rbp-label_10]
    lea         rax,[r12+label_00000000000002B0]
    mov         r9d,ebx
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rax
    mov         edx,r15d
    call        000000014001C97C
    lea         r11,[rsp+label_40]
    or          eax,esi
    mov         rbx,qword ptr [r11+label_30]
    mov         rsi,qword ptr [r11+label_38]
    sete        al
    mov         rdi,qword ptr [r11+label_40]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rbp
    ret
func_00000001400230E9_end:
    int         3
    int         3
    test        rcx,rcx
    je          00000001400231F3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    push        rsi
    sub         rsp,label_20
    mov         ebp,7
    mov         rbx,rcx
    mov         edx,ebp
    call        0000000140022D78
    lea         rcx,[rbx+label_38]
    mov         edx,ebp
    call        0000000140022D78
    lea         esi,[rbp+5]
    mov         edx,esi
    lea         rcx,[rbx+label_70]
    call        0000000140022D78
    lea         rcx,[rbx+label_00000000000000D0]
    mov         edx,esi
    call        0000000140022D78
    lea         rcx,[rbx+label_0000000000000130]
    lea         edx,[rbp-5]
    call        0000000140022D78
    mov         rcx,qword ptr [rbx+label_0000000000000140]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_0000000000000148]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_0000000000000150]
    call        0000000140019CC4
    lea         rcx,[rbx+label_0000000000000160]
    mov         edx,ebp
    call        0000000140022D78
    lea         rcx,[rbx+label_0000000000000198]
    mov         edx,ebp
    call        0000000140022D78
    lea         rcx,[rbx+label_00000000000001D0]
    mov         edx,esi
    call        0000000140022D78
    lea         rcx,[rbx+label_0000000000000230]
    mov         edx,esi
    call        0000000140022D78
    lea         rcx,[rbx+label_0000000000000290]
    lea         edx,[rbp-5]
    call        0000000140022D78
    mov         rcx,qword ptr [rbx+label_00000000000002A0]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_00000000000002A8]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_00000000000002B0]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_00000000000002B8]
    call        0000000140019CC4
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rsi
    ret
func_00000001400231F3_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    xor         edi,edi
    mov         rsi,rcx
    cmp         qword ptr [rcx+label_0000000000000150],rdi
    jne         000000014002321A
    lea         rbx,[label_00000001400304C0]
    jmp         000000014002326B
    mov         edx,label_2C0
    mov         ecx,1
    call        000000014001BDB0
    mov         rbx,rax
    test        rax,rax
    je          000000014002324B
    mov         rdx,rsi
    mov         rcx,rax
    call        0000000140022DAC
    test        al,al
    jne         000000014002325A
    mov         rcx,rbx
    call        00000001400230EC
    mov         rdi,rbx
    mov         rcx,rdi
    call        0000000140019CC4
    mov         eax,1
    jmp         0000000140023280
    xor         ecx,ecx
    mov         dword ptr [rbx+label_000000000000015C],1
    call        0000000140019CC4
    mov         rcx,qword ptr [rsi+label_0000000000000120]
    call        0000000140023660
    xor         eax,eax
    mov         qword ptr [rsi+label_0000000000000120],rbx
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014002328F_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    xor         r10d,r10d
    mov         rbx,rdx
    mov         r11,rcx
    test        r9,r9
    jne         00000001400232D4
    test        rcx,rcx
    jne         00000001400232D9
    test        rdx,rdx
    je          00000001400232C6
    call        0000000140015374
    mov         ebx,label_16
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         r10d,ebx
    mov         rbx,qword ptr [rsp+label_30]
    mov         eax,r10d
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400232D3_end:
    test        r11,r11
    je          00000001400232B2
    test        rbx,rbx
    je          00000001400232B2
    test        r9,r9
    je          00000001400232EE
    test        r8,r8
    jne         00000001400232EE
    mov         word ptr [rcx],r10w
    jmp         00000001400232B2
    mov         rdi,r9
    cmp         word ptr [rcx],r10w
    je          0000000140023307
    add         rcx,2
    sub         rdx,1
    jne         00000001400232F1
    mov         word ptr [r11],r10w
    jmp         00000001400232B2
    cmp         r9,label_0FFFFFFFFFFFFFFFF
    jne         0000000140023329
    sub         r8,rcx
    movzx       eax,word ptr [r8+rcx]
    mov         word ptr [rcx],ax
    lea         rcx,[rcx+2]
    test        ax,ax
    je          0000000140023357
    sub         rdx,1
    jne         0000000140023310
    jmp         0000000140023357
    test        r9,r9
    je          000000014002334E
    movzx       eax,word ptr [r8]
    lea         r8,[r8+2]
    mov         word ptr [rcx],ax
    add         rcx,2
    test        ax,ax
    je          00000001400232C6
    sub         rdx,1
    je          000000014002334E
    sub         rdi,1
    jne         000000014002332E
    test        rdi,rdi
    jne         0000000140023357
    mov         word ptr [rcx],r10w
    test        rdx,rdx
    jne         00000001400232C6
    cmp         r9,label_0FFFFFFFFFFFFFFFF
    jne         0000000140023375
    mov         word ptr [r11+rbx*2-2],r10w
    lea         r10d,[rdx+label_50]
    jmp         00000001400232C6
    mov         word ptr [r11],r10w
    call        0000000140015374
    mov         ebx,label_22
    jmp         00000001400232BC
    xor         r10d,r10d
    mov         r8,rdx
    cmp         word ptr [rcx],r10w
    mov         rax,rcx
    je          00000001400233C0
    mov         r9,r8
    cmp         word ptr [r8],r10w
    je          00000001400233B6
    movzx       edx,word ptr [r8]
    cmp         word ptr [rax],dx
    je          00000001400233C0
    add         r9,2
    movzx       edx,word ptr [r9]
    test        dx,dx
    jne         00000001400233A4
    add         rax,2
    cmp         word ptr [rax],r10w
    jmp         0000000140023395
    sub         rax,rcx
    sar         rax,1
    ret
func_00000001400233C6_end:
    int         3
    xor         r9d,r9d
    cmp         word ptr [rcx],r9w
    je          00000001400233F9
    mov         r8,rdx
    cmp         word ptr [rdx],r9w
    je          00000001400233EF
    movzx       eax,word ptr [rdx]
    cmp         ax,word ptr [rcx]
    je          00000001400233F5
    add         r8,2
    movzx       eax,word ptr [r8]
    test        ax,ax
    jne         00000001400233DD
    add         rcx,2
    jmp         00000001400233CB
    mov         rax,rcx
    ret
func_00000001400233F8_end:
    xor         eax,eax
    ret
func_00000001400233FB_end:
    lock inc    dword ptr [rcx+label_10]
    mov         rax,qword ptr [rcx+label_00000000000000E0]
    test        rax,rax
    je          000000014002340F
    lock inc    dword ptr [rax]
    mov         rax,qword ptr [rcx+label_00000000000000F0]
    test        rax,rax
    je          000000014002341E
    lock inc    dword ptr [rax]
    mov         rax,qword ptr [rcx+label_00000000000000E8]
    test        rax,rax
    je          000000014002342D
    lock inc    dword ptr [rax]
    mov         rax,qword ptr [rcx+label_0000000000000100]
    test        rax,rax
    je          000000014002343C
    lock inc    dword ptr [rax]
    lea         rax,[rcx+label_38]
    mov         r8d,6
    lea         rdx,[label_000000014003C418]
    cmp         qword ptr [rax-label_10],rdx
    je          000000014002345E
    mov         rdx,qword ptr [rax]
    test        rdx,rdx
    je          000000014002345E
    lock inc    dword ptr [rdx]
    cmp         qword ptr [rax-label_18],0
    je          0000000140023471
    mov         rdx,qword ptr [rax-8]
    test        rdx,rdx
    je          0000000140023471
    lock inc    dword ptr [rdx]
    add         rax,label_20
    sub         r8,1
    jne         0000000140023446
    mov         rcx,qword ptr [rcx+label_0000000000000120]
    jmp         0000000140023600
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         rax,qword ptr [rcx+label_00000000000000F8]
    mov         rbx,rcx
    test        rax,rax
    je          0000000140023524
    lea         rcx,[label_000000014003C1E0]
    cmp         rax,rcx
    je          0000000140023524
    mov         rax,qword ptr [rbx+label_00000000000000E0]
    test        rax,rax
    je          0000000140023524
    cmp         dword ptr [rax],0
    jne         0000000140023524
    mov         rcx,qword ptr [rbx+label_00000000000000F0]
    test        rcx,rcx
    je          00000001400234EA
    cmp         dword ptr [rcx],0
    jne         00000001400234EA
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_00000000000000F8]
    call        00000001400223FC
    mov         rcx,qword ptr [rbx+label_00000000000000E8]
    test        rcx,rcx
    je          000000014002350C
    cmp         dword ptr [rcx],0
    jne         000000014002350C
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_00000000000000F8]
    call        0000000140022A24
    mov         rcx,qword ptr [rbx+label_00000000000000E0]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_00000000000000F8]
    call        0000000140019CC4
    mov         rax,qword ptr [rbx+label_0000000000000100]
    test        rax,rax
    je          0000000140023577
    cmp         dword ptr [rax],0
    jne         0000000140023577
    mov         rcx,qword ptr [rbx+label_0000000000000108]
    sub         rcx,label_0FE
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_0000000000000110]
    mov         edi,label_80
    sub         rcx,rdi
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_0000000000000118]
    sub         rcx,rdi
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_0000000000000100]
    call        0000000140019CC4
    mov         rcx,qword ptr [rbx+label_0000000000000120]
    call        0000000140023628
    lea         rsi,[rbx+label_0000000000000128]
    mov         ebp,6
    lea         rdi,[rbx+label_38]
    lea         rax,[label_000000014003C418]
    cmp         qword ptr [rdi-label_10],rax
    je          00000001400235BA
    mov         rcx,qword ptr [rdi]
    test        rcx,rcx
    je          00000001400235BA
    cmp         dword ptr [rcx],0
    jne         00000001400235BA
    call        0000000140019CC4
    mov         rcx,qword ptr [rsi]
    call        0000000140019CC4
    cmp         qword ptr [rdi-label_18],0
    je          00000001400235D4
    mov         rcx,qword ptr [rdi-8]
    test        rcx,rcx
    je          00000001400235D4
    cmp         dword ptr [rcx],0
    jne         00000001400235D4
    call        0000000140019CC4
    add         rsi,8
    add         rdi,label_20
    sub         rbp,1
    jne         0000000140023593
    mov         rcx,rbx
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    jmp         0000000140019CC4
    int         3
    int         3
    test        rcx,rcx
    je          0000000140023621
    lea         rax,[label_00000001400304C0]
    cmp         rcx,rax
    je          0000000140023621
    mov         eax,1
    lock xadd   dword ptr [rcx+label_000000000000015C],eax
    inc         eax
    ret
func_0000000140023620_end:
    mov         eax,label_7FFFFFFF
    ret
func_0000000140023626_end:
    int         3
    test        rcx,rcx
    je          000000014002365E
    push        rbx
    sub         rsp,label_20
    lea         rax,[label_00000001400304C0]
    mov         rbx,rcx
    cmp         rcx,rax
    je          0000000140023659
    mov         eax,dword ptr [rcx+label_000000000000015C]
    nop
    test        eax,eax
    jne         0000000140023659
    call        00000001400230EC
    mov         rcx,rbx
    call        0000000140019CC4
    add         rsp,label_20
    pop         rbx
    ret
func_000000014002365E_end:
    int         3
    test        rcx,rcx
    je          000000014002367F
    lea         rax,[label_00000001400304C0]
    cmp         rcx,rax
    je          000000014002367F
    or          eax,label_0FFFFFFFF
    lock xadd   dword ptr [rcx+label_000000000000015C],eax
    dec         eax
    ret
func_000000014002367E_end:
    mov         eax,label_7FFFFFFF
    ret
func_0000000140023684_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    test        rcx,rcx
    je          000000014002372B
    or          r9d,label_0FFFFFFFF
    lock add    dword ptr [rcx+label_10],r9d
    mov         rax,qword ptr [rcx+label_00000000000000E0]
    test        rax,rax
    je          00000001400236AE
    lock add    dword ptr [rax],r9d
    mov         rax,qword ptr [rcx+label_00000000000000F0]
    test        rax,rax
    je          00000001400236BE
    lock add    dword ptr [rax],r9d
    mov         rax,qword ptr [rcx+label_00000000000000E8]
    test        rax,rax
    je          00000001400236CE
    lock add    dword ptr [rax],r9d
    mov         rax,qword ptr [rcx+label_0000000000000100]
    test        rax,rax
    je          00000001400236DE
    lock add    dword ptr [rax],r9d
    lea         rax,[rcx+label_38]
    mov         r8d,6
    lea         rdx,[label_000000014003C418]
    cmp         qword ptr [rax-label_10],rdx
    je          0000000140023701
    mov         rdx,qword ptr [rax]
    test        rdx,rdx
    je          0000000140023701
    lock add    dword ptr [rdx],r9d
    cmp         qword ptr [rax-label_18],0
    je          0000000140023715
    mov         rdx,qword ptr [rax-8]
    test        rdx,rdx
    je          0000000140023715
    lock add    dword ptr [rdx],r9d
    add         rax,label_20
    sub         r8,1
    jne         00000001400236E8
    mov         rcx,qword ptr [rcx+label_0000000000000120]
    call        0000000140023660
    add         rsp,label_28
    ret
func_000000014002372F_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    call        0000000140019964
    lea         rdi,[rax+label_0000000000000090]
    mov         ecx,dword ptr [rax+label_00000000000003A8]
    mov         eax,dword ptr [label_000000014003C468]
    test        eax,ecx
    je          000000014002375E
    mov         rbx,qword ptr [rdi]
    test        rbx,rbx
    jne         000000014002378A
    mov         ecx,4
    call        0000000140012C60
    nop
    mov         rdx,qword ptr [label_000000014003E2D0]
    mov         rcx,rdi
    call        00000001400237A0
    mov         rbx,rax
    mov         ecx,4
    call        0000000140012CB4
    test        rbx,rbx
    je          0000000140023798
    mov         rax,rbx
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140023797_end:
    call        0000000140015954
    nop
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,rdx
    test        rdx,rdx
    je          00000001400237F8
    test        rcx,rcx
    je          00000001400237F8
    mov         rbx,qword ptr [rcx]
    cmp         rbx,rdx
    jne         00000001400237C4
    mov         rax,rdi
    jmp         00000001400237FA
    mov         qword ptr [rcx],rdi
    mov         rcx,rdi
    call        00000001400233FC
    test        rbx,rbx
    je          00000001400237BF
    mov         rcx,rbx
    call        0000000140023688
    cmp         dword ptr [rbx+label_10],0
    jne         00000001400237BF
    lea         rax,[label_000000014003C2B0]
    cmp         rbx,rax
    je          00000001400237BF
    mov         rcx,rbx
    call        0000000140023488
    jmp         00000001400237BF
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140023804_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    push        rdi
    sub         rsp,label_0F0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_00000000000000E0],rax
    or          dword ptr [rcx+label_10],label_104
    mov         rbx,rcx
    lea         rcx,[rsp+label_30]
    mov         edx,label_55
    call        000000014001B8AC
    cmp         eax,1
    jle         0000000140023877
    or          r9,label_0FFFFFFFFFFFFFFFF
    lea         rax,[rsp+label_30]
    xor         edi,edi
    inc         r9
    cmp         word ptr [rax+r9*2],di
    jne         0000000140023850
    inc         r9
    lea         rcx,[rbx+label_0000000000000258]
    lea         r8,[rsp+label_30]
    mov         edx,label_55
    call        0000000140020464
    test        eax,eax
    jne         0000000140023898
    mov         rcx,qword ptr [rsp+label_00000000000000E0]
    xor         rcx,rsp
    call        00000001400099A0
    mov         rbx,qword ptr [rsp+label_0000000000000108]
    add         rsp,label_0F0
    pop         rdi
    ret
func_0000000140023897_end:
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rdi
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdx,qword ptr [rcx]
    or          r8,label_0FFFFFFFFFFFFFFFF
    mov         rbx,rcx
    xor         edi,edi
    mov         rcx,r8
    inc         rcx
    cmp         word ptr [rdx+rcx*2],di
    jne         00000001400238C9
    mov         eax,edi
    cmp         rcx,3
    sete        al
    mov         dword ptr [rbx+label_18],eax
    mov         rax,qword ptr [rbx+8]
    inc         r8
    cmp         word ptr [rax+r8*2],di
    jne         00000001400238E2
    cmp         r8,3
    mov         eax,edi
    sete        al
    mov         dword ptr [rbx+label_1C],eax
    cmp         rcx,3
    jne         0000000140023905
    mov         ecx,2
    jmp         000000014002393B
    mov         r9d,edi
    test        rdx,rdx
    jne         0000000140023911
    mov         ecx,edi
    jmp         000000014002393B
    mov         ecx,2
    movzx       r8d,word ptr [rdx]
    add         rdx,rcx
    lea         eax,[r8-label_41]
    cmp         ax,label_19
    jbe         0000000140023933
    sub         r8w,label_61
    cmp         r8w,label_19
    ja          0000000140023938
    inc         r9d
    jmp         0000000140023916
    mov         ecx,r9d
    xor         r9d,r9d
    mov         dword ptr [rbx+label_14],ecx
    xor         r8d,r8d
    lea         rcx,[label_0000000140023A18]
    lea         edx,[r9+3]
    call        000000014001B75C
    mov         ecx,dword ptr [rbx+label_10]
    test        cl,7
    setne       dl
    bt          ecx,9
    setb        al
    and         dl,al
    bt          ecx,8
    setb        al
    test        al,dl
    jne         0000000140023974
    mov         dword ptr [rbx+label_10],edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014002397E_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdx,qword ptr [rcx]
    or          r8,label_0FFFFFFFFFFFFFFFF
    xor         edi,edi
    mov         rbx,rcx
    inc         r8
    cmp         word ptr [rdx+r8*2],di
    jne         0000000140023996
    mov         eax,edi
    cmp         r8,3
    sete        al
    mov         dword ptr [rcx+label_18],eax
    jne         00000001400239B5
    mov         ecx,2
    jmp         00000001400239EB
    mov         r9d,edi
    test        rdx,rdx
    jne         00000001400239C1
    mov         ecx,edi
    jmp         00000001400239EB
    mov         ecx,2
    movzx       r8d,word ptr [rdx]
    add         rdx,rcx
    lea         eax,[r8-label_41]
    cmp         ax,label_19
    jbe         00000001400239E3
    sub         r8w,label_61
    cmp         r8w,label_19
    ja          00000001400239E8
    inc         r9d
    jmp         00000001400239C6
    mov         ecx,r9d
    xor         r9d,r9d
    mov         dword ptr [rbx+label_14],ecx
    xor         r8d,r8d
    lea         rcx,[label_0000000140023CF8]
    lea         edx,[r9+3]
    call        000000014001B75C
    test        byte ptr [rbx+label_10],4
    jne         0000000140023A0D
    mov         dword ptr [rbx+label_10],edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140023A17_end:
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rbp
    push        rsi
    push        rdi
    push        r13
    sub         rsp,label_0C0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_00000000000000B0],rax
    mov         rsi,rcx
    call        0000000140019964
    mov         r9d,label_40
    lea         r8,[rsp+label_30]
    lea         rbx,[rax+label_0000000000000098]
    mov         ecx,dword ptr [rbx+label_1C]
    neg         ecx
    mov         rcx,rsi
    sbb         edx,edx
    and         edx,label_0FFFFF005
    add         edx,label_1002
    call        000000014001B81C
    xor         ebp,ebp
    test        eax,eax
    jne         0000000140023A87
    mov         dword ptr [rbx+label_10],ebp
    mov         eax,1
    jmp         0000000140023C9C
    mov         rcx,qword ptr [rbx+8]
    lea         rdx,[rsp+label_30]
    call        0000000140020220
    or          rdi,label_0FFFFFFFFFFFFFFFF
    lea         r13d,[rdi+label_56]
    test        eax,eax
    jne         0000000140023B6B
    mov         eax,dword ptr [rbx+label_18]
    lea         r9d,[rdi+label_41]
    neg         eax
    lea         r8,[rsp+label_30]
    mov         rcx,rsi
    sbb         edx,edx
    and         edx,label_0FFFFF002
    add         edx,label_1001
    call        000000014001B81C
    test        eax,eax
    je          0000000140023A7A
    mov         rcx,qword ptr [rbx]
    lea         rdx,[rsp+label_30]
    call        0000000140020220
    mov         ecx,dword ptr [rbx+label_10]
    test        eax,eax
    jne         0000000140023AF9
    or          ecx,label_304
    mov         r9,rdi
    mov         dword ptr [rbx+label_10],ecx
    inc         r9
    cmp         word ptr [rsi+r9*2],bp
    jne         0000000140023AED
    jmp         0000000140023B4E
    test        cl,2
    jne         0000000140023B6B
    cmp         dword ptr [rbx+label_14],ebp
    je          0000000140023B2B
    movsxd      r8,dword ptr [rbx+label_14]
    lea         rdx,[rsp+label_30]
    mov         rcx,qword ptr [rbx]
    call        0000000140027B70
    test        eax,eax
    jne         0000000140023B2B
    or          dword ptr [rbx+label_10],2
    mov         r9,rdi
    inc         r9
    cmp         word ptr [rsi+r9*2],bp
    jne         0000000140023B1F
    jmp         0000000140023B4E
    test        byte ptr [rbx+label_10],1
    jne         0000000140023B6B
    mov         rcx,rsi
    call        0000000140023EA0
    test        eax,eax
    je          0000000140023B6B
    or          dword ptr [rbx+label_10],1
    mov         r9,rdi
    inc         r9
    cmp         word ptr [rsi+r9*2],bp
    jne         0000000140023B44
    inc         r9
    lea         rcx,[rbx+label_0000000000000258]
    mov         r8,rsi
    mov         rdx,r13
    call        0000000140020464
    test        eax,eax
    jne         0000000140023CE2
    mov         eax,dword ptr [rbx+label_10]
    mov         ecx,label_300
    and         eax,ecx
    cmp         eax,ecx
    je          0000000140023C91
    mov         eax,dword ptr [rbx+label_18]
    lea         r8,[rsp+label_30]
    neg         eax
    mov         r9d,label_40
    mov         rcx,rsi
    sbb         edx,edx
    and         edx,label_0FFFFF002
    add         edx,label_1001
    call        000000014001B81C
    test        eax,eax
    je          0000000140023A7A
    mov         rcx,qword ptr [rbx]
    lea         rdx,[rsp+label_30]
    call        0000000140020220
    test        eax,eax
    jne         0000000140023C91
    mov         eax,dword ptr [rbx+label_10]
    bts         eax,9
    mov         dword ptr [rbx+label_10],eax
    cmp         dword ptr [rbx+label_18],ebp
    je          0000000140023BF4
    bts         eax,8
    lea         rcx,[rbx+label_0000000000000258]
    mov         dword ptr [rbx+label_10],eax
    cmp         word ptr [rcx],bp
    jne         0000000140023C91
    inc         rdi
    cmp         word ptr [rsi+rdi*2],bp
    jne         0000000140023BE6
    jmp         0000000140023C7E
    cmp         dword ptr [rbx+label_14],ebp
    je          0000000140023CC4
    mov         rdx,qword ptr [rbx]
    mov         rcx,rdi
    inc         rcx
    cmp         word ptr [rdx+rcx*2],bp
    jne         0000000140023C03
    cmp         ecx,dword ptr [rbx+label_14]
    jne         0000000140023CC4
    mov         rcx,rsi
    call        0000000140023EA0
    test        eax,eax
    jne         0000000140023C64
    mov         r9,qword ptr [rbx]
    mov         r8d,ebp
    mov         rcx,r9
    test        r9,r9
    je          0000000140023C52
    movzx       edx,word ptr [r9]
    add         rcx,2
    lea         eax,[rdx-label_41]
    cmp         ax,label_19
    jbe         0000000140023C4A
    sub         dx,label_61
    cmp         dx,label_19
    ja          0000000140023C52
    movzx       edx,word ptr [rcx]
    inc         r8d
    jmp         0000000140023C33
    mov         rax,rdi
    inc         rax
    cmp         word ptr [r9+rax*2],bp
    jne         0000000140023C55
    cmp         r8d,eax
    je          0000000140023C91
    bts         dword ptr [rbx+label_10],8
    lea         rcx,[rbx+label_0000000000000258]
    cmp         word ptr [rcx],bp
    jne         0000000140023C91
    inc         rdi
    cmp         word ptr [rsi+rdi*2],bp
    jne         0000000140023C75
    lea         r9,[rdi+1]
    mov         r8,rsi
    mov         rdx,r13
    call        0000000140020464
    test        eax,eax
    jne         0000000140023CE2
    mov         eax,dword ptr [rbx+label_10]
    shr         eax,2
    not         eax
    and         eax,1
    mov         rcx,qword ptr [rsp+label_00000000000000B0]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_00000000000000C0]
    mov         rbx,qword ptr [r11+label_28]
    mov         rbp,qword ptr [r11+label_30]
    mov         rsp,r11
    pop         r13
    pop         rdi
    pop         rsi
    ret
func_0000000140023CC3_end:
    bts         eax,8
    lea         rcx,[rbx+label_0000000000000258]
    mov         dword ptr [rbx+label_10],eax
    cmp         word ptr [rcx],bp
    jne         0000000140023C91
    inc         rdi
    cmp         word ptr [rsi+rdi*2],bp
    jne         0000000140023CD7
    jmp         0000000140023C7E
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rbp
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_130
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000000120],rax
    mov         rdi,rcx
    call        0000000140019964
    mov         r9d,label_78
    lea         r8,[rsp+label_30]
    lea         rbx,[rax+label_0000000000000098]
    mov         ecx,dword ptr [rbx+label_18]
    neg         ecx
    mov         rcx,rdi
    sbb         edx,edx
    and         edx,label_0FFFFF002
    add         edx,label_1001
    call        000000014001B81C
    xor         esi,esi
    test        eax,eax
    jne         0000000140023D5F
    mov         dword ptr [rbx+label_10],esi
    lea         eax,[rsi+1]
    jmp         0000000140023DA8
    mov         rcx,qword ptr [rbx]
    lea         rdx,[rsp+label_30]
    call        0000000140020220
    test        eax,eax
    jne         0000000140023D9D
    or          r9,label_0FFFFFFFFFFFFFFFF
    inc         r9
    cmp         word ptr [rdi+r9*2],si
    jne         0000000140023D74
    inc         r9
    lea         rcx,[rbx+label_0000000000000258]
    mov         r8,rdi
    mov         edx,label_55
    call        0000000140020464
    test        eax,eax
    jne         0000000140023DCD
    or          dword ptr [rbx+label_10],4
    mov         eax,dword ptr [rbx+label_10]
    shr         eax,2
    not         eax
    and         eax,1
    mov         rcx,qword ptr [rsp+label_0000000000000120]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000000130]
    mov         rbx,qword ptr [r11+label_18]
    mov         rsi,qword ptr [r11+label_20]
    mov         rsp,r11
    pop         rdi
    ret
func_0000000140023DCC_end:
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],rsi
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    xor         esi,esi
    mov         rdi,rdx
    mov         rbx,rcx
    test        rcx,rcx
    je          0000000140023E7D
    cmp         word ptr [rcx],si
    je          0000000140023E7D
    lea         rdx,[label_0000000140032358]
    call        0000000140027D0C
    test        eax,eax
    je          0000000140023E7D
    lea         rdx,[label_0000000140032348]
    mov         rcx,rbx
    call        0000000140020220
    test        eax,eax
    je          0000000140023E5E
    lea         rdx,[label_0000000140032360]
    mov         rcx,rbx
    call        0000000140020220
    test        eax,eax
    je          0000000140023E5E
    lea         rdx,[label_0000000140032370]
    mov         rcx,rbx
    call        0000000140027D0C
    test        eax,eax
    jne         0000000140023E73
    mov         edx,label_2000000B
    jmp         0000000140023E82
    mov         eax,dword ptr [rsp+label_30]
    cmp         eax,3
    jge         0000000140023E63
    mov         eax,label_0FDE9
    mov         rbx,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140023E72_end:
    mov         rcx,rbx
    call        0000000140019478
    jmp         0000000140023E63
    mov         edx,label_20001004
    mov         r9d,2
    lea         r8,[rsp+label_30]
    lea         rcx,[rdi+label_0000000000000258]
    call        000000014001B81C
    test        eax,eax
    jne         0000000140023E55
    jmp         0000000140023E63
    int         3
    mov         qword ptr [rsp+label_10],rbx
    push        rdi
    sub         rsp,label_40
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_38],rax
    mov         r9d,9
    lea         r8,[rsp+label_20]
    mov         rdi,rcx
    lea         edx,[r9+label_50]
    call        000000014001B81C
    xor         ebx,ebx
    test        eax,eax
    je          0000000140023EF0
    lea         r8d,[rbx+9]
    mov         rdx,rdi
    lea         rcx,[rsp+label_20]
    call        00000001400195C0
    test        eax,eax
    sete        bl
    mov         eax,ebx
    jmp         0000000140023EF2
    xor         eax,eax
    mov         rcx,qword ptr [rsp+label_38]
    xor         rcx,rsp
    call        00000001400099A0
    mov         rbx,qword ptr [rsp+label_58]
    add         rsp,label_40
    pop         rdi
    ret
func_0000000140023F09_end:
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_20
    xor         ebx,ebx
    mov         r15,r8
    mov         edi,edx
    mov         r12,rcx
    mov         eax,1
    mov         esi,ebx
    test        edx,edx
    js          0000000140023F7F
    test        eax,eax
    je          0000000140023F81
    mov         rcx,qword ptr [r15]
    lea         eax,[rsi+rdi]
    cdq
    sub         eax,edx
    sar         eax,1
    movsxd      rbp,eax
    mov         r14,rbp
    shl         r14,4
    mov         rdx,qword ptr [r14+r12]
    call        0000000140020220
    test        eax,eax
    jne         0000000140023F71
    lea         rcx,[r12+8]
    add         rcx,r14
    mov         qword ptr [r15],rcx
    jmp         0000000140023F7B
    jns         0000000140023F78
    lea         edi,[rbp-1]
    jmp         0000000140023F7B
    lea         esi,[rbp+1]
    cmp         esi,edi
    jle         0000000140023F3E
    test        eax,eax
    mov         rbp,qword ptr [rsp+label_48]
    sete        bl
    mov         rsi,qword ptr [rsp+label_50]
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_58]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r12
    ret
func_0000000140023FA4_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_30
    mov         rbp,r8
    mov         r14,rdx
    mov         rdi,rcx
    call        0000000140019964
    xor         r12d,r12d
    lea         rbx,[rax+label_0000000000000098]
    lea         rax,[rdi+label_0000000000000080]
    mov         dword ptr [rbx+label_10],r12d
    lea         r15,[rbx+label_0000000000000258]
    mov         qword ptr [rbx],rdi
    lea         rsi,[rbx+8]
    mov         word ptr [r15],r12w
    mov         qword ptr [rsi],rax
    cmp         word ptr [rax],r12w
    je          0000000140024017
    mov         r8,rsi
    lea         edx,[r12+label_16]
    lea         rcx,[label_00000001400317C0]
    call        0000000140023F0C
    mov         rax,qword ptr [rbx]
    mov         rcx,rbx
    cmp         word ptr [rax],r12w
    je          0000000140024070
    mov         rax,qword ptr [rsi]
    cmp         word ptr [rax],r12w
    je          0000000140024033
    call        00000001400238B0
    jmp         0000000140024038
    call        0000000140023980
    cmp         dword ptr [rbx+label_10],r12d
    jne         000000014002407F
    mov         r8,rbx
    lea         rcx,[label_00000001400313A0]
    mov         edx,label_40
    call        0000000140023F0C
    test        eax,eax
    je          0000000140024075
    mov         rax,qword ptr [rsi]
    mov         rcx,rbx
    cmp         word ptr [rax],r12w
    je          0000000140024069
    call        00000001400238B0
    jmp         0000000140024075
    call        0000000140023980
    jmp         0000000140024075
    call        0000000140023808
    cmp         dword ptr [rbx+label_10],r12d
    je          00000001400241E4
    test        rdi,rdi
    je          000000014002409C
    cmp         word ptr [rdi],r12w
    jne         000000014002409C
    cmp         word ptr [rdi+label_0000000000000100],r12w
    jne         000000014002409C
    call label_000000014002C250
    jmp         00000001400240B4
    lea         rax,[rdi+label_0000000000000100]
    mov         rdx,rbx
    neg         rdi
    sbb         rcx,rcx
    and         rcx,rax
    call        0000000140023DE4
    mov         ebx,eax
    test        eax,eax
    je          00000001400241E4
    cmp         eax,label_0FDE8
    je          00000001400241E4
    movzx       ecx,bx
    call label_000000014002C248
    test        eax,eax
    je          00000001400241E4
    test        r14,r14
    je          00000001400240E2
    mov         dword ptr [r14],ebx
    test        rbp,rbp
    je          00000001400241C7
    lea         rsi,[rbp+label_0000000000000120]
    or          r9,label_0FFFFFFFFFFFFFFFF
    mov         word ptr [rsi],r12w
    inc         r9
    cmp         word ptr [r15+r9*2],r12w
    jne         00000001400240FA
    inc         r9
    mov         r8,r15
    mov         edx,label_55
    mov         rcx,rsi
    call        0000000140020464
    test        eax,eax
    jne         0000000140024205
    lea         r9d,[rax+label_40]
    mov         r8,rbp
    mov         edx,label_1001
    mov         rcx,rsi
    call        000000014001B81C
    test        eax,eax
    je          00000001400241E4
    lea         rdi,[rbp+label_0000000000000080]
    mov         r9d,label_40
    mov         r8,rdi
    mov         edx,label_1002
    mov         rcx,rsi
    call        000000014001B81C
    test        eax,eax
    je          00000001400241E4
    mov         edx,label_5F
    mov         rcx,rdi
    call        0000000140029984
    test        rax,rax
    jne         0000000140024182
    lea         edx,[rax+label_2E]
    mov         rcx,rdi
    call        0000000140029984
    test        rax,rax
    je          000000014002419B
    mov         r9d,label_40
    mov         r8,rdi
    mov         rcx,rsi
    lea         edx,[r9-label_39]
    call        000000014001B81C
    test        eax,eax
    je          00000001400241E4
    lea         rax,[rbp+label_0000000000000100]
    cmp         ebx,label_0FDE9
    jne         00000001400241CE
    mov         r9d,5
    lea         r8,[label_0000000140032348]
    mov         rcx,rax
    lea         edx,[r9+label_0B]
    call        0000000140020464
    test        eax,eax
    jne         0000000140024205
    mov         eax,1
    jmp         00000001400241E6
    mov         r9d,label_0A
    mov         rdx,rax
    mov         ecx,ebx
    lea         r8d,[r9+6]
    call        0000000140027B04
    jmp         00000001400241C7
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_50]
    mov         rbp,qword ptr [rsp+label_58]
    mov         rsi,qword ptr [rsp+label_60]
    mov         rdi,qword ptr [rsp+label_68]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r12
    ret
func_0000000140024204_end:
    xor         r9d,r9d
    mov         qword ptr [rsp+label_20],r12
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rbp
    mov         qword ptr [rsp+label_20],rsi
    push        rdi
    sub         rsp,label_120
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000000110],rax
    mov         rbx,rcx
    call        0000000140019964
    mov         rbp,rax
    call        0000000140019964
    mov         rcx,rbx
    mov         rdi,qword ptr [rax+label_00000000000003A0]
    call        00000001400247BC
    mov         ecx,dword ptr [rbp+label_00000000000000B4]
    lea         r8,[rsp+label_20]
    neg         ecx
    mov         r9d,label_78
    mov         ecx,eax
    mov         esi,eax
    sbb         edx,edx
    and         edx,label_0FFFFF005
    add         edx,label_1002
    call label_000000014002C1C8
    xor         ebx,ebx
    test        eax,eax
    jne         000000014002429C
    mov         dword ptr [rdi],ebx
    lea         eax,[rbx+1]
    jmp         00000001400242DB
    mov         rcx,qword ptr [rbp+label_00000000000000A0]
    lea         rdx,[rsp+label_20]
    call        0000000140020220
    test        eax,eax
    jne         00000001400242D1
    lea         rax,[label_0000000140032378]
    cmp         si,word ptr [rax]
    je          00000001400242D1
    inc         ebx
    add         rax,2
    cmp         ebx,label_0A
    jb          00000001400242B8
    or          dword ptr [rdi],4
    mov         dword ptr [rdi+8],esi
    mov         dword ptr [rdi+4],esi
    mov         eax,dword ptr [rdi]
    shr         eax,2
    not         eax
    and         eax,1
    mov         rcx,qword ptr [rsp+label_0000000000000110]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000000120]
    mov         rbx,qword ptr [r11+label_18]
    mov         rbp,qword ptr [r11+label_20]
    mov         rsi,qword ptr [r11+label_28]
    mov         rsp,r11
    pop         rdi
    ret
func_0000000140024303_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    call        0000000140019964
    or          r8,label_0FFFFFFFFFFFFFFFF
    mov         r9,r8
    xor         edi,edi
    lea         rdx,[rax+label_0000000000000098]
    mov         rax,qword ptr [rdx]
    inc         r9
    cmp         word ptr [rax+r9*2],di
    jne         0000000140024329
    mov         eax,edi
    cmp         r9,3
    sete        al
    mov         dword ptr [rdx+label_18],eax
    mov         rax,qword ptr [rdx+8]
    inc         r8
    cmp         word ptr [rax+r8*2],di
    jne         0000000140024343
    cmp         r8,3
    mov         eax,edi
    mov         r8d,2
    sete        al
    mov         dword ptr [rdx+label_1C],eax
    mov         dword ptr [rbx+4],edi
    cmp         dword ptr [rdx+label_18],edi
    jne         0000000140024392
    mov         rcx,qword ptr [rdx]
    mov         r10d,edi
    movzx       r9d,word ptr [rcx]
    add         rcx,r8
    lea         eax,[r9-label_41]
    cmp         ax,label_19
    jbe         000000014002438A
    sub         r9w,label_61
    cmp         r9w,label_19
    ja          000000014002438F
    inc         r10d
    jmp         000000014002436D
    mov         r8d,r10d
    mov         dword ptr [rdx+label_14],r8d
    lea         rcx,[label_000000014002446C]
    mov         edx,1
    call label_000000014002C1E0
    mov         ecx,dword ptr [rbx]
    test        cl,7
    setne       dl
    bt          ecx,9
    setb        al
    and         dl,al
    bt          ecx,8
    setb        al
    test        al,dl
    jne         00000001400243C6
    mov         dword ptr [rbx],edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400243D0_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    call        0000000140019964
    or          r8,label_0FFFFFFFFFFFFFFFF
    mov         r10,rax
    xor         edi,edi
    mov         rdx,qword ptr [rax+label_0000000000000098]
    inc         r8
    cmp         word ptr [rdx+r8*2],di
    jne         00000001400243F6
    mov         eax,edi
    cmp         r8,3
    mov         ecx,2
    sete        al
    mov         dword ptr [r10+label_00000000000000B0],eax
    je          000000014002443F
    mov         r9d,edi
    movzx       r8d,word ptr [rdx]
    add         rdx,rcx
    lea         eax,[r8-label_41]
    cmp         ax,label_19
    jbe         0000000140024437
    sub         r8w,label_61
    cmp         r8w,label_19
    ja          000000014002443C
    inc         r9d
    jmp         000000014002441A
    mov         ecx,r9d
    mov         dword ptr [r10+label_00000000000000AC],ecx
    mov         edx,1
    lea         rcx,[label_00000001400246B4]
    call label_000000014002C1E0
    test        byte ptr [rbx],4
    jne         000000014002445F
    mov         dword ptr [rbx],edi
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140024469_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rbp
    push        rsi
    push        rdi
    push        r14
    sub         rsp,label_120
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000000110],rax
    mov         rbx,rcx
    call        0000000140019964
    lea         rsi,[rax+label_0000000000000098]
    call        0000000140019964
    mov         rcx,rbx
    mov         rdi,qword ptr [rax+label_00000000000003A0]
    call        00000001400247BC
    mov         ecx,dword ptr [rsi+label_1C]
    lea         r8,[rsp+label_20]
    neg         ecx
    mov         r9d,label_78
    mov         ecx,eax
    mov         ebx,eax
    sbb         edx,edx
    and         edx,label_0FFFFF005
    add         edx,label_1002
    call label_000000014002C1C8
    xor         r14d,r14d
    test        eax,eax
    je          0000000140024683
    mov         rcx,qword ptr [rsi+8]
    lea         rdx,[rsp+label_20]
    call        0000000140020220
    or          rbp,label_0FFFFFFFFFFFFFFFF
    test        eax,eax
    jne         00000001400245B8
    mov         eax,dword ptr [rsi+label_18]
    lea         r9d,[r14+label_78]
    neg         eax
    lea         r8,[rsp+label_20]
    mov         ecx,ebx
    sbb         edx,edx
    and         edx,label_0FFFFF002
    add         edx,label_1001
    call label_000000014002C1C8
    test        eax,eax
    je          0000000140024683
    mov         rcx,qword ptr [rsi]
    lea         rdx,[rsp+label_20]
    call        0000000140020220
    mov         ecx,dword ptr [rdi]
    test        eax,eax
    jne         000000014002454D
    or          ecx,label_304
    mov         dword ptr [rdi+4],ebx
    jmp         00000001400245B3
    test        cl,2
    jne         00000001400245B8
    cmp         dword ptr [rsi+label_14],r14d
    je          0000000140024591
    movsxd      r8,dword ptr [rsi+label_14]
    lea         rdx,[rsp+label_20]
    mov         rcx,qword ptr [rsi]
    call        0000000140027B70
    mov         ecx,dword ptr [rdi]
    test        eax,eax
    jne         0000000140024591
    or          ecx,2
    mov         dword ptr [rdi+8],ebx
    mov         dword ptr [rdi],ecx
    mov         rax,rbp
    mov         rcx,qword ptr [rsi]
    inc         rax
    cmp         word ptr [rcx+rax*2],r14w
    jne         000000014002457D
    cmp         eax,dword ptr [rsi+label_14]
    jne         00000001400245B8
    mov         dword ptr [rdi+4],ebx
    jmp         00000001400245B8
    test        cl,1
    jne         00000001400245B8
    mov         edx,r14d
    lea         rax,[label_0000000140032378]
    cmp         bx,word ptr [rax]
    je          00000001400245B8
    inc         edx
    add         rax,2
    cmp         edx,label_0A
    jb          00000001400245A0
    or          ecx,1
    mov         dword ptr [rdi+8],ebx
    mov         dword ptr [rdi],ecx
    mov         eax,dword ptr [rdi]
    mov         ecx,label_300
    and         eax,ecx
    cmp         eax,ecx
    je          0000000140024677
    mov         eax,dword ptr [rsi+label_18]
    lea         r8,[rsp+label_20]
    neg         eax
    mov         r9d,label_78
    mov         ecx,ebx
    sbb         edx,edx
    and         edx,label_0FFFFF002
    add         edx,label_1001
    call label_000000014002C1C8
    test        eax,eax
    je          0000000140024683
    mov         rcx,qword ptr [rsi]
    lea         rdx,[rsp+label_20]
    call        0000000140020220
    test        eax,eax
    jne         000000014002463D
    mov         eax,dword ptr [rdi]
    bts         eax,9
    mov         dword ptr [rdi],eax
    cmp         dword ptr [rsi+label_18],r14d
    je          000000014002461E
    bts         eax,8
    mov         dword ptr [rdi],eax
    jmp         000000014002466E
    cmp         dword ptr [rsi+label_14],r14d
    je          0000000140024616
    mov         rcx,qword ptr [rsi]
    inc         rbp
    cmp         word ptr [rcx+rbp*2],r14w
    jne         0000000140024627
    cmp         ebp,dword ptr [rsi+label_14]
    jne         0000000140024616
    mov         edx,1
    jmp         000000014002465C
    cmp         dword ptr [rsi+label_18],r14d
    jne         0000000140024677
    cmp         dword ptr [rsi+label_14],r14d
    je          0000000140024677
    mov         rcx,qword ptr [rsi]
    lea         rdx,[rsp+label_20]
    call        0000000140020220
    test        eax,eax
    jne         0000000140024677
    xor         edx,edx
    mov         r8,rdi
    mov         ecx,ebx
    call        00000001400248BC
    test        eax,eax
    je          0000000140024677
    bts         dword ptr [rdi],8
    cmp         dword ptr [rdi+4],r14d
    jne         0000000140024677
    mov         dword ptr [rdi+4],ebx
    mov         eax,dword ptr [rdi]
    shr         eax,2
    not         eax
    and         eax,1
    jmp         000000014002468B
    mov         dword ptr [rdi],r14d
    mov         eax,1
    mov         rcx,qword ptr [rsp+label_0000000000000110]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000000120]
    mov         rbx,qword ptr [r11+label_28]
    mov         rbp,qword ptr [r11+label_30]
    mov         rsp,r11
    pop         r14
    pop         rdi
    pop         rsi
    ret
func_00000001400246B2_end:
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_120
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000000110],rax
    mov         rbx,rcx
    call        0000000140019964
    mov         rsi,rax
    call        0000000140019964
    mov         rcx,rbx
    mov         rdi,qword ptr [rax+label_00000000000003A0]
    call        00000001400247BC
    mov         ecx,dword ptr [rsi+label_00000000000000B0]
    lea         r8,[rsp+label_20]
    neg         ecx
    mov         r9d,label_78
    mov         ecx,eax
    mov         ebx,eax
    sbb         edx,edx
    and         edx,label_0FFFFF002
    add         edx,label_1001
    call label_000000014002C1C8
    test        eax,eax
    jne         000000014002472F
    and         dword ptr [rdi],eax
    mov         eax,1
    jmp         0000000140024797
    mov         rcx,qword ptr [rsi+label_0000000000000098]
    lea         rdx,[rsp+label_20]
    call        0000000140020220
    mov         ecx,dword ptr [rsi+label_00000000000000B0]
    test        eax,eax
    jne         0000000140024753
    test        ecx,ecx
    jne         0000000140024784
    lea         edx,[rcx+1]
    jmp         0000000140024776
    test        ecx,ecx
    jne         000000014002478D
    cmp         dword ptr [rsi+label_00000000000000AC],ecx
    je          000000014002478D
    mov         rcx,qword ptr [rsi+label_0000000000000098]
    lea         rdx,[rsp+label_20]
    call        0000000140020220
    test        eax,eax
    jne         000000014002478D
    xor         edx,edx
    mov         r8,rdi
    mov         ecx,ebx
    call        00000001400248BC
    test        eax,eax
    je          000000014002478D
    or          dword ptr [rdi],4
    mov         dword ptr [rdi+4],ebx
    mov         dword ptr [rdi+8],ebx
    mov         eax,dword ptr [rdi]
    shr         eax,2
    not         eax
    and         eax,1
    mov         rcx,qword ptr [rsp+label_0000000000000110]
    xor         rcx,rsp
    call        00000001400099A0
    lea         r11,[rsp+label_0000000000000120]
    mov         rbx,qword ptr [r11+label_18]
    mov         rsi,qword ptr [r11+label_20]
    mov         rsp,r11
    pop         rdi
    ret
func_00000001400247BB_end:
    movzx       edx,word ptr [rcx]
    lea         r8,[rcx+2]
    xor         r10d,r10d
    mov         r9d,r10d
    jmp         0000000140024802
    lea         eax,[rdx-label_61]
    cmp         ax,5
    ja          00000001400247DB
    mov         eax,label_0FFD9
    jmp         00000001400247E9
    lea         eax,[rdx-label_41]
    cmp         ax,5
    ja          00000001400247EC
    mov         eax,label_0FFF9
    add         dx,ax
    shl         r9d,4
    add         r9d,label_0FFFFFFD0
    movzx       ecx,dx
    movzx       edx,word ptr [r8]
    add         r9d,ecx
    add         r8,2
    test        dx,dx
    jne         00000001400247CB
    mov         eax,r9d
    ret
func_000000014002480A_end:
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    xor         esi,esi
    mov         rdi,rdx
    mov         rbx,rcx
    test        rcx,rcx
    je          000000014002487B
    cmp         word ptr [rcx],si
    je          000000014002487B
    lea         rdx,[label_0000000140032358]
    call        0000000140027D0C
    test        eax,eax
    je          000000014002487B
    lea         rdx,[label_0000000140032370]
    mov         rcx,rbx
    call        0000000140027D0C
    test        eax,eax
    jne         0000000140024871
    mov         ecx,dword ptr [rdi+8]
    lea         r9d,[rsi+2]
    lea         r8,[rsp+label_30]
    mov         edx,label_2000000B
    call label_000000014002C1C8
    test        eax,eax
    je          0000000140024898
    mov         eax,dword ptr [rsp+label_30]
    jmp         00000001400248AA
    mov         rcx,rbx
    call        0000000140019478
    jmp         00000001400248AA
    mov         ecx,dword ptr [rdi+8]
    lea         r8,[rsp+label_30]
    mov         r9d,2
    mov         edx,label_20001004
    call label_000000014002C1C8
    test        eax,eax
    jne         000000014002489C
    xor         eax,eax
    jmp         00000001400248AA
    mov         eax,dword ptr [rsp+label_30]
    test        eax,eax
    jne         00000001400248AA
    call label_000000014002C250
    mov         rbx,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400248B9_end:
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         esi,edx
    mov         ebx,ecx
    call        0000000140019964
    mov         ecx,ebx
    lea         r8,[rsp+label_30]
    and         ecx,label_3FF
    mov         r9d,2
    bts         ecx,label_0A
    mov         edx,label_20000001
    mov         rdi,rax
    call label_000000014002C1C8
    xor         edx,edx
    test        eax,eax
    je          000000014002495D
    cmp         ebx,dword ptr [rsp+label_30]
    je          0000000140024956
    test        esi,esi
    je          0000000140024956
    mov         r10,qword ptr [rdi+label_0000000000000098]
    mov         r9d,edx
    movzx       r8d,word ptr [r10]
    lea         rcx,[r10+2]
    lea         eax,[r8-label_41]
    cmp         ax,label_19
    jbe         0000000140024931
    sub         r8w,label_61
    cmp         r8w,label_19
    ja          000000014002493E
    movzx       r8d,word ptr [rcx]
    inc         r9d
    add         rcx,2
    jmp         000000014002491B
    or          rax,label_0FFFFFFFFFFFFFFFF
    inc         rax
    cmp         word ptr [r10+rax*2],dx
    jne         0000000140024942
    cmp         r9d,eax
    setne       dl
    mov         eax,edx
    jmp         000000014002495F
    mov         eax,1
    jmp         000000014002495F
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014002496E_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_20
    xor         edi,edi
    mov         r15,r8
    mov         ebx,edx
    mov         rbp,rcx
    test        edx,edx
    js          00000001400249C6
    mov         rcx,qword ptr [r15]
    lea         eax,[rdi+rbx]
    cdq
    sub         eax,edx
    sar         eax,1
    movsxd      rsi,eax
    mov         r14,rsi
    shl         r14,4
    mov         rdx,qword ptr [r14+rbp]
    call        0000000140020220
    test        eax,eax
    je          00000001400249E1
    jns         00000001400249BF
    lea         ebx,[rsi-1]
    jmp         00000001400249C2
    lea         edi,[rsi+1]
    cmp         edi,ebx
    jle         0000000140024996
    xor         al,al
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         rdi
    ret
func_00000001400249E0_end:
    lea         rax,[rbp+8]
    add         rax,r14
    mov         qword ptr [r15],rax
    mov         al,1
    jmp         00000001400249C8
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    mov         rbp,rsp
    sub         rsp,label_40
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp-label_10],rax
    mov         rdi,r8
    mov         r15,rdx
    mov         r14,rcx
    call        0000000140019964
    mov         rsi,rax
    xor         eax,eax
    mov         qword ptr [rbp-label_20],rax
    mov         dword ptr [rbp-label_18],eax
    call        0000000140019964
    lea         rcx,[rbp-label_20]
    xor         r12d,r12d
    lea         rbx,[rsi+label_00000000000000A0]
    mov         qword ptr [rax+label_00000000000003A0],rcx
    lea         rax,[r14+label_0000000000000080]
    mov         qword ptr [rsi+label_0000000000000098],r14
    mov         qword ptr [rbx],rax
    test        rax,rax
    je          0000000140024A77
    cmp         word ptr [rax],r12w
    je          0000000140024A77
    mov         edx,dword ptr [label_0000000140031930]
    lea         rcx,[label_00000001400317C0]
    dec         edx
    mov         r8,rbx
    call        0000000140024970
    mov         dword ptr [rbp-label_20],r12d
    mov         rax,qword ptr [rsi+label_0000000000000098]
    test        rax,rax
    je          0000000140024B00
    cmp         word ptr [rax],r12w
    je          0000000140024B00
    mov         rax,qword ptr [rbx]
    test        rax,rax
    je          0000000140024AA6
    cmp         word ptr [rax],r12w
    je          0000000140024AA6
    lea         rcx,[rbp-label_20]
    call        0000000140024304
    jmp         0000000140024AAF
    lea         rcx,[rbp-label_20]
    call        00000001400243D4
    cmp         dword ptr [rbp-label_20],r12d
    jne         0000000140024B76
    mov         edx,dword ptr [label_00000001400317B0]
    lea         r8,[rsi+label_0000000000000098]
    dec         edx
    lea         rcx,[label_00000001400313A0]
    call        0000000140024970
    test        al,al
    je          0000000140024B6C
    mov         rax,qword ptr [rbx]
    test        rax,rax
    je          0000000140024AF5
    cmp         word ptr [rax],r12w
    je          0000000140024AF5
    lea         rcx,[rbp-label_20]
    call        0000000140024304
    jmp         0000000140024B6C
    lea         rcx,[rbp-label_20]
    call        00000001400243D4
    jmp         0000000140024B6C
    mov         rax,qword ptr [rbx]
    test        rax,rax
    je          0000000140024B59
    cmp         word ptr [rax],r12w
    je          0000000140024B59
    call        0000000140019964
    mov         rdx,rax
    or          rcx,label_0FFFFFFFFFFFFFFFF
    mov         rax,qword ptr [rax+label_00000000000000A0]
    inc         rcx
    cmp         word ptr [rax+rcx*2],r12w
    jne         0000000140024B21
    cmp         rcx,3
    mov         eax,r12d
    lea         rcx,[label_000000014002421C]
    sete        al
    mov         dword ptr [rdx+label_00000000000000B4],eax
    mov         edx,1
    call label_000000014002C1E0
    test        byte ptr [rbp-label_20],4
    jne         0000000140024B6C
    mov         dword ptr [rbp-label_20],r12d
    jmp         0000000140024B6C
    mov         dword ptr [rbp-label_20],label_104
    call label_000000014002C1D8
    mov         dword ptr [rbp-label_18],eax
    mov         dword ptr [rbp-label_1C],eax
    cmp         dword ptr [rbp-label_20],r12d
    je          0000000140024C51
    lea         rax,[r14+label_0000000000000100]
    neg         r14
    lea         rdx,[rbp-label_20]
    sbb         rcx,rcx
    and         rcx,rax
    call        000000014002480C
    mov         ebx,eax
    test        eax,eax
    je          0000000140024C51
    movzx       ecx,bx
    call label_000000014002C248
    test        eax,eax
    je          0000000140024C51
    mov         ecx,dword ptr [rbp-label_1C]
    mov         edx,1
    call label_000000014002C1D0
    test        eax,eax
    je          0000000140024C51
    test        r15,r15
    je          0000000140024BC8
    mov         dword ptr [r15],ebx
    mov         ecx,dword ptr [rbp-label_1C]
    lea         rdx,[rsi+label_00000000000002F0]
    xor         r9d,r9d
    lea         esi,[r9+label_55]
    mov         r8d,esi
    call        000000014001B9EC
    test        rdi,rdi
    je          0000000140024C4A
    mov         ecx,dword ptr [rbp-label_1C]
    lea         rdx,[rdi+label_0000000000000120]
    xor         r9d,r9d
    mov         r8d,esi
    call        000000014001B9EC
    mov         ecx,dword ptr [rbp-label_1C]
    mov         esi,label_40
    mov         r9d,esi
    mov         r8,rdi
    mov         edx,label_1001
    call label_000000014002C1C8
    test        eax,eax
    je          0000000140024C51
    mov         ecx,dword ptr [rbp-label_18]
    lea         r8,[rdi+label_0000000000000080]
    mov         r9d,esi
    mov         edx,label_1002
    call label_000000014002C1C8
    test        eax,eax
    je          0000000140024C51
    lea         rdx,[rdi+label_0000000000000100]
    mov         ecx,ebx
    lea         r9d,[rsi-label_36]
    lea         r8d,[rsi-label_30]
    call        0000000140027B04
    mov         eax,1
    jmp         0000000140024C53
    xor         eax,eax
    mov         rcx,qword ptr [rbp-label_10]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_40
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_0000000140024C6D_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    mov         rbp,r8
    mov         rbx,rdx
    mov         rsi,rcx
    test        rdx,rdx
    je          0000000140024CAF
    xor         edx,edx
    lea         rax,[rdx-label_20]
    div         rax,rbx
    cmp         rax,r8
    jae         0000000140024CAF
    call        0000000140015374
    mov         dword ptr [rax],label_0C
    xor         eax,eax
    jmp         0000000140024CF0
    test        rsi,rsi
    je          0000000140024CBE
    call        0000000140027D44
    mov         rdi,rax
    jmp         0000000140024CC0
    xor         edi,edi
    imul        rbx,rbp
    mov         rcx,rsi
    mov         rdx,rbx
    call        000000014001FC60
    mov         rsi,rax
    test        rax,rax
    je          0000000140024CED
    cmp         rdi,rbx
    jae         0000000140024CED
    sub         rbx,rdi
    lea         rcx,[rax+rdi]
    mov         r8,rbx
    xor         edx,edx
    call        000000014002A110
    mov         rax,rsi
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140024D04_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    call label_000000014002C280
    test        rax,rax
    mov         qword ptr [label_000000014003E9E8],rax
    setne       al
    add         rsp,label_28
    ret
func_0000000140024D23_end:
    and         qword ptr [label_000000014003E9E8],0
    mov         al,1
    ret
func_0000000140024D2E_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         rsi,rdx
    mov         rdi,rcx
    cmp         rcx,rdx
    je          0000000140024DB2
    mov         rbx,rcx
    mov         rax,qword ptr [rbx]
    test        rax,rax
    je          0000000140024D69
    mov         r10,label_0DF949EC45C5CA270
    call label_000000014002C2C0
    test        al,al
    je          0000000140024D72
    add         rbx,label_10
    cmp         rbx,rsi
    jne         0000000140024D4D
    cmp         rbx,rsi
    je          0000000140024DB2
    cmp         rbx,rdi
    je          0000000140024DAE
    add         rbx,label_0FFFFFFFFFFFFFFF8
    cmp         qword ptr [rbx-8],0
    je          0000000140024DA1
    mov         rax,qword ptr [rbx]
    test        rax,rax
    je          0000000140024DA1
    mov         r10,label_9799A6753E593B70
    xor         ecx,ecx
    call label_000000014002C2C0
    sub         rbx,label_10
    lea         rax,[rbx+8]
    cmp         rax,rdi
    jne         0000000140024D80
    xor         al,al
    jmp         0000000140024DB4
    mov         al,1
    mov         rbx,qword ptr [rsp+label_30]
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140024DC3_end:
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rdx
    mov         rdi,rcx
    cmp         rcx,rdx
    je          0000000140024DFD
    mov         rax,qword ptr [rbx-8]
    test        rax,rax
    je          0000000140024DF4
    mov         r10,label_9799A6753E593B70
    xor         ecx,ecx
    call label_000000014002C2C0
    sub         rbx,label_10
    cmp         rbx,rdi
    jne         0000000140024DD9
    mov         rbx,qword ptr [rsp+label_30]
    mov         al,1
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140024E09_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_20
    cmp         dword ptr [rsp+label_50],0
    mov         edi,r9d
    mov         esi,r8d
    mov         rbx,rdx
    mov         rbp,rcx
    jne         0000000140024E3E
    cmp         byte ptr [rdx],label_35
    setge       al
    jmp         0000000140024EC7
    call        000000014001FD48
    test        eax,eax
    jne         0000000140024E77
    cmp         byte ptr [rbx],label_35
    lea         ecx,[rax+1]
    jg          0000000140024E59
    jl          0000000140024EC5
    lea         rax,[rbx+1]
    test        edi,edi
    jne         0000000140024E60
    mov         al,cl
    jmp         0000000140024EC7
    add         rax,rcx
    mov         dl,byte ptr [rax]
    cmp         dl,label_30
    je          0000000140024E5D
    test        dl,dl
    jne         0000000140024E59
    cmp         rbx,rbp
    je          0000000140024EC5
    mov         al,byte ptr [rbx-1]
    and         al,cl
    jmp         0000000140024EC7
    cmp         eax,label_200
    jne         0000000140024E9F
    mov         ecx,1
    test        edi,edi
    je          0000000140024E96
    jmp         0000000140024E8C
    add         rbx,rcx
    mov         al,byte ptr [rbx]
    cmp         al,label_30
    je          0000000140024E89
    test        al,al
    je          0000000140024E9B
    cmp         esi,label_2D
    jne         0000000140024E59
    xor         cl,cl
    jmp         0000000140024E59
    cmp         eax,label_100
    jne         0000000140024EC5
    mov         ecx,1
    test        edi,edi
    je          0000000140024EBE
    jmp         0000000140024EB4
    add         rbx,rcx
    mov         al,byte ptr [rbx]
    cmp         al,label_30
    je          0000000140024EB1
    test        al,al
    je          0000000140024E9B
    cmp         esi,label_2D
    je          0000000140024E59
    jmp         0000000140024E9B
    xor         al,al
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140024EDB_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_30
    mov         rdi,r9
    mov         rsi,rcx
    test        rcx,rcx
    jne         0000000140024F2D
    mov         ebx,label_16
    mov         rax,qword ptr [rsp+label_70]
    xor         r9d,r9d
    mov         qword ptr [rsp+label_28],rax
    xor         r8d,r8d
    and         qword ptr [rsp+label_20],0
    xor         edx,edx
    xor         ecx,ecx
    mov         dword ptr [rax+label_2C],ebx
    mov         byte ptr [rax+label_30],1
    call        0000000140010530
    mov         eax,ebx
    jmp         0000000140024FD7
    test        rdx,rdx
    je          0000000140024EFB
    xor         eax,eax
    mov         byte ptr [rcx],0
    test        r8d,r8d
    cmovg       eax,r8d
    inc         eax
    cdqe
    cmp         rdx,rax
    ja          0000000140024F4E
    mov         ebx,label_22
    jmp         0000000140024F00
    test        rdi,rdi
    je          0000000140024EFB
    mov         rcx,qword ptr [r9+8]
    lea         rbx,[rsi+1]
    mov         rdx,rcx
    mov         byte ptr [rsi],label_30
    jmp         0000000140024F78
    mov         al,byte ptr [rdx]
    test        al,al
    je          0000000140024F6E
    inc         rdx
    jmp         0000000140024F70
    mov         al,label_30
    mov         byte ptr [rbx],al
    inc         rbx
    dec         r8d
    test        r8d,r8d
    jg          0000000140024F63
    mov         byte ptr [rbx],0
    js          0000000140024FAD
    mov         eax,dword ptr [rsp+label_68]
    mov         r9d,dword ptr [rsp+label_60]
    mov         r8d,dword ptr [rdi]
    mov         dword ptr [rsp+label_20],eax
    call        0000000140024E0C
    test        al,al
    je          0000000140024FAD
    jmp         0000000140024FA0
    mov         byte ptr [rbx],label_30
    dec         rbx
    mov         al,byte ptr [rbx]
    cmp         al,label_39
    je          0000000140024F9D
    inc         al
    mov         byte ptr [rbx],al
    cmp         byte ptr [rsi],label_31
    jne         0000000140024FB7
    inc         dword ptr [rdi+4]
    jmp         0000000140024FD5
    or          r8,label_0FFFFFFFFFFFFFFFF
    inc         r8
    cmp         byte ptr [r8+rsi+1],0
    jne         0000000140024FBB
    inc         r8
    lea         rdx,[rsi+1]
    mov         rcx,rsi
    call        0000000140029A70
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_0000000140024FEB_end:
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    lea         rbp,[rsp+label_FFFFFFFFFFFFF910]
    sub         rsp,label_7F0
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp+label_00000000000006E0],rax
    mov         r14,qword ptr [rbp+label_0000000000000750]
    mov         r12,r9
    mov         qword ptr [rsp+label_50],rcx
    mov         esi,edx
    lea         rcx,[rsp+label_70]
    mov         qword ptr [rbp-label_78],r14
    mov         qword ptr [rbp-label_68],r9
    mov         dword ptr [rsp+label_64],r8d
    call        0000000140027DE4
    mov         eax,dword ptr [rsp+label_70]
    mov         r15d,1
    and         eax,label_1F
    cmp         al,label_1F
    jne         0000000140025057
    mov         byte ptr [rsp+label_78],0
    jmp         0000000140025066
    lea         rcx,[rsp+label_70]
    call        0000000140027E5C
    mov         byte ptr [rsp+label_78],r15b
    mov         rbx,qword ptr [rsp+label_50]
    mov         edi,label_20
    mov         eax,edi
    mov         qword ptr [r12+8],r14
    test        rbx,rbx
    lea         ecx,[rdi+label_0D]
    cmovs       eax,ecx
    xor         r8d,r8d
    xor         edx,edx
    mov         dword ptr [r12],eax
    lea         rcx,[rbp-label_80]
    call        0000000140027D80
    mov         rax,rbx
    mov         edx,label_7FF
    shr         rax,label_34
    mov         rcx,label_0FFFFFFFFFFFFF
    and         rax,rdx
    jne         00000001400250CE
    test        rcx,rbx
    je          00000001400250BF
    test        dword ptr [rbp-label_80],label_1000000
    je          0000000140025182
    and         dword ptr [r12+4],0
    lea         r8,[label_000000014003238C]
    jmp         000000014002512E
    cmp         rax,rdx
    jne         0000000140025182
    mov         rax,rbx
    and         rax,rcx
    jne         00000001400250E4
    mov         eax,r15d
    jmp         000000014002510E
    test        rbx,rbx
    jns         00000001400250FF
    mov         rcx,label_8000000000000
    cmp         rax,rcx
    jne         00000001400250FF
    mov         eax,4
    jmp         000000014002510E
    mov         rax,rbx
    shr         rax,label_33
    not         eax
    and         eax,r15d
    or          eax,2
    mov         dword ptr [r12+4],r15d
    sub         eax,r15d
    je          000000014002515C
    sub         eax,r15d
    je          0000000140025153
    sub         eax,r15d
    je          000000014002514A
    cmp         eax,r15d
    jne         0000000140025182
    lea         r8,[label_00000001400323A8]
    mov         rdx,qword ptr [rbp+label_0000000000000758]
    mov         rcx,r14
    call        0000000140018C7C
    test        eax,eax
    jne         0000000140026264
    jmp         000000014002622F
    lea         r8,[label_00000001400323A0]
    jmp         000000014002512E
    lea         r8,[label_0000000140032398]
    jmp         000000014002512E
    mov         rdx,qword ptr [rbp+label_0000000000000758]
    lea         r8,[label_0000000140032390]
    mov         rcx,r14
    call        0000000140018C7C
    test        eax,eax
    jne         0000000140026264
    xor         r15d,r15d
    jmp         000000014002622F
    mov         rax,label_7FFFFFFFFFFFFFFF
    lea         rcx,[rsp+label_68]
    and         rbx,rax
    xor         r8d,r8d
    mov         qword ptr [rsp+label_50],rbx
    xor         edx,edx
    mov         ebx,label_8001F
    mov         dword ptr [rsp+label_6C],ebx
    call        0000000140027D80
    mov         r8d,dword ptr [rsp+label_6C]
    lea         rcx,[rsp+label_40]
    mov         edx,ebx
    call        0000000140027D80
    movsd       xmm0,mmword ptr [rsp+label_50]
    inc         esi
    mov         r9d,label_7FF
    movsd       mmword ptr [rsp+label_58],xmm0
    mov         rdx,qword ptr [rsp+label_58]
    mov         r8,rdx
    mov         dword ptr [rsp+label_60],esi
    shr         r8,label_34
    mov         esi,2
    mov         rcx,r8
    and         rcx,r9
    mov         rax,rcx
    neg         rax
    mov         rax,label_10000000000000
    sbb         rbx,rbx
    and         rbx,rax
    mov         rax,label_0FFFFFFFFFFFFF
    and         rdx,rax
    add         rbx,rdx
    neg         rcx
    sbb         eax,eax
    and         r8d,r9d
    lea         r12d,[rsi+rax]
    add         r12d,r8d
    call        0000000140027F70
    call        0000000140027EAC
    cvttsd2si   ecx,xmm0
    mov         dword ptr [rbp-label_5C],ebx
    lea         eax,[rcx+label_FFFFFFFF80000001]
    and         eax,label_0FFFFFFFE
    neg         eax
    sbb         eax,eax
    shr         rbx,label_20
    and         eax,ecx
    mov         dword ptr [rbp-label_58],ebx
    mov         dword ptr [rsp+label_30],eax
    mov         eax,ebx
    neg         eax
    sbb         edx,edx
    neg         edx
    add         edx,r15d
    mov         dword ptr [rbp-label_60],edx
    cmp         r12d,label_434
    jb          0000000140025481
    xor         eax,eax
    mov         dword ptr [rbp+label_0000000000000348],label_100000
    mov         dword ptr [rbp+label_0000000000000344],eax
    mov         dword ptr [rbp+label_0000000000000340],esi
    test        ebx,ebx
    je          0000000140025393
    xor         r8d,r8d
    mov         eax,dword ptr [rbp+r8*4-label_5C]
    cmp         dword ptr [rbp+r8*4+label_0000000000000344],eax
    jne         0000000140025393
    add         r8d,r15d
    cmp         r8d,esi
    jne         000000014002528A
    and         dword ptr [rsp+label_40],0
    lea         r11d,[r12+label_FFFFFFFFFFFFFBCE]
    mov         r8d,r11d
    lea         eax,[rdx-1]
    and         r11d,label_1F
    shr         r8d,5
    mov         esi,edi
    mov         rbx,r15
    sub         esi,r11d
    mov         ecx,esi
    shl         rbx,cl
    sub         ebx,r15d
    bsr         eax,dword ptr [rbp+rax*4-label_5C]
    mov         r12d,ebx
    not         r12d
    je          00000001400252E1
    inc         eax
    jmp         00000001400252E3
    xor         eax,eax
    sub         edi,eax
    lea         eax,[rdx+r8]
    cmp         eax,label_73
    ja          0000000140025373
    xor         r14d,r14d
    cmp         r11d,edi
    seta        r14b
    add         r14d,edx
    add         r14d,r8d
    cmp         r14d,label_73
    ja          0000000140025373
    lea         edi,[r8-1]
    lea         r10d,[r14-1]
    cmp         r10d,edi
    je          000000014002535D
    mov         eax,r10d
    sub         eax,r8d
    lea         ecx,[rax-1]
    cmp         eax,edx
    jae         0000000140025329
    mov         r9d,dword ptr [rbp+rax*4-label_5C]
    jmp         000000014002532C
    xor         r9d,r9d
    cmp         ecx,edx
    jae         0000000140025336
    mov         edx,dword ptr [rbp+rcx*4-label_5C]
    jmp         0000000140025338
    xor         edx,edx
    and         edx,r12d
    mov         ecx,esi
    shr         edx,cl
    and         r9d,ebx
    mov         ecx,r11d
    shl         r9d,cl
    or          edx,r9d
    mov         dword ptr [rbp+r10*4-label_5C],edx
    dec         r10d
    cmp         r10d,edi
    je          000000014002535D
    mov         edx,dword ptr [rbp-label_60]
    jmp         0000000140025315
    xor         ecx,ecx
    test        r8d,r8d
    je          0000000140025376
    and         dword ptr [rbp+rcx*4-label_5C],0
    add         ecx,r15d
    cmp         ecx,r8d
    jne         0000000140025364
    jmp         0000000140025376
    xor         r14d,r14d
    mov         dword ptr [rbp-label_60],r14d
    mov         r12d,r15d
    mov         dword ptr [rbp+label_0000000000000170],r15d
    mov         dword ptr [rbp+label_0000000000000174],4
    jmp         00000001400256B2
    and         dword ptr [rsp+label_40],0
    lea         r11d,[r12+label_FFFFFFFFFFFFFBCD]
    mov         r8d,r11d
    lea         eax,[rdx-1]
    and         r11d,label_1F
    shr         r8d,5
    mov         esi,edi
    mov         rbx,r15
    sub         esi,r11d
    mov         ecx,esi
    shl         rbx,cl
    sub         ebx,r15d
    bsr         eax,dword ptr [rbp+rax*4-label_5C]
    mov         r12d,ebx
    not         r12d
    je          00000001400253CF
    inc         eax
    jmp         00000001400253D1
    xor         eax,eax
    sub         edi,eax
    lea         eax,[rdx+r8]
    cmp         eax,label_73
    ja          0000000140025461
    xor         r14d,r14d
    cmp         r11d,edi
    seta        r14b
    add         r14d,edx
    add         r14d,r8d
    cmp         r14d,label_73
    ja          0000000140025461
    lea         edi,[r8-1]
    lea         r10d,[r14-1]
    cmp         r10d,edi
    je          000000014002544B
    mov         eax,r10d
    sub         eax,r8d
    lea         ecx,[rax-1]
    cmp         eax,edx
    jae         0000000140025417
    mov         r9d,dword ptr [rbp+rax*4-label_5C]
    jmp         000000014002541A
    xor         r9d,r9d
    cmp         ecx,edx
    jae         0000000140025424
    mov         edx,dword ptr [rbp+rcx*4-label_5C]
    jmp         0000000140025426
    xor         edx,edx
    and         edx,r12d
    mov         ecx,esi
    shr         edx,cl
    and         r9d,ebx
    mov         ecx,r11d
    shl         r9d,cl
    or          edx,r9d
    mov         dword ptr [rbp+r10*4-label_5C],edx
    dec         r10d
    cmp         r10d,edi
    je          000000014002544B
    mov         edx,dword ptr [rbp-label_60]
    jmp         0000000140025403
    xor         ecx,ecx
    test        r8d,r8d
    je          0000000140025464
    and         dword ptr [rbp+rcx*4-label_5C],0
    add         ecx,r15d
    cmp         ecx,r8d
    jne         0000000140025452
    jmp         0000000140025464
    xor         r14d,r14d
    mov         dword ptr [rbp-label_60],r14d
    mov         r12d,r15d
    mov         dword ptr [rbp+label_0000000000000170],r15d
    mov         dword ptr [rbp+label_0000000000000174],2
    jmp         00000001400256B2
    cmp         r12d,label_36
    je          00000001400255CF
    xor         eax,eax
    mov         dword ptr [rbp+label_0000000000000348],label_100000
    mov         dword ptr [rbp+label_0000000000000344],eax
    mov         dword ptr [rbp+label_0000000000000340],esi
    test        ebx,ebx
    je          00000001400255CF
    xor         r8d,r8d
    mov         eax,dword ptr [rbp+r8*4-label_5C]
    cmp         dword ptr [rbp+r8*4+label_0000000000000344],eax
    jne         00000001400255CF
    add         r8d,r15d
    cmp         r8d,esi
    jne         00000001400254AE
    and         dword ptr [rsp+label_40],0
    bsr         eax,ebx
    je          00000001400254D7
    inc         eax
    jmp         00000001400254D9
    xor         eax,eax
    xor         r14d,r14d
    sub         edi,eax
    cmp         edi,esi
    setb        r14b
    or          r11d,label_0FFFFFFFF
    add         r14d,edx
    cmp         r14d,label_73
    jbe         000000014002557C
    xor         r14d,r14d
    mov         esi,label_436
    mov         dword ptr [rbp-label_60],r14d
    sub         esi,r12d
    lea         rcx,[rbp+label_0000000000000344]
    mov         edi,esi
    xor         edx,edx
    shr         edi,5
    lea         rbx,[rdi*4+label_0000000000000000]
    mov         r8,rbx
    call        000000014002A110
    and         esi,label_1F
    mov         eax,r15d
    mov         cl,sil
    shl         eax,cl
    mov         dword ptr [rbp+rbx+label_0000000000000344],eax
    lea         r12d,[rdi+1]
    mov         r8d,r12d
    shl         r8,2
    mov         dword ptr [rbp+label_0000000000000340],r12d
    mov         dword ptr [rbp+label_0000000000000170],r12d
    test        r8,r8
    je          00000001400256B2
    mov         ebx,label_1CC
    lea         rcx,[rbp+label_0000000000000174]
    cmp         r8,rbx
    ja          0000000140025691
    lea         rdx,[rbp+label_0000000000000344]
    call        0000000140029A70
    jmp         00000001400256AB
    lea         eax,[r14-1]
    cmp         eax,r11d
    je          00000001400254F8
    mov         r10d,eax
    lea         r8d,[rax-1]
    cmp         eax,edx
    jae         000000014002559B
    mov         r9d,dword ptr [rbp+r10*4-label_5C]
    jmp         000000014002559E
    xor         r9d,r9d
    cmp         r8d,edx
    jae         00000001400255AA
    mov         ecx,dword ptr [rbp+r8*4-label_5C]
    jmp         00000001400255AC
    xor         ecx,ecx
    shr         ecx,label_1E
    lea         eax,[r9*4+label_0000000000000000]
    or          ecx,eax
    mov         eax,r8d
    mov         dword ptr [rbp+r10*4-label_5C],ecx
    cmp         r8d,r11d
    je          00000001400254F8
    mov         edx,dword ptr [rbp-label_60]
    jmp         0000000140025589
    neg         ebx
    sbb         rax,rax
    and         dword ptr [rsp+label_40],0
    and         eax,4
    bsr         eax,dword ptr [rbp+rax-label_5C]
    je          00000001400255E7
    inc         eax
    jmp         00000001400255E9
    xor         eax,eax
    xor         r14d,r14d
    sub         edi,eax
    cmp         edi,r15d
    setb        r14b
    or          r11d,label_0FFFFFFFF
    add         r14d,edx
    cmp         r14d,label_73
    jbe         0000000140025646
    xor         r14d,r14d
    mov         esi,label_435
    mov         dword ptr [rbp-label_60],r14d
    sub         esi,r12d
    lea         rcx,[rbp+label_0000000000000344]
    mov         edi,esi
    xor         edx,edx
    shr         edi,5
    lea         rbx,[rdi*4+label_0000000000000000]
    mov         r8,rbx
    call        000000014002A110
    and         esi,label_1F
    mov         eax,r15d
    mov         cl,sil
    shl         eax,cl
    mov         dword ptr [rbp+rbx+label_0000000000000344],eax
    jmp         0000000140025534
    lea         eax,[r14-1]
    cmp         eax,r11d
    je          0000000140025605
    mov         r10d,eax
    lea         r8d,[rax-1]
    cmp         eax,edx
    jae         0000000140025661
    mov         r9d,dword ptr [rbp+r10*4-label_5C]
    jmp         0000000140025664
    xor         r9d,r9d
    cmp         r8d,edx
    jae         0000000140025670
    mov         ecx,dword ptr [rbp+r8*4-label_5C]
    jmp         0000000140025672
    xor         ecx,ecx
    shr         ecx,label_1F
    lea         eax,[r9+r9]
    or          ecx,eax
    mov         eax,r8d
    mov         dword ptr [rbp+r10*4-label_5C],ecx
    cmp         r8d,r11d
    je          0000000140025605
    mov         edx,dword ptr [rbp-label_60]
    jmp         000000014002564F
    mov         r8,rbx
    xor         edx,edx
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_22
    call        00000001400105FC
    mov         r12d,dword ptr [rbp+label_0000000000000170]
    mov         ecx,dword ptr [rsp+label_30]
    mov         eax,label_0CCCCCCCD
    test        ecx,ecx
    js          0000000140025BAB
    mul         eax,ecx
    mov         eax,edx
    lea         rdx,[label_0000000140000000]
    shr         eax,3
    mov         dword ptr [rsp+label_50],eax
    mov         ecx,eax
    mov         dword ptr [rsp+label_38],eax
    test        eax,eax
    je          0000000140025B09
    mov         r8d,label_26
    cmp         ecx,r8d
    mov         eax,ecx
    cmova       eax,r8d
    mov         dword ptr [rsp+label_48],eax
    dec         eax
    mov         edi,eax
    movzx       ecx,byte ptr [rdx+rax*4+label_000000000002FF92]
    movzx       esi,byte ptr [rdx+rax*4+label_000000000002FF93]
    xor         edx,edx
    lea         rbx,[rcx*4+label_0000000000000000]
    lea         eax,[rsi+rcx]
    mov         r8,rbx
    lea         rcx,[rbp+label_0000000000000344]
    mov         dword ptr [rbp+label_0000000000000340],eax
    call        000000014002A110
    lea         rcx,[label_0000000140000000]
    shl         rsi,2
    movzx       eax,word ptr [rcx+rdi*4+label_000000000002FF90]
    lea         rdx,[rcx+label_000000000002F680]
    lea         rcx,[rbp+label_0000000000000344]
    mov         r8,rsi
    add         rcx,rbx
    lea         rdx,[rdx+rax*4]
    call        0000000140029A70
    mov         r9d,dword ptr [rbp+label_0000000000000340]
    cmp         r9d,r15d
    ja          00000001400257C3
    mov         eax,dword ptr [rbp+label_0000000000000344]
    test        eax,eax
    jne         000000014002577A
    xor         r12d,r12d
    jmp         0000000140025892
    cmp         eax,r15d
    je          00000001400258B0
    test        r12d,r12d
    je          00000001400258B0
    xor         r8d,r8d
    mov         r10,rax
    xor         r9d,r9d
    mov         ecx,dword ptr [rbp+r9*4+label_0000000000000174]
    mov         eax,r8d
    imul        rcx,r10
    add         rcx,rax
    mov         r8,rcx
    mov         dword ptr [rbp+r9*4+label_0000000000000174],ecx
    shr         r8,label_20
    add         r9d,r15d
    cmp         r9d,r12d
    jne         0000000140025795
    jmp         000000014002586C
    cmp         r12d,r15d
    ja          0000000140025920
    mov         ebx,dword ptr [rbp+label_0000000000000174]
    mov         r8,r9
    shl         r8,2
    mov         r12d,r9d
    mov         dword ptr [rbp+label_0000000000000170],r9d
    test        r8,r8
    je          0000000140025828
    mov         eax,label_1CC
    lea         rcx,[rbp+label_0000000000000174]
    cmp         r8,rax
    ja          0000000140025807
    lea         rdx,[rbp+label_0000000000000344]
    call        0000000140029A70
    jmp         0000000140025821
    mov         r8,rax
    xor         edx,edx
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_22
    call        00000001400105FC
    mov         r12d,dword ptr [rbp+label_0000000000000170]
    test        ebx,ebx
    je          0000000140025772
    cmp         ebx,r15d
    je          00000001400258B0
    test        r12d,r12d
    je          00000001400258B0
    xor         r8d,r8d
    mov         r10,rbx
    xor         r9d,r9d
    mov         ecx,dword ptr [rbp+r9*4+label_0000000000000174]
    mov         eax,r8d
    imul        rcx,r10
    add         rcx,rax
    mov         r8,rcx
    mov         dword ptr [rbp+r9*4+label_0000000000000174],ecx
    shr         r8,label_20
    add         r9d,r15d
    cmp         r9d,r12d
    jne         0000000140025843
    test        r8d,r8d
    je          00000001400258A9
    cmp         dword ptr [rbp+label_0000000000000170],label_73
    jae         000000014002589B
    mov         eax,dword ptr [rbp+label_0000000000000170]
    mov         dword ptr [rbp+rax*4+label_0000000000000174],r8d
    mov         r12d,dword ptr [rbp+label_0000000000000170]
    add         r12d,r15d
    mov         dword ptr [rbp+label_0000000000000170],r12d
    jmp         00000001400258B0
    xor         r12d,r12d
    xor         al,al
    mov         dword ptr [rbp+label_0000000000000170],r12d
    jmp         00000001400258B3
    mov         r12d,dword ptr [rbp+label_0000000000000170]
    mov         al,r15b
    test        al,al
    jne         0000000140025AE6
    xor         r12d,r12d
    mov         dword ptr [rbp+label_0000000000000170],r12d
    mov         rsi,qword ptr [rbp-label_78]
    mov         rbx,rsi
    test        r14d,r14d
    je          0000000140026017
    xor         r8d,r8d
    xor         r9d,r9d
    mov         eax,dword ptr [rbp+r9*4-label_5C]
    lea         rcx,[rax+rax*4]
    mov         eax,r8d
    lea         r8,[rax+rcx*2]
    mov         dword ptr [rbp+r9*4-label_5C],r8d
    add         r9d,r15d
    shr         r8,label_20
    cmp         r9d,r14d
    jne         00000001400258DB
    test        r8d,r8d
    je          0000000140026017
    cmp         dword ptr [rbp-label_60],label_73
    jae         0000000140025FF4
    mov         eax,dword ptr [rbp-label_60]
    mov         dword ptr [rbp+rax*4-label_5C],r8d
    add         dword ptr [rbp-label_60],r15d
    jmp         0000000140026017
    cmp         r9d,r12d
    lea         rdx,[rbp+label_0000000000000174]
    mov         ebx,r12d
    lea         rcx,[rbp+label_0000000000000344]
    cmovae      rcx,rdx
    lea         r8,[rbp+label_0000000000000344]
    cmovb       ebx,r9d
    mov         qword ptr [rsp+label_58],rcx
    setb        al
    mov         dword ptr [rsp+label_34],ebx
    lea         rdx,[rbp+label_0000000000000174]
    cmovae      rdx,r8
    test        al,al
    mov         qword ptr [rsp+label_40],rdx
    cmovne      r9d,r12d
    xor         r12d,r12d
    xor         r10d,r10d
    mov         dword ptr [rbp+label_0000000000000510],r12d
    test        ebx,ebx
    je          0000000140025A93
    mov         esi,dword ptr [rcx+r10*4]
    test        esi,esi
    jne         00000001400259A3
    cmp         r10d,r12d
    jne         0000000140025A87
    and         dword ptr [rbp+r10*4+label_0000000000000514],esi
    lea         r12d,[r10+1]
    mov         dword ptr [rbp+label_0000000000000510],r12d
    jmp         0000000140025A87
    xor         r11d,r11d
    mov         r8d,r10d
    test        r9d,r9d
    je          0000000140025A73
    mov         ebx,r10d
    neg         ebx
    cmp         r8d,label_73
    je          0000000140025A1D
    mov         edi,r8d
    mov         ecx,ebx
    cmp         r8d,r12d
    jne         00000001400259D9
    and         dword ptr [rbp+rdi*4+label_0000000000000514],0
    lea         eax,[r8+1]
    mov         dword ptr [rbp+label_0000000000000510],eax
    mov         eax,r8d
    add         r8d,r15d
    add         eax,ecx
    mov         edx,dword ptr [rdx+rax*4]
    mov         eax,r11d
    imul        rdx,rsi
    add         rdx,rax
    mov         eax,dword ptr [rbp+rdi*4+label_0000000000000514]
    add         rdx,rax
    lea         eax,[r8+rbx]
    mov         r11,rdx
    mov         dword ptr [rbp+rdi*4+label_0000000000000514],edx
    mov         r12d,dword ptr [rbp+label_0000000000000510]
    shr         r11,label_20
    cmp         eax,r9d
    je          0000000140025A1D
    mov         rdx,qword ptr [rsp+label_40]
    jmp         00000001400259B7
    test        r11d,r11d
    je          0000000140025A6F
    cmp         r8d,label_73
    je          00000001400258BB
    lea         eax,[r8+1]
    mov         edx,r8d
    cmp         r8d,r12d
    mov         r8d,eax
    jne         0000000140025A49
    and         dword ptr [rbp+rdx*4+label_0000000000000514],0
    mov         dword ptr [rbp+label_0000000000000510],eax
    mov         eax,dword ptr [rbp+rdx*4+label_0000000000000514]
    mov         ecx,r11d
    add         rcx,rax
    mov         dword ptr [rbp+rdx*4+label_0000000000000514],ecx
    mov         r12d,dword ptr [rbp+label_0000000000000510]
    shr         rcx,label_20
    mov         r11d,ecx
    test        ecx,ecx
    jne         0000000140025A22
    mov         ebx,dword ptr [rsp+label_34]
    cmp         r8d,label_73
    je          00000001400258BB
    mov         rcx,qword ptr [rsp+label_58]
    mov         rdx,qword ptr [rsp+label_40]
    add         r10d,r15d
    cmp         r10d,ebx
    jne         000000014002597A
    mov         r8d,r12d
    shl         r8,2
    mov         dword ptr [rbp+label_0000000000000170],r12d
    test        r8,r8
    je          0000000140025AE6
    mov         eax,label_1CC
    lea         rcx,[rbp+label_0000000000000174]
    cmp         r8,rax
    ja          0000000140025AC5
    lea         rdx,[rbp+label_0000000000000514]
    call        0000000140029A70
    jmp         0000000140025ADF
    mov         r8,rax
    xor         edx,edx
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_22
    call        00000001400105FC
    mov         r12d,dword ptr [rbp+label_0000000000000170]
    mov         ecx,dword ptr [rsp+label_38]
    lea         rdx,[label_0000000140000000]
    sub         ecx,dword ptr [rsp+label_48]
    mov         r8d,label_26
    mov         dword ptr [rsp+label_38],ecx
    jne         00000001400256E9
    mov         eax,dword ptr [rsp+label_50]
    mov         ecx,dword ptr [rsp+label_30]
    lea         eax,[rax+rax*4]
    add         eax,eax
    sub         ecx,eax
    je          00000001400258C5
    lea         eax,[rcx-1]
    mov         eax,dword ptr [rdx+rax*4+label_0000000000030028]
    test        eax,eax
    je          00000001400258BB
    cmp         eax,r15d
    je          00000001400258C5
    test        r12d,r12d
    je          00000001400258C5
    xor         r8d,r8d
    mov         r10d,eax
    xor         r9d,r9d
    mov         ecx,dword ptr [rbp+r9*4+label_0000000000000174]
    mov         eax,r8d
    imul        rcx,r10
    add         rcx,rax
    mov         r8,rcx
    mov         dword ptr [rbp+r9*4+label_0000000000000174],ecx
    shr         r8,label_20
    add         r9d,r15d
    cmp         r9d,r12d
    jne         0000000140025B47
    test        r8d,r8d
    je          0000000140025B9F
    cmp         dword ptr [rbp+label_0000000000000170],label_73
    jae         00000001400258BB
    mov         eax,dword ptr [rbp+label_0000000000000170]
    mov         dword ptr [rbp+rax*4+label_0000000000000174],r8d
    mov         r12d,dword ptr [rbp+label_0000000000000170]
    add         r12d,r15d
    jmp         00000001400258BE
    mov         r12d,dword ptr [rbp+label_0000000000000170]
    jmp         00000001400258C5
    neg         ecx
    lea         r8,[label_0000000140000000]
    mul         eax,ecx
    mov         dword ptr [rsp+label_48],ecx
    mov         eax,edx
    shr         eax,3
    mov         dword ptr [rsp+label_40],eax
    mov         edx,eax
    mov         dword ptr [rsp+label_34],eax
    test        eax,eax
    je          0000000140025F66
    mov         ecx,label_26
    cmp         edx,ecx
    mov         eax,edx
    cmova       eax,ecx
    xor         edx,edx
    mov         dword ptr [rsp+label_50],eax
    dec         eax
    mov         edi,eax
    movzx       ecx,byte ptr [r8+rax*4+label_000000000002FF92]
    movzx       esi,byte ptr [r8+rax*4+label_000000000002FF93]
    lea         rbx,[rcx*4+label_0000000000000000]
    lea         eax,[rsi+rcx]
    mov         r8,rbx
    lea         rcx,[rbp+label_0000000000000344]
    mov         dword ptr [rbp+label_0000000000000340],eax
    call        000000014002A110
    lea         rcx,[label_0000000140000000]
    shl         rsi,2
    movzx       eax,word ptr [rcx+rdi*4+label_000000000002FF90]
    lea         rdx,[rcx+label_000000000002F680]
    lea         rcx,[rbp+label_0000000000000344]
    mov         r8,rsi
    add         rcx,rbx
    lea         rdx,[rdx+rax*4]
    call        0000000140029A70
    mov         r9d,dword ptr [rbp+label_0000000000000340]
    cmp         r9d,r15d
    ja          0000000140025CAA
    mov         eax,dword ptr [rbp+label_0000000000000344]
    test        eax,eax
    jne         0000000140025C67
    xor         r14d,r14d
    jmp         0000000140025D5B
    cmp         eax,r15d
    je          0000000140025D70
    test        r14d,r14d
    je          0000000140025D70
    xor         r8d,r8d
    mov         r10,rax
    xor         r9d,r9d
    mov         ecx,dword ptr [rbp+r9*4-label_5C]
    mov         eax,r8d
    imul        rcx,r10
    add         rcx,rax
    mov         r8,rcx
    mov         dword ptr [rbp+r9*4-label_5C],ecx
    shr         r8,label_20
    add         r9d,r15d
    cmp         r9d,r14d
    jne         0000000140025C82
    jmp         0000000140025D41
    cmp         r14d,r15d
    ja          0000000140025D8B
    mov         ebx,dword ptr [rbp-label_5C]
    mov         r8,r9
    shl         r8,2
    mov         r14d,r9d
    mov         dword ptr [rbp-label_60],r9d
    test        r8,r8
    je          0000000140025D03
    mov         eax,label_1CC
    lea         rcx,[rbp-label_5C]
    cmp         r8,rax
    ja          0000000140025CE5
    lea         rdx,[rbp+label_0000000000000344]
    call        0000000140029A70
    jmp         0000000140025CFF
    mov         r8,rax
    xor         edx,edx
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_22
    call        00000001400105FC
    mov         r14d,dword ptr [rbp-label_60]
    test        ebx,ebx
    je          0000000140025C5F
    cmp         ebx,r15d
    je          0000000140025D70
    test        r14d,r14d
    je          0000000140025D70
    xor         r8d,r8d
    mov         r10,rbx
    xor         r9d,r9d
    mov         ecx,dword ptr [rbp+r9*4-label_5C]
    mov         eax,r8d
    imul        rcx,r10
    add         rcx,rax
    mov         r8,rcx
    mov         dword ptr [rbp+r9*4-label_5C],ecx
    shr         r8,label_20
    add         r9d,r15d
    cmp         r9d,r14d
    jne         0000000140025D1E
    test        r8d,r8d
    je          0000000140025D6C
    cmp         dword ptr [rbp-label_60],label_73
    jae         0000000140025D61
    mov         eax,dword ptr [rbp-label_60]
    mov         dword ptr [rbp+rax*4-label_5C],r8d
    mov         r14d,dword ptr [rbp-label_60]
    add         r14d,r15d
    mov         dword ptr [rbp-label_60],r14d
    jmp         0000000140025D70
    xor         r14d,r14d
    xor         al,al
    mov         dword ptr [rbp-label_60],r14d
    jmp         0000000140025D73
    mov         r14d,dword ptr [rbp-label_60]
    mov         al,r15b
    test        al,al
    jne         0000000140025F40
    mov         rsi,qword ptr [rbp-label_78]
    and         dword ptr [rbp-label_60],0
    mov         rbx,rsi
    jmp         0000000140026017
    cmp         r9d,r14d
    lea         rdx,[rbp-label_5C]
    mov         r11d,r14d
    lea         rcx,[rbp+label_0000000000000344]
    cmovae      rcx,rdx
    lea         r8,[rbp+label_0000000000000344]
    cmovb       r11d,r9d
    mov         qword ptr [rbp-label_70],rcx
    setb        al
    mov         dword ptr [rsp+label_38],r11d
    lea         rdx,[rbp-label_5C]
    cmovae      rdx,r8
    test        al,al
    mov         qword ptr [rsp+label_58],rdx
    cmovne      r9d,r14d
    xor         r14d,r14d
    xor         r10d,r10d
    mov         dword ptr [rbp+label_0000000000000510],r14d
    test        r11d,r11d
    je          0000000140025EF6
    mov         esi,dword ptr [rcx+r10*4]
    test        esi,esi
    jne         0000000140025E09
    cmp         r10d,r14d
    jne         0000000140025EEA
    and         dword ptr [rbp+r10*4+label_0000000000000514],esi
    lea         r14d,[r10+1]
    mov         dword ptr [rbp+label_0000000000000510],r14d
    jmp         0000000140025EEA
    xor         ebx,ebx
    mov         r8d,r10d
    test        r9d,r9d
    je          0000000140025ED7
    mov         r11d,r10d
    neg         r11d
    cmp         r8d,label_73
    je          0000000140025E83
    mov         edi,r8d
    mov         ecx,r11d
    cmp         r8d,r14d
    jne         0000000140025E40
    and         dword ptr [rbp+rdi*4+label_0000000000000514],0
    lea         eax,[r8+1]
    mov         dword ptr [rbp+label_0000000000000510],eax
    mov         eax,r8d
    add         r8d,r15d
    add         eax,ecx
    mov         edx,dword ptr [rdx+rax*4]
    mov         eax,dword ptr [rbp+rdi*4+label_0000000000000514]
    imul        rdx,rsi
    add         rdx,rax
    mov         eax,ebx
    add         rdx,rax
    lea         eax,[r11+r8]
    mov         rbx,rdx
    mov         dword ptr [rbp+rdi*4+label_0000000000000514],edx
    mov         r14d,dword ptr [rbp+label_0000000000000510]
    shr         rbx,label_20
    cmp         eax,r9d
    je          0000000140025E83
    mov         rdx,qword ptr [rsp+label_58]
    jmp         0000000140025E1D
    test        ebx,ebx
    je          0000000140025ED2
    cmp         r8d,label_73
    je          0000000140025D7B
    lea         eax,[r8+1]
    mov         edx,r8d
    cmp         r8d,r14d
    mov         r8d,eax
    jne         0000000140025EAE
    and         dword ptr [rbp+rdx*4+label_0000000000000514],0
    mov         dword ptr [rbp+label_0000000000000510],eax
    mov         ecx,dword ptr [rbp+rdx*4+label_0000000000000514]
    mov         eax,ebx
    add         rcx,rax
    mov         dword ptr [rbp+rdx*4+label_0000000000000514],ecx
    mov         r14d,dword ptr [rbp+label_0000000000000510]
    shr         rcx,label_20
    mov         ebx,ecx
    test        ecx,ecx
    jne         0000000140025E87
    mov         r11d,dword ptr [rsp+label_38]
    cmp         r8d,label_73
    je          0000000140025D7B
    mov         rcx,qword ptr [rbp-label_70]
    mov         rdx,qword ptr [rsp+label_58]
    add         r10d,r15d
    cmp         r10d,r11d
    jne         0000000140025DE0
    mov         r8d,r14d
    shl         r8,2
    mov         dword ptr [rbp-label_60],r14d
    test        r8,r8
    je          0000000140025F40
    mov         eax,label_1CC
    lea         rcx,[rbp-label_5C]
    cmp         r8,rax
    ja          0000000140025F22
    lea         rdx,[rbp+label_0000000000000514]
    call        0000000140029A70
    jmp         0000000140025F3C
    mov         r8,rax
    xor         edx,edx
    call        000000014002A110
    call        0000000140015374
    mov         dword ptr [rax],label_22
    call        00000001400105FC
    mov         r14d,dword ptr [rbp-label_60]
    mov         edx,dword ptr [rsp+label_34]
    lea         r8,[label_0000000140000000]
    sub         edx,dword ptr [rsp+label_50]
    mov         ecx,label_26
    mov         dword ptr [rsp+label_34],edx
    jne         0000000140025BD6
    mov         ecx,dword ptr [rsp+label_48]
    mov         eax,dword ptr [rsp+label_40]
    lea         eax,[rax+rax*4]
    add         eax,eax
    sub         ecx,eax
    je          00000001400258C5
    lea         eax,[rcx-1]
    mov         eax,dword ptr [r8+rax*4+label_0000000000030028]
    test        eax,eax
    je          0000000140025D7B
    cmp         eax,r15d
    je          00000001400258C5
    test        r14d,r14d
    je          00000001400258C5
    xor         r8d,r8d
    mov         r10d,eax
    xor         r9d,r9d
    mov         ecx,dword ptr [rbp+r9*4-label_5C]
    mov         eax,r8d
    imul        rcx,r10
    add         rcx,rax
    mov         r8,rcx
    mov         dword ptr [rbp+r9*4-label_5C],ecx
    shr         r8,label_20
    add         r9d,r15d
    cmp         r9d,r14d
    jne         0000000140025FA1
    test        r8d,r8d
    je          0000000140025FEB
    cmp         dword ptr [rbp-label_60],label_73
    jae         0000000140025D7B
    mov         eax,dword ptr [rbp-label_60]
    mov         dword ptr [rbp+rax*4-label_5C],r8d
    mov         r14d,dword ptr [rbp-label_60]
    add         r14d,r15d
    mov         dword ptr [rbp-label_60],r14d
    jmp         00000001400258C5
    mov         r14d,dword ptr [rbp-label_60]
    jmp         00000001400258C5
    and         dword ptr [rbp+label_0000000000000340],0
    lea         r8,[rbp+label_0000000000000344]
    and         dword ptr [rbp-label_60],0
    lea         rcx,[rbp-label_5C]
    xor         r9d,r9d
    mov         edx,label_1CC
    call        00000001400158CC
    lea         rdx,[rbp+label_0000000000000170]
    lea         rcx,[rbp-label_60]
    call        0000000140015430
    mov         edi,dword ptr [rsp+label_30]
    cmp         eax,label_0A
    jne         00000001400260C4
    add         edi,r15d
    mov         byte ptr [rsi],label_31
    lea         rbx,[rsi+1]
    test        r12d,r12d
    je          00000001400260D5
    xor         r8d,r8d
    xor         r9d,r9d
    mov         eax,dword ptr [rbp+r9*4+label_0000000000000174]
    lea         rcx,[rax+rax*4]
    mov         eax,r8d
    lea         r8,[rax+rcx*2]
    mov         dword ptr [rbp+r9*4+label_0000000000000174],r8d
    add         r9d,r15d
    shr         r8,label_20
    cmp         r9d,r12d
    jne         000000014002604D
    test        r8d,r8d
    je          00000001400260D5
    cmp         dword ptr [rbp+label_0000000000000170],label_73
    jae         0000000140026099
    mov         eax,dword ptr [rbp+label_0000000000000170]
    mov         dword ptr [rbp+rax*4+label_0000000000000174],r8d
    add         dword ptr [rbp+label_0000000000000170],r15d
    jmp         00000001400260D5
    and         dword ptr [rbp+label_0000000000000340],0
    lea         r8,[rbp+label_0000000000000344]
    and         dword ptr [rbp+label_0000000000000170],0
    lea         rcx,[rbp+label_0000000000000174]
    xor         r9d,r9d
    mov         edx,label_1CC
    call        00000001400158CC
    jmp         00000001400260D5
    test        eax,eax
    jne         00000001400260CD
    sub         edi,r15d
    jmp         00000001400260D5
    add         al,label_30
    lea         rbx,[rsi+1]
    mov         byte ptr [rsi],al
    mov         rax,qword ptr [rbp-label_68]
    mov         dword ptr [rax+4],edi
    mov         eax,dword ptr [rsp+label_60]
    test        edi,edi
    js          00000001400260F4
    cmp         eax,label_7FFFFFFF
    ja          00000001400260F4
    cmp         dword ptr [rsp+label_64],0
    jne         00000001400260F4
    add         eax,edi
    mov         edi,eax
    mov         rax,qword ptr [rbp+label_0000000000000758]
    dec         rax
    cmp         rax,rdi
    cmovb       rdi,rax
    add         rdi,rsi
    xor         sil,sil
    cmp         rbx,rdi
    je          0000000140026208
    mov         r14d,9
    mov         r9d,dword ptr [rbp-label_60]
    test        r9d,r9d
    je          000000014002620C
    xor         r8d,r8d
    xor         r10d,r10d
    mov         eax,dword ptr [rbp+r10*4-label_5C]
    imul        rcx,rax,label_3B9ACA00
    mov         eax,r8d
    add         rcx,rax
    mov         r8,rcx
    mov         dword ptr [rbp+r10*4-label_5C],ecx
    shr         r8,label_20
    add         r10d,r15d
    cmp         r10d,r9d
    jne         000000014002612F
    test        r8d,r8d
    je          0000000140026191
    cmp         dword ptr [rbp-label_60],label_73
    jae         000000014002616E
    mov         eax,dword ptr [rbp-label_60]
    mov         dword ptr [rbp+rax*4-label_5C],r8d
    add         dword ptr [rbp-label_60],r15d
    jmp         0000000140026191
    and         dword ptr [rbp+label_0000000000000340],0
    lea         r8,[rbp+label_0000000000000344]
    and         dword ptr [rbp-label_60],0
    lea         rcx,[rbp-label_5C]
    xor         r9d,r9d
    mov         edx,label_1CC
    call        00000001400158CC
    lea         rdx,[rbp+label_0000000000000170]
    lea         rcx,[rbp-label_60]
    call        0000000140015430
    mov         r10d,edi
    mov         r8,rax
    sub         r10d,ebx
    mov         r9d,8
    mov         eax,label_0CCCCCCCD
    mul         eax,r8d
    shr         edx,3
    mov         cl,dl
    shl         cl,2
    lea         eax,[rcx+rdx]
    add         al,al
    sub         r8b,al
    lea         ecx,[r8+label_30]
    mov         r8d,edx
    cmp         r10d,r9d
    ja          00000001400261DE
    cmp         cl,label_30
    je          00000001400261E4
    mov         sil,r15b
    jmp         00000001400261E4
    mov         eax,r9d
    mov         byte ptr [rax+rbx],cl
    or          eax,label_0FFFFFFFF
    add         r9d,eax
    cmp         r9d,eax
    jne         00000001400261B0
    mov         rax,rdi
    sub         rax,rbx
    cmp         rax,r14
    cmovg       rax,r14
    add         rbx,rax
    cmp         rbx,rdi
    jne         000000014002611C
    mov         r9d,dword ptr [rbp-label_60]
    mov         byte ptr [rbx],0
    test        r9d,r9d
    jne         0000000140026219
    test        sil,sil
    je          000000014002621C
    xor         r15d,r15d
    mov         r8d,dword ptr [rsp+label_6C]
    lea         rcx,[rsp+label_64]
    mov         edx,dword ptr [rsp+label_68]
    call        0000000140027D80
    cmp         byte ptr [rsp+label_78],0
    je          0000000140026240
    lea         rcx,[rsp+label_70]
    call        0000000140027E04
    mov         eax,r15d
    mov         rcx,qword ptr [rbp+label_00000000000006E0]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_7F0
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_0000000140026263_end:
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    xor         eax,eax
    mov         r10,rcx
    test        rcx,rcx
    jne         000000014002628F
    mov         qword ptr [r8],rax
    mov         eax,1
    ret
func_000000014002628E_end:
    test        edx,edx
    jne         0000000140026297
    mov         byte ptr [rcx],al
    jmp         0000000140026286
    test        edx,label_0FFFFFF80
    jne         00000001400262A3
    mov         byte ptr [rcx],dl
    jmp         0000000140026289
    test        edx,label_0FFFFF800
    jne         00000001400262B5
    mov         ecx,1
    mov         r9b,label_0C0
    jmp         00000001400262EC
    test        edx,label_0FFFF0000
    jne         00000001400262D4
    lea         eax,[rdx+label_FFFFFFFFFFFF2800]
    cmp         eax,label_7FF
    jbe         0000000140026313
    mov         ecx,2
    mov         r9b,label_0E0
    jmp         00000001400262EC
    test        edx,label_0FFE00000
    jne         0000000140026313
    cmp         edx,label_10FFFF
    ja          0000000140026313
    mov         ecx,3
    mov         r9b,label_0F0
    mov         r11,rcx
    mov         al,dl
    shr         edx,6
    and         al,label_3F
    or          al,label_80
    mov         byte ptr [r11+r10],al
    sub         r11,1
    jne         00000001400262EF
    or          dl,r9b
    mov         byte ptr [r10],dl
    inc         rcx
    mov         rdx,r8
    jmp         000000014002851C
    mov         rdx,r9
    mov         rcx,r8
    jmp         0000000140028524
    int         3
    int         3
    push        rbx
    sub         rsp,label_40
    mov         rax,qword ptr [rsp+label_70]
    mov         rbx,rcx
    lea         rcx,[rsp+label_30]
    mov         qword ptr [rsp+label_20],rax
    call        0000000140028538
    cmp         rax,4
    ja          000000014002635D
    mov         edx,dword ptr [rsp+label_30]
    mov         ecx,label_0FFFD
    cmp         edx,label_0FFFF
    cmova       edx,ecx
    test        rbx,rbx
    je          000000014002635D
    mov         word ptr [rbx],dx
    add         rsp,label_40
    pop         rbx
    ret
func_0000000140026362_end:
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rbp
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_30
    mov         rdi,qword ptr [rdx]
    xor         eax,eax
    mov         r12,r9
    mov         rbp,r8
    mov         r15,rdx
    mov         r14,rcx
    test        rcx,rcx
    je          000000014002647C
    mov         rbx,rcx
    test        r8,r8
    je          0000000140026451
    mov         r13,qword ptr [rsp+label_0000000000000080]
    cmp         byte ptr [rdi],al
    jne         00000001400263B5
    mov         r8d,1
    jmp         00000001400263D1
    cmp         byte ptr [rdi+1],al
    jne         00000001400263C2
    mov         r8d,2
    jmp         00000001400263D1
    mov         al,byte ptr [rdi+2]
    neg         al
    sbb         r8,r8
    neg         r8
    add         r8,3
    mov         r9,r12
    mov         qword ptr [rsp+label_20],r13
    mov         rdx,rdi
    lea         rcx,[rsp+label_60]
    call        0000000140028538
    mov         rdx,rax
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          000000014002646A
    xor         eax,eax
    test        rdx,rdx
    je          0000000140026462
    mov         ecx,dword ptr [rsp+label_60]
    cmp         ecx,label_0FFFF
    jbe         000000014002643D
    cmp         rbp,1
    jbe         0000000140026451
    add         ecx,label_0FFFF0000
    mov         r8d,label_0D800
    mov         eax,ecx
    mov         dword ptr [rsp+label_60],ecx
    shr         eax,label_0A
    dec         rbp
    or          ax,r8w
    mov         word ptr [rbx],ax
    mov         eax,label_3FF
    and         cx,ax
    add         rbx,2
    mov         eax,label_0DC00
    or          cx,ax
    xor         eax,eax
    mov         word ptr [rbx],cx
    add         rdi,rdx
    add         rbx,2
    sub         rbp,1
    jne         00000001400263A9
    sub         rbx,r14
    mov         qword ptr [r15],rdi
    sar         rbx,1
    mov         rax,rbx
    jmp         00000001400264EE
    mov         rdi,rax
    mov         word ptr [rbx],ax
    jmp         0000000140026451
    mov         qword ptr [r15],rdi
    mov         byte ptr [r13+label_30],1
    mov         dword ptr [r13+label_2C],label_2A
    jmp         00000001400264EA
    mov         rbp,qword ptr [rsp+label_0000000000000080]
    mov         rbx,rax
    cmp         byte ptr [rdi],al
    jne         0000000140026493
    mov         r8d,1
    jmp         00000001400264AF
    cmp         byte ptr [rdi+1],al
    jne         00000001400264A0
    mov         r8d,2
    jmp         00000001400264AF
    mov         al,byte ptr [rdi+2]
    neg         al
    sbb         r8,r8
    neg         r8
    add         r8,3
    mov         r9,r12
    mov         qword ptr [rsp+label_20],rbp
    mov         rdx,rdi
    xor         ecx,ecx
    call        0000000140028538
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          00000001400264DF
    test        rax,rax
    je          000000014002645A
    cmp         rax,4
    jne         00000001400264D5
    inc         rbx
    add         rdi,rax
    inc         rbx
    xor         eax,eax
    jmp         0000000140026487
    mov         byte ptr [rbp+label_30],1
    mov         dword ptr [rbp+label_2C],label_2A
    or          rax,label_0FFFFFFFFFFFFFFFF
    mov         rbx,qword ptr [rsp+label_68]
    mov         rbp,qword ptr [rsp+label_70]
    add         rsp,label_30
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    ret
func_0000000140026505_end:
    int         3
    int         3
    sub         rsp,label_28
    cmp         ecx,label_0FFFFFFFE
    jne         000000014002651E
    call        0000000140015374
    mov         dword ptr [rax],9
    jmp         0000000140026560
    test        ecx,ecx
    js          0000000140026550
    cmp         ecx,dword ptr [label_000000014003E700]
    jae         0000000140026550
    movsxd      rcx,ecx
    lea         rdx,[label_000000014003E300]
    mov         rax,rcx
    and         ecx,label_3F
    shr         rax,6
    lea         rcx,[rcx+rcx*8]
    mov         rax,qword ptr [rdx+rax*8]
    movzx       eax,byte ptr [rax+rcx*8+label_38]
    and         eax,label_40
    jmp         0000000140026562
    call        0000000140015374
    mov         dword ptr [rax],9
    call        00000001400105FC
    xor         eax,eax
    add         rsp,label_28
    ret
func_0000000140026566_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_30
    movsxd      rdi,r8d
    mov         r8d,ecx
    mov         rsi,rdx
    test        ecx,label_0FFFFF3FF
    jne         0000000140026595
    cmp         ecx,label_0C00
    jne         00000001400265E3
    test        rsi,rsi
    jne         000000014002659E
    test        edi,edi
    jg          00000001400265E3
    test        edi,edi
    js          00000001400265E3
    xor         r9d,r9d
    lea         rbp,[label_00000001400323B0]
    mov         r10d,label_0E3
    lea         eax,[r10+r9]
    cdq
    sub         eax,edx
    mov         edx,r8d
    sar         eax,1
    movsxd      rcx,eax
    shl         rcx,4
    sub         edx,dword ptr [rcx+rbp]
    je          00000001400265FA
    test        edx,edx
    lea         ecx,[rax-1]
    cmovns      ecx,r10d
    inc         eax
    test        edx,edx
    mov         r10d,ecx
    cmovns      r9d,eax
    cmp         r9d,ecx
    jle         00000001400265B2
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_30
    pop         rdi
    ret
func_00000001400265F9_end:
    test        eax,eax
    js          00000001400265E3
    cdqe
    mov         edx,label_55
    add         rax,rax
    mov         rbp,qword ptr [rbp+rax*8+8]
    mov         rcx,rbp
    call        0000000140015DAC
    mov         rbx,rax
    test        edi,edi
    jle         0000000140026632
    cmp         ebx,edi
    jge         00000001400265E3
    mov         rdx,rdi
    mov         r8,rbp
    mov         rcx,rsi
    call        000000014001D0A0
    test        eax,eax
    jne         0000000140026637
    lea         eax,[rbx+1]
    jmp         00000001400265E5
    and         qword ptr [rsp+label_20],0
    xor         r9d,r9d
    xor         r8d,r8d
    xor         edx,edx
    xor         ecx,ecx
    call        000000014001064C
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_20
    mov         rbp,rcx
    test        rcx,rcx
    je          00000001400266B7
    xor         ebx,ebx
    lea         r15,[label_0000000140000000]
    mov         edi,label_0E3
    lea         eax,[rdi+rbx]
    mov         r8d,label_55
    cdq
    mov         rcx,rbp
    sub         eax,edx
    sar         eax,1
    movsxd      rsi,eax
    mov         r14,rsi
    add         r14,r14
    mov         rdx,qword ptr [r15+r14*8+label_0000000000033E00]
    call        0000000140027B24
    test        eax,eax
    je          00000001400266D2
    jns         00000001400266B0
    lea         edi,[rsi-1]
    jmp         00000001400266B3
    lea         ebx,[rsi+1]
    cmp         ebx,edi
    jle         000000014002667E
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         rdi
    ret
func_00000001400266D1_end:
    movsxd      rax,dword ptr [r15+r14*8+label_0000000000033E08]
    test        eax,eax
    js          00000001400266B7
    cmp         rax,label_0E4
    jae         00000001400266B7
    add         rax,rax
    mov         eax,dword ptr [r15+rax*8+label_00000000000323B0]
    jmp         00000001400266B9
    int         3
    mov         qword ptr [rsp+label_18],rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_40
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_38],rax
    mov         rax,qword ptr [rsp+label_00000000000000A0]
    mov         r14,r9
    mov         rsi,qword ptr [rdx]
    mov         r13,r8
    mov         qword ptr [rsp+label_20],rax
    mov         r15,rdx
    mov         qword ptr [rsp+label_28],r9
    mov         rbp,rcx
    test        rcx,rcx
    je          00000001400267CF
    mov         rbx,rcx
    mov         rdi,rsi
    movzx       edx,word ptr [rsi]
    lea         r12,[rsp+label_30]
    cmp         r13,4
    mov         r9,rax
    mov         r8,r14
    cmovae      r12,rbx
    mov         rcx,r12
    call        0000000140028714
    mov         r14,rax
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          00000001400267C6
    cmp         r12,rbx
    je          0000000140026786
    cmp         r13,rax
    jb          000000014002679E
    mov         r8,rax
    mov         rdx,r12
    mov         rcx,rbx
    call        0000000140029A70
    test        r14,r14
    je          00000001400267A9
    lea         rax,[r14+rbx]
    cmp         byte ptr [rax-1],0
    mov         rbx,rax
    jne         00000001400267AC
    xor         edi,edi
    lea         rbx,[rax-1]
    sub         rbx,rbp
    mov         qword ptr [r15],rdi
    mov         rax,rbx
    jmp         0000000140026823
    add         rbx,r14
    mov         rax,qword ptr [rsp+label_20]
    add         rsi,2
    test        r14,r14
    cmovne      rdi,rsi
    sub         r13,r14
    mov         r14,qword ptr [rsp+label_28]
    jmp         0000000140026747
    mov         qword ptr [r15],rdi
    or          rax,label_0FFFFFFFFFFFFFFFF
    jmp         0000000140026823
    movzx       edx,word ptr [rsi]
    lea         rcx,[rsp+label_30]
    mov         r9,rax
    mov         r8,r14
    xor         ebx,ebx
    call        0000000140028714
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          0000000140026823
    mov         rdi,qword ptr [rsp+label_20]
    test        rax,rax
    je          00000001400267FB
    cmp         byte ptr [rsp+rax+label_2F],0
    je          000000014002681D
    add         rsi,2
    lea         rcx,[rsp+label_30]
    mov         r9,rdi
    mov         r8,r14
    add         rbx,rax
    movzx       edx,word ptr [rsi]
    call        0000000140028714
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    je          0000000140026823
    jmp         00000001400267EF
    dec         rax
    add         rax,rbx
    mov         rcx,qword ptr [rsp+label_38]
    xor         rcx,rsp
    call        00000001400099A0
    mov         rbx,qword ptr [rsp+label_0000000000000090]
    add         rsp,label_40
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    ret
func_0000000140026847_end:
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    xor         r10d,r10d
    mov         rbx,r8
    mov         r11,rdx
    test        r9,r9
    jne         0000000140026896
    test        rcx,rcx
    jne         000000014002689B
    test        rdx,rdx
    je          0000000140026883
    call        0000000140015374
    mov         ebx,label_16
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         r10d,ebx
    mov         rbx,qword ptr [rsp+label_30]
    mov         eax,r10d
    mov         rsi,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140026895_end:
    test        rcx,rcx
    je          000000014002686F
    test        r11,r11
    je          000000014002686F
    test        r9,r9
    jne         00000001400268AA
    mov         byte ptr [rcx],r10b
    jmp         0000000140026883
    test        rbx,rbx
    jne         00000001400268B4
    mov         byte ptr [rcx],r10b
    jmp         000000014002686F
    sub         rbx,rcx
    mov         rdx,rcx
    mov         r8,r11
    mov         rdi,r9
    cmp         r9,label_0FFFFFFFFFFFFFFFF
    jne         00000001400268DA
    mov         al,byte ptr [rbx+rdx]
    mov         byte ptr [rdx],al
    inc         rdx
    test        al,al
    je          0000000140026883
    sub         r8,1
    jne         00000001400268C6
    jmp         0000000140026908
    mov         al,byte ptr [rbx+rdx]
    mov         rsi,rdi
    mov         byte ptr [rdx],al
    inc         rdx
    test        al,al
    je          0000000140026883
    sub         r8,1
    je          00000001400268F5
    sub         rdi,1
    jne         00000001400268DA
    test        r8,r8
    lea         rax,[rsi-1]
    cmove       rax,rsi
    test        rax,rax
    jne         0000000140026908
    mov         byte ptr [rdx],r10b
    test        r8,r8
    jne         0000000140026883
    cmp         r9,label_0FFFFFFFFFFFFFFFF
    jne         0000000140026925
    mov         byte ptr [rcx+r11-1],r10b
    lea         r10d,[r8+label_50]
    jmp         0000000140026883
    mov         byte ptr [rcx],r10b
    call        0000000140015374
    mov         ebx,label_22
    jmp         0000000140026879
    int         3
    mov         word ptr [rsp+8],cx
    sub         rsp,label_28
    call        00000001400287B8
    test        eax,eax
    je          0000000140026969
    lea         r8,[rsp+label_38]
    mov         edx,1
    lea         rcx,[rsp+label_30]
    call        0000000140028828
    test        eax,eax
    je          0000000140026969
    movzx       eax,word ptr [rsp+label_30]
    jmp         000000014002696E
    mov         eax,label_0FFFF
    add         rsp,label_28
    ret
func_0000000140026972_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    sub         rsp,8
    stmxcsr     dword ptr [rsp]
    mov         eax,dword ptr [rsp]
    add         rsp,8
    ret
func_000000014002699F_end:
    mov         dword ptr [rsp+8],ecx
    ldmxcsr     dword ptr [rsp+8]
    ret
func_00000001400269A9_end:
    stmxcsr     dword ptr [rsp+8]
    mov         ecx,label_0FFFFFFC0
    and         dword ptr [rsp+8],ecx
    ldmxcsr     dword ptr [rsp+8]
    ret
func_00000001400269BD_end:
    ucomisd     xmm0,mmword ptr [label_00000001400356A0]
    jae         00000001400269DC
    ucomisd     xmm0,mmword ptr [label_00000001400356A8]
    jbe         00000001400269DC
    cvtsd2si    rcx,xmm0
    cvtsi2sd    xmm0,rcx
    ret
func_00000001400269DC_end:
    int         3
    int         3
    int         3
    jmp         qword ptr [label_000000014002C048]
    int         3
    and         ecx,label_300
    mov         eax,ecx
    ret
func_00000001400269F0_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdi
    mov         r10d,label_8040
    xor         edx,edx
    stmxcsr     dword ptr [rsp+8]
    mov         r9d,dword ptr [rsp+8]
    mov         edi,label_400
    movzx       eax,r9w
    and         ax,r10w
    lea         ecx,[r10-label_40]
    cmp         ax,cx
    jne         0000000140026A29
    mov         r8d,label_0C00
    jmp         0000000140026A42
    cmp         ax,label_40
    jne         0000000140026A37
    mov         r8d,label_800
    jmp         0000000140026A42
    cmp         ax,r10w
    mov         r8d,edx
    cmove       r8d,edi
    mov         eax,r9d
    mov         r10d,label_6000
    mov         r11d,label_200
    and         eax,r10d
    je          0000000140026A7D
    cmp         eax,label_2000
    je          0000000140026A76
    cmp         eax,label_4000
    je          0000000140026A71
    cmp         eax,r10d
    mov         ecx,label_300
    cmovne      ecx,edx
    jmp         0000000140026A7F
    mov         ecx,r11d
    jmp         0000000140026A7F
    mov         ecx,label_100
    jmp         0000000140026A7F
    mov         ecx,edx
    mov         edx,r9d
    mov         eax,r9d
    shr         edx,2
    and         eax,label_800
    and         edx,edi
    or          edx,eax
    mov         eax,r9d
    and         eax,edi
    shr         edx,2
    mov         rdi,qword ptr [rsp+label_10]
    or          edx,eax
    shr         edx,2
    mov         eax,r9d
    and         eax,r11d
    and         r9d,label_180
    or          edx,eax
    shr         edx,3
    or          edx,r9d
    shr         edx,3
    or          edx,r8d
    or          edx,ecx
    mov         eax,edx
    and         eax,label_0FFFFFF00
    lea         ecx,[rdx*4+label_0000000000000000]
    or          eax,ecx
    shl         eax,label_16
    or          eax,edx
    ret
func_0000000140026AD5_end:
    int         3
    int         3
    stmxcsr     dword ptr [rsp+8]
    mov         edx,dword ptr [rsp+8]
    and         edx,label_3F
    mov         r8d,edx
    mov         eax,edx
    and         eax,label_10
    shr         r8d,2
    and         r8d,8
    mov         ecx,edx
    or          r8d,eax
    and         ecx,2
    shr         r8d,2
    mov         eax,edx
    and         eax,8
    shl         ecx,3
    or          r8d,eax
    mov         eax,edx
    and         eax,4
    shr         r8d,1
    or          ecx,eax
    and         edx,1
    add         ecx,ecx
    shl         edx,4
    or          r8d,ecx
    or          r8d,edx
    mov         eax,r8d
    shl         eax,label_18
    or          eax,r8d
    ret
func_0000000140026B2C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    mov         qword ptr [rsp+label_20],rdi
    mov         eax,ecx
    mov         edx,ecx
    shr         eax,label_16
    mov         r8d,label_300
    shr         edx,label_18
    and         eax,r8d
    and         edx,label_3F
    xor         esi,esi
    or          edx,eax
    mov         edi,label_400
    mov         eax,label_0C00
    mov         r11d,label_800
    and         ecx,eax
    cmp         ecx,edi
    je          0000000140026B8E
    cmp         ecx,r11d
    je          0000000140026B86
    cmp         ecx,eax
    je          0000000140026B7E
    movzx       r9d,si
    jmp         0000000140026B94
    mov         r9d,label_8000
    jmp         0000000140026B94
    mov         r9d,label_40
    jmp         0000000140026B94
    mov         r9d,label_8040
    mov         eax,edx
    mov         ebx,label_100
    mov         r10d,label_200
    and         eax,r8d
    je          0000000140026BCC
    cmp         eax,ebx
    je          0000000140026BC4
    cmp         eax,r10d
    je          0000000140026BBC
    cmp         eax,r8d
    jne         0000000140026BCC
    mov         r8d,label_6000
    jmp         0000000140026BD0
    mov         r8d,label_4000
    jmp         0000000140026BD0
    mov         r8d,label_2000
    jmp         0000000140026BD0
    movzx       r8d,si
    bt          edx,0
    jae         0000000140026BDD
    mov         ecx,label_1000
    jmp         0000000140026BE0
    movzx       ecx,si
    bt          edx,1
    jb          0000000140026BEA
    movzx       r11d,si
    or          cx,r11w
    bt          edx,2
    jb          0000000140026BF7
    movzx       edi,si
    or          cx,di
    bt          edx,3
    jb          0000000140026C04
    movzx       r10d,si
    or          cx,r10w
    bt          edx,4
    jae         0000000140026C15
    mov         eax,label_80
    jmp         0000000140026C18
    movzx       eax,si
    or          cx,ax
    bt          edx,5
    jb          0000000140026C24
    movzx       ebx,si
    mov         rsi,qword ptr [rsp+label_18]
    or          cx,bx
    mov         rbx,qword ptr [rsp+label_10]
    or          r8w,cx
    mov         rdi,qword ptr [rsp+label_20]
    mov         eax,label_0FFC0
    stmxcsr     dword ptr [rsp+8]
    or          r8w,r9w
    and         r8w,ax
    mov         eax,dword ptr [rsp+8]
    and         eax,label_0FFFF003F
    movzx       ecx,r8w
    or          eax,ecx
    mov         dword ptr [rsp+8],eax
    ldmxcsr     dword ptr [rsp+8]
    ret
func_0000000140026C64_end:
    int         3
    int         3
    int         3
    mov         edx,ecx
    shr         edx,label_18
    and         edx,label_3F
    mov         eax,edx
    and         eax,1
    neg         eax
    mov         eax,edx
    sbb         ecx,ecx
    and         eax,2
    and         ecx,label_20
    neg         eax
    stmxcsr     dword ptr [rsp+8]
    sbb         eax,eax
    and         eax,label_10
    or          ecx,eax
    mov         eax,edx
    and         eax,4
    neg         eax
    sbb         eax,eax
    and         eax,8
    or          ecx,eax
    mov         eax,edx
    and         eax,8
    neg         eax
    sbb         eax,eax
    and         eax,4
    or          ecx,eax
    mov         eax,0
    bt          edx,4
    setb        al
    and         edx,label_20
    or          ecx,eax
    neg         edx
    sbb         eax,eax
    and         eax,2
    or          ecx,eax
    mov         eax,dword ptr [rsp+8]
    and         eax,label_0FFFFFFC0
    and         ecx,label_3F
    or          eax,ecx
    mov         dword ptr [rsp+8],eax
    ldmxcsr     dword ptr [rsp+8]
    ret
func_0000000140026CDA_end:
    int         3
    mov         word ptr [rsp+8],cx
    sub         rsp,label_58
    mov         eax,label_0FFFF
    cmp         cx,ax
    je          0000000140026DC8
    lea         rcx,[rsp+label_30]
    call        0000000140015394
    mov         r10,qword ptr [rsp+label_38]
    mov         r11d,label_100
    cmp         dword ptr [r10+label_0C],label_0FDE9
    jne         0000000140026D3C
    movzx       ecx,word ptr [rsp+label_60]
    lea         eax,[r11-label_80]
    cmp         cx,ax
    jae         0000000140026D78
    movzx       eax,cl
    lea         r8,[label_000000014002F300]
    test        byte ptr [r8+rax*2+2],1
    je          0000000140026D37
    movzx       ecx,cl
    jmp         0000000140026D5C
    movzx       edx,cl
    jmp         0000000140026DB2
    movzx       edx,word ptr [rsp+label_60]
    cmp         dx,r11w
    jae         0000000140026D6E
    movzx       eax,dl
    lea         r8,[label_000000014002F300]
    test        byte ptr [r8+rax*2+2],1
    je          0000000140026D69
    movzx       ecx,dl
    mov         rax,qword ptr [r10+label_0000000000000110]
    movzx       edx,byte ptr [rax+rcx]
    jmp         0000000140026DB2
    movzx       edx,dl
    jmp         0000000140026DB2
    cmp         qword ptr [r10+label_0000000000000138],0
    je          0000000140026DB2
    mov         rcx,qword ptr [r10+label_0000000000000138]
    lea         rax,[rsp+label_70]
    mov         dword ptr [rsp+label_28],1
    lea         r8,[rsp+label_60]
    mov         r9d,1
    mov         qword ptr [rsp+label_20],rax
    mov         edx,r11d
    call        00000001400288E8
    movzx       edx,word ptr [rsp+label_60]
    test        eax,eax
    je          0000000140026DB2
    movzx       edx,word ptr [rsp+label_70]
    cmp         byte ptr [rsp+label_48],0
    je          0000000140026DC5
    mov         rcx,qword ptr [rsp+label_30]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    movzx       eax,dx
    add         rsp,label_58
    ret
func_0000000140026DCC_end:
    int         3
    int         3
    int         3
    push        r12
    push        r13
    push        r14
    sub         rsp,label_450
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_0000000000000410],rax
    mov         r12,r9
    mov         r14,r8
    mov         r13,rcx
    test        rcx,rcx
    jne         0000000140026E17
    test        rdx,rdx
    je          0000000140026E17
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    jmp         00000001400271C0
    test        r14,r14
    je          0000000140026E02
    test        r12,r12
    je          0000000140026E02
    cmp         rdx,2
    jb          00000001400271C0
    mov         qword ptr [rsp+label_0000000000000448],rbx
    mov         qword ptr [rsp+label_0000000000000440],rbp
    mov         qword ptr [rsp+label_0000000000000438],rsi
    mov         qword ptr [rsp+label_0000000000000430],rdi
    mov         qword ptr [rsp+label_0000000000000428],r15
    lea         r15,[rdx-1]
    imul        r15,r14
    add         r15,rcx
    xor         ecx,ecx
    mov         qword ptr [rsp+label_20],rcx
    nop         word ptr [rax+rax+label_0000000000000000]
    xor         edx,edx
    mov         rax,r15
    sub         rax,r13
    div         rax,r14
    lea         rbx,[rax+1]
    cmp         rbx,8
    ja          0000000140026F24
    cmp         r15,r13
    jbe         0000000140026F03
    lea         rsi,[r14+r13]
    mov         rbx,r13
    mov         rdi,rsi
    cmp         rsi,r15
    ja          0000000140026EC7
    nop         dword ptr [rax]
    mov         r10,label_9375B7955EDE8970
    mov         rdx,rbx
    mov         rcx,rdi
    mov         rax,r12
    call label_000000014002C2C0
    test        eax,eax
    cmovg       rbx,rdi
    add         rdi,r14
    cmp         rdi,r15
    jbe         0000000140026EA0
    mov         r8,r14
    mov         rdx,r15
    cmp         rbx,r15
    je          0000000140026EF6
    sub         rbx,r15
    nop         word ptr [rax+rax+label_0000000000000000]
    movzx       eax,byte ptr [rdx]
    movzx       ecx,byte ptr [rbx+rdx]
    mov         byte ptr [rbx+rdx],al
    mov         byte ptr [rdx],cl
    lea         rdx,[rdx+1]
    sub         r8,1
    jne         0000000140026EE0
    sub         r15,r14
    cmp         r15,r13
    ja          0000000140026E92
    mov         rcx,qword ptr [rsp+label_20]
    sub         rcx,1
    mov         qword ptr [rsp+label_20],rcx
    js          0000000140027198
    mov         r13,qword ptr [rsp+rcx*8+label_30]
    mov         r15,qword ptr [rsp+rcx*8+label_0000000000000220]
    jmp         0000000140026E70
    shr         rbx,1
    imul        rbx,r14
    lea         rsi,[rbx+r13]
    mov         r10,label_9375B7955EDE8970
    mov         rdx,rsi
    mov         rcx,r13
    mov         rax,r12
    call label_000000014002C2C0
    test        eax,eax
    jle         0000000140026F7B
    mov         r9,r14
    mov         r8,rsi
    cmp         r13,rsi
    je          0000000140026F7B
    nop         word ptr [rax+rax+label_0000000000000000]
    movzx       eax,byte ptr [r8]
    mov         rdx,r8
    sub         rdx,rbx
    movzx       ecx,byte ptr [rdx]
    mov         byte ptr [rdx],al
    mov         byte ptr [r8],cl
    inc         r8
    sub         r9,1
    jne         0000000140026F60
    mov         r10,label_9375B7955EDE8970
    mov         rdx,r15
    mov         rcx,r13
    mov         rax,r12
    call label_000000014002C2C0
    test        eax,eax
    jle         0000000140026FC8
    mov         r8,r14
    mov         rdx,r15
    cmp         r13,r15
    je          0000000140026FC8
    mov         r9,r13
    sub         r9,r15
    nop         dword ptr [rax+label_0000000000000000]
    movzx       eax,byte ptr [rdx]
    movzx       ecx,byte ptr [r9+rdx]
    mov         byte ptr [r9+rdx],al
    mov         byte ptr [rdx],cl
    lea         rdx,[rdx+1]
    sub         r8,1
    jne         0000000140026FB0
    mov         r10,label_9375B7955EDE8970
    mov         rdx,r15
    mov         rcx,rsi
    mov         rax,r12
    call label_000000014002C2C0
    test        eax,eax
    jle         0000000140027018
    mov         r8,r14
    mov         rdx,r15
    cmp         rsi,r15
    je          0000000140027018
    mov         r9,rsi
    sub         r9,r15
    nop         word ptr [rax+rax+label_0000000000000000]
    movzx       eax,byte ptr [rdx]
    movzx       ecx,byte ptr [r9+rdx]
    mov         byte ptr [r9+rdx],al
    mov         byte ptr [rdx],cl
    lea         rdx,[rdx+1]
    sub         r8,1
    jne         0000000140027000
    mov         rbx,r13
    mov         rdi,r15
    nop
    cmp         rsi,rbx
    jbe         0000000140027050
    add         rbx,r14
    cmp         rbx,rsi
    jae         0000000140027050
    mov         r10,label_9375B7955EDE8970
    mov         rdx,rsi
    mov         rcx,rbx
    mov         rax,r12
    call label_000000014002C2C0
    test        eax,eax
    jle         0000000140027025
    jmp         0000000140027075
    nop         dword ptr [rax]
    add         rbx,r14
    cmp         rbx,r15
    ja          0000000140027075
    mov         r10,label_9375B7955EDE8970
    mov         rdx,rsi
    mov         rcx,rbx
    mov         rax,r12
    call label_000000014002C2C0
    test        eax,eax
    jle         0000000140027050
    mov         rbp,rdi
    sub         rdi,r14
    cmp         rdi,rsi
    jbe         000000014002709D
    mov         r10,label_9375B7955EDE8970
    mov         rdx,rsi
    mov         rcx,rdi
    mov         rax,r12
    call label_000000014002C2C0
    test        eax,eax
    jg          0000000140027075
    cmp         rdi,rbx
    jb          00000001400270DA
    mov         r8,r14
    mov         rdx,rdi
    je          00000001400270C8
    mov         r9,rbx
    sub         r9,rdi
    movzx       eax,byte ptr [rdx]
    movzx       ecx,byte ptr [r9+rdx]
    mov         byte ptr [r9+rdx],al
    mov         byte ptr [rdx],cl
    lea         rdx,[rdx+1]
    sub         r8,1
    jne         00000001400270B0
    cmp         rsi,rdi
    mov         rax,rbx
    cmovne      rax,rsi
    mov         rsi,rax
    jmp         0000000140027020
    cmp         rsi,rbp
    jae         0000000140027107
    nop
    sub         rbp,r14
    cmp         rbp,rsi
    jbe         0000000140027107
    mov         r10,label_9375B7955EDE8970
    mov         rdx,rsi
    mov         rcx,rbp
    mov         rax,r12
    call label_000000014002C2C0
    test        eax,eax
    je          00000001400270E0
    jmp         000000014002712C
    sub         rbp,r14
    cmp         rbp,r13
    jbe         000000014002712C
    mov         r10,label_9375B7955EDE8970
    mov         rdx,rsi
    mov         rcx,rbp
    mov         rax,r12
    call label_000000014002C2C0
    test        eax,eax
    je          0000000140027107
    mov         rcx,r15
    mov         rax,rbp
    sub         rcx,rbx
    sub         rax,r13
    cmp         rax,rcx
    mov         rcx,qword ptr [rsp+label_20]
    jl          000000014002716D
    cmp         r13,rbp
    jae         000000014002715C
    mov         qword ptr [rsp+rcx*8+label_30],r13
    mov         qword ptr [rsp+rcx*8+label_0000000000000220],rbp
    inc         rcx
    mov         qword ptr [rsp+label_20],rcx
    cmp         rbx,r15
    jae         0000000140026F03
    mov         r13,rbx
    jmp         0000000140026E70
    cmp         rbx,r15
    jae         0000000140027187
    mov         qword ptr [rsp+rcx*8+label_30],rbx
    mov         qword ptr [rsp+rcx*8+label_0000000000000220],r15
    inc         rcx
    mov         qword ptr [rsp+label_20],rcx
    cmp         r13,rbp
    jae         0000000140026F03
    mov         r15,rbp
    jmp         0000000140026E70
    mov         rdi,qword ptr [rsp+label_0000000000000430]
    mov         rsi,qword ptr [rsp+label_0000000000000438]
    mov         rbp,qword ptr [rsp+label_0000000000000440]
    mov         rbx,qword ptr [rsp+label_0000000000000448]
    mov         r15,qword ptr [rsp+label_0000000000000428]
    mov         rcx,qword ptr [rsp+label_0000000000000410]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_450
    pop         r14
    pop         r13
    pop         r12
    ret
func_00000001400271DD_end:
    int         3
    int         3
    sub         rsp,label_58
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_40],rax
    xor         eax,eax
    mov         r9,rdx
    cmp         rax,label_20
    mov         r8,rcx
    jae         0000000140027278
    mov         byte ptr [rsp+rax+label_20],0
    inc         rax
    cmp         rax,label_20
    jl          00000001400271FF
    mov         al,byte ptr [rdx]
    jmp         0000000140027232
    movzx       edx,al
    shr         rdx,3
    movzx       eax,al
    and         eax,7
    movzx       ecx,byte ptr [rsp+rdx+label_20]
    bts         ecx,eax
    inc         r9
    mov         byte ptr [rsp+rdx+label_20],cl
    mov         al,byte ptr [r9]
    test        al,al
    jne         0000000140027213
    jmp         0000000140027257
    movzx       eax,r9b
    mov         edx,1
    movzx       ecx,r9b
    and         ecx,7
    shr         rax,3
    shl         edx,cl
    test        byte ptr [rsp+rax+label_20],dl
    jne         0000000140027273
    inc         r8
    mov         r9b,byte ptr [r8]
    test        r9b,r9b
    jne         0000000140027238
    xor         eax,eax
    mov         rcx,qword ptr [rsp+label_40]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_58
    ret
func_0000000140027272_end:
    mov         rax,r8
    jmp         0000000140027261
    call        000000014000A274
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    mov         r10,rdx
    lea         rsi,[label_0000000140000000]
    and         r10d,label_0F
    mov         rdi,rdx
    sub         rdi,r10
    mov         rbx,rdx
    mov         r8,rcx
    xorps       xmm3,xmm3
    lea         rax,[r10-1]
    movdqu      xmm1,xmmword ptr [rdi]
    cmp         rax,label_0E
    ja          0000000140027329
    mov         eax,dword ptr [rsi+rax*4+label_000000000002758C]
    add         rax,rsi
    jmp         rax
    psrldq      xmm1,1
    jmp         0000000140027329
    psrldq      xmm1,2
    jmp         0000000140027329
    psrldq      xmm1,3
    jmp         0000000140027329
    psrldq      xmm1,4
    jmp         0000000140027329
    psrldq      xmm1,5
    jmp         0000000140027329
    psrldq      xmm1,6
    jmp         0000000140027329
    psrldq      xmm1,7
    jmp         0000000140027329
    psrldq      xmm1,8
    jmp         0000000140027329
    psrldq      xmm1,9
    jmp         0000000140027329
    psrldq      xmm1,label_0A
    jmp         0000000140027329
    psrldq      xmm1,label_0B
    jmp         0000000140027329
    psrldq      xmm1,label_0C
    jmp         0000000140027329
    psrldq      xmm1,label_0D
    jmp         0000000140027329
    psrldq      xmm1,label_0E
    jmp         0000000140027329
    psrldq      xmm1,label_0F
    xorps       xmm0,xmm0
    mov         r9d,label_0F
    pcmpeqb     xmm0,xmm1
    pmovmskb    eax,xmm0
    test        eax,eax
    je          0000000140027475
    bsf         edx,eax
    test        r10,r10
    jne         0000000140027350
    lea         r11d,[r9-label_0E]
    jmp         0000000140027364
    xor         r11d,r11d
    mov         eax,edx
    mov         ecx,label_10
    sub         rcx,r10
    cmp         rax,rcx
    setb        r11b
    mov         eax,r9d
    sub         eax,edx
    cmp         eax,r9d
    ja          0000000140027441
    mov         ecx,dword ptr [rsi+rax*4+label_00000000000275C8]
    add         rcx,rsi
    jmp         rcx
    pslldq      xmm1,1
    psrldq      xmm1,1
    jmp         0000000140027441
    pslldq      xmm1,2
    psrldq      xmm1,2
    jmp         0000000140027441
    pslldq      xmm1,3
    psrldq      xmm1,3
    jmp         0000000140027441
    pslldq      xmm1,4
    psrldq      xmm1,4
    jmp         0000000140027441
    pslldq      xmm1,5
    psrldq      xmm1,5
    jmp         0000000140027441
    pslldq      xmm1,6
    psrldq      xmm1,6
    jmp         0000000140027441
    pslldq      xmm1,7
    psrldq      xmm1,7
    jmp         0000000140027441
    pslldq      xmm1,8
    psrldq      xmm1,8
    jmp         0000000140027441
    pslldq      xmm1,9
    psrldq      xmm1,9
    jmp         0000000140027441
    pslldq      xmm1,label_0A
    psrldq      xmm1,label_0A
    jmp         0000000140027441
    pslldq      xmm1,label_0B
    psrldq      xmm1,label_0B
    jmp         0000000140027441
    pslldq      xmm1,label_0C
    psrldq      xmm1,label_0C
    jmp         0000000140027441
    pslldq      xmm1,label_0D
    psrldq      xmm1,label_0D
    jmp         0000000140027441
    pslldq      xmm1,label_0E
    psrldq      xmm1,label_0E
    jmp         0000000140027441
    pslldq      xmm1,label_0F
    psrldq      xmm1,label_0F
    jmp         0000000140027441
    xorps       xmm1,xmm1
    test        r11d,r11d
    jne         000000014002752C
    movdqu      xmm2,xmmword ptr [rdi+label_10]
    movdqa      xmm0,xmm2
    pcmpeqb     xmm0,xmm3
    pmovmskb    eax,xmm0
    test        eax,eax
    jne         0000000140027494
    mov         rdx,rbx
    mov         rcx,r8
    mov         rbx,qword ptr [rsp+label_10]
    mov         rsi,qword ptr [rsp+label_18]
    pop         rdi
    jmp         00000001400271E0
    test        r10,r10
    jne         000000014002744A
    cmp         byte ptr [rdi+1],r10b
    je          000000014002752C
    mov         rbx,qword ptr [rsp+label_10]
    mov         rsi,qword ptr [rsp+label_18]
    pop         rdi
    jmp         00000001400271E0
    bsf         ecx,eax
    mov         eax,ecx
    sub         rax,r10
    add         rax,label_10
    cmp         rax,label_10
    ja          000000014002745F
    sub         r9d,ecx
    cmp         r9d,label_0F
    ja          0000000140027528
    mov         ecx,dword ptr [rsi+r9*4+label_0000000000027608]
    add         rcx,rsi
    jmp         rcx
    pslldq      xmm2,1
    jmp         0000000140027528
    pslldq      xmm2,2
    jmp         0000000140027528
    pslldq      xmm2,3
    jmp         0000000140027528
    pslldq      xmm2,4
    jmp         0000000140027528
    pslldq      xmm2,5
    jmp         0000000140027528
    pslldq      xmm2,6
    jmp         0000000140027528
    pslldq      xmm2,7
    jmp         0000000140027528
    pslldq      xmm2,8
    jmp         0000000140027528
    pslldq      xmm2,9
    jmp         0000000140027528
    pslldq      xmm2,label_0A
    jmp         0000000140027528
    pslldq      xmm2,label_0B
    jmp         0000000140027528
    pslldq      xmm2,label_0C
    jmp         0000000140027528
    pslldq      xmm2,label_0D
    jmp         0000000140027528
    pslldq      xmm2,label_0E
    jmp         0000000140027528
    pslldq      xmm2,label_0F
    jmp         0000000140027528
    xorps       xmm2,xmm2
    por         xmm1,xmm2
    movzx       eax,byte ptr [r8]
    test        al,al
    je          000000014002756C
    nop         dword ptr [rax]
    nop         dword ptr [rax+rax+label_0000000000000000]
    movsx       eax,al
    movd        xmm0,eax
    punpcklbw   xmm0,xmm0
    punpcklbw   xmm0,xmm0
    pshufd      xmm0,xmm0,0
    pcmpeqb     xmm0,xmm1
    pmovmskb    eax,xmm0
    test        eax,eax
    jne         000000014002757A
    movzx       eax,byte ptr [r8+1]
    inc         r8
    test        al,al
    jne         0000000140027540
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_10]
    mov         rsi,qword ptr [rsp+label_18]
    pop         rdi
    ret
func_0000000140027579_end:
    mov         rbx,qword ptr [rsp+label_10]
    mov         rax,r8
    mov         rsi,qword ptr [rsp+label_18]
    pop         rdi
    ret
func_0000000140027588_end:
    nop         dword ptr [rax]
    ret         label_272
    add         cl,cl
    jb          0000000140027595
    add         al,dl
    jb          0000000140027599
    add         bh,dl
    jb          000000014002759D
    add         dh,bl
    jb          00000001400275A1
    add         ch,ah
    jb          00000001400275A5
    add         ah,ch
    jb          00000001400275A9
    add         bl,dh
    jb          00000001400275AD
    add         dl,bh
    jb          00000001400275B1
    add         byte ptr [rcx],al
    jae         00000001400275B5
    add         byte ptr [rax],cl
    jae         00000001400275B9
    add         byte ptr [rdi],cl
    jae         00000001400275BD
    add         byte ptr [rsi],dl
    jae         00000001400275C1
    add         byte ptr [label_0000000164027838],bl
    jae         00000001400275C9
    add         byte ptr [rsi+label_73],bh
    add         al,byte ptr [rax]
    lea         esi,[rbx+2]
    add         byte ptr [rbx+rsi*2+label_0000000073AB0002],bl
    add         al,byte ptr [rax]
    mov         edx,label_0C6000273
    jae         00000001400275E1
    add         dl,dl
    jae         00000001400275E5
    add         dh,bl
    jae         00000001400275E9
    add         dl,ch
    jae         00000001400275ED
    add         dh,dh
    jae         00000001400275F1
    add         byte ptr [rdx],al
    je          00000001400275F5
    add         byte ptr [rsi],cl
    je          00000001400275F9
    add         byte ptr [rdx],bl
    je          00000001400275FD
    add         byte ptr [rsi],ah
    je          0000000140027601
    add         byte ptr [rdx],dh
    je          0000000140027605
    add         byte ptr [rsi],bh
    je          0000000140027609
    add         byte ptr [rsp+rsi*2+label_0000000074C30002],bh
    add         al,byte ptr [rax]
    retf        label_274
    add         cl,dl
    je          0000000140027619
    add         al,bl
    je          000000014002761D
    add         bh,bl
    je          0000000140027621
    add         dh,ah
    je          0000000140027625
    add         ch,ch
    je          0000000140027629
    add         ah,dh
    je          000000014002762D
    add         bl,bh
    je          0000000140027631
    add         byte ptr [rdx],al
    jne         0000000140027635
    add         byte ptr [rcx],cl
    jne         0000000140027639
    add         byte ptr [rax],dl
    jne         000000014002763D
    add         byte ptr [rdi],dl
    jne         0000000140027641
    add         byte ptr [rsi],bl
    jne         0000000140027645
    add         byte ptr [label_00000001850278BE],ah
    xor         eax,eax
    jmp         0000000140027650
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_40
    mov         rbx,rdx
    mov         rdi,rcx
    test        rcx,rcx
    jne         0000000140027679
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    xor         eax,eax
    jmp         00000001400276D9
    test        rbx,rbx
    je          0000000140027665
    cmp         rdi,rbx
    jae         0000000140027675
    mov         rdx,r8
    lea         rcx,[rsp+label_20]
    call        0000000140015394
    mov         rcx,qword ptr [rsp+label_30]
    lea         rdx,[rbx-1]
    cmp         dword ptr [rcx+8],0
    je          00000001400276C3
    dec         rdx
    cmp         rdi,rdx
    ja          00000001400276B1
    movzx       eax,byte ptr [rdx]
    test        byte ptr [rax+rcx+label_19],4
    jne         000000014002769F
    mov         rcx,rbx
    sub         rcx,rdx
    mov         rdx,rbx
    and         ecx,1
    sub         rdx,rcx
    dec         rdx
    cmp         byte ptr [rsp+label_38],0
    je          00000001400276D6
    mov         rcx,qword ptr [rsp+label_20]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    mov         rax,rdx
    mov         rbx,qword ptr [rsp+label_50]
    add         rsp,label_40
    pop         rdi
    ret
func_00000001400276E3_end:
    sub         rsp,label_28
    call        000000014002173C
    xor         ecx,ecx
    test        al,al
    sete        cl
    mov         eax,ecx
    add         rsp,label_28
    ret
func_00000001400276FA_end:
    int         3
    cmp         dword ptr [label_000000014003E290],0
    je          00000001400289BC
    xor         r9d,r9d
    jmp         0000000140027714
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    push        rdi
    sub         rsp,label_60
    mov         rsi,rdx
    mov         rbp,rcx
    mov         rdx,r9
    lea         rcx,[rax-label_28]
    mov         rdi,r8
    call        0000000140015394
    test        rdi,rdi
    jne         0000000140027749
    xor         ebx,ebx
    jmp         00000001400277E9
    test        rbp,rbp
    je          0000000140027753
    test        rsi,rsi
    jne         000000014002776A
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         ebx,label_7FFFFFFF
    jmp         00000001400277E9
    mov         ebx,label_7FFFFFFF
    cmp         rdi,rbx
    jbe         0000000140027786
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    jmp         00000001400277E9
    mov         rax,qword ptr [rsp+label_48]
    mov         rdx,qword ptr [rax+label_0000000000000130]
    test        rdx,rdx
    jne         00000001400277AE
    lea         r9,[rsp+label_48]
    mov         r8,rdi
    mov         rdx,rsi
    mov         rcx,rbp
    call        0000000140028A0C
    mov         ebx,eax
    jmp         00000001400277E9
    mov         eax,dword ptr [rax+label_14]
    lea         rcx,[rsp+label_48]
    mov         dword ptr [rsp+label_38],eax
    mov         r9,rbp
    mov         dword ptr [rsp+label_30],edi
    mov         r8d,label_1001
    mov         qword ptr [rsp+label_28],rsi
    mov         dword ptr [rsp+label_20],edi
    call        0000000140028E40
    test        eax,eax
    jne         00000001400277E6
    call        0000000140015374
    mov         dword ptr [rax],label_16
    jmp         00000001400277E9
    lea         ebx,[rax-2]
    cmp         byte ptr [rsp+label_58],0
    je          00000001400277FC
    mov         rax,qword ptr [rsp+label_40]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    lea         r11,[rsp+label_60]
    mov         eax,ebx
    mov         rbx,qword ptr [r11+label_10]
    mov         rbp,qword ptr [r11+label_18]
    mov         rsi,qword ptr [r11+label_20]
    mov         rsp,r11
    pop         rdi
    ret
func_0000000140027813_end:
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rsi
    mov         qword ptr [rax+label_20],rdi
    push        rbp
    push        r14
    push        r15
    lea         rbp,[rax-label_5F]
    sub         rsp,label_0A0
    xor         r15d,r15d
    mov         r14,rdx
    mov         rsi,rcx
    mov         qword ptr [rbp+label_17],r15
    xor         edx,edx
    mov         qword ptr [rbp+label_1F],r15
    lea         rcx,[rbp-label_39]
    mov         qword ptr [rbp+label_27],r15
    mov         qword ptr [rbp+label_2F],r15
    mov         edi,r15d
    mov         qword ptr [rbp+label_37],r15
    mov         byte ptr [rbp+label_3F],r15b
    mov         qword ptr [rbp-label_19],r15
    mov         qword ptr [rbp-label_11],r15
    mov         qword ptr [rbp-9],r15
    mov         qword ptr [rbp-1],r15
    mov         qword ptr [rbp+7],r15
    mov         byte ptr [rbp+label_0F],r15b
    call        0000000140015394
    mov         rax,qword ptr [rbp-label_31]
    mov         ebx,label_0FDE9
    cmp         dword ptr [rax+label_0C],ebx
    jne         000000014002789E
    cmp         byte ptr [rbp-label_21],r15b
    je          0000000140027899
    mov         rax,qword ptr [rbp-label_39]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,ebx
    jmp         00000001400278D4
    call        000000014001B62C
    test        eax,eax
    jne         00000001400278C0
    cmp         byte ptr [rbp-label_21],r15b
    je          00000001400278B8
    mov         rax,qword ptr [rbp-label_39]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,1
    jmp         00000001400278D4
    cmp         byte ptr [rbp-label_21],r15b
    je          00000001400278D1
    mov         rax,qword ptr [rbp-label_39]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         r9d,r15d
    lea         r8,[rbp+label_77]
    mov         rcx,rsi
    lea         rdx,[rbp+label_17]
    call        00000001400159C4
    test        eax,eax
    jne         0000000140027974
    xor         edx,edx
    lea         rcx,[rbp-label_39]
    call        0000000140015394
    mov         rax,qword ptr [rbp-label_31]
    cmp         dword ptr [rax+label_0C],ebx
    jne         0000000140027913
    cmp         byte ptr [rbp-label_21],r15b
    je          0000000140027948
    mov         rax,qword ptr [rbp-label_39]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    jmp         0000000140027948
    call        000000014001B62C
    test        eax,eax
    jne         0000000140027934
    cmp         byte ptr [rbp-label_21],r15b
    je          000000014002792D
    mov         rax,qword ptr [rbp-label_39]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         ebx,1
    jmp         0000000140027948
    cmp         byte ptr [rbp-label_21],r15b
    je          0000000140027945
    mov         rax,qword ptr [rbp-label_39]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         ebx,r15d
    mov         r9d,ebx
    lea         r8,[rbp+label_77]
    lea         rdx,[rbp-label_19]
    mov         rcx,r14
    call        00000001400159C4
    mov         rdi,qword ptr [rbp-9]
    test        eax,eax
    jne         0000000140027974
    mov         rcx,qword ptr [rbp+label_27]
    mov         rdx,rdi
    call label_000000014002C270
    mov         ebx,eax
    jmp         0000000140027977
    mov         ebx,r15d
    cmp         byte ptr [rbp+label_0F],r15b
    je          0000000140027985
    mov         rcx,rdi
    call        0000000140019CC4
    cmp         byte ptr [rbp+label_3F],r15b
    je          0000000140027994
    mov         rcx,qword ptr [rbp+label_27]
    call        0000000140019CC4
    lea         r11,[rsp+label_00000000000000A0]
    mov         eax,ebx
    mov         rbx,qword ptr [r11+label_20]
    mov         rsi,qword ptr [r11+label_28]
    mov         rdi,qword ptr [r11+label_38]
    mov         rsp,r11
    pop         r15
    pop         r14
    pop         rbp
    ret
func_00000001400279B2_end:
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    push        r14
    push        r15
    sub         rsp,label_20
    xor         r15d,r15d
    mov         ebp,r9d
    mov         rsi,r8
    mov         rbx,rdx
    mov         r10d,ecx
    mov         r11,rdx
    mov         edi,r15d
    cmp         byte ptr [rsp+label_60],r15b
    je          00000001400279F9
    lea         eax,[r15+label_2D]
    neg         r10d
    mov         word ptr [rdx],ax
    lea         edi,[rax-label_2C]
    lea         r11,[rdx+2]
    mov         r8,r11
    xor         edx,edx
    mov         eax,r10d
    div         eax,ebp
    mov         eax,r10d
    mov         r9,r11
    mov         ecx,edx
    xor         edx,edx
    div         eax,ebp
    cmp         ecx,9
    lea         rdx,[r11+2]
    mov         r10d,eax
    mov         eax,label_57
    lea         r14d,[rax-label_27]
    cmovbe      ax,r14w
    inc         rdi
    add         ax,cx
    mov         word ptr [r11],ax
    test        r10d,r10d
    je          0000000140027A3E
    mov         r11,rdx
    cmp         rdi,rsi
    jb          00000001400279FC
    cmp         rdi,rsi
    jb          0000000140027A5C
    mov         word ptr [rbx],r15w
    call        0000000140015374
    mov         ebx,label_22
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         eax,ebx
    jmp         0000000140027A7F
    mov         word ptr [rdx],r15w
    movzx       eax,word ptr [r8]
    movzx       ecx,word ptr [r9]
    mov         word ptr [r9],ax
    sub         r9,2
    mov         word ptr [r8],cx
    add         r8,2
    cmp         r8,r9
    jb          0000000140027A60
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_40]
    mov         rbp,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         rdi
    ret
func_0000000140027A97_end:
    push        rbx
    sub         rsp,label_30
    xor         eax,eax
    mov         r10d,ecx
    test        rdx,rdx
    jne         0000000140027AC1
    call        0000000140015374
    mov         ebx,label_16
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         eax,ebx
    add         rsp,label_30
    pop         rbx
    ret
func_0000000140027AC0_end:
    test        r8,r8
    je          0000000140027AA8
    movzx       ecx,byte ptr [rsp+label_60]
    mov         word ptr [rdx],ax
    lea         rax,[rcx+1]
    cmp         r8,rax
    ja          0000000140027AE3
    call        0000000140015374
    mov         ebx,label_22
    jmp         0000000140027AB2
    lea         eax,[r9-2]
    mov         ebx,label_22
    cmp         eax,ebx
    ja          0000000140027AA8
    mov         byte ptr [rsp+label_60],cl
    mov         ecx,r10d
    add         rsp,label_30
    pop         rbx
    jmp         00000001400279B4
    int         3
    int         3
    int         3
    sub         rsp,label_38
    xor         eax,eax
    cmp         r9d,label_0A
    jne         0000000140027B16
    test        ecx,ecx
    jns         0000000140027B16
    mov         al,1
    mov         byte ptr [rsp+label_20],al
    call        0000000140027A98
    add         rsp,label_38
    ret
func_0000000140027B23_end:
    mov         r11,rdx
    mov         r10,rcx
    test        r8,r8
    jne         0000000140027B32
    xor         eax,eax
    ret
func_0000000140027B31_end:
    movzx       ecx,word ptr [r10]
    lea         r10,[r10+2]
    movzx       edx,word ptr [r11]
    lea         r11,[r11+2]
    lea         eax,[rcx-label_41]
    cmp         eax,label_19
    lea         r9d,[rcx+label_20]
    lea         eax,[rdx-label_41]
    cmova       r9d,ecx
    cmp         eax,label_19
    lea         ecx,[rdx+label_20]
    mov         eax,r9d
    cmova       ecx,edx
    sub         eax,ecx
    jne         0000000140027B6E
    test        r9d,r9d
    je          0000000140027B6E
    sub         r8,1
    jne         0000000140027B32
    ret
func_0000000140027B6E_end:
    int         3
    sub         rsp,label_28
    cmp         dword ptr [label_000000014003E290],0
    jne         0000000140027BAA
    test        rcx,rcx
    jne         0000000140027B9C
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         eax,label_7FFFFFFF
    add         rsp,label_28
    ret
func_0000000140027B9B_end:
    test        rdx,rdx
    je          0000000140027B82
    add         rsp,label_28
    jmp         0000000140027B24
    xor         r9d,r9d
    add         rsp,label_28
    jmp         0000000140027BB8
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_40
    mov         rbp,r8
    mov         rsi,rdx
    mov         rbx,rcx
    test        rcx,rcx
    jne         0000000140027BFD
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         eax,label_7FFFFFFF
    jmp         0000000140027CEA
    test        rsi,rsi
    je          0000000140027BE3
    test        rbp,rbp
    jne         0000000140027C0E
    xor         eax,eax
    jmp         0000000140027CEA
    mov         rdx,r9
    lea         rcx,[rsp+label_20]
    call        0000000140015394
    mov         rdx,qword ptr [rsp+label_28]
    cmp         qword ptr [rdx+label_0000000000000138],0
    jne         0000000140027C3F
    mov         r8,rbp
    mov         rdx,rsi
    mov         rcx,rbx
    call        0000000140027B24
    mov         edi,eax
    jmp         0000000140027CD5
    mov         r15d,label_100
    lea         r12,[label_000000014002F300]
    movzx       ecx,word ptr [rbx]
    lea         rbx,[rbx+2]
    cmp         cx,r15w
    jae         0000000140027C73
    movzx       ecx,cl
    test        byte ptr [r12+rcx*2+2],1
    je          0000000140027C6E
    mov         rax,qword ptr [rdx+label_0000000000000110]
    mov         cl,byte ptr [rcx+rax]
    movzx       eax,cl
    jmp         0000000140027C82
    lea         rdx,[rsp+label_28]
    call        0000000140026CDC
    mov         rdx,qword ptr [rsp+label_28]
    movzx       ecx,word ptr [rsi]
    add         rsi,2
    movzx       r14d,ax
    mov         edi,r14d
    cmp         cx,r15w
    jae         0000000140027CB0
    movzx       ecx,cl
    test        byte ptr [r12+rcx*2+2],1
    je          0000000140027CAB
    mov         rax,qword ptr [rdx+label_0000000000000110]
    mov         cl,byte ptr [rcx+rax]
    movzx       eax,cl
    jmp         0000000140027CBF
    lea         rdx,[rsp+label_28]
    call        0000000140026CDC
    mov         rdx,qword ptr [rsp+label_28]
    movzx       eax,ax
    sub         edi,eax
    jne         0000000140027CD5
    test        r14d,r14d
    je          0000000140027CD5
    sub         rbp,1
    jne         0000000140027C4C
    cmp         byte ptr [rsp+label_38],0
    je          0000000140027CE8
    mov         rax,qword ptr [rsp+label_20]
    and         dword ptr [rax+label_00000000000003A8],label_0FFFFFFFD
    mov         eax,edi
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    mov         rdi,qword ptr [rsp+label_78]
    add         rsp,label_40
    pop         r15
    pop         r14
    pop         r12
    ret
func_0000000140027D08_end:
    int         3
    int         3
    int         3
    movzx       eax,word ptr [rdx]
    movzx       r8d,word ptr [rcx]
    sub         r8d,eax
    jne         0000000140027D31
    sub         rcx,rdx
    test        ax,ax
    je          0000000140027D31
    add         rdx,2
    movzx       eax,word ptr [rdx]
    movzx       r8d,word ptr [rcx+rdx]
    sub         r8d,eax
    je          0000000140027D1B
    mov         eax,r8d
    shr         r8d,label_1F
    neg         eax
    shr         eax,label_1F
    sub         eax,r8d
    ret
func_0000000140027D40_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    test        rcx,rcx
    jne         0000000140027D66
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    or          rax,label_0FFFFFFFFFFFFFFFF
    add         rsp,label_28
    ret
func_0000000140027D65_end:
    mov         r8,rcx
    xor         edx,edx
    mov         rcx,qword ptr [label_000000014003E9E8]
    add         rsp,label_28
    jmp         qword ptr [label_000000014002C288]
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    btr         r8d,label_13
    mov         eax,edx
    and         eax,r8d
    mov         r9d,edx
    mov         rbx,rcx
    test        eax,label_0FCF0FCE0
    je          0000000140027DC2
    test        rcx,rcx
    je          0000000140027DAD
    xor         edx,edx
    xor         ecx,ecx
    call        0000000140028F38
    mov         dword ptr [rbx],eax
    call        0000000140015374
    mov         ebx,label_16
    mov         dword ptr [rax],ebx
    call        00000001400105FC
    mov         eax,ebx
    jmp         0000000140027DDD
    mov         edx,r8d
    mov         ecx,r9d
    test        rbx,rbx
    je          0000000140027DD6
    call        0000000140028F38
    mov         dword ptr [rbx],eax
    jmp         0000000140027DDB
    call        0000000140028F38
    xor         eax,eax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140027DE2_end:
    int         3
    push        rbx
    sub         rsp,label_20
    mov         rbx,rcx
    call        00000001400269F4
    mov         dword ptr [rbx],eax
    call        0000000140026AD8
    mov         dword ptr [rbx+4],eax
    xor         eax,eax
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140027E03_end:
    mov         qword ptr [rsp+label_10],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    mov         ecx,dword ptr [rcx]
    call        0000000140026B30
    mov         ecx,dword ptr [rbx+4]
    call        0000000140026C68
    xor         edi,edi
    lea         rcx,[rsp+label_30]
    mov         qword ptr [rsp+label_30],rdi
    call        0000000140027DE4
    test        eax,eax
    jne         0000000140027E4C
    mov         ecx,dword ptr [rsp+label_30]
    cmp         dword ptr [rbx],ecx
    jne         0000000140027E4C
    mov         ecx,dword ptr [rsp+label_34]
    cmp         dword ptr [rbx+4],ecx
    setne       dil
    mov         eax,edi
    jmp         0000000140027E51
    mov         eax,1
    mov         rbx,qword ptr [rsp+label_38]
    add         rsp,label_20
    pop         rdi
    ret
func_0000000140027E5B_end:
    push        rbx
    sub         rsp,label_20
    and         dword ptr [rsp+label_38],0
    mov         rbx,rcx
    and         dword ptr [rsp+label_3C],0
    lea         rcx,[rsp+label_38]
    call        0000000140027DE4
    test        eax,eax
    jne         0000000140027EA1
    mov         rax,qword ptr [rsp+label_38]
    lea         rcx,[rsp+label_38]
    or          dword ptr [rsp+label_38],label_1F
    mov         qword ptr [rbx],rax
    call        0000000140027E04
    test        eax,eax
    jne         0000000140027EA1
    call        0000000140028ECC
    xor         eax,eax
    jmp         0000000140027EA6
    mov         eax,1
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140027EAB_end:
    xor         r8d,r8d
    movsd       mmword ptr [rsp+8],xmm0
    mov         rdx,qword ptr [rsp+8]
    mov         rcx,label_7FFFFFFFFFFFFFFF
    mov         rax,rdx
    and         rax,rcx
    mov         rcx,label_4340000000000000
    cmp         rdx,rax
    setne       r8b
    cmp         rax,rcx
    jb          0000000140027EF7
    mov         rcx,label_7FF0000000000000
    cmp         rax,rcx
    jbe         0000000140027F6D
    mov         rcx,rdx
    jmp         0000000140029428
    mov         rcx,label_3FF0000000000000
    cmp         rax,rcx
    jae         0000000140027F31
    test        rax,rax
    je          0000000140027F6D
    test        r8,r8
    je          0000000140027F27
    mov         rax,label_8000000000000000
    mov         qword ptr [rsp+8],rax
    movsd       xmm0,mmword ptr [rsp+8]
    jmp         0000000140027F6D
    movsd       xmm0,mmword ptr [label_000000014002C5E0]
    jmp         0000000140027F6D
    mov         rax,rdx
    mov         ecx,label_33
    shr         rax,label_34
    sub         cl,al
    mov         eax,1
    shl         rax,cl
    dec         rax
    not         rax
    and         rax,rdx
    mov         qword ptr [rsp+8],rax
    movsd       xmm0,mmword ptr [rsp+8]
    test        r8,r8
    jne         0000000140027F6D
    cmp         rax,rdx
    je          0000000140027F6D
    addsd       xmm0,mmword ptr [label_000000014002C5E0]
    ret
func_0000000140027F6D_end:
    int         3
    int         3
    sub         rsp,label_58
    movdqa      xmmword ptr [rsp+label_20],xmm6
    cmp         dword ptr [label_000000014003EA04],0
    jne         0000000140028270
    movapd      xmm3,xmm0
    movapd      xmm4,xmm0
    psrlq       xmm3,label_34
    movq        rax,xmm0
    psubq       xmm3,xmmword ptr [label_00000001400356F0]
    movapd      xmm5,xmm0
    andpd       xmm5,xmmword ptr [label_00000001400356C0]
    comisd      xmm5,mmword ptr [label_00000001400356C0]
    je          0000000140028240
    movapd      xmm2,xmm0
    cvtdq2pd    xmm6,xmm3
    xorpd       xmm5,xmm5
    comisd      xmm0,xmm5
    jbe         0000000140028200
    pand        xmm2,xmmword ptr [label_0000000140035710]
    subsd       xmm4,mmword ptr [label_00000001400357A0]
    comisd      xmm6,mmword ptr [label_0000000140035830]
    je          00000001400281C7
    andpd       xmm4,xmmword ptr [label_0000000140035890]
    mov         r9,rax
    and         rax,qword ptr [label_0000000140035720]
    and         r9,qword ptr [label_0000000140035730]
    shl         r9,1
    add         rax,r9
    movq        xmm1,rax
    comisd      xmm4,mmword ptr [label_0000000140035850]
    jb          0000000140028100
    shr         rax,label_2C
    por         xmm2,xmmword ptr [label_00000001400357B0]
    por         xmm1,xmmword ptr [label_00000001400357B0]
    lea         r9,[label_0000000140036930]
    subsd       xmm1,xmm2
    mulsd       xmm1,mmword ptr [r9+rax*8]
    movapd      xmm2,xmm1
    movapd      xmm0,xmm1
    lea         r9,[label_0000000140035910]
    movsd       xmm3,mmword ptr [label_0000000140035820]
    movsd       xmm1,mmword ptr [label_00000001400357F0]
    mulsd       xmm3,xmm2
    mulsd       xmm1,xmm2
    mulsd       xmm0,xmm2
    movapd      xmm4,xmm0
    addsd       xmm3,mmword ptr [label_0000000140035810]
    addsd       xmm1,mmword ptr [label_00000001400357E0]
    mulsd       xmm4,xmm0
    mulsd       xmm3,xmm2
    mulsd       xmm1,xmm0
    addsd       xmm3,mmword ptr [label_0000000140035800]
    addsd       xmm1,xmm2
    mulsd       xmm3,xmm4
    addsd       xmm1,xmm3
    movsd       xmm5,mmword ptr [label_0000000140035780]
    mulsd       xmm1,mmword ptr [label_0000000140035740]
    mulsd       xmm5,xmm6
    subsd       xmm5,xmm1
    movsd       xmm0,mmword ptr [r9+rax*8]
    lea         rdx,[label_0000000140036120]
    movsd       xmm2,mmword ptr [rdx+rax*8]
    movsd       xmm4,mmword ptr [label_0000000140035770]
    mulsd       xmm4,xmm6
    addsd       xmm0,xmm4
    addsd       xmm2,xmm5
    addsd       xmm0,xmm2
    movdqa      xmm6,xmmword ptr [rsp+label_20]
    add         rsp,label_58
    ret
func_00000001400280F1_end:
    nop         word ptr [rax+rax+label_0000000000000000]
    movsd       xmm2,mmword ptr [label_0000000140035790]
    subsd       xmm0,mmword ptr [label_00000001400357A0]
    addsd       xmm2,xmm0
    movapd      xmm1,xmm0
    divsd       xmm1,xmm2
    movsd       xmm4,mmword ptr [label_00000001400358B0]
    movsd       xmm5,mmword ptr [label_00000001400358D0]
    movapd      xmm6,xmm0
    mulsd       xmm6,xmm1
    addsd       xmm1,xmm1
    movapd      xmm2,xmm1
    mulsd       xmm2,xmm1
    mulsd       xmm4,xmm2
    mulsd       xmm5,xmm2
    addsd       xmm4,mmword ptr [label_00000001400358A0]
    addsd       xmm5,mmword ptr [label_00000001400358C0]
    mulsd       xmm2,xmm1
    mulsd       xmm4,xmm2
    mulsd       xmm2,xmm2
    mulsd       xmm2,xmm1
    mulsd       xmm5,xmm2
    movsd       xmm2,mmword ptr [label_0000000140035760]
    addsd       xmm4,xmm5
    subsd       xmm4,xmm6
    movsd       xmm6,mmword ptr [label_0000000140035750]
    movapd      xmm3,xmm0
    pand        xmm3,xmmword ptr [label_00000001400358E0]
    subsd       xmm0,xmm3
    addsd       xmm4,xmm0
    movapd      xmm0,xmm3
    movapd      xmm1,xmm4
    mulsd       xmm4,xmm2
    mulsd       xmm0,xmm2
    mulsd       xmm1,xmm6
    mulsd       xmm3,xmm6
    addsd       xmm0,xmm4
    addsd       xmm0,xmm1
    addsd       xmm0,xmm3
    movdqa      xmm6,xmmword ptr [rsp+label_20]
    add         rsp,label_58
    ret
func_00000001400281C6_end:
    por         xmm2,xmmword ptr [label_00000001400357A0]
    subsd       xmm2,mmword ptr [label_00000001400357A0]
    movsd       xmm5,xmm2
    pand        xmm2,xmmword ptr [label_0000000140035710]
    movq        rax,xmm2
    psrlq       xmm5,label_34
    psubd       xmm5,xmmword ptr [label_0000000140035840]
    cvtdq2pd    xmm6,xmm5
    jmp         0000000140027FEF
    nop
    jne         0000000140028220
    movsd       xmm1,mmword ptr [label_00000001400356B0]
    mov         r8d,dword ptr [label_00000001400358F0]
    call        00000001400294C0
    jmp         0000000140028260
    nop         dword ptr [rax+rax+label_0000000000000000]
    movsd       xmm1,mmword ptr [label_00000001400356D0]
    mov         r8d,dword ptr [label_00000001400358F4]
    call        00000001400294C0
    jmp         0000000140028260
    nop         word ptr [rax+rax+label_0000000000000000]
    cmp         rax,qword ptr [label_00000001400356C0]
    je          0000000140028260
    cmp         rax,qword ptr [label_00000001400356B0]
    je          0000000140028220
    or          rax,qword ptr [label_00000001400356E0]
    movq        xmm0,rax
    nop
    movdqa      xmm6,xmmword ptr [rsp+label_20]
    add         rsp,label_58
    ret
func_000000014002826A_end:
    nop         dword ptr [rax+rax]
    xor         rax,rax
    vpsrlq      xmm3,xmm0,label_34
    vmovq       rax,xmm0
    vpsubq      xmm3,xmm3,xmmword ptr [label_00000001400356F0]
    vcvtdq2pd   xmm6,xmm3
    vpand       xmm5,xmm0,xmmword ptr [label_00000001400356C0]
    vcomisd     xmm5,mmword ptr [label_00000001400356C0]
    je          00000001400284E0
    vpxor       xmm5,xmm5,xmm5
    vcomisd     xmm0,xmm5
    jbe         0000000140028490
    vpand       xmm2,xmm0,xmmword ptr [label_0000000140035710]
    vsubsd      xmm4,xmm0,mmword ptr [label_00000001400357A0]
    vcomisd     xmm6,mmword ptr [label_0000000140035830]
    je          0000000140028459
    vpand       xmm1,xmm0,xmmword ptr [label_0000000140035720]
    vpand       xmm3,xmm0,xmmword ptr [label_0000000140035730]
    vpsllq      xmm3,xmm3,1
    vpaddq      xmm1,xmm3,xmm1
    vmovq       rax,xmm1
    vpand       xmm4,xmm4,xmmword ptr [label_0000000140035890]
    vcomisd     xmm4,mmword ptr [label_0000000140035850]
    jb          00000001400283B0
    shr         rax,label_2C
    vpor        xmm2,xmm2,xmmword ptr [label_00000001400357B0]
    vpor        xmm1,xmm1,xmmword ptr [label_00000001400357B0]
    lea         r9,[label_0000000140036930]
    vsubsd      xmm1,xmm1,xmm2
    vmulsd      xmm1,xmm1,mmword ptr [r9+rax*8]
    lea         r9,[label_0000000140035910]
    vmulsd      xmm0,xmm1,xmm1
    vmovsd      xmm3,qword ptr [label_0000000140035820]
    vmovsd      xmm5,qword ptr [label_00000001400357F0]
    vfmadd213sd xmm3,xmm1,mmword ptr [label_0000000140035810]
    vfmadd213sd xmm5,xmm1,mmword ptr [label_00000001400357B0]
    movsd       xmm4,xmm0
    vfmadd213sd xmm3,xmm1,mmword ptr [label_0000000140035800]
    vmulsd      xmm4,xmm0,xmm0
    vfmadd231sd xmm1,xmm5,xmm0
    vfmadd231sd xmm1,xmm3,xmm4
    vmulsd      xmm1,xmm1,mmword ptr [label_0000000140035740]
    vmovsd      xmm5,qword ptr [label_0000000140035780]
    vfmsub213sd xmm5,xmm6,xmm1
    movsd       xmm0,mmword ptr [r9+rax*8]
    lea         rdx,[label_0000000140036120]
    movsd       xmm2,mmword ptr [rdx+rax*8]
    vaddsd      xmm2,xmm2,xmm5
    vfmadd231sd xmm0,xmm6,mmword ptr [label_0000000140035770]
    vaddsd      xmm0,xmm0,xmm2
    vmovdqa     xmm6,xmmword ptr [rsp+label_20]
    add         rsp,label_58
    ret
func_00000001400283AE_end:
    nop
    vmovsd      xmm2,qword ptr [label_0000000140035790]
    vsubsd      xmm0,xmm0,mmword ptr [label_00000001400357A0]
    vaddsd      xmm2,xmm2,xmm0
    vdivsd      xmm1,xmm0,xmm2
    vmovsd      xmm4,qword ptr [label_00000001400358B0]
    vmovsd      xmm5,qword ptr [label_00000001400358D0]
    vmulsd      xmm6,xmm0,xmm1
    vaddsd      xmm1,xmm1,xmm1
    vmulsd      xmm2,xmm1,xmm1
    vfmadd213sd xmm4,xmm2,mmword ptr [label_00000001400358A0]
    vfmadd213sd xmm5,xmm2,mmword ptr [label_00000001400358C0]
    vmulsd      xmm2,xmm2,xmm1
    vmulsd      xmm4,xmm4,xmm2
    vmulsd      xmm2,xmm2,xmm2
    vmulsd      xmm2,xmm2,xmm1
    vmulsd      xmm5,xmm5,xmm2
    vaddsd      xmm4,xmm4,xmm5
    vsubsd      xmm4,xmm4,xmm6
    vpand       xmm3,xmm0,xmmword ptr [label_00000001400358E0]
    vsubsd      xmm0,xmm0,xmm3
    vaddsd      xmm4,xmm4,xmm0
    vmulsd      xmm1,xmm4,mmword ptr [label_0000000140035750]
    vmulsd      xmm4,xmm4,mmword ptr [label_0000000140035760]
    vmulsd      xmm0,xmm3,mmword ptr [label_0000000140035760]
    vmulsd      xmm3,xmm3,mmword ptr [label_0000000140035750]
    vaddsd      xmm0,xmm0,xmm4
    vaddsd      xmm0,xmm0,xmm1
    vaddsd      xmm0,xmm0,xmm3
    vmovdqa     xmm6,xmmword ptr [rsp+label_20]
    add         rsp,label_58
    ret
func_0000000140028458_end:
    vpor        xmm2,xmm2,xmmword ptr [label_00000001400357A0]
    vsubsd      xmm2,xmm2,mmword ptr [label_00000001400357A0]
    vpsrlq      xmm5,xmm2,label_34
    vpand       xmm2,xmm2,xmmword ptr [label_0000000140035710]
    vmovapd     xmm0,xmm2
    vpsubd      xmm5,xmm5,xmmword ptr [label_0000000140035840]
    vcvtdq2pd   xmm6,xmm5
    jmp         00000001400282CB
    nop         dword ptr [rax+rax]
    jne         00000001400284C0
    vmovsd      xmm1,qword ptr [label_00000001400356B0]
    mov         r8d,dword ptr [label_00000001400358F0]
    call        00000001400294C0
    vmovdqa     xmm6,xmmword ptr [rsp+label_20]
    add         rsp,label_58
    ret
func_00000001400284B0_end:
    nop         word ptr [rax+rax+label_0000000000000000]
    vmovsd      xmm1,qword ptr [label_00000001400356D0]
    mov         r8d,dword ptr [label_00000001400358F4]
    call        00000001400294C0
    vmovdqa     xmm6,xmmword ptr [rsp+label_20]
    add         rsp,label_58
    ret
func_00000001400284DE_end:
    nop
    cmp         rax,qword ptr [label_00000001400356C0]
    je          0000000140028510
    cmp         rax,qword ptr [label_00000001400356B0]
    je          00000001400284C0
    or          rax,qword ptr [label_00000001400356E0]
    movq        xmm1,rax
    mov         r8d,dword ptr [label_00000001400358F8]
    call        00000001400294C0
    jmp         0000000140028510
    nop         dword ptr [rax]
    vmovdqa     xmm6,xmmword ptr [rsp+label_20]
    add         rsp,label_58
    ret
func_000000014002851A_end:
    int         3
    and         qword ptr [rdx],0
    mov         rax,rcx
    ret
func_0000000140028523_end:
    and         qword ptr [rcx],0
    or          rax,label_0FFFFFFFFFFFFFFFF
    mov         byte ptr [rdx+label_30],1
    mov         dword ptr [rdx+label_2C],label_2A
    ret
func_0000000140028537_end:
    push        rbx
    push        rbp
    push        rsi
    push        rdi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_40
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rsp+label_30],rax
    mov         rsi,qword ptr [rsp+label_00000000000000A0]
    lea         r10,[label_000000014003E9F0]
    xor         r11d,r11d
    lea         rdi,[label_000000014002C718]
    test        r9,r9
    mov         rax,rdx
    mov         r12,rdx
    cmovne      r10,r9
    test        rdx,rdx
    lea         ebp,[r11+1]
    cmovne      rdi,rdx
    mov         r15d,ebp
    cmovne      r15,r8
    neg         rax
    sbb         r14,r14
    and         r14,rcx
    test        r15,r15
    jne         00000001400285A8
    mov         rax,label_0FFFFFFFFFFFFFFFE
    jmp         00000001400286F5
    cmp         word ptr [r10+6],r11w
    jne         0000000140028617
    movzx       r9d,byte ptr [rdi]
    inc         rdi
    test        r9b,r9b
    js          00000001400285D2
    test        r14,r14
    je          00000001400285C3
    mov         dword ptr [r14],r9d
    test        r9b,r9b
    setne       r11b
    mov         rax,r11
    jmp         00000001400286F5
    mov         al,r9b
    and         al,label_0E0
    cmp         al,label_0C0
    jne         00000001400285E0
    mov         r8b,2
    jmp         00000001400285FE
    mov         al,r9b
    and         al,label_0F0
    cmp         al,label_0E0
    jne         00000001400285EE
    mov         r8b,3
    jmp         00000001400285FE
    mov         al,r9b
    and         al,label_0F8
    cmp         al,label_0F0
    jne         00000001400286EA
    mov         r8b,4
    movzx       eax,r8b
    mov         ecx,7
    sub         ecx,eax
    mov         edx,ebp
    shl         edx,cl
    mov         bl,r8b
    sub         edx,ebp
    and         edx,r9d
    jmp         0000000140028640
    mov         r8b,byte ptr [r10+4]
    mov         edx,dword ptr [r10]
    mov         bl,byte ptr [r10+6]
    lea         eax,[r8-2]
    cmp         al,2
    ja          00000001400286EA
    cmp         bl,bpl
    jb          00000001400286EA
    cmp         bl,r8b
    jae         00000001400286EA
    movzx       ebp,bl
    cmp         rbp,r15
    mov         r9d,ebp
    cmovae      r9,r15
    jmp         000000014002866D
    movzx       ecx,byte ptr [rdi]
    inc         rdi
    mov         al,cl
    and         al,label_0C0
    cmp         al,label_80
    jne         00000001400286EA
    mov         eax,edx
    and         ecx,label_3F
    shl         eax,6
    mov         edx,ecx
    or          edx,eax
    mov         rax,rdi
    sub         rax,r12
    cmp         rax,r9
    jb          000000014002864F
    cmp         r9,rbp
    jae         0000000140028699
    movzx       eax,r8b
    sub         bl,r9b
    mov         word ptr [r10+4],ax
    movzx       eax,bl
    mov         word ptr [r10+6],ax
    mov         dword ptr [r10],edx
    jmp         000000014002859C
    lea         eax,[rdx+label_FFFFFFFFFFFF2800]
    cmp         eax,label_7FF
    jbe         00000001400286EA
    cmp         edx,label_110000
    jae         00000001400286EA
    movzx       eax,r8b
    mov         dword ptr [rsp+label_20],label_80
    mov         dword ptr [rsp+label_24],label_800
    mov         dword ptr [rsp+label_28],label_10000
    cmp         edx,dword ptr [rsp+rax*4+label_18]
    jb          00000001400286EA
    test        r14,r14
    je          00000001400286D8
    mov         dword ptr [r14],edx
    neg         edx
    mov         rdx,r10
    sbb         rcx,rcx
    and         rcx,rbp
    call        000000014002851C
    jmp         00000001400286F5
    mov         rdx,rsi
    mov         rcx,r10
    call        0000000140028524
    mov         rcx,qword ptr [rsp+label_30]
    xor         rcx,rsp
    call        00000001400099A0
    add         rsp,label_40
    pop         r15
    pop         r14
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbp
    pop         rbx
    ret
func_0000000140028710_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    test        r8,r8
    lea         rbx,[label_000000014003E9F8]
    mov         eax,label_2400
    mov         r10,rcx
    cmovne      rbx,r8
    mov         ecx,label_3FF
    add         eax,edx
    cmp         dword ptr [rbx],0
    jne         0000000140028783
    cmp         ax,cx
    ja          000000014002874E
    mov         rdx,r9
    mov         rcx,rbx
    call        0000000140028524
    jmp         00000001400287B1
    mov         eax,label_2800
    add         eax,edx
    cmp         ax,cx
    ja          0000000140028770
    movzx       eax,dx
    shl         eax,label_0A
    and         eax,label_0FC9FFC00
    add         eax,label_10000
    mov         dword ptr [rbx],eax
    xor         eax,eax
    jmp         00000001400287B1
    movzx       edx,dx
    mov         r8,rbx
    mov         rcx,r10
    add         rsp,label_20
    pop         rbx
    jmp         000000014002627C
    cmp         ax,cx
    ja          0000000140028741
    and         qword ptr [rsp+label_40],0
    lea         r8,[rsp+label_40]
    movzx       edx,dx
    mov         rcx,r10
    and         edx,label_0FFFF23FF
    add         edx,dword ptr [rbx]
    call        000000014002627C
    mov         rdx,rbx
    mov         rcx,rax
    call        000000014002851C
    add         rsp,label_20
    pop         rbx
    ret
func_00000001400287B6_end:
    int         3
    push        rbx
    sub         rsp,label_40
    mov         rax,qword ptr [label_000000014003CC60]
    xor         ebx,ebx
    cmp         rax,label_0FFFFFFFFFFFFFFFE
    jne         00000001400287FB
    mov         qword ptr [rsp+label_30],rbx
    lea         r8d,[rbx+3]
    mov         dword ptr [rsp+label_28],ebx
    lea         rcx,[label_0000000140035900]
    xor         r9d,r9d
    mov         dword ptr [rsp+label_20],r8d
    mov         edx,label_40000000
    call label_000000014002C290
    mov         qword ptr [label_000000014003CC60],rax
    cmp         rax,label_0FFFFFFFFFFFFFFFF
    setne       bl
    mov         eax,ebx
    add         rsp,label_40
    pop         rbx
    ret
func_0000000140028809_end:
    int         3
    int         3
    sub         rsp,label_28
    mov         rcx,qword ptr [label_000000014003CC60]
    cmp         rcx,label_0FFFFFFFFFFFFFFFD
    ja          0000000140028823
    call label_000000014002C1E8
    add         rsp,label_28
    ret
func_0000000140028827_end:
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    push        rdi
    sub         rsp,label_40
    and         qword ptr [rax-label_28],0
    mov         rdi,r8
    mov         r9,r8
    mov         esi,edx
    mov         r8d,edx
    mov         rbp,rcx
    mov         rdx,rcx
    mov         rcx,qword ptr [label_000000014003CC60]
    call label_000000014002C0D8
    mov         ebx,eax
    test        eax,eax
    jne         00000001400288CF
    call label_000000014002C0F8
    cmp         eax,6
    jne         00000001400288CF
    mov         rcx,qword ptr [label_000000014003CC60]
    cmp         rcx,label_0FFFFFFFFFFFFFFFD
    ja          0000000140028883
    call label_000000014002C1E8
    and         qword ptr [rsp+label_30],0
    lea         rcx,[label_0000000140035900]
    and         dword ptr [rsp+label_28],0
    mov         r8d,3
    xor         r9d,r9d
    mov         dword ptr [rsp+label_20],r8d
    mov         edx,label_40000000
    call label_000000014002C290
    and         qword ptr [rsp+label_20],0
    mov         r9,rdi
    mov         rcx,rax
    mov         qword ptr [label_000000014003CC60],rax
    mov         r8d,esi
    mov         rdx,rbp
    call label_000000014002C0D8
    mov         ebx,eax
    mov         rbp,qword ptr [rsp+label_58]
    mov         eax,ebx
    mov         rbx,qword ptr [rsp+label_50]
    mov         rsi,qword ptr [rsp+label_60]
    add         rsp,label_40
    pop         rdi
    ret
func_00000001400288E5_end:
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rbp
    mov         qword ptr [rsp+label_18],rsi
    push        rdi
    sub         rsp,label_50
    movsxd      rbx,r9d
    mov         rdi,r8
    mov         esi,edx
    mov         rbp,rcx
    test        r9d,r9d
    jle         0000000140028920
    mov         rdx,rbx
    mov         rcx,r8
    call        0000000140015DAC
    cmp         eax,ebx
    lea         ebx,[rax+1]
    jl          0000000140028920
    mov         ebx,eax
    and         qword ptr [rsp+label_40],0
    mov         r9d,ebx
    and         qword ptr [rsp+label_38],0
    mov         r8,rdi
    and         qword ptr [rsp+label_30],0
    mov         edx,esi
    mov         eax,dword ptr [rsp+label_0000000000000088]
    mov         rcx,rbp
    mov         dword ptr [rsp+label_28],eax
    mov         rax,qword ptr [rsp+label_0000000000000080]
    mov         qword ptr [rsp+label_20],rax
    call        000000014001BA70
    mov         rbx,qword ptr [rsp+label_60]
    mov         rbp,qword ptr [rsp+label_68]
    mov         rsi,qword ptr [rsp+label_70]
    add         rsp,label_50
    pop         rdi
    ret
func_000000014002896E_end:
    int         3
    mov         r11,rdx
    mov         r10,rcx
    test        r8,r8
    jne         000000014002897E
    xor         eax,eax
    ret
func_000000014002897D_end:
    movzx       ecx,byte ptr [r10]
    inc         r10
    movzx       edx,byte ptr [r11]
    lea         eax,[rcx-label_41]
    cmp         eax,label_19
    lea         r9d,[rcx+label_20]
    lea         eax,[rdx-label_41]
    cmova       r9d,ecx
    inc         r11
    cmp         eax,label_19
    lea         ecx,[rdx+label_20]
    mov         eax,r9d
    cmova       ecx,edx
    sub         eax,ecx
    jne         00000001400289B8
    test        r9d,r9d
    je          00000001400289B8
    sub         r8,1
    jne         000000014002897E
    ret
func_00000001400289B8_end:
    int         3
    int         3
    int         3
    sub         rsp,label_28
    cmp         dword ptr [label_000000014003E290],0
    jne         00000001400289FF
    test        rcx,rcx
    jne         00000001400289E8
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         eax,label_7FFFFFFF
    add         rsp,label_28
    ret
func_00000001400289E7_end:
    test        rdx,rdx
    je          00000001400289CE
    cmp         r8,label_7FFFFFFF
    ja          00000001400289CE
    add         rsp,label_28
    jmp         0000000140028970
    xor         r9d,r9d
    add         rsp,label_28
    jmp         0000000140028A0C
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_40
    mov         rbx,r8
    mov         rdi,rdx
    mov         rsi,rcx
    test        rcx,rcx
    jne         0000000140028A40
    call        0000000140015374
    mov         dword ptr [rax],label_16
    call        00000001400105FC
    mov         eax,label_7FFFFFFF
    jmp         0000000140028AA9
    test        rdx,rdx
    je          0000000140028A29
    cmp         rbx,label_7FFFFFFF
    ja          0000000140028A29
    test        rbx,rbx
    jne         0000000140028A57
    xor         eax,eax
    jmp         0000000140028AA9
    mov         rdx,r9
    lea         rcx,[rsp+label_20]
    call        0000000140015394
    mov         rax,qword ptr [rsp+label_28]
    mov         r8,qword ptr [rax+label_0000000000000110]
    movzx       eax,byte ptr [rsi]
    inc         rsi
    movzx       edx,byte ptr [rax+r8]
    movzx       eax,byte ptr [rdi]
    inc         rdi
    movzx       ecx,byte ptr [rax+r8]
    mov         eax,edx
    sub         eax,ecx
    jne         0000000140028A96
    test        edx,edx
    je          0000000140028A96
    sub         rbx,1
    jne         0000000140028A70
    cmp         byte ptr [rsp+label_38],0
    je          0000000140028AA9
    mov         rcx,qword ptr [rsp+label_20]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    mov         rbx,qword ptr [rsp+label_50]
    mov         rsi,qword ptr [rsp+label_58]
    add         rsp,label_40
    pop         rdi
    ret
func_0000000140028AB8_end:
    int         3
    int         3
    int         3
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r12
    push        r13
    push        r14
    push        r15
    sub         rsp,label_98
    lea         rbp,[rsp+label_50]
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rbp
    mov         qword ptr [rbp+label_30],rax
    movsxd      rdi,dword ptr [rbp+label_00000000000000B0]
    xor         r13d,r13d
    mov         r12,qword ptr [rbp+label_00000000000000B8]
    mov         r14,r9
    mov         dword ptr [rbp],r8d
    mov         rbx,rcx
    mov         qword ptr [rbp+label_10],rdx
    mov         qword ptr [rbp+8],r12
    test        edi,edi
    jle         0000000140028B1A
    mov         rdx,rdi
    mov         rcx,r9
    call        00000001400159AC
    mov         rdi,rax
    jmp         0000000140028B23
    cmp         edi,label_0FFFFFFFF
    jl          0000000140028E19
    movsxd      rsi,dword ptr [rbp+label_00000000000000C0]
    test        esi,esi
    jle         0000000140028B3E
    mov         rdx,rsi
    mov         rcx,r12
    call        00000001400159AC
    mov         rsi,rax
    jmp         0000000140028B47
    cmp         esi,label_0FFFFFFFF
    jl          0000000140028E19
    mov         r15d,dword ptr [rbp+label_00000000000000C8]
    test        r15d,r15d
    jne         0000000140028B5A
    mov         rax,qword ptr [rbx]
    mov         r15d,dword ptr [rax+label_0C]
    test        edi,edi
    je          0000000140028B66
    test        esi,esi
    jne         0000000140028C0C
    cmp         edi,esi
    je          0000000140028E38
    cmp         esi,1
    jg          0000000140028C02
    cmp         edi,1
    jg          0000000140028BC4
    lea         rdx,[rbp+label_18]
    mov         ecx,r15d
    call label_000000014002C050
    test        eax,eax
    je          0000000140028E19
    test        edi,edi
    jle         0000000140028BCE
    cmp         dword ptr [rbp+label_18],2
    jb          0000000140028BC4
    lea         rax,[rbp+label_1E]
    cmp         byte ptr [rbp+label_1E],r13b
    je          0000000140028BC4
    cmp         byte ptr [rax+1],r13b
    je          0000000140028BC4
    mov         cl,byte ptr [r14]
    cmp         cl,byte ptr [rax]
    jb          0000000140028BBB
    cmp         cl,byte ptr [rax+1]
    jbe         0000000140028E38
    add         rax,2
    cmp         byte ptr [rax],r13b
    jne         0000000140028BA5
    mov         eax,3
    jmp         0000000140028E1B
    test        esi,esi
    jle         0000000140028C0C
    cmp         dword ptr [rbp+label_18],2
    jb          0000000140028C02
    lea         rax,[rbp+label_1E]
    cmp         byte ptr [rbp+label_1E],r13b
    je          0000000140028C02
    cmp         byte ptr [rax+1],r13b
    je          0000000140028C02
    mov         cl,byte ptr [r12]
    cmp         cl,byte ptr [rax]
    jb          0000000140028BF9
    cmp         cl,byte ptr [rax+1]
    jbe         0000000140028E38
    add         rax,2
    cmp         byte ptr [rax],r13b
    jne         0000000140028BE2
    mov         eax,1
    jmp         0000000140028E1B
    mov         dword ptr [rsp+label_28],r13d
    mov         r9d,edi
    mov         r8,r14
    mov         qword ptr [rsp+label_20],r13
    mov         edx,9
    mov         ecx,r15d
    call        0000000140020070
    movsxd      r13,eax
    test        eax,eax
    je          0000000140028E19
    mov         rdx,r13
    add         rdx,rdx
    lea         rcx,[rdx+label_10]
    cmp         rdx,rcx
    sbb         rdx,rdx
    and         rdx,rcx
    je          0000000140028E19
    mov         rcx,label_0FFFFFFFFFFFFFF0
    cmp         rdx,label_400
    ja          0000000140028C8E
    lea         rax,[rdx+label_0F]
    cmp         rax,rdx
    ja          0000000140028C6C
    mov         rax,rcx
    and         rax,label_0FFFFFFFFFFFFFFF0
    call        0000000140009F30
    sub         rsp,rax
    lea         rbx,[rsp+label_50]
    test        rbx,rbx
    je          0000000140028E19
    mov         dword ptr [rbx],label_0CCCC
    jmp         0000000140028CA4
    mov         rcx,rdx
    call        0000000140019D00
    mov         rbx,rax
    test        rax,rax
    je          0000000140028CA8
    mov         dword ptr [rax],label_0DDDD
    add         rbx,label_10
    test        rbx,rbx
    je          0000000140028E19
    mov         dword ptr [rsp+label_28],r13d
    mov         r9d,edi
    mov         r8,r14
    mov         qword ptr [rsp+label_20],rbx
    mov         edx,1
    mov         ecx,r15d
    call        0000000140020070
    test        eax,eax
    je          0000000140028E08
    and         dword ptr [rsp+label_28],0
    mov         r9d,esi
    and         qword ptr [rsp+label_20],0
    mov         r8,r12
    mov         edx,9
    mov         ecx,r15d
    call        0000000140020070
    movsxd      r12,eax
    test        eax,eax
    je          0000000140028E08
    mov         rcx,r12
    add         rcx,rcx
    lea         rax,[rcx+label_10]
    cmp         rcx,rax
    sbb         rcx,rcx
    and         rcx,rax
    je          0000000140028E08
    cmp         rcx,label_400
    ja          0000000140028D56
    lea         rax,[rcx+label_0F]
    cmp         rax,rcx
    ja          0000000140028D34
    mov         rax,label_0FFFFFFFFFFFFFF0
    and         rax,label_0FFFFFFFFFFFFFFF0
    call        0000000140009F30
    sub         rsp,rax
    lea         rdi,[rsp+label_50]
    test        rdi,rdi
    je          0000000140028E08
    mov         dword ptr [rdi],label_0CCCC
    jmp         0000000140028D69
    call        0000000140019D00
    mov         rdi,rax
    test        rax,rax
    je          0000000140028D6D
    mov         dword ptr [rax],label_0DDDD
    add         rdi,label_10
    test        rdi,rdi
    je          0000000140028E08
    mov         r8,qword ptr [rbp+8]
    lea         r14,[rdi-label_10]
    mov         dword ptr [rsp+label_28],r12d
    mov         r9d,esi
    mov         edx,1
    mov         qword ptr [rsp+label_20],rdi
    mov         ecx,r15d
    call        0000000140020070
    xor         ecx,ecx
    test        eax,eax
    jne         0000000140028DB8
    mov         edi,label_0DDDD
    cmp         dword ptr [r14],edi
    jne         0000000140028DB0
    mov         rcx,r14
    call        0000000140019CC4
    lea         rcx,[rbx-label_10]
    cmp         dword ptr [rcx],edi
    jmp         0000000140028E12
    mov         edx,dword ptr [rbp]
    mov         r9d,r13d
    mov         qword ptr [rsp+label_40],rcx
    mov         r8,rbx
    mov         qword ptr [rsp+label_38],rcx
    mov         qword ptr [rsp+label_30],rcx
    mov         rcx,qword ptr [rbp+label_10]
    mov         dword ptr [rsp+label_28],r12d
    mov         qword ptr [rsp+label_20],rdi
    call        000000014001B670
    mov         esi,label_0DDDD
    mov         edi,eax
    cmp         dword ptr [r14],esi
    jne         0000000140028DF7
    mov         rcx,r14
    call        0000000140019CC4
    lea         rcx,[rbx-label_10]
    cmp         dword ptr [rcx],esi
    jne         0000000140028E04
    call        0000000140019CC4
    mov         eax,edi
    jmp         0000000140028E1B
    lea         rcx,[rbx-label_10]
    cmp         dword ptr [rcx],label_0DDDD
    jne         0000000140028E19
    call        0000000140019CC4
    xor         eax,eax
    mov         rcx,qword ptr [rbp+label_30]
    xor         rcx,rbp
    call        00000001400099A0
    lea         rsp,[rbp+label_48]
    pop         r15
    pop         r14
    pop         r13
    pop         r12
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_0000000140028E37_end:
    mov         eax,2
    jmp         0000000140028E1B
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_60
    mov         rsi,rdx
    mov         rbx,r9
    mov         rdx,rcx
    mov         edi,r8d
    lea         rcx,[rsp+label_40]
    call        0000000140015394
    mov         eax,dword ptr [rsp+label_00000000000000A8]
    lea         rcx,[rsp+label_48]
    mov         dword ptr [rsp+label_38],eax
    mov         r9,rbx
    mov         eax,dword ptr [rsp+label_00000000000000A0]
    mov         r8d,edi
    mov         dword ptr [rsp+label_30],eax
    mov         rdx,rsi
    mov         rax,qword ptr [rsp+label_0000000000000098]
    mov         qword ptr [rsp+label_28],rax
    mov         eax,dword ptr [rsp+label_0000000000000090]
    mov         dword ptr [rsp+label_20],eax
    call        0000000140028ABC
    cmp         byte ptr [rsp+label_58],0
    je          0000000140028EB9
    mov         rcx,qword ptr [rsp+label_40]
    and         dword ptr [rcx+label_00000000000003A8],label_0FFFFFFFD
    mov         rbx,qword ptr [rsp+label_70]
    mov         rsi,qword ptr [rsp+label_78]
    add         rsp,label_60
    pop         rdi
    ret
func_0000000140028EC8_end:
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_20
    call        0000000140026990
    mov         ebx,eax
    call        00000001400269AA
    xor         r9d,r9d
    test        bl,label_3F
    je          0000000140028F2C
    mov         edx,ebx
    and         edx,1
    shl         edx,4
    mov         r8d,edx
    or          r8d,8
    test        bl,4
    cmove       r8d,edx
    mov         ecx,r8d
    or          ecx,4
    test        bl,8
    cmove       ecx,r8d
    mov         edx,ecx
    or          edx,2
    test        bl,label_10
    cmove       edx,ecx
    mov         r9d,edx
    or          r9d,1
    test        bl,label_20
    cmove       r9d,edx
    test        bl,2
    je          0000000140028F2C
    bts         r9d,label_13
    mov         eax,r9d
    add         rsp,label_20
    pop         rbx
    ret
func_0000000140028F34_end:
    int         3
    int         3
    int         3
    jmp         0000000140028F40
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rbx
    mov         qword ptr [rsp+label_18],rsi
    push        r12
    push        r14
    push        r15
    sub         rsp,label_20
    mov         r12d,edx
    mov         ebx,ecx
    and         r12d,label_308031F
    call        0000000140026990
    mov         r10d,eax
    mov         r9d,eax
    shr         r9d,3
    and         r9d,label_10
    mov         r14d,label_200
    mov         edx,r9d
    or          edx,8
    test        r14d,eax
    cmove       edx,r9d
    mov         ecx,edx
    or          ecx,4
    bt          eax,label_0A
    cmovae      ecx,edx
    mov         r9d,label_800
    mov         edx,ecx
    or          edx,2
    test        r9d,eax
    cmove       edx,ecx
    mov         r11d,label_1000
    mov         ecx,edx
    or          ecx,1
    test        r11d,eax
    cmove       ecx,edx
    mov         esi,label_100
    mov         edx,ecx
    bts         edx,label_13
    test        esi,eax
    cmove       edx,ecx
    mov         r15d,label_6000
    and         eax,r15d
    je          0000000140028FF1
    cmp         eax,label_2000
    je          0000000140028FEF
    cmp         eax,label_4000
    je          0000000140028FEA
    cmp         eax,r15d
    jne         0000000140028FF1
    or          edx,label_300
    jmp         0000000140028FF1
    or          edx,r14d
    jmp         0000000140028FF1
    or          edx,esi
    and         r10d,label_8040
    sub         r10d,label_40
    je          000000014002901B
    sub         r10d,label_7FC0
    je          0000000140029013
    cmp         r10d,label_40
    jne         000000014002901F
    bts         edx,label_18
    jmp         000000014002901F
    or          edx,label_3000000
    jmp         000000014002901F
    bts         edx,label_19
    mov         r8d,r12d
    not         r8d
    and         r8d,edx
    and         ebx,r12d
    or          r8d,ebx
    cmp         r8d,edx
    je          00000001400291C3
    mov         ecx,r8d
    and         ecx,label_10
    shl         ecx,3
    mov         edx,ecx
    or          edx,r14d
    test        r8b,8
    cmove       edx,ecx
    mov         ecx,edx
    bts         ecx,label_0A
    test        r8b,4
    cmove       ecx,edx
    mov         edx,ecx
    or          edx,r9d
    test        r8b,2
    cmove       edx,ecx
    mov         ecx,edx
    or          ecx,r11d
    test        r8b,1
    cmove       ecx,edx
    mov         ebx,ecx
    or          ebx,esi
    bt          r8d,label_13
    cmovae      ebx,ecx
    mov         eax,r8d
    and         eax,label_300
    je          00000001400290AA
    cmp         eax,esi
    je          00000001400290A6
    cmp         eax,r14d
    je          00000001400290A0
    mov         dword ptr [rsp+label_40],ebx
    cmp         eax,label_300
    jne         00000001400290AE
    or          ebx,r15d
    jmp         00000001400290AA
    bts         ebx,label_0E
    jmp         00000001400290AA
    bts         ebx,label_0D
    mov         dword ptr [rsp+label_40],ebx
    and         r8d,label_3000000
    cmp         r8d,label_1000000
    je          00000001400290DB
    cmp         r8d,label_2000000
    je          00000001400290D6
    cmp         r8d,label_3000000
    jne         00000001400290E5
    bts         ebx,label_0F
    jmp         00000001400290E1
    or          ebx,label_40
    jmp         00000001400290E1
    or          ebx,label_8040
    mov         dword ptr [rsp+label_40],ebx
    cmp         byte ptr [label_000000014003CC68],0
    je          0000000140029124
    test        bl,label_40
    je          0000000140029124
    mov         ecx,ebx
    call        00000001400269A0
    jmp         000000014002912E
    mov         byte ptr [label_000000014003CC68],0
    mov         ebx,dword ptr [rsp+label_40]
    and         ebx,label_0FFFFFFBF
    mov         ecx,ebx
    call        00000001400269A0
    mov         esi,label_100
    mov         r14d,label_200
    mov         r15d,label_6000
    jmp         000000014002912E
    and         ebx,label_0FFFFFFBF
    mov         ecx,ebx
    call        00000001400269A0
    mov         ecx,ebx
    shr         ecx,3
    and         ecx,label_10
    mov         edx,ecx
    or          edx,8
    test        r14d,ebx
    cmove       edx,ecx
    mov         ecx,edx
    or          ecx,4
    bt          ebx,label_0A
    cmovae      ecx,edx
    mov         edx,ecx
    or          edx,2
    bt          ebx,label_0B
    cmovae      edx,ecx
    mov         ecx,edx
    or          ecx,1
    bt          ebx,label_0C
    cmovae      ecx,edx
    mov         edx,ecx
    bts         edx,label_13
    test        esi,ebx
    cmove       edx,ecx
    mov         eax,ebx
    and         eax,r15d
    je          0000000140029199
    cmp         eax,label_2000
    je          0000000140029197
    cmp         eax,label_4000
    je          0000000140029192
    cmp         eax,r15d
    jne         0000000140029199
    or          edx,label_300
    jmp         0000000140029199
    or          edx,r14d
    jmp         0000000140029199
    or          edx,esi
    and         ebx,label_8040
    sub         ebx,label_40
    je          00000001400291BF
    sub         ebx,label_7FC0
    je          00000001400291B7
    cmp         ebx,label_40
    jne         00000001400291C3
    bts         edx,label_18
    jmp         00000001400291C3
    or          edx,label_3000000
    jmp         00000001400291C3
    bts         edx,label_19
    mov         eax,edx
    mov         rbx,qword ptr [rsp+label_48]
    mov         rsi,qword ptr [rsp+label_50]
    add         rsp,label_20
    pop         r15
    pop         r14
    pop         r12
    ret
func_00000001400291D9_end:
    int         3
    int         3
    mov         rax,rsp
    push        rbx
    sub         rsp,label_50
    movsd       xmm0,mmword ptr [rsp+label_0000000000000080]
    mov         ebx,ecx
    movsd       xmm1,mmword ptr [rsp+label_0000000000000088]
    mov         edx,label_0FFC0
    mov         dword ptr [rax-label_38],ecx
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    movsd       mmword ptr [rax-label_20],xmm0
    movsd       mmword ptr [rax-label_18],xmm1
    movsd       mmword ptr [rax-label_28],xmm3
    mov         qword ptr [rax-label_30],r8
    call        000000014001FBB0
    lea         rcx,[rsp+label_20]
    call        00000001400161C0
    test        eax,eax
    jne         0000000140029235
    mov         ecx,ebx
    call        000000014001FB60
    movsd       xmm0,mmword ptr [rsp+label_40]
    add         rsp,label_50
    pop         rbx
    ret
func_0000000140029240_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    mov         qword ptr [rsp+label_10],rsi
    push        rdi
    sub         rsp,label_20
    mov         ebx,ecx
    mov         rsi,rdx
    and         ebx,label_1F
    mov         edi,ecx
    test        cl,8
    je          0000000140029276
    test        sil,sil
    jns         0000000140029276
    mov         ecx,1
    call        000000014001FC2C
    and         ebx,label_0FFFFFFF7
    jmp         00000001400292CD
    mov         ecx,4
    test        cl,dil
    je          0000000140029291
    bt          rsi,9
    jae         0000000140029291
    call        000000014001FC2C
    and         ebx,label_0FFFFFFFB
    jmp         00000001400292CD
    test        dil,1
    je          00000001400292AD
    bt          rsi,label_0A
    jae         00000001400292AD
    mov         ecx,8
    call        000000014001FC2C
    and         ebx,label_0FFFFFFFE
    jmp         00000001400292CD
    test        dil,2
    je          00000001400292CD
    bt          rsi,label_0B
    jae         00000001400292CD
    test        dil,label_10
    je          00000001400292CA
    mov         ecx,label_10
    call        000000014001FC2C
    and         ebx,label_0FFFFFFFD
    test        dil,label_10
    je          00000001400292E7
    bt          rsi,label_0C
    jae         00000001400292E7
    mov         ecx,label_20
    call        000000014001FC2C
    and         ebx,label_0FFFFFFEF
    mov         rsi,qword ptr [rsp+label_38]
    xor         eax,eax
    test        ebx,ebx
    mov         rbx,qword ptr [rsp+label_30]
    sete        al
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400292FD_end:
    int         3
    int         3
    mov         rax,rsp
    push        rbp
    push        rbx
    push        rsi
    push        rdi
    push        r14
    lea         rbp,[rax-label_37]
    sub         rsp,label_0E0
    movaps      xmmword ptr [rax-label_38],xmm6
    mov         rax,qword ptr [label_000000014003C040]
    xor         rax,rsp
    mov         qword ptr [rbp-label_11],rax
    mov         esi,edx
    mov         r14,rcx
    mov         edx,label_0FFC0
    mov         ecx,label_1F80
    mov         edi,r9d
    mov         rbx,r8
    call        000000014001FBB0
    mov         ecx,dword ptr [rbp+label_5F]
    mov         qword ptr [rsp+label_48],rax
    mov         qword ptr [rsp+label_40],rbx
    movsd       xmm0,mmword ptr [rsp+label_40]
    mov         rdx,qword ptr [rsp+label_48]
    movsd       mmword ptr [rsp+label_40],xmm0
    call        0000000140029244
    movsd       xmm6,mmword ptr [rbp+label_77]
    test        eax,eax
    jne         00000001400293AC
    cmp         dword ptr [rbp+label_7F],2
    jne         0000000140029383
    mov         eax,dword ptr [rbp-label_41]
    and         eax,label_0FFFFFFE3
    movsd       mmword ptr [rbp-label_51],xmm6
    or          eax,3
    mov         dword ptr [rbp-label_41],eax
    mov         r8d,dword ptr [rbp+label_5F]
    lea         rax,[rsp+label_40]
    mov         qword ptr [rsp+label_28],rax
    lea         rdx,[rsp+label_48]
    lea         rax,[rbp+label_6F]
    mov         r9d,esi
    lea         rcx,[rsp+label_50]
    mov         qword ptr [rsp+label_20],rax
    call        000000014001F830
    call        0000000140016198
    test        al,al
    je          00000001400293E9
    test        edi,edi
    je          00000001400293E9
    mov         rax,qword ptr [rsp+label_48]
    mov         r8,r14
    movsd       xmm0,mmword ptr [rsp+label_40]
    mov         ecx,edi
    movsd       xmm3,mmword ptr [rbp+label_6F]
    mov         edx,dword ptr [rbp+label_67]
    mov         qword ptr [rsp+label_30],rax
    movsd       mmword ptr [rsp+label_28],xmm0
    movsd       mmword ptr [rsp+label_20],xmm6
    call        00000001400291DC
    jmp         0000000140029405
    mov         ecx,edi
    call        000000014001FB60
    mov         rcx,qword ptr [rsp+label_48]
    mov         edx,label_0FFC0
    call        000000014001FBB0
    movsd       xmm0,mmword ptr [rsp+label_40]
    mov         rcx,qword ptr [rbp-label_11]
    xor         rcx,rsp
    call        00000001400099A0
    movaps      xmm6,xmmword ptr [rsp+label_00000000000000D0]
    add         rsp,label_0E0
    pop         r14
    pop         rdi
    pop         rsi
    pop         rbx
    pop         rbp
    ret
func_0000000140029426_end:
    int         3
    mov         rax,label_8000000000000
    or          rcx,rax
    mov         qword ptr [rsp+8],rcx
    movsd       xmm0,mmword ptr [rsp+8]
    ret
func_0000000140029440_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbx
    sub         rsp,label_10
    xor         r8d,r8d
    xor         ecx,ecx
    mov         dword ptr [label_000000014003EA00],r8d
    lea         r9d,[r8+1]
    mov         eax,r9d
    cpuid
    mov         dword ptr [rsp],eax
    mov         eax,label_18001000
    mov         dword ptr [rsp+8],ecx
    and         ecx,eax
    mov         dword ptr [rsp+4],ebx
    mov         dword ptr [rsp+label_0C],edx
    cmp         ecx,eax
    jne         00000001400294B1
    xor         ecx,ecx
    xgetbv
    shl         rdx,label_20
    or          rdx,rax
    mov         qword ptr [rsp+label_20],rdx
    mov         rax,qword ptr [rsp+label_20]
    mov         r8d,dword ptr [label_000000014003EA00]
    and         al,6
    cmp         al,6
    cmove       r8d,r9d
    mov         dword ptr [label_000000014003EA00],r8d
    mov         dword ptr [label_000000014003EA04],r8d
    xor         eax,eax
    add         rsp,label_10
    pop         rbx
    ret
func_00000001400294BF_end:
    sub         rsp,label_38
    lea         rax,[label_0000000140031330]
    mov         r9d,label_1B
    mov         qword ptr [rsp+label_20],rax
    call        00000001400294E0
    add         rsp,label_38
    ret
func_00000001400294DF_end:
    mov         rax,rsp
    sub         rsp,label_68
    movaps      xmmword ptr [rax-label_18],xmm6
    movaps      xmm6,xmm1
    mov         edx,r9d
    movaps      xmm3,xmm0
    sub         r8d,1
    je          0000000140029524
    cmp         r8d,1
    jne         0000000140029569
    mov         dword ptr [rax-label_28],r8d
    xorps       xmm2,xmm2
    movsd       mmword ptr [rax-label_30],xmm2
    mov         r9d,r8d
    movsd       mmword ptr [rax-label_38],xmm0
    mov         dword ptr [rax-label_40],label_21
    mov         dword ptr [rax-label_48],8
    jmp         0000000140029551
    mov         dword ptr [rsp+label_40],1
    xorps       xmm0,xmm0
    movsd       mmword ptr [rsp+label_38],xmm0
    mov         r9d,2
    movsd       mmword ptr [rsp+label_30],xmm3
    mov         dword ptr [rsp+label_28],label_22
    mov         dword ptr [rsp+label_20],4
    mov         rcx,qword ptr [rsp+label_0000000000000090]
    movsd       mmword ptr [rsp+label_78],xmm6
    mov         r8,qword ptr [rsp+label_78]
    call        0000000140029300
    movaps      xmm0,xmm6
    movaps      xmm6,xmmword ptr [rsp+label_50]
    add         rsp,label_68
    ret
func_0000000140029575_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    movsxd      r8,dword ptr [rcx+label_3C]
    xor         r9d,r9d
    add         r8,rcx
    mov         r10,rdx
    movzx       eax,word ptr [r8+label_14]
    movzx       r11d,word ptr [r8+6]
    add         rax,label_18
    add         rax,r8
    test        r11d,r11d
    je          00000001400295C1
    mov         edx,dword ptr [rax+label_0C]
    cmp         r10,rdx
    jb          00000001400295B5
    mov         ecx,dword ptr [rax+8]
    add         ecx,edx
    cmp         r10,rcx
    jb          00000001400295C3
    inc         r9d
    add         rax,label_28
    cmp         r9d,r11d
    jb          00000001400295A3
    xor         eax,eax
    ret
func_00000001400295C3_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rbx,rcx
    lea         rdi,[label_0000000140000000]
    mov         rcx,rdi
    call        0000000140029620
    test        eax,eax
    je          0000000140029612
    sub         rbx,rdi
    mov         rdx,rbx
    mov         rcx,rdi
    call        0000000140029580
    test        rax,rax
    je          0000000140029612
    mov         eax,dword ptr [rax+label_24]
    shr         eax,label_1F
    not         eax
    and         eax,1
    jmp         0000000140029612
    xor         eax,eax
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_000000014002961C_end:
    int         3
    int         3
    int         3
    mov         eax,label_5A4D
    cmp         word ptr [rcx],ax
    jne         0000000140029648
    movsxd      rdx,dword ptr [rcx+label_3C]
    add         rdx,rcx
    cmp         dword ptr [rdx],label_4550
    jne         0000000140029648
    xor         eax,eax
    mov         ecx,label_20B
    cmp         word ptr [rdx+label_18],cx
    sete        al
    ret
func_0000000140029647_end:
    xor         eax,eax
    ret
func_000000014002964A_end:
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    mov         r10,qword ptr [r9+label_38]
    mov         rsi,rdx
    mov         r14,r8
    mov         rbp,rcx
    mov         rdx,r9
    mov         rcx,rsi
    mov         rdi,r9
    mov         ebx,dword ptr [r10]
    shl         rbx,4
    add         rbx,r10
    lea         r8,[rbx+4]
    call        0000000140009A0C
    mov         eax,dword ptr [rbp+4]
    and         al,label_66
    neg         al
    mov         eax,1
    sbb         edx,edx
    neg         edx
    add         edx,eax
    test        dword ptr [rbx+4],edx
    je          00000001400296B6
    mov         r9,rdi
    mov         r8,r14
    mov         rdx,rsi
    mov         rcx,rbp
    call        000000014000B780
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_00000001400296D0_end:
    int         3
    int         3
    int         3
    mov         rax,rsp
    mov         qword ptr [rax+8],rbx
    mov         qword ptr [rax+label_10],rbp
    mov         qword ptr [rax+label_18],rsi
    mov         qword ptr [rax+label_20],rdi
    push        r14
    sub         rsp,label_20
    mov         rbx,qword ptr [r9+label_38]
    mov         rsi,rdx
    mov         r14,r8
    mov         rbp,rcx
    mov         rdx,r9
    mov         rcx,rsi
    mov         rdi,r9
    lea         r8,[rbx+4]
    call        0000000140009A0C
    mov         eax,dword ptr [rbp+4]
    and         al,label_66
    neg         al
    mov         eax,1
    sbb         r8d,r8d
    neg         r8d
    add         r8d,eax
    test        dword ptr [rbx+4],r8d
    je          0000000140029738
    mov         r9,rdi
    mov         r8,r14
    mov         rdx,rsi
    mov         rcx,rbp
    call        000000014000B488
    mov         rbx,qword ptr [rsp+label_30]
    mov         rbp,qword ptr [rsp+label_38]
    mov         rsi,qword ptr [rsp+label_40]
    mov         rdi,qword ptr [rsp+label_48]
    add         rsp,label_20
    pop         r14
    ret
func_0000000140029752_end:
    int         3
    mov         qword ptr [rsp+label_10],rdx
    mov         qword ptr [rsp+8],rcx
    sub         rsp,label_28
    xor         r9d,r9d
    xor         r8d,r8d
    mov         rdx,qword ptr [rsp+label_38]
    mov         rcx,qword ptr [rsp+label_30]
    call label_000000014002C298
    add         rsp,label_28
    ret
func_000000014002977C_end:
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    push        rdi
    sub         rsp,label_20
    mov         rdi,r8
    mov         rbx,rcx
    call        000000014000B780
    test        byte ptr [rbx+4],label_66
    jne         00000001400297A8
    cmp         dword ptr [rbx],label_0E06D7363
    jne         00000001400297A8
    cmp         eax,1
    je          00000001400297B3
    mov         rbx,qword ptr [rsp+label_30]
    add         rsp,label_20
    pop         rdi
    ret
func_00000001400297B2_end:
    call        000000014000BA24
    mov         qword ptr [rax+label_20],rbx
    call        000000014000BA24
    mov         qword ptr [rax+label_28],rdi
    call        0000000140018C50
    int         3
    int         3
    mov         qword ptr [rsp+8],rbx
    xor         r9d,r9d
    mov         r8,rcx
    test        edx,edx
    jne         000000014002981E
    mov         rdx,rcx
    and         r8d,label_0F
    and         rdx,label_0FFFFFFFFFFFFFFF0
    or          r10d,label_0FFFFFFFF
    xorps       xmm0,xmm0
    mov         ecx,r8d
    shl         r10d,cl
    pcmpeqb     xmm0,xmmword ptr [rdx]
    pmovmskb    eax,xmm0
    and         eax,r10d
    jne         0000000140029813
    add         rdx,label_10
    xorps       xmm0,xmm0
    pcmpeqb     xmm0,xmmword ptr [rdx]
    pmovmskb    eax,xmm0
    test        eax,eax
    je          0000000140029800
    bsf         eax,eax
    add         rax,rdx
    jmp         00000001400298C3
    cmp         dword ptr [label_000000014003C090],2
    jge         00000001400298DC
    movzx       eax,dl
    or          r10d,label_0FFFFFFFF
    mov         ecx,eax
    mov         r11,r8
    shl         ecx,8
    and         r11,label_0FFFFFFFFFFFFFFF0
    or          ecx,eax
    and         r8d,label_0F
    mov         eax,r10d
    movd        xmm0,ecx
    mov         ecx,r8d
    pshuflw     xmm1,xmm0,0
    xorps       xmm0,xmm0
    pcmpeqb     xmm0,xmmword ptr [r11]
    pmovmskb    ebx,xmm0
    shl         r10d,cl
    pshufd      xmm2,xmm1,0
    movdqa      xmm0,xmm2
    shl         eax,cl
    pcmpeqb     xmm0,xmmword ptr [r11]
    pmovmskb    edx,xmm0
    and         edx,r10d
    and         ebx,eax
    jne         00000001400298AA
    bsr         ecx,edx
    xorps       xmm1,xmm1
    movdqa      xmm0,xmm2
    add         rcx,r11
    test        edx,edx
    cmovne      r9,rcx
    add         r11,label_10
    pcmpeqb     xmm1,xmmword ptr [r11]
    pcmpeqb     xmm0,xmmword ptr [r11]
    pmovmskb    ebx,xmm1
    pmovmskb    edx,xmm0
    test        ebx,ebx
    je          000000014002987D
    mov         eax,ebx
    neg         eax
    and         eax,ebx
    dec         eax
    and         edx,eax
    bsr         ecx,edx
    add         rcx,r11
    test        edx,edx
    cmovne      r9,rcx
    mov         rax,r9
    mov         rbx,qword ptr [rsp+8]
    ret
func_00000001400298C8_end:
    movsx       eax,byte ptr [r8]
    cmp         eax,edx
    cmove       r9,r8
    cmp         byte ptr [r8],0
    je          00000001400298C0
    inc         r8
    test        r8b,label_0F
    jne         00000001400298C9
    movzx       eax,dl
    movd        xmm0,eax
    pcmpistri   xmm0,xmmword ptr [r8],label_40
    jae         00000001400298FF
    movsxd      r9,ecx
    add         r9,r8
    pcmpistri   xmm0,xmmword ptr [r8],label_40
    je          00000001400298C0
    add         r8,label_10
    jmp         00000001400298E9
    int         3
    movzx       eax,dl
    mov         r8,rcx
    mov         r10d,eax
    and         r8,label_0FFFFFFFFFFFFFFF0
    shl         r10d,8
    and         ecx,label_0F
    or          r10d,eax
    xor         r9d,r9d
    or          eax,label_0FFFFFFFF
    shl         eax,cl
    movd        xmm0,r10d
    pshuflw     xmm1,xmm0,0
    xorps       xmm0,xmm0
    pcmpeqb     xmm0,xmmword ptr [r8]
    pshufd      xmm2,xmm1,0
    movdqa      xmm1,xmm2
    pcmpeqb     xmm1,xmmword ptr [r8]
    orps        xmm1,xmm0
    pmovmskb    edx,xmm1
    and         edx,eax
    jne         0000000140029972
    add         r8,label_10
    movdqa      xmm1,xmm2
    xorps       xmm0,xmm0
    pcmpeqb     xmm1,xmmword ptr [r8]
    pcmpeqb     xmm0,xmmword ptr [r8]
    orps        xmm1,xmm0
    pmovmskb    edx,xmm1
    test        edx,edx
    je          0000000140029952
    bsf         edx,edx
    add         rdx,r8
    cmp         byte ptr [rdx],r10b
    cmove       r9,rdx
    mov         rax,r9
    ret
func_0000000140029982_end:
    int         3
    movzx       eax,dx
    mov         r8,rcx
    xor         r9d,r9d
    movd        xmm0,eax
    pshuflw     xmm1,xmm0,0
    pshufd      xmm2,xmm1,0
    mov         rax,r8
    and         eax,label_0FFF
    cmp         rax,label_0FF0
    ja          00000001400299CD
    movdqu      xmm0,xmmword ptr [r8]
    xorps       xmm1,xmm1
    pcmpeqw     xmm1,xmm0
    pcmpeqw     xmm0,xmm2
    orps        xmm1,xmm0
    pmovmskb    eax,xmm1
    test        eax,eax
    jne         00000001400299E3
    mov         eax,label_10
    jmp         00000001400299DE
    cmp         word ptr [r8],dx
    je          00000001400299F8
    cmp         word ptr [r8],r9w
    je          00000001400299F5
    mov         eax,2
    add         r8,rax
    jmp         000000014002999B
    bsf         ecx,eax
    add         r8,rcx
    cmp         word ptr [r8],dx
    cmove       r9,r8
    mov         rax,r9
    ret
func_00000001400299F4_end:
    xor         eax,eax
    ret
func_00000001400299F7_end:
    mov         rax,r8
    ret
func_00000001400299FB_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    jmp         rax
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    jmp         qword ptr [label_000000014002C2B8]
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    push        rdi
    push        rsi
    mov         rdi,rcx
    mov         rsi,rdx
    mov         rcx,r8
    rep movs    byte ptr [rdi],byte ptr [rsi]
    pop         rsi
    pop         rdi
    ret
func_0000000140029A6F_end:
    mov         rax,rcx
    lea         r10,[label_0000000140000000]
    cmp         r8,label_0F
    ja          0000000140029B90
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         r9d,dword ptr [r10+r8*4+label_00000000000372B0]
    add         r9,r10
    jmp         r9
    ret
func_0000000140029A9E_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    movzx       r10d,byte ptr [rdx+label_0E]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    mov         byte ptr [rax+label_0E],r10b
    ret
func_0000000140029ABF_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0A]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    mov         byte ptr [rax+label_0A],r9b
    ret
func_0000000140029AD7_end:
    movzx       ecx,word ptr [rdx]
    mov         word ptr [rax],cx
    ret
func_0000000140029ADE_end:
    nop
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    movzx       r9d,byte ptr [rdx+6]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    mov         byte ptr [rax+6],r9b
    ret
func_0000000140029AF7_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,word ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         word ptr [rax+label_0C],r9w
    ret
func_0000000140029B0E_end:
    movzx       ecx,word ptr [rdx]
    movzx       r8d,byte ptr [rdx+2]
    mov         word ptr [rax],cx
    mov         byte ptr [rax+2],r8b
    ret
func_0000000140029B1E_end:
    nop
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    movzx       r9d,byte ptr [rdx+label_0C]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    mov         byte ptr [rax+label_0C],r9b
    ret
func_0000000140029B35_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,word ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         word ptr [rax+8],cx
    ret
func_0000000140029B44_end:
    mov         r8,qword ptr [rdx]
    movzx       ecx,byte ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         byte ptr [rax+8],cl
    ret
func_0000000140029B52_end:
    mov         r8,qword ptr [rdx]
    mov         ecx,dword ptr [rdx+8]
    mov         qword ptr [rax],r8
    mov         dword ptr [rax+8],ecx
    ret
func_0000000140029B5F_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,word ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         word ptr [rax+4],r8w
    ret
func_0000000140029B6E_end:
    mov         ecx,dword ptr [rdx]
    movzx       r8d,byte ptr [rdx+4]
    mov         dword ptr [rax],ecx
    mov         byte ptr [rax+4],r8b
    ret
func_0000000140029B7C_end:
    mov         rcx,qword ptr [rdx]
    mov         qword ptr [rax],rcx
    ret
func_0000000140029B83_end:
    movzx       ecx,byte ptr [rdx]
    mov         byte ptr [rax],cl
    ret
func_0000000140029B89_end:
    mov         ecx,dword ptr [rdx]
    mov         dword ptr [rax],ecx
    ret
func_0000000140029B8E_end:
    nop
    cmp         r8,label_20
    ja          0000000140029BAD
    movdqu      xmm1,xmmword ptr [rdx]
    movdqu      xmm2,xmmword ptr [rdx+r8-label_10]
    movdqu      xmmword ptr [rcx],xmm1
    movdqu      xmmword ptr [rcx+r8-label_10],xmm2
    ret
func_0000000140029BAC_end:
    lea         r9,[rdx+r8]
    cmp         rcx,rdx
    cmovbe      r9,rcx
    cmp         rcx,r9
    jb          000000014002A000
    cmp         dword ptr [label_000000014003C090],3
    jb          0000000140029EB0
    cmp         r8,label_2000
    jbe         0000000140029BED
    cmp         r8,label_180000
    ja          0000000140029BED
    test        byte ptr [label_000000014003D798],2
    jne         0000000140029A60
    vmovdqu     ymm0,ymmword ptr [rdx]
    vmovdqu     ymm5,ymmword ptr [rdx+r8-label_20]
    cmp         r8,label_100
    jbe         0000000140029CC8
    mov         r9,rcx
    and         r9,label_1F
    sub         r9,label_20
    sub         rcx,r9
    sub         rdx,r9
    add         r8,r9
    cmp         r8,label_100
    jbe         0000000140029CC8
    cmp         r8,label_180000
    ja          0000000140029D70
    nop         word ptr [rax+rax+label_0000000000000000]
    vmovdqu     ymm1,ymmword ptr [rdx]
    vmovdqu     ymm2,ymmword ptr [rdx+label_20]
    vmovdqu     ymm3,ymmword ptr [rdx+label_40]
    vmovdqu     ymm4,ymmword ptr [rdx+label_60]
    vmovdqa     ymmword ptr [rcx],ymm1
    vmovdqa     ymmword ptr [rcx+label_20],ymm2
    vmovdqa     ymmword ptr [rcx+label_40],ymm3
    vmovdqa     ymmword ptr [rcx+label_60],ymm4
    vmovdqu     ymm1,ymmword ptr [rdx+label_0000000000000080]
    vmovdqu     ymm2,ymmword ptr [rdx+label_00000000000000A0]
    vmovdqu     ymm3,ymmword ptr [rdx+label_00000000000000C0]
    vmovdqu     ymm4,ymmword ptr [rdx+label_00000000000000E0]
    vmovdqa     ymmword ptr [rcx+label_0000000000000080],ymm1
    vmovdqa     ymmword ptr [rcx+label_00000000000000A0],ymm2
    vmovdqa     ymmword ptr [rcx+label_00000000000000C0],ymm3
    vmovdqa     ymmword ptr [rcx+label_00000000000000E0],ymm4
    add         rcx,label_100
    add         rdx,label_100
    sub         r8,label_100
    cmp         r8,label_100
    jae         0000000140029C40
    lea         r9,[r8+label_1F]
    and         r9,label_0FFFFFFFFFFFFFFE0
    mov         r11,r9
    shr         r11,5
    mov         r11d,dword ptr [r10+r11*4+label_00000000000372F0]
    add         r11,r10
    jmp         r11
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF00]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF00],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF20]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF20],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF40]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF40],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF60]
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_80]
    vmovdqu     ymmword ptr [rcx+r9-label_80],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_60]
    vmovdqu     ymmword ptr [rcx+r9-label_60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_40]
    vmovdqu     ymmword ptr [rcx+r9-label_40],ymm1
    vmovdqu     ymmword ptr [rcx+r8-label_20],ymm5
    vmovdqu     ymmword ptr [rax],ymm0
    vzeroupper
    ret
func_0000000140029D6D_end:
    nop
    vmovdqu     ymm1,ymmword ptr [rdx]
    vmovdqu     ymm2,ymmword ptr [rdx+label_20]
    vmovdqu     ymm3,ymmword ptr [rdx+label_40]
    vmovdqu     ymm4,ymmword ptr [rdx+label_60]
    vmovntdq    ymmword ptr [rcx],ymm1
    vmovntdq    ymmword ptr [rcx+label_20],ymm2
    vmovntdq    ymmword ptr [rcx+label_40],ymm3
    vmovntdq    ymmword ptr [rcx+label_60],ymm4
    vmovdqu     ymm1,ymmword ptr [rdx+label_0000000000000080]
    vmovdqu     ymm2,ymmword ptr [rdx+label_00000000000000A0]
    vmovdqu     ymm3,ymmword ptr [rdx+label_00000000000000C0]
    vmovdqu     ymm4,ymmword ptr [rdx+label_00000000000000E0]
    vmovntdq    ymmword ptr [rcx+label_0000000000000080],ymm1
    vmovntdq    ymmword ptr [rcx+label_00000000000000A0],ymm2
    vmovntdq    ymmword ptr [rcx+label_00000000000000C0],ymm3
    vmovntdq    ymmword ptr [rcx+label_00000000000000E0],ymm4
    add         rcx,label_100
    add         rdx,label_100
    sub         r8,label_100
    cmp         r8,label_100
    jae         0000000140029D70
    lea         r9,[r8+label_1F]
    and         r9,label_0FFFFFFFFFFFFFFE0
    mov         r11,r9
    shr         r11,5
    mov         r11d,dword ptr [r10+r11*4+label_0000000000037314]
    add         r11,r10
    jmp         r11
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF00]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF00],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF20]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF20],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF40]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF40],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9+label_FFFFFFFFFFFFFF60]
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_80]
    vmovntdq    ymmword ptr [rcx+r9-label_80],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_60]
    vmovntdq    ymmword ptr [rcx+r9-label_60],ymm1
    vmovdqu     ymm1,ymmword ptr [rdx+r9-label_40]
    vmovntdq    ymmword ptr [rcx+r9-label_40],ymm1
    vmovdqu     ymmword ptr [rcx+r8-label_20],ymm5
    vmovdqu     ymmword ptr [rax],ymm0
    sfence
    vzeroupper
    ret
func_0000000140029EA0_end:
    nop         word ptr [rax+rax+label_0000000000000000]
    cmp         r8,label_800
    jbe         0000000140029EC6
    test        byte ptr [label_000000014003D798],2
    jne         0000000140029A60
    movdqu      xmm0,xmmword ptr [rdx]
    movdqu      xmm5,xmmword ptr [rdx+r8-label_10]
    cmp         r8,label_80
    jbe         0000000140029F6C
    mov         r9,rcx
    and         r9,label_0F
    sub         r9,label_10
    sub         rcx,r9
    sub         rdx,r9
    add         r8,r9
    cmp         r8,label_80
    jbe         0000000140029F6C
    nop         dword ptr [rax+rax]
    movdqu      xmm1,xmmword ptr [rdx]
    movdqu      xmm2,xmmword ptr [rdx+label_10]
    movdqu      xmm3,xmmword ptr [rdx+label_20]
    movdqu      xmm4,xmmword ptr [rdx+label_30]
    movdqa      xmmword ptr [rcx],xmm1
    movdqa      xmmword ptr [rcx+label_10],xmm2
    movdqa      xmmword ptr [rcx+label_20],xmm3
    movdqa      xmmword ptr [rcx+label_30],xmm4
    movdqu      xmm1,xmmword ptr [rdx+label_40]
    movdqu      xmm2,xmmword ptr [rdx+label_50]
    movdqu      xmm3,xmmword ptr [rdx+label_60]
    movdqu      xmm4,xmmword ptr [rdx+label_70]
    movdqa      xmmword ptr [rcx+label_40],xmm1
    movdqa      xmmword ptr [rcx+label_50],xmm2
    movdqa      xmmword ptr [rcx+label_60],xmm3
    movdqa      xmmword ptr [rcx+label_70],xmm4
    add         rcx,label_80
    add         rdx,label_80
    sub         r8,label_80
    cmp         r8,label_80
    jae         0000000140029F00
    lea         r9,[r8+label_0F]
    and         r9,label_0FFFFFFFFFFFFFFF0
    mov         r11,r9
    shr         r11,4
    mov         r11d,dword ptr [r10+r11*4+label_0000000000037338]
    add         r11,r10
    jmp         r11
    movdqu      xmm1,xmmword ptr [rdx+r9-label_80]
    movdqu      xmmword ptr [rcx+r9-label_80],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_70]
    movdqu      xmmword ptr [rcx+r9-label_70],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_60]
    movdqu      xmmword ptr [rcx+r9-label_60],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_50]
    movdqu      xmmword ptr [rcx+r9-label_50],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_40]
    movdqu      xmmword ptr [rcx+r9-label_40],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_30]
    movdqu      xmmword ptr [rcx+r9-label_30],xmm1
    movdqu      xmm1,xmmword ptr [rdx+r9-label_20]
    movdqu      xmmword ptr [rcx+r9-label_20],xmm1
    movdqu      xmmword ptr [rcx+r8-label_10],xmm5
    movdqu      xmmword ptr [rax],xmm0
    ret
func_0000000140029FF6_end:
    nop         word ptr [rax+rax+label_0000000000000000]
    movups      xmm2,xmmword ptr [rdx]
    sub         rdx,rcx
    add         rcx,r8
    movups      xmm0,xmmword ptr [rcx+rdx-label_10]
    sub         rcx,label_10
    sub         r8,label_10
    test        cl,label_0F
    je          000000014002A033
    mov         r9,rcx
    and         rcx,label_0FFFFFFFFFFFFFFF0
    movups      xmm1,xmm0
    movups      xmm0,xmmword ptr [rcx+rdx]
    movups      xmmword ptr [r9],xmm1
    mov         r8,rcx
    sub         r8,rax
    mov         r9,r8
    shr         r9,7
    je          000000014002A0AD
    movaps      xmmword ptr [rcx],xmm0
    jmp         000000014002A057
    nop         word ptr [rax+rax+label_0000000000000000]
    movaps      xmmword ptr [rcx+label_10],xmm0
    movaps      xmmword ptr [rcx],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx-label_10]
    movups      xmm1,xmmword ptr [rcx+rdx-label_20]
    sub         rcx,label_80
    movaps      xmmword ptr [rcx+label_70],xmm0
    movaps      xmmword ptr [rcx+label_60],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx+label_50]
    movups      xmm1,xmmword ptr [rcx+rdx+label_40]
    dec         r9
    movaps      xmmword ptr [rcx+label_50],xmm0
    movaps      xmmword ptr [rcx+label_40],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx+label_30]
    movups      xmm1,xmmword ptr [rcx+rdx+label_20]
    movaps      xmmword ptr [rcx+label_30],xmm0
    movaps      xmmword ptr [rcx+label_20],xmm1
    movups      xmm0,xmmword ptr [rcx+rdx+label_10]
    movups      xmm1,xmmword ptr [rcx+rdx]
    jne         000000014002A050
    movaps      xmmword ptr [rcx+label_10],xmm0
    and         r8,label_7F
    movaps      xmm0,xmm1
    mov         r9,r8
    shr         r9,4
    je          000000014002A0D0
    nop         word ptr [rax+rax+label_0000000000000000]
    movups      xmmword ptr [rcx],xmm0
    sub         rcx,label_10
    movups      xmm0,xmmword ptr [rcx+rdx]
    dec         r9
    jne         000000014002A0C0
    and         r8,label_0F
    je          000000014002A0D9
    movups      xmmword ptr [rax],xmm2
    movups      xmmword ptr [rcx],xmm0
    ret
func_000000014002A0DC_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    push        rdi
    mov         eax,edx
    mov         rdi,rcx
    mov         rcx,r8
    rep stos    byte ptr [rdi]
    mov         rax,r9
    pop         rdi
    ret
func_000000014002A10F_end:
    mov         rax,rcx
    mov         r9,rcx
    lea         r10,[label_0000000140000000]
    movzx       edx,dl
    mov         r11,label_101010101010101
    imul        r11,rdx
    movq        xmm0,r11
    cmp         r8,label_0F
    ja          000000014002A1C0
    nop         dword ptr [rax]
    add         rcx,r8
    mov         r9d,dword ptr [r10+r8*4+label_0000000000037360]
    add         r9,r10
    jmp         r9
    mov         qword ptr [rcx-label_0F],r11
    mov         dword ptr [rcx-7],r11d
    mov         word ptr [rcx-3],r11w
    mov         byte ptr [rcx-1],r11b
    ret
func_000000014002A162_end:
    mov         qword ptr [rcx-label_0E],r11
    mov         dword ptr [rcx-6],r11d
    mov         word ptr [rcx-2],r11w
    ret
func_000000014002A170_end:
    nop         word ptr [rax+rax+label_0000000000000000]
    mov         qword ptr [rcx-label_0D],r11
    mov         dword ptr [rcx-5],r11d
    mov         byte ptr [rcx-1],r11b
    ret
func_000000014002A18C_end:
    nop         dword ptr [rax]
    mov         qword ptr [rcx-label_0C],r11
    mov         dword ptr [rcx-4],r11d
    ret
func_000000014002A198_end:
    mov         qword ptr [rcx-label_0B],r11
    mov         word ptr [rcx-3],r11w
    mov         byte ptr [rcx-1],r11b
    ret
func_000000014002A1A6_end:
    mov         qword ptr [rcx-9],r11
    mov         byte ptr [rcx-1],r11b
    ret
func_000000014002A1AF_end:
    mov         qword ptr [rcx-label_0A],r11
    mov         word ptr [rcx-2],r11w
    ret
func_000000014002A1B9_end:
    mov         qword ptr [rcx-8],r11
    ret
func_000000014002A1BE_end:
    nop
    punpcklqdq  xmm0,xmm0
    cmp         r8,label_20
    ja          000000014002A1D6
    movdqu      xmmword ptr [rcx],xmm0
    movdqu      xmmword ptr [rcx+r8-label_10],xmm0
    ret
func_000000014002A1D5_end:
    cmp         dword ptr [label_000000014003C090],3
    jb          000000014002A3C0
    cmp         r8,qword ptr [label_000000014003C098]
    jbe         000000014002A202
    cmp         r8,qword ptr [label_000000014003C0A0]
    ja          000000014002A202
    test        byte ptr [label_000000014003D798],2
    jne         000000014002A100
    vinsertf128 ymm0,ymm0,xmm0,1
    mov         r9,rcx
    and         r9,label_1F
    sub         r9,label_20
    sub         rcx,r9
    sub         rdx,r9
    add         r8,r9
    cmp         r8,label_100
    jbe         000000014002A28A
    cmp         r8,qword ptr [label_000000014003C0A0]
    ja          000000014002A300
    nop         word ptr [rax+rax+label_0000000000000000]
    vmovdqa     ymmword ptr [rcx],ymm0
    vmovdqa     ymmword ptr [rcx+label_20],ymm0
    vmovdqa     ymmword ptr [rcx+label_40],ymm0
    vmovdqa     ymmword ptr [rcx+label_60],ymm0
    vmovdqa     ymmword ptr [rcx+label_0000000000000080],ymm0
    vmovdqa     ymmword ptr [rcx+label_00000000000000A0],ymm0
    vmovdqa     ymmword ptr [rcx+label_00000000000000C0],ymm0
    vmovdqa     ymmword ptr [rcx+label_00000000000000E0],ymm0
    add         rcx,label_100
    sub         r8,label_100
    cmp         r8,label_100
    jae         000000014002A240
    lea         r9,[r8+label_1F]
    and         r9,label_0FFFFFFFFFFFFFFE0
    mov         r11,r9
    shr         r11,5
    mov         r11d,dword ptr [r10+r11*4+label_00000000000373A0]
    add         r11,r10
    jmp         r11
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF00],ymm0
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF20],ymm0
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF40],ymm0
    vmovdqu     ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF60],ymm0
    vmovdqu     ymmword ptr [rcx+r9-label_80],ymm0
    vmovdqu     ymmword ptr [rcx+r9-label_60],ymm0
    vmovdqu     ymmword ptr [rcx+r9-label_40],ymm0
    vmovdqu     ymmword ptr [rcx+r8-label_20],ymm0
    vmovdqu     ymmword ptr [rax],ymm0
    vzeroupper
    ret
func_000000014002A2F2_end:
    nop         word ptr [rax+rax+label_0000000000000000]
    vmovntdq    ymmword ptr [rcx],ymm0
    vmovntdq    ymmword ptr [rcx+label_20],ymm0
    vmovntdq    ymmword ptr [rcx+label_40],ymm0
    vmovntdq    ymmword ptr [rcx+label_60],ymm0
    vmovntdq    ymmword ptr [rcx+label_0000000000000080],ymm0
    vmovntdq    ymmword ptr [rcx+label_00000000000000A0],ymm0
    vmovntdq    ymmword ptr [rcx+label_00000000000000C0],ymm0
    vmovntdq    ymmword ptr [rcx+label_00000000000000E0],ymm0
    add         rcx,label_100
    sub         r8,label_100
    cmp         r8,label_100
    jae         000000014002A300
    lea         r9,[r8+label_1F]
    and         r9,label_0FFFFFFFFFFFFFFE0
    mov         r11,r9
    shr         r11,5
    mov         r11d,dword ptr [r10+r11*4+label_00000000000373C4]
    add         r11,r10
    jmp         r11
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF00],ymm0
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF20],ymm0
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF40],ymm0
    vmovntdq    ymmword ptr [rcx+r9+label_FFFFFFFFFFFFFF60],ymm0
    vmovntdq    ymmword ptr [rcx+r9-label_80],ymm0
    vmovntdq    ymmword ptr [rcx+r9-label_60],ymm0
    vmovntdq    ymmword ptr [rcx+r9-label_40],ymm0
    vmovdqu     ymmword ptr [rcx+r8-label_20],ymm0
    vmovdqu     ymmword ptr [rax],ymm0
    sfence
    vzeroupper
    ret
func_000000014002A3B5_end:
    nop         word ptr [rax+rax+label_0000000000000000]
    cmp         r8,qword ptr [label_000000014003C098]
    jbe         000000014002A3D6
    test        byte ptr [label_000000014003D798],2
    jne         000000014002A100
    mov         r9,rcx
    and         r9,label_0F
    sub         r9,label_10
    sub         rcx,r9
    sub         rdx,r9
    add         r8,r9
    cmp         r8,label_80
    jbe         000000014002A43E
    nop         word ptr [rax+rax+label_0000000000000000]
    movdqa      xmmword ptr [rcx],xmm0
    movdqa      xmmword ptr [rcx+label_10],xmm0
    movdqa      xmmword ptr [rcx+label_20],xmm0
    movdqa      xmmword ptr [rcx+label_30],xmm0
    movdqa      xmmword ptr [rcx+label_40],xmm0
    movdqa      xmmword ptr [rcx+label_50],xmm0
    movdqa      xmmword ptr [rcx+label_60],xmm0
    movdqa      xmmword ptr [rcx+label_70],xmm0
    add         rcx,label_80
    sub         r8,label_80
    cmp         r8,label_80
    jae         000000014002A400
    lea         r9,[r8+label_0F]
    and         r9,label_0FFFFFFFFFFFFFFF0
    mov         r11,r9
    shr         r11,4
    mov         r11d,dword ptr [r10+r11*4+label_00000000000373E8]
    add         r11,r10
    jmp         r11
    movdqu      xmmword ptr [rcx+r9-label_80],xmm0
    movdqu      xmmword ptr [rcx+r9-label_70],xmm0
    movdqu      xmmword ptr [rcx+r9-label_60],xmm0
    movdqu      xmmword ptr [rcx+r9-label_50],xmm0
    movdqu      xmmword ptr [rcx+r9-label_40],xmm0
    movdqu      xmmword ptr [rcx+r9-label_30],xmm0
    movdqu      xmmword ptr [rcx+r9-label_20],xmm0
    movdqu      xmmword ptr [rcx+r8-label_10],xmm0
    movdqu      xmmword ptr [rax],xmm0
    ret
func_000000014002A497_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    nop         word ptr [rax+rax+label_0000000000000000]
    sub         rdx,rcx
    cmp         r8,8
    jb          000000014002A4EB
    test        cl,7
    je          000000014002A4E2
    nop
    mov         al,byte ptr [rcx]
    cmp         al,byte ptr [rcx+rdx]
    jne         000000014002A503
    inc         rcx
    dec         r8
    test        cl,7
    jne         000000014002A4D0
    mov         r9,r8
    shr         r9,3
    jne         000000014002A50A
    test        r8,r8
    je          000000014002A4FF
    mov         al,byte ptr [rcx]
    cmp         al,byte ptr [rcx+rdx]
    jne         000000014002A503
    inc         rcx
    dec         r8
    jne         000000014002A4F0
    xor         rax,rax
    ret
func_000000014002A502_end:
    sbb         eax,eax
    sbb         eax,label_0FFFFFFFF
    ret
func_000000014002A508_end:
    nop
    shr         r9,2
    je          000000014002A547
    mov         rax,qword ptr [rcx]
    cmp         rax,qword ptr [rcx+rdx]
    jne         000000014002A574
    mov         rax,qword ptr [rcx+8]
    cmp         rax,qword ptr [rcx+rdx+8]
    jne         000000014002A570
    mov         rax,qword ptr [rcx+label_10]
    cmp         rax,qword ptr [rcx+rdx+label_10]
    jne         000000014002A56C
    mov         rax,qword ptr [rcx+label_18]
    cmp         rax,qword ptr [rcx+rdx+label_18]
    jne         000000014002A568
    add         rcx,label_20
    dec         r9
    jne         000000014002A510
    and         r8,label_1F
    mov         r9,r8
    shr         r9,3
    je          000000014002A4EB
    mov         rax,qword ptr [rcx]
    cmp         rax,qword ptr [rcx+rdx]
    jne         000000014002A574
    add         rcx,8
    dec         r9
    jne         000000014002A550
    and         r8,7
    jmp         000000014002A4EB
    add         rcx,8
    add         rcx,8
    add         rcx,8
    mov         rcx,qword ptr [rdx+rcx]
    bswap       rax
    bswap       rcx
    cmp         rax,rcx
    sbb         eax,eax
    sbb         eax,label_0FFFFFFFF
    ret
func_000000014002A586_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_0000000000000378]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A5AA_end:
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_0000000000000478]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A5C5_end:
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_0000000000000398]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A5E0_end:
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_00000000000003B8]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A5FB_end:
    mov         qword ptr [rsp+label_10],rdx
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rax,[rbp+label_00000000000002B8]
    mov         qword ptr [rbp+label_0000000000000110],rax
    mov         rax,qword ptr [rbp+label_00000000000000F8]
    mov         rax,qword ptr [rax]
    mov         rcx,qword ptr [rbp+label_00000000000000F8]
    call rax+8
    mov         rdx,rax
    lea         rcx,[rbp+label_00000000000003D8]
    call        0000000140003AC0
    mov         qword ptr [rbp+label_0000000000000100],rax
    mov         rax,qword ptr [rbp+label_0000000000000100]
    mov         qword ptr [rbp+label_0000000000000108],rax
    mov         r8,qword ptr [rbp+label_0000000000000108]
    lea         rdx,[label_000000014002C438]
    mov         rcx,qword ptr [rbp+label_0000000000000110]
    call        0000000140001710
    mov         qword ptr [rbp+label_0000000000000118],rax
    mov         rcx,qword ptr [rbp+label_0000000000000118]
    call        00000001400038D0
    nop
    lea         rcx,[rbp+label_00000000000003D8]
    call        0000000140002410
    nop
    lea         rax,[label_00000001400013F8]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A696_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_00000000000003D8]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A6B2_end:
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_00000000000003F8]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A6CD_end:
    mov         qword ptr [rsp+label_10],rdx
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rax,[rbp+label_0000000000000318]
    mov         qword ptr [rbp+label_0000000000000168],rax
    mov         rax,qword ptr [rbp+label_0000000000000150]
    mov         rax,qword ptr [rax]
    mov         rcx,qword ptr [rbp+label_0000000000000150]
    call rax+8
    mov         rdx,rax
    lea         rcx,[rbp+label_0000000000000418]
    call        0000000140003AC0
    mov         qword ptr [rbp+label_0000000000000158],rax
    mov         rax,qword ptr [rbp+label_0000000000000158]
    mov         qword ptr [rbp+label_0000000000000160],rax
    mov         r8,qword ptr [rbp+label_0000000000000160]
    lea         rdx,[label_000000014002C468]
    mov         rcx,qword ptr [rbp+label_0000000000000168]
    call        0000000140001710
    mov         qword ptr [rbp+label_0000000000000170],rax
    mov         rcx,qword ptr [rbp+label_0000000000000170]
    call        00000001400038D0
    nop
    lea         rcx,[rbp+label_0000000000000418]
    call        0000000140002410
    nop
    lea         rax,[label_00000001400014BA]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A768_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_0000000000000418]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A784_end:
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_0000000000000438]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A79F_end:
    mov         qword ptr [rsp+label_10],rdx
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rax,[rbp+label_0000000000000238]
    mov         qword ptr [rbp+label_00000000000001C8],rax
    mov         rax,qword ptr [rbp+label_00000000000001B0]
    mov         rax,qword ptr [rax]
    mov         rcx,qword ptr [rbp+label_00000000000001B0]
    call rax+8
    mov         rdx,rax
    lea         rcx,[rbp+label_0000000000000458]
    call        0000000140003AC0
    mov         qword ptr [rbp+label_00000000000001B8],rax
    mov         rax,qword ptr [rbp+label_00000000000001B8]
    mov         qword ptr [rbp+label_00000000000001C0],rax
    mov         r8,qword ptr [rbp+label_00000000000001C0]
    lea         rdx,[label_000000014002C4A8]
    mov         rcx,qword ptr [rbp+label_00000000000001C8]
    call        0000000140001710
    mov         qword ptr [rbp+label_00000000000001D0],rax
    mov         rcx,qword ptr [rbp+label_00000000000001D0]
    call        00000001400038D0
    nop
    lea         rcx,[rbp+label_0000000000000458]
    call        0000000140002410
    nop
    lea         rax,[label_0000000140001639]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A83A_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_0000000000000458]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A856_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    call        00000001400023D0
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A877_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A897_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_50]
    call        00000001400023D0
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A8B7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_0000000000000088]
    call        0000000140005430
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A8DA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rbp+label_00000000000000B0]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rbp+label_00000000000000B0]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rbp+label_70],rax
    mov         r8b,1
    mov         edx,4
    mov         rcx,qword ptr [rbp+label_70]
    call        0000000140006A00
    nop
    lea         rax,[label_0000000140004311]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A92A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_20]
    call        000000014000726C
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A947_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_40]
    call        00000001400051C0
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A967_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_60]
    call        00000001400023D0
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A987_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_30]
    call        0000000140005340
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A9A7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    call        000000014000726C
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A9C7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    add         rcx,8
    call        0000000140005160
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002A9EB_end:
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    add         rcx,label_18
    call        0000000140005160
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AA0B_end:
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    add         rcx,label_28
    call        0000000140005160
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AA2B_end:
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    add         rcx,label_38
    call        0000000140005160
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AA4B_end:
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    add         rcx,label_48
    call        0000000140005160
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AA6B_end:
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    add         rcx,label_58
    call        0000000140005160
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AA8B_end:
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_0000000000000090]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AAAA_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    call        00000001400052E0
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AAC7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_30]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AAE7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         edx,label_30
    mov         rcx,qword ptr [rbp+label_28]
    call        0000000140009900
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AB0C_end:
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         eax,dword ptr [rbp+label_20]
    and         eax,1
    test        eax,eax
    je          000000014002AB30
    and         dword ptr [rbp+label_20],label_0FFFFFFFE
    lea         rcx,[rbp+label_58]
    call        0000000140005250
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AB35_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_0000000000000090]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AB5A_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_40]
    call        0000000140002410
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AB77_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rax,[label_0000000140005DAC]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AB99_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_40]
    call        0000000140005430
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002ABB7_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rbp+label_60]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rbp+label_60]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rbp+label_30],rax
    mov         r8b,1
    mov         edx,4
    mov         rcx,qword ptr [rbp+label_30]
    call        0000000140006A00
    nop
    lea         rax,[label_0000000140006674]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AC04_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_50]
    call        0000000140005430
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AC27_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    mov         qword ptr [rsp+label_10],rdx
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rbp+label_70]
    mov         rax,qword ptr [rax]
    movsxd      rax,dword ptr [rax+4]
    mov         rcx,qword ptr [rbp+label_70]
    add         rcx,rax
    mov         rax,rcx
    mov         qword ptr [rbp+label_38],rax
    mov         r8b,1
    mov         edx,4
    mov         rcx,qword ptr [rbp+label_38]
    call        0000000140006A00
    nop
    lea         rax,[label_000000014000694C]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AC74_end:
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    lea         rcx,[rbp+label_40]
    call        00000001400053C0
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AC97_end:
    lea         rcx,[rdx+label_0000000000000030]
    jmp         000000014000726C
    lea         rcx,[rdx+label_0000000000000058]
    jmp         000000014000726C
    lea         rcx,[rdx+label_0000000000000050]
    jmp         00000001400051C0
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         eax,dword ptr [rbp+label_48]
    and         eax,1
    test        eax,eax
    je          000000014002ACE0
    and         dword ptr [rbp+label_48],label_0FFFFFFFE
    mov         rcx,qword ptr [rbp+label_30]
    add         rcx,label_10
    call        0000000140007FA0
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002ACE5_end:
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         edx,label_10
    mov         rcx,qword ptr [rbp+label_00000000000000A0]
    call        0000000140009900
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AD05_end:
    lea         rcx,[rdx+label_0000000000000068]
    jmp         0000000140002410
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rcx]
    mov         rdx,rcx
    mov         ecx,dword ptr [rax]
    call        0000000140016004
    nop
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AD2E_end:
    int         3
    push        rbp
    mov         rbp,rdx
    mov         rax,qword ptr [rcx]
    xor         ecx,ecx
    cmp         dword ptr [rax],label_0C0000005
    sete        cl
    mov         eax,ecx
    pop         rbp
    ret
func_000000014002AD46_end:
    int         3
    push        rbx
    push        rbp
    push        rdi
    sub         rsp,label_40
    mov         rbp,rdx
    mov         qword ptr [rbp+label_50],rcx
    mov         qword ptr [rbp+label_48],rcx
    call        000000014000BA24
    mov         rcx,qword ptr [rbp+label_0000000000000080]
    mov         qword ptr [rax+label_70],rcx
    mov         rdi,qword ptr [rbp+label_0000000000000098]
    mov         rbx,qword ptr [rdi+8]
    call        000000014000BA24
    mov         qword ptr [rax+label_60],rbx
    mov         rax,qword ptr [rbp+label_48]
    mov         rcx,qword ptr [rax]
    mov         rbx,qword ptr [rcx+label_38]
    call        000000014000BA24
    mov         qword ptr [rax+label_68],rbx
    mov         rcx,qword ptr [rbp+label_48]
    mov         byte ptr [rsp+label_38],1
    and         qword ptr [rsp+label_30],0
    and         dword ptr [rsp+label_28],0
    mov         rax,qword ptr [rbp+label_00000000000000A0]
    mov         qword ptr [rsp+label_20],rax
    mov         r9,rdi
    mov         r8,qword ptr [rbp+label_0000000000000090]
    mov         rdx,qword ptr [rbp+label_0000000000000088]
    mov         rcx,qword ptr [rcx]
    call        000000014000DB80
    call        000000014000BA24
    and         qword ptr [rax+label_70],0
    mov         dword ptr [rbp+label_40],1
    mov         eax,1
    add         rsp,label_40
    pop         rdi
    pop         rbp
    pop         rbx
    ret
func_000000014002ADE9_end:
    int         3
    push        rbx
    push        rbp
    push        rdi
    sub         rsp,label_40
    mov         rbp,rdx
    mov         qword ptr [rbp+label_50],rcx
    mov         qword ptr [rbp+label_48],rcx
    call        000000014000BA24
    mov         rcx,qword ptr [rbp+label_0000000000000080]
    mov         qword ptr [rax+label_70],rcx
    mov         rdi,qword ptr [rbp+label_0000000000000098]
    mov         rbx,qword ptr [rdi+8]
    call        000000014000BA24
    mov         qword ptr [rax+label_60],rbx
    mov         rax,qword ptr [rbp+label_48]
    mov         rcx,qword ptr [rax]
    mov         rbx,qword ptr [rcx+label_38]
    call        000000014000BA24
    mov         qword ptr [rax+label_68],rbx
    call        000000014000BA24
    mov         ecx,dword ptr [rbp+label_00000000000000B8]
    mov         dword ptr [rax+label_78],ecx
    mov         rcx,qword ptr [rbp+label_48]
    mov         byte ptr [rsp+label_38],1
    and         qword ptr [rsp+label_30],0
    and         dword ptr [rsp+label_28],0
    mov         rax,qword ptr [rbp+label_00000000000000A0]
    mov         qword ptr [rsp+label_20],rax
    mov         r9,rdi
    mov         r8,qword ptr [rbp+label_0000000000000090]
    mov         rdx,qword ptr [rbp+label_0000000000000088]
    mov         rcx,qword ptr [rcx]
    call        000000014000DB88
    call        000000014000BA24
    and         qword ptr [rax+label_70],0
    mov         dword ptr [rbp+label_40],1
    mov         eax,1
    add         rsp,label_40
    pop         rdi
    pop         rbp
    pop         rbx
    ret
func_000000014002AE9A_end:
    int         3
    push        rbx
    push        rbp
    sub         rsp,label_28
    mov         rbp,rdx
    mov         qword ptr [rbp+label_38],rcx
    mov         qword ptr [rbp+label_30],rcx
    cmp         byte ptr [rbp+label_58],0
    je          000000014002AF20
    mov         rax,qword ptr [rbp+label_30]
    mov         rcx,qword ptr [rax]
    mov         qword ptr [rbp+label_28],rcx
    mov         rax,qword ptr [rbp+label_28]
    cmp         dword ptr [rax],label_0E06D7363
    jne         000000014002AF20
    mov         rax,qword ptr [rbp+label_28]
    cmp         dword ptr [rax+label_18],4
    jne         000000014002AF20
    mov         rax,qword ptr [rbp+label_28]
    cmp         dword ptr [rax+label_20],label_19930520
    je          000000014002AEFC
    mov         rax,qword ptr [rbp+label_28]
    cmp         dword ptr [rax+label_20],label_19930521
    je          000000014002AEFC
    mov         rax,qword ptr [rbp+label_28]
    cmp         dword ptr [rax+label_20],label_19930522
    jne         000000014002AF20
    call        000000014000BA24
    mov         rcx,qword ptr [rbp+label_28]
    mov         qword ptr [rax+label_20],rcx
    mov         rax,qword ptr [rbp+label_30]
    mov         rbx,qword ptr [rax+8]
    call        000000014000BA24
    mov         qword ptr [rax+label_28],rbx
    call        0000000140018C50
    nop
    mov         dword ptr [rbp+label_20],0
    mov         eax,dword ptr [rbp+label_20]
    add         rsp,label_28
    pop         rbp
    pop         rbx
    ret
func_000000014002AF30_end:
    int         3
    push        rbp
    sub         rsp,label_40
    mov         rbp,rdx
    call        000000014000BA24
    mov         dword ptr [rax+label_78],label_0FFFFFFFE
    add         rsp,label_40
    pop         rbp
    ret
func_000000014002AF4C_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         qword ptr [rbp+label_58],rcx
    lea         r8,[rbp+label_20]
    mov         rdx,qword ptr [rbp+label_00000000000000B8]
    call        000000014000E368
    nop
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002AF71_end:
    int         3
    push        rbx
    push        rbp
    sub         rsp,label_28
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_38]
    call        000000014000B3DC
    cmp         dword ptr [rbp+label_20],0
    jne         000000014002AFD4
    mov         rbx,qword ptr [rbp+label_00000000000000B8]
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014002AFD4
    cmp         dword ptr [rbx+label_18],4
    jne         000000014002AFD4
    cmp         dword ptr [rbx+label_20],label_19930520
    je          000000014002AFBC
    cmp         dword ptr [rbx+label_20],label_19930521
    je          000000014002AFBC
    cmp         dword ptr [rbx+label_20],label_19930522
    jne         000000014002AFD4
    mov         rcx,qword ptr [rbx+label_28]
    call        000000014000B690
    test        eax,eax
    je          000000014002AFD4
    mov         dl,1
    mov         rcx,rbx
    call        000000014000B61C
    nop
    call        000000014000BA24
    mov         rcx,qword ptr [rbp+label_00000000000000C0]
    mov         qword ptr [rax+label_20],rcx
    call        000000014000BA24
    mov         rcx,qword ptr [rbp+label_40]
    mov         qword ptr [rax+label_28],rcx
    add         rsp,label_28
    pop         rbp
    pop         rbx
    ret
func_000000014002AFF7_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         qword ptr [rbp+label_0000000000000080],rcx
    lea         r9,[rbp+label_20]
    mov         r8d,dword ptr [rbp+label_00000000000000E8]
    mov         rdx,qword ptr [rbp+label_00000000000000F8]
    call        000000014000E3EC
    nop
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002B026_end:
    int         3
    push        rbx
    push        rbp
    sub         rsp,label_28
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_48]
    call        000000014000B3DC
    cmp         dword ptr [rbp+label_20],0
    jne         000000014002B089
    mov         rbx,qword ptr [rbp+label_00000000000000F8]
    cmp         dword ptr [rbx],label_0E06D7363
    jne         000000014002B089
    cmp         dword ptr [rbx+label_18],4
    jne         000000014002B089
    cmp         dword ptr [rbx+label_20],label_19930520
    je          000000014002B071
    cmp         dword ptr [rbx+label_20],label_19930521
    je          000000014002B071
    cmp         dword ptr [rbx+label_20],label_19930522
    jne         000000014002B089
    mov         rcx,qword ptr [rbx+label_28]
    call        000000014000B690
    test        eax,eax
    je          000000014002B089
    mov         dl,1
    mov         rcx,rbx
    call        000000014000B61C
    nop
    call        000000014000BA24
    mov         rcx,qword ptr [rbp+label_30]
    mov         qword ptr [rax+label_20],rcx
    call        000000014000BA24
    mov         rcx,qword ptr [rbp+label_38]
    mov         qword ptr [rax+label_28],rcx
    call        000000014000BA24
    mov         ecx,dword ptr [rbp+label_00000000000000E0]
    mov         dword ptr [rax+label_78],ecx
    add         rsp,label_28
    pop         rbp
    pop         rbx
    ret
func_000000014002B0B7_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    call        000000014000B6E4
    nop
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002B0CD_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    call        000000014000BA24
    cmp         dword ptr [rax+label_30],0
    jle         000000014002B0EB
    call        000000014000BA24
    dec         dword ptr [rax+label_30]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002B0F0_end:
    int         3
    push        rbp
    sub         rsp,label_30
    mov         rbp,rdx
    call        000000014000B6E4
    nop
    add         rsp,label_30
    pop         rbp
    ret
func_000000014002B106_end:
    int         3
    push        rbp
    sub         rsp,label_30
    mov         rbp,rdx
    call        000000014000BA24
    cmp         dword ptr [rax+label_30],0
    jle         000000014002B124
    call        000000014000BA24
    dec         dword ptr [rax+label_30]
    add         rsp,label_30
    pop         rbp
    ret
func_000000014002B129_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rbp+label_48]
    mov         ecx,dword ptr [rax]
    add         rsp,label_20
    pop         rbp
    jmp         0000000140012CB4
    int         3
    push        rbp
    sub         rsp,label_30
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    add         rsp,label_30
    pop         rbp
    jmp         0000000140013AF0
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_48]
    mov         rcx,qword ptr [rcx]
    add         rsp,label_20
    pop         rbp
    jmp         0000000140013AF0
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rbp+label_0000000000000098]
    mov         ecx,dword ptr [rax]
    add         rsp,label_20
    pop         rbp
    jmp         0000000140012CB4
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_40]
    call        0000000140013AF0
    nop
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002B1AD_end:
    int         3
    push        rbp
    sub         rsp,label_30
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_58]
    call        0000000140013AF0
    nop
    add         rsp,label_30
    pop         rbp
    ret
func_000000014002B1C7_end:
    int         3
    push        rbp
    sub         rsp,label_30
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_60]
    add         rsp,label_30
    pop         rbp
    jmp         0000000140013AF0
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rcx,qword ptr [rbp+label_38]
    add         rsp,label_20
    pop         rbp
    jmp         0000000140013AF0
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    xor         ecx,ecx
    add         rsp,label_20
    pop         rbp
    jmp         0000000140012CB4
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         qword ptr [rbp+label_28],rcx
    mov         rax,qword ptr [rcx]
    mov         ecx,dword ptr [rax]
    mov         dword ptr [rbp+label_24],ecx
    xor         eax,eax
    cmp         ecx,label_0E06D7363
    sete        al
    mov         dword ptr [rbp+label_20],eax
    mov         eax,dword ptr [rbp+label_20]
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002B23A_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rbp+label_58]
    mov         ecx,dword ptr [rax]
    add         rsp,label_20
    pop         rbp
    jmp         0000000140012CB4
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rbp+label_48]
    mov         rcx,qword ptr [rax]
    mov         rdx,qword ptr [rcx]
    and         dword ptr [rdx+label_00000000000003A8],label_0FFFFFFEF
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002B275_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         ecx,7
    add         rsp,label_20
    pop         rbp
    jmp         0000000140012CB4
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         ecx,8
    add         rsp,label_20
    pop         rbp
    jmp         0000000140012CB4
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rbp+label_48]
    mov         ecx,dword ptr [rax]
    add         rsp,label_20
    pop         rbp
    jmp         0000000140022284
    int         3
    push        rbp
    sub         rsp,label_30
    mov         rbp,rdx
    mov         ecx,dword ptr [rbp+label_60]
    add         rsp,label_30
    pop         rbp
    jmp         0000000140022284
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         ecx,dword ptr [rbp+label_40]
    add         rsp,label_20
    pop         rbp
    jmp         0000000140022284
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rcx]
    cmp         dword ptr [rax],label_0C0000005
    je          000000014002B311
    cmp         dword ptr [rax],label_0C000001D
    je          000000014002B311
    xor         eax,eax
    jmp         000000014002B316
    mov         eax,1
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002B31B_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    cmp         byte ptr [rbp+label_70],0
    je          000000014002B337
    mov         ecx,3
    call        0000000140012CB4
    nop
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002B33C_end:
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rbp+label_68]
    mov         ecx,dword ptr [rax]
    add         rsp,label_20
    pop         rbp
    jmp         0000000140012CB4
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         ecx,5
    add         rsp,label_20
    pop         rbp
    jmp         0000000140012CB4
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         ecx,4
    add         rsp,label_20
    pop         rbp
    jmp         0000000140012CB4
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    int         3
    push        rbp
    sub         rsp,label_20
    mov         rbp,rdx
    mov         rax,qword ptr [rcx]
    xor         ecx,ecx
    cmp         dword ptr [rax],label_0C0000005
    sete        cl
    mov         eax,ecx
    add         rsp,label_20
    pop         rbp
    ret
func_000000014002B3AE_end:
    int         3
    lea         rcx,[label_000000014003D240]
    jmp         0000000140007230
    push        rbx
    sub         rsp,label_20
    jmp         000000014002B405
    mov         rax,qword ptr [rbx]
    mov         rcx,qword ptr [rbx+8]
    mov         qword ptr [label_000000014003D3D8],rax
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    mov         rcx,rax
    test        rax,rax
    je          000000014002B3F8
    mov         rdx,qword ptr [rax]
    mov         rax,qword ptr [rdx]
    mov         edx,1
    call label_000000014002C2B8
    mov         edx,label_10
    mov         rcx,rbx
    call        0000000140009900
    mov         rbx,qword ptr [label_000000014003D3D8]
    test        rbx,rbx
    jne         000000014002B3C4
    add         rsp,label_20
    pop         rbx
    ret
func_000000014002B416_end:
    int         3
    sub         rsp,label_28
    mov         rcx,qword ptr [label_000000014003D3C8]
    test        rcx,rcx
    je          000000014002B451
    mov         rax,qword ptr [rcx]
    mov         rax,qword ptr [rax+label_10]
    call label_000000014002C2B8
    mov         r8,rax
    test        rax,rax
    je          000000014002B451
    mov         rcx,qword ptr [rax]
    mov         edx,1
    mov         rax,qword ptr [rcx]
    mov         rcx,r8
    call label_000000014002C2B8
    add         rsp,label_28
    ret
func_000000014002B455_end:
    int         3
    int         3
    sub         rsp,label_28
    mov         rax,qword ptr [label_000000014003D410]
    movsxd      rcx,dword ptr [rax+4]
    lea         r8,[label_000000014003D410]
    lea         rax,[label_000000014002D6E8]
    mov         qword ptr [rcx+r8],rax
    mov         rax,qword ptr [label_000000014003D410]
    movsxd      rcx,dword ptr [rax+4]
    lea         edx,[rcx-label_10]
    mov         dword ptr [rcx+r8-4],edx
    lea         rax,[label_000000014002D6C8]
    mov         qword ptr [label_000000014003D420],rax
    lea         rcx,[label_000000014003D420]
    call        00000001400097C4
    nop
    add         rsp,label_28
    ret
func_000000014002B4AB_end:
    lea         rcx,[label_000000014003D480]
    jmp         0000000140007EF0
    lea         rcx,[label_000000014003D400]
    jmp         0000000140007230
    sub         rsp,label_28
    jmp         000000014002B4F0
    lea         rcx,[label_000000014003D5A0]
    mov         rcx,qword ptr [rcx+rax*8]
    inc         rax
    mov         qword ptr [label_000000014003C018],rax
    call label_000000014002C028
    test        rax,rax
    je          000000014002B4F0
    call label_000000014002C2B8
    mov         rax,qword ptr [label_000000014003C018]
    cmp         rax,label_0A
    jb          000000014002B4CA
    add         rsp,label_28
    ret
func_000000014002B501_end:
    int         3
    int         3
    lea         rcx,[label_000000014003D590]
    jmp         0000000140007230

.data
; Data section placeholders
label_0000000000000000 dq 0
label_0000000000000002 dq 0
label_0000000000000006 dq 0
label_0000000000000010 dq 0
label_0000000000000030 dq 0
label_000000000000003E dq 0
label_0000000000000050 dq 0
label_0000000000000058 dq 0
label_0000000000000068 dq 0
label_0000000000000080 dq 0
label_0000000000000081 dq 0
label_0000000000000082 dq 0
label_0000000000000084 dq 0
label_0000000000000086 dq 0
label_0000000000000088 dq 0
label_000000000000008A dq 0
label_0000000000000090 dq 0
label_0000000000000098 dq 0
label_00000000000000A0 dq 0
label_00000000000000A8 dq 0
label_00000000000000AC dq 0
label_00000000000000B0 dq 0
label_00000000000000B4 dq 0
label_00000000000000B8 dq 0
label_00000000000000BC dq 0
label_00000000000000C0 dq 0
label_00000000000000C8 dq 0
label_00000000000000D0 dq 0
label_00000000000000D8 dq 0
label_00000000000000E0 dq 0
label_00000000000000E8 dq 0
label_00000000000000F0 dq 0
label_00000000000000F8 dq 0
label_00000000000000FE dq 0
label_0000000000000100 dq 0
label_0000000000000108 dq 0
label_0000000000000110 dq 0
label_0000000000000118 dq 0
label_0000000000000119 dq 0
label_000000000000011E dq 0
label_0000000000000120 dq 0
label_0000000000000128 dq 0
label_000000000000012A dq 0
label_0000000000000130 dq 0
label_0000000000000138 dq 0
label_0000000000000140 dq 0
label_0000000000000148 dq 0
label_0000000000000150 dq 0
label_0000000000000158 dq 0
label_000000000000015C dq 0
label_0000000000000160 dq 0
label_0000000000000168 dq 0
label_0000000000000170 dq 0
label_0000000000000174 dq 0
label_0000000000000178 dq 0
label_000000000000017C dq 0
label_000000000000017E dq 0
label_0000000000000180 dq 0
label_0000000000000188 dq 0
label_0000000000000190 dq 0
label_0000000000000198 dq 0
label_00000000000001A0 dq 0
label_00000000000001A8 dq 0
label_00000000000001B0 dq 0
label_00000000000001B8 dq 0
label_00000000000001C0 dq 0
label_00000000000001C2 dq 0
label_00000000000001C8 dq 0
label_00000000000001D0 dq 0
label_00000000000001D8 dq 0
label_00000000000001F8 dq 0
label_0000000000000200 dq 0
label_0000000000000218 dq 0
label_0000000000000220 dq 0
label_0000000000000230 dq 0
label_0000000000000232 dq 0
label_0000000000000238 dq 0
label_0000000000000258 dq 0
label_0000000000000260 dq 0
label_0000000000000268 dq 0
label_0000000000000270 dq 0
label_0000000000000278 dq 0
label_0000000000000290 dq 0
label_0000000000000298 dq 0
label_00000000000002A0 dq 0
label_00000000000002A8 dq 0
label_00000000000002B0 dq 0
label_00000000000002B8 dq 0
label_00000000000002C8 dq 0
label_00000000000002D8 dq 0
label_00000000000002F0 dq 0
label_00000000000002F8 dq 0
label_0000000000000318 dq 0
label_0000000000000338 dq 0
label_0000000000000340 dq 0
label_0000000000000344 dq 0
label_0000000000000348 dq 0
label_0000000000000358 dq 0
label_0000000000000378 dq 0
label_0000000000000388 dq 0
label_0000000000000398 dq 0
label_00000000000003A0 dq 0
label_00000000000003A8 dq 0
label_00000000000003B0 dq 0
label_00000000000003B8 dq 0
label_00000000000003C0 dq 0
label_00000000000003D8 dq 0
label_00000000000003E0 dq 0
label_00000000000003E8 dq 0
label_00000000000003F0 dq 0
label_00000000000003F8 dq 0
label_0000000000000400 dq 0
label_0000000000000408 dq 0
label_0000000000000410 dq 0
label_0000000000000418 dq 0
label_0000000000000428 dq 0
label_0000000000000430 dq 0
label_0000000000000438 dq 0
label_0000000000000440 dq 0
label_0000000000000448 dq 0
label_0000000000000450 dq 0
label_0000000000000458 dq 0
label_0000000000000460 dq 0
label_0000000000000468 dq 0
label_0000000000000470 dq 0
label_0000000000000478 dq 0
label_0000000000000498 dq 0
label_000000000000049C dq 0
label_00000000000004A0 dq 0
label_00000000000004A4 dq 0
label_00000000000004A8 dq 0
label_00000000000004AC dq 0
label_00000000000004B0 dq 0
label_00000000000004C8 dq 0
label_00000000000004D8 dq 0
label_00000000000004E0 dq 0
label_00000000000004E8 dq 0
label_0000000000000508 dq 0
label_0000000000000510 dq 0
label_0000000000000514 dq 0
label_00000000000005D0 dq 0
label_00000000000005F0 dq 0
label_0000000000000670 dq 0
label_00000000000006E0 dq 0
label_00000000000006F8 dq 0
label_0000000000000700 dq 0
label_0000000000000750 dq 0
label_0000000000000758 dq 0
label_0000000000000780 dq 0
label_0000000000001040 dq 0
label_0000000000001090 dq 0
label_0000000000001200 dq 0
label_000000000000143E dq 0
label_000000000000143F dq 0
label_0000000000001440 dq 0
label_0000000000001450 dq 0
label_0000000000001460 dq 0
label_0000000000001470 dq 0
label_000000000002758C dq 0
label_00000000000275C8 dq 0
label_0000000000027608 dq 0
label_000000000002DA40 dq 0
label_000000000002DA50 dq 0
label_000000000002E9A0 dq 0
label_000000000002F680 dq 0
label_000000000002FF90 dq 0
label_000000000002FF92 dq 0
label_000000000002FF93 dq 0
label_0000000000030028 dq 0
label_0000000000030C20 dq 0
label_00000000000323B0 dq 0
label_0000000000033E00 dq 0
label_0000000000033E08 dq 0
label_00000000000372B0 dq 0
label_00000000000372F0 dq 0
label_0000000000037314 dq 0
label_0000000000037338 dq 0
label_0000000000037360 dq 0
label_00000000000373A0 dq 0
label_00000000000373C4 dq 0
label_00000000000373E8 dq 0
label_000000000003C470 dq 0
label_000000000003D600 dq 0
label_000000000003D650 dq 0
label_000000000003DE60 dq 0
label_000000000003DE78 dq 0
label_000000000003E300 dq 0
label_000000000003E710 dq 0
label_000000000003E7C0 dq 0
label_0000000000042000 dq 0
label_0000000000042040 dq 0
label_0000000000042064 dq 0
label_0000000000042090 dq 0
label_00000000000420D0 dq 0
label_00000000000420F4 dq 0
label_0000000000042120 dq 0
label_0000000000042160 dq 0
label_0000000000042190 dq 0
label_00000000000421D0 dq 0
label_0000000073AB0002 dq 0
label_0000000074C30002 dq 0
label_0000000140000000 dq 0
label_000000014000003C dq 0
label_00000001400013F8 dq 0
label_00000001400014BA dq 0
label_0000000140001639 dq 0
label_0000000140004311 dq 0
label_00000001400046A0 dq 0
label_0000000140005DAC dq 0
label_0000000140006674 dq 0
label_000000014000694C dq 0
label_0000000140007704 dq 0
label_00000001400085EC dq 0
label_0000000140008D54 dq 0
label_000000014000A6C8 dq 0
label_000000014000A760 dq 0
label_000000014000BA04 dq 0
label_000000014000DD98 dq 0
label_000000014000DF84 dq 0
label_00000001400141DF dq 0
label_0000000140014376 dq 0
label_00000001400197E4 dq 0
label_000000014001B364 dq 0
label_0000000140020560 dq 0
label_0000000140023A18 dq 0
label_0000000140023CF8 dq 0
label_000000014002421C dq 0
label_000000014002446C dq 0
label_00000001400246B4 dq 0
label_000000014002B3B0 dq 0
label_000000014002B3BC dq 0
label_000000014002B418 dq 0
label_000000014002B458 dq 0
label_000000014002B4AC dq 0
label_000000014002B4B8 dq 0
label_000000014002B4C4 dq 0
label_000000014002B504 dq 0
label_000000014002C000 dq 0
label_000000014002C008 dq 0
label_000000014002C010 dq 0
label_000000014002C018 dq 0
label_000000014002C020 dq 0
label_000000014002C028 dq 0
label_000000014002C030 dq 0
label_000000014002C038 dq 0
label_000000014002C040 dq 0
label_000000014002C048 dq 0
label_000000014002C050 dq 0
label_000000014002C058 dq 0
label_000000014002C060 dq 0
label_000000014002C068 dq 0
label_000000014002C070 dq 0
label_000000014002C078 dq 0
label_000000014002C080 dq 0
label_000000014002C088 dq 0
label_000000014002C090 dq 0
label_000000014002C098 dq 0
label_000000014002C0A0 dq 0
label_000000014002C0A8 dq 0
label_000000014002C0B0 dq 0
label_000000014002C0B8 dq 0
label_000000014002C0C0 dq 0
label_000000014002C0C8 dq 0
label_000000014002C0D0 dq 0
label_000000014002C0D8 dq 0
label_000000014002C0E0 dq 0
label_000000014002C0E8 dq 0
label_000000014002C0F0 dq 0
label_000000014002C0F8 dq 0
label_000000014002C100 dq 0
label_000000014002C108 dq 0
label_000000014002C110 dq 0
label_000000014002C118 dq 0
label_000000014002C120 dq 0
label_000000014002C128 dq 0
label_000000014002C130 dq 0
label_000000014002C138 dq 0
label_000000014002C140 dq 0
label_000000014002C148 dq 0
label_000000014002C150 dq 0
label_000000014002C158 dq 0
label_000000014002C160 dq 0
label_000000014002C168 dq 0
label_000000014002C170 dq 0
label_000000014002C178 dq 0
label_000000014002C180 dq 0
label_000000014002C188 dq 0
label_000000014002C190 dq 0
label_000000014002C198 dq 0
label_000000014002C1A0 dq 0
label_000000014002C1A8 dq 0
label_000000014002C1B0 dq 0
label_000000014002C1B8 dq 0
label_000000014002C1C0 dq 0
label_000000014002C1C8 dq 0
label_000000014002C1D0 dq 0
label_000000014002C1D8 dq 0
label_000000014002C1E0 dq 0
label_000000014002C1E8 dq 0
label_000000014002C1F0 dq 0
label_000000014002C1F8 dq 0
label_000000014002C200 dq 0
label_000000014002C208 dq 0
label_000000014002C210 dq 0
label_000000014002C218 dq 0
label_000000014002C220 dq 0
label_000000014002C228 dq 0
label_000000014002C230 dq 0
label_000000014002C238 dq 0
label_000000014002C240 dq 0
label_000000014002C248 dq 0
label_000000014002C250 dq 0
label_000000014002C258 dq 0
label_000000014002C260 dq 0
label_000000014002C268 dq 0
label_000000014002C270 dq 0
label_000000014002C278 dq 0
label_000000014002C280 dq 0
label_000000014002C288 dq 0
label_000000014002C290 dq 0
label_000000014002C298 dq 0
label_000000014002C2A8 dq 0
label_000000014002C2B8 dq 0
label_000000014002C2C0 dq 0
label_000000014002C2E0 dq 0
label_000000014002C338 dq 0
label_000000014002C340 dq 0
label_000000014002C380 dq 0
label_000000014002C388 dq 0
label_000000014002C3A8 dq 0
label_000000014002C3B0 dq 0
label_000000014002C3B8 dq 0
label_000000014002C3C0 dq 0
label_000000014002C3E0 dq 0
label_000000014002C3F8 dq 0
label_000000014002C408 dq 0
label_000000014002C418 dq 0
label_000000014002C428 dq 0
label_000000014002C438 dq 0
label_000000014002C448 dq 0
label_000000014002C45C dq 0
label_000000014002C468 dq 0
label_000000014002C478 dq 0
label_000000014002C480 dq 0
label_000000014002C490 dq 0
label_000000014002C4A8 dq 0
label_000000014002C4C0 dq 0
label_000000014002C4D0 dq 0
label_000000014002C4E2 dq 0
label_000000014002C4E8 dq 0
label_000000014002C4F8 dq 0
label_000000014002C518 dq 0
label_000000014002C530 dq 0
label_000000014002C540 dq 0
label_000000014002C558 dq 0
label_000000014002C560 dq 0
label_000000014002C568 dq 0
label_000000014002C580 dq 0
label_000000014002C5B0 dq 0
label_000000014002C5C8 dq 0
label_000000014002C5D8 dq 0
label_000000014002C5E0 dq 0
label_000000014002C5E8 dq 0
label_000000014002C5F8 dq 0
label_000000014002C608 dq 0
label_000000014002C620 dq 0
label_000000014002C638 dq 0
label_000000014002C648 dq 0
label_000000014002C658 dq 0
label_000000014002C6A0 dq 0
label_000000014002C6B0 dq 0
label_000000014002C6D0 dq 0
label_000000014002C6E8 dq 0
label_000000014002C700 dq 0
label_000000014002C718 dq 0
label_000000014002C728 dq 0
label_000000014002C748 dq 0
label_000000014002C7A8 dq 0
label_000000014002C7B8 dq 0
label_000000014002C7D0 dq 0
label_000000014002C7E8 dq 0
label_000000014002C800 dq 0
label_000000014002C818 dq 0
label_000000014002C830 dq 0
label_000000014002CAE0 dq 0
label_000000014002CFD0 dq 0
label_000000014002D688 dq 0
label_000000014002D6A0 dq 0
label_000000014002D6B8 dq 0
label_000000014002D6BC dq 0
label_000000014002D6C8 dq 0
label_000000014002D6D8 dq 0
label_000000014002D6E8 dq 0
label_000000014002D6F0 dq 0
label_000000014002D700 dq 0
label_000000014002D780 dq 0
label_000000014002D800 dq 0
label_000000014002D960 dq 0
label_000000014002D974 dq 0
label_000000014002DA28 dq 0
label_000000014002DA30 dq 0
label_000000014002DA60 dq 0
label_000000014002DB00 dq 0
label_000000014002DB98 dq 0
label_000000014002DBA8 dq 0
label_000000014002DBB8 dq 0
label_000000014002EA50 dq 0
label_000000014002EA60 dq 0
label_000000014002EA68 dq 0
label_000000014002EA78 dq 0
label_000000014002EA80 dq 0
label_000000014002EA88 dq 0
label_000000014002EA90 dq 0
label_000000014002EAA0 dq 0
label_000000014002EAA8 dq 0
label_000000014002EAB8 dq 0
label_000000014002EAC0 dq 0
label_000000014002EAE0 dq 0
label_000000014002EBE0 dq 0
label_000000014002ECE0 dq 0
label_000000014002ECF0 dq 0
label_000000014002EE00 dq 0
label_000000014002F080 dq 0
label_000000014002F200 dq 0
label_000000014002F300 dq 0
label_000000014002F510 dq 0
label_0000000140030050 dq 0
label_0000000140030110 dq 0
label_0000000140030118 dq 0
label_0000000140030120 dq 0
label_00000001400301A0 dq 0
label_00000001400301B8 dq 0
label_00000001400301D0 dq 0
label_0000000140030260 dq 0
label_0000000140030268 dq 0
label_00000001400302C8 dq 0
label_0000000140030360 dq 0
label_0000000140030368 dq 0
label_000000014003036C dq 0
label_0000000140030370 dq 0
label_0000000140030378 dq 0
label_0000000140030380 dq 0
label_0000000140030388 dq 0
label_000000014003038C dq 0
label_00000001400303C0 dq 0
label_00000001400304C0 dq 0
label_0000000140030B40 dq 0
label_0000000140030C0C dq 0
label_0000000140031168 dq 0
label_0000000140031178 dq 0
label_000000014003117C dq 0
label_0000000140031180 dq 0
label_0000000140031190 dq 0
label_0000000140031198 dq 0
label_00000001400311A8 dq 0
label_00000001400311B0 dq 0
label_00000001400311C8 dq 0
label_00000001400311D0 dq 0
label_00000001400311E0 dq 0
label_00000001400311E8 dq 0
label_00000001400311F8 dq 0
label_0000000140031200 dq 0
label_0000000140031210 dq 0
label_0000000140031218 dq 0
label_0000000140031238 dq 0
label_0000000140031240 dq 0
label_0000000140031248 dq 0
label_0000000140031260 dq 0
label_0000000140031268 dq 0
label_0000000140031278 dq 0
label_0000000140031280 dq 0
label_0000000140031298 dq 0
label_00000001400312A0 dq 0
label_00000001400312B4 dq 0
label_00000001400312B8 dq 0
label_0000000140031330 dq 0
label_0000000140031338 dq 0
label_0000000140031340 dq 0
label_0000000140031348 dq 0
label_0000000140031350 dq 0
label_00000001400313A0 dq 0
label_00000001400317B0 dq 0
label_00000001400317C0 dq 0
label_0000000140031930 dq 0
label_0000000140032348 dq 0
label_0000000140032358 dq 0
label_0000000140032360 dq 0
label_0000000140032370 dq 0
label_0000000140032378 dq 0
label_000000014003238C dq 0
label_0000000140032390 dq 0
label_0000000140032398 dq 0
label_00000001400323A0 dq 0
label_00000001400323A8 dq 0
label_00000001400323B0 dq 0
label_00000001400356A0 dq 0
label_00000001400356A8 dq 0
label_00000001400356B0 dq 0
label_00000001400356C0 dq 0
label_00000001400356D0 dq 0
label_00000001400356E0 dq 0
label_00000001400356F0 dq 0
label_0000000140035710 dq 0
label_0000000140035720 dq 0
label_0000000140035730 dq 0
label_0000000140035740 dq 0
label_0000000140035750 dq 0
label_0000000140035760 dq 0
label_0000000140035770 dq 0
label_0000000140035780 dq 0
label_0000000140035790 dq 0
label_00000001400357A0 dq 0
label_00000001400357B0 dq 0
label_00000001400357E0 dq 0
label_00000001400357F0 dq 0
label_0000000140035800 dq 0
label_0000000140035810 dq 0
label_0000000140035820 dq 0
label_0000000140035830 dq 0
label_0000000140035840 dq 0
label_0000000140035850 dq 0
label_0000000140035890 dq 0
label_00000001400358A0 dq 0
label_00000001400358B0 dq 0
label_00000001400358C0 dq 0
label_00000001400358D0 dq 0
label_00000001400358E0 dq 0
label_00000001400358F0 dq 0
label_00000001400358F4 dq 0
label_00000001400358F8 dq 0
label_0000000140035900 dq 0
label_0000000140035910 dq 0
label_0000000140036120 dq 0
label_0000000140036930 dq 0
label_0000000140037140 dq 0
label_0000000140038BD0 dq 0
label_0000000140038BE0 dq 0
label_000000014003AEE0 dq 0
label_000000014003AF98 dq 0
label_000000014003B028 dq 0
label_000000014003B100 dq 0
label_000000014003B178 dq 0
label_000000014003B1B0 dq 0
label_000000014003B218 dq 0
label_000000014003B280 dq 0
label_000000014003B2B8 dq 0
label_000000014003C000 dq 0
label_000000014003C010 dq 0
label_000000014003C018 dq 0
label_000000014003C040 dq 0
label_000000014003C080 dq 0
label_000000014003C090 dq 0
label_000000014003C094 dq 0
label_000000014003C098 dq 0
label_000000014003C0A0 dq 0
label_000000014003C0A8 dq 0
label_000000014003C0B0 dq 0
label_000000014003C0C0 dq 0
label_000000014003C0C8 dq 0
label_000000014003C0D0 dq 0
label_000000014003C0E8 dq 0
label_000000014003C1D8 dq 0
label_000000014003C1DC dq 0
label_000000014003C1E0 dq 0
label_000000014003C1E8 dq 0
label_000000014003C1F0 dq 0
label_000000014003C1F8 dq 0
label_000000014003C200 dq 0
label_000000014003C208 dq 0
label_000000014003C210 dq 0
label_000000014003C218 dq 0
label_000000014003C220 dq 0
label_000000014003C228 dq 0
label_000000014003C238 dq 0
label_000000014003C240 dq 0
label_000000014003C248 dq 0
label_000000014003C250 dq 0
label_000000014003C258 dq 0
label_000000014003C260 dq 0
label_000000014003C268 dq 0
label_000000014003C270 dq 0
label_000000014003C278 dq 0
label_000000014003C288 dq 0
label_000000014003C290 dq 0
label_000000014003C2A0 dq 0
label_000000014003C2B0 dq 0
label_000000014003C408 dq 0
label_000000014003C410 dq 0
label_000000014003C418 dq 0
label_000000014003C41C dq 0
label_000000014003C420 dq 0
label_000000014003C468 dq 0
label_000000014003C570 dq 0
label_000000014003C700 dq 0
label_000000014003C710 dq 0
label_000000014003C720 dq 0
label_000000014003C738 dq 0
label_000000014003C839 dq 0
label_000000014003C950 dq 0
label_000000014003CA60 dq 0
label_000000014003CB60 dq 0
label_000000014003CB70 dq 0
label_000000014003CC60 dq 0
label_000000014003CC68 dq 0
label_000000014003CE98 dq 0
label_000000014003D230 dq 0
label_000000014003D238 dq 0
label_000000014003D240 dq 0
label_000000014003D250 dq 0
label_000000014003D390 dq 0
label_000000014003D398 dq 0
label_000000014003D3A8 dq 0
label_000000014003D3C8 dq 0
label_000000014003D3D8 dq 0
label_000000014003D3E8 dq 0
label_000000014003D3F0 dq 0
label_000000014003D400 dq 0
label_000000014003D410 dq 0
label_000000014003D420 dq 0
label_000000014003D480 dq 0
label_000000014003D518 dq 0
label_000000014003D520 dq 0
label_000000014003D528 dq 0
label_000000014003D550 dq 0
label_000000014003D558 dq 0
label_000000014003D560 dq 0
label_000000014003D590 dq 0
label_000000014003D5A0 dq 0
label_000000014003D650 dq 0
label_000000014003D750 dq 0
label_000000014003D758 dq 0
label_000000014003D760 dq 0
label_000000014003D761 dq 0
label_000000014003D768 dq 0
label_000000014003D778 dq 0
label_000000014003D780 dq 0
label_000000014003D790 dq 0
label_000000014003D798 dq 0
label_000000014003D7A0 dq 0
label_000000014003D7A4 dq 0
label_000000014003D7B0 dq 0
label_000000014003D7B8 dq 0
label_000000014003D7C0 dq 0
label_000000014003D840 dq 0
label_000000014003D8C0 dq 0
label_000000014003D8D8 dq 0
label_000000014003D938 dq 0
label_000000014003DD10 dq 0
label_000000014003DD20 dq 0
label_000000014003DD28 dq 0
label_000000014003DD30 dq 0
label_000000014003DD40 dq 0
label_000000014003DDB8 dq 0
label_000000014003DDC0 dq 0
label_000000014003DDC8 dq 0
label_000000014003DDF0 dq 0
label_000000014003DEA0 dq 0
label_000000014003DEB0 dq 0
label_000000014003DF50 dq 0
label_000000014003E0E0 dq 0
label_000000014003E0E8 dq 0
label_000000014003E0F0 dq 0
label_000000014003E0F8 dq 0
label_000000014003E108 dq 0
label_000000014003E110 dq 0
label_000000014003E118 dq 0
label_000000014003E120 dq 0
label_000000014003E228 dq 0
label_000000014003E230 dq 0
label_000000014003E238 dq 0
label_000000014003E240 dq 0
label_000000014003E248 dq 0
label_000000014003E250 dq 0
label_000000014003E258 dq 0
label_000000014003E260 dq 0
label_000000014003E268 dq 0
label_000000014003E270 dq 0
label_000000014003E278 dq 0
label_000000014003E280 dq 0
label_000000014003E288 dq 0
label_000000014003E290 dq 0
label_000000014003E294 dq 0
label_000000014003E298 dq 0
label_000000014003E2A0 dq 0
label_000000014003E2B8 dq 0
label_000000014003E2D0 dq 0
label_000000014003E2D8 dq 0
label_000000014003E2E0 dq 0
label_000000014003E2E8 dq 0
label_000000014003E2F0 dq 0
label_000000014003E300 dq 0
label_000000014003E700 dq 0
label_000000014003E710 dq 0
label_000000014003E7B8 dq 0
label_000000014003E7C0 dq 0
label_000000014003E8B8 dq 0
label_000000014003E8C0 dq 0
label_000000014003E8C8 dq 0
label_000000014003E8D0 dq 0
label_000000014003E8D8 dq 0
label_000000014003E8E0 dq 0
label_000000014003E8E4 dq 0
label_000000014003E8E8 dq 0
label_000000014003E8F0 dq 0
label_000000014003E8F8 dq 0
label_000000014003E9C0 dq 0
label_000000014003E9C8 dq 0
label_000000014003E9D0 dq 0
label_000000014003E9D8 dq 0
label_000000014003E9DC dq 0
label_000000014003E9E0 dq 0
label_000000014003E9E8 dq 0
label_000000014003E9F0 dq 0
label_000000014003E9F8 dq 0
label_000000014003EA00 dq 0
label_000000014003EA04 dq 0
label_000000014003EA08 dq 0
label_000000014003EA10 dq 0
label_000000014003EA18 dq 0
label_0000000164027838 dq 0
label_00000001850278BE dq 0
label_0A dq 0
label_0A0 dq 0
label_0A0A0000 dq 0
label_0A11D36B876D77870 dq 0
label_0A201879B5E5A7B70 dq 0
label_0A3D70A3D70A3D70B dq 0
label_0A66 dq 0
label_0A70 dq 0
label_0A8 dq 0
label_0AB8817F47A550870 dq 0
label_0AE6 dq 0
label_0AF0 dq 0
label_0B dq 0
label_0B0 dq 0
label_0B66 dq 0
label_0B70 dq 0
label_0B780274838DFD370 dq 0
label_0BDC017DA34D1C070 dq 0
label_0C dq 0
label_0C0 dq 0
label_0C00 dq 0
label_0C000 dq 0
label_0C0000005 dq 0
label_0C000000D dq 0
label_0C000001D dq 0
label_0C000008D dq 0
label_0C000008E dq 0
label_0C000008F dq 0
label_0C0000090 dq 0
label_0C0000091 dq 0
label_0C0000092 dq 0
label_0C0000093 dq 0
label_0C0000225 dq 0
label_0C00002B4 dq 0
label_0C00002B5 dq 0
label_0C0000409 dq 0
label_0C0000417 dq 0
label_0C25D1EF85A5BC870 dq 0
label_0C402 dq 0
label_0C433 dq 0
label_0C435 dq 0
label_0C6000273 dq 0
label_0C66 dq 0
label_0C6C1864950D77370 dq 0
label_0C70 dq 0
label_0C8 dq 0
label_0C9E89F0B32597370 dq 0
label_0CCCC dq 0
label_0CCCCCCCCCCCCCCCD dq 0
label_0CCCCCCCD dq 0
label_0CE6 dq 0
label_0CF0 dq 0
label_0D dq 0
label_0D0 dq 0
label_0D0030000 dq 0
label_0D12D96655EDBEB70 dq 0
label_0D1ED0FDF1CD32070 dq 0
label_0D30527475E523070 dq 0
label_0D55 dq 0
label_0D66 dq 0
label_0D6BC1F4834572A70 dq 0
label_0D70 dq 0
label_0D800 dq 0
label_0D88807E658547170 dq 0
label_0DC00 dq 0
label_0DDDD dq 0
label_0DEAC dq 0
label_0DEAD dq 0
label_0DF dq 0
label_0DF949EC45C5CA270 dq 0
label_0E dq 0
label_0E0 dq 0
label_0E0434352 dq 0
label_0E0434F4D dq 0
label_0E06D7363 dq 0
label_0E3 dq 0
label_0E375262D7CD44270 dq 0
label_0E3A11F625057E270 dq 0
label_0E4 dq 0
label_0E50 dq 0
label_0E5A dq 0
label_0EADD062354D83270 dq 0
label_0ED0 dq 0
label_0EDA dq 0
label_0EF dq 0
label_0F dq 0
label_0F0 dq 0
label_0F000 dq 0
label_0F000000000000 dq 0
label_0F20 dq 0
label_0F2A dq 0
label_0F3552E1936D87370 dq 0
label_0F8 dq 0
label_0FA0 dq 0
label_0FB dq 0
label_0FC9FFC00 dq 0
label_0FCF0FCE0 dq 0
label_0FD dq 0
label_0FDE8 dq 0
label_0FDE9 dq 0
label_0FE dq 0
label_0FEFEFEFEFEFEFEFF dq 0
label_0FF dq 0
label_0FF0 dq 0
label_0FF10 dq 0
label_0FF1A dq 0
label_0FF8 dq 0
label_0FFC0 dq 0
label_0FFD9 dq 0
label_0FFDF dq 0
label_0FFE00000 dq 0
label_0FFF dq 0
label_0FFF3FF0 dq 0
label_0FFF9 dq 0
label_0FFFC dq 0
label_0FFFCF9B0 dq 0
label_0FFFD dq 0
label_0FFFE001F dq 0
label_0FFFF dq 0
label_0FFFF0000 dq 0
label_0FFFF003F dq 0
label_0FFFF23FF dq 0
label_0FFFF3FFF dq 0
label_0FFFF807F dq 0
label_0FFFFF002 dq 0
label_0FFFFF005 dq 0
label_0FFFFF1F0FFFFF1F0 dq 0
label_0FFFFF3FF dq 0
label_0FFFFF800 dq 0
label_0FFFFF81F dq 0
label_0FFFFFD7F dq 0
label_0FFFFFEBF dq 0
label_0FFFFFF00 dq 0
label_0FFFFFF44 dq 0
label_0FFFFFF80 dq 0
label_0FFFFFF9C dq 0
label_0FFFFFFA9 dq 0
label_0FFFFFFBF dq 0
label_0FFFFFFC0 dq 0
label_0FFFFFFC9 dq 0
label_0FFFFFFD0 dq 0
label_0FFFFFFDF dq 0
label_0FFFFFFE0 dq 0
label_0FFFFFFE1 dq 0
label_0FFFFFFE3 dq 0
label_0FFFFFFEF dq 0
label_0FFFFFFF0 dq 0
label_0FFFFFFF4 dq 0
label_0FFFFFFF5 dq 0
label_0FFFFFFF6 dq 0
label_0FFFFFFF7 dq 0
label_0FFFFFFF8 dq 0
label_0FFFFFFF9 dq 0
label_0FFFFFFFB dq 0
label_0FFFFFFFC dq 0
label_0FFFFFFFD dq 0
label_0FFFFFFFE dq 0
label_0FFFFFFFF dq 0
label_0FFFFFFFF00000001 dq 0
label_0FFFFFFFFFFFF dq 0
label_0FFFFFFFFFFFF9FFF dq 0
label_0FFFFFFFFFFFFF dq 0
label_0FFFFFFFFFFFFFC18 dq 0
label_0FFFFFFFFFFFFFF0 dq 0
label_0FFFFFFFFFFFFFF80 dq 0
label_0FFFFFFFFFFFFFF9C dq 0
label_0FFFFFFFFFFFFFFE0 dq 0
label_0FFFFFFFFFFFFFFEC dq 0
label_0FFFFFFFFFFFFFFF0 dq 0
label_0FFFFFFFFFFFFFFF6 dq 0
label_0FFFFFFFFFFFFFFF8 dq 0
label_0FFFFFFFFFFFFFFFA dq 0
label_0FFFFFFFFFFFFFFFC dq 0
label_0FFFFFFFFFFFFFFFD dq 0
label_0FFFFFFFFFFFFFFFE dq 0
label_0FFFFFFFFFFFFFFFF dq 0
label_10 dq 0
label_100 dq 0
label_1000 dq 0
label_10000 dq 0
label_100000 dq 0
label_1000000 dq 0
label_10000000000000 dq 0
label_100000001 dq 0
label_100010001 dq 0
label_1001 dq 0
label_1002 dq 0
label_1003 dq 0
label_1004 dq 0
label_101 dq 0
label_101010101010101 dq 0
label_103 dq 0
label_104 dq 0
label_1040 dq 0
label_104A dq 0
label_105 dq 0
label_1050 dq 0
label_106 dq 0
label_106C0 dq 0
label_10FFFF dq 0
label_11 dq 0
label_110000 dq 0
label_119 dq 0
label_12 dq 0
label_120 dq 0
label_120821001 dq 0
label_1263 dq 0
label_128 dq 0
label_13 dq 0
label_130 dq 0
label_138 dq 0
label_14 dq 0
label_140 dq 0
label_1450 dq 0
label_1470 dq 0
label_15 dq 0
label_158 dq 0
label_15D dq 0
label_16 dq 0
label_17 dq 0
label_17E0 dq 0
label_17EA dq 0
label_18 dq 0
label_180 dq 0
label_180000 dq 0
label_18001000 dq 0
label_1810 dq 0
label_188 dq 0
label_19 dq 0
label_19930520 dq 0
label_19930521 dq 0
label_19930522 dq 0
label_1994000 dq 0
label_1A dq 0
label_1B dq 0
label_1C dq 0
label_1C0 dq 0
label_1CA dq 0
label_1CC dq 0
label_1D dq 0
label_1E dq 0
label_1F dq 0
label_1F35 dq 0
label_1F80 dq 0
label_1FF dq 0
label_1FFFFFFF dq 0
label_1FFFFFFFFFFFFFFF dq 0
label_20 dq 0
label_200 dq 0
label_2000 dq 0
label_2000000 dq 0
label_200000000801 dq 0
label_20000001 dq 0
label_2000000B dq 0
label_20001004 dq 0
label_201 dq 0
label_20660 dq 0
label_20670 dq 0
label_20B dq 0
label_20C49BA5E353F7CF dq 0
label_21 dq 0
label_210 dq 0
label_2100000021 dq 0
label_22 dq 0
label_220 dq 0
label_228 dq 0
label_23 dq 0
label_24 dq 0
label_2400 dq 0
label_24924925 dq 0
label_25 dq 0
label_258 dq 0
label_26 dq 0
label_268 dq 0
label_27 dq 0
label_270 dq 0
label_272 dq 0
label_274 dq 0
label_28 dq 0
label_2800 dq 0
label_282 dq 0
label_29 dq 0
label_2A dq 0
label_2A0 dq 0
label_2B dq 0
label_2B992DDFA232 dq 0
label_2B992DDFA233 dq 0
label_2C dq 0
label_2C0 dq 0
label_2D dq 0
label_2E dq 0
label_2F dq 0
label_30 dq 0
label_300 dq 0
label_3000000 dq 0
label_304 dq 0
label_308031F dq 0
label_31 dq 0
label_32 dq 0
label_33 dq 0
label_330 dq 0
label_34 dq 0
label_340 dq 0
label_35 dq 0
label_351 dq 0
label_36 dq 0
label_37 dq 0
label_38 dq 0
label_39 dq 0
label_3A dq 0
label_3A4 dq 0
label_3B dq 0
label_3B9ACA00 dq 0
label_3C dq 0
label_3C8 dq 0
label_3D dq 0
label_3E dq 0
label_3E8 dq 0
label_3F dq 0
label_3F2A dq 0
label_3FE dq 0
label_3FF dq 0
label_3FF0000000000000 dq 0
label_40 dq 0
label_400 dq 0
label_4000 dq 0
label_40000000 dq 0
label_40000015 dq 0
label_41 dq 0
label_42 dq 0
label_43 dq 0
label_434 dq 0
label_4340000000000000 dq 0
label_435 dq 0
label_436 dq 0
label_44 dq 0
label_45 dq 0
label_450 dq 0
label_4550 dq 0
label_46 dq 0
label_47 dq 0
label_48 dq 0
label_49 dq 0
label_49656E69 dq 0
label_4A dq 0
label_4C dq 0
label_4C0 dq 0
label_4C8 dq 0
label_4D dq 0
label_4D0 dq 0
label_4E dq 0
label_4F dq 0
label_50 dq 0
label_51 dq 0
label_510 dq 0
label_51EB851F dq 0
label_52 dq 0
label_53 dq 0
label_54 dq 0
label_55 dq 0
label_56 dq 0
label_57 dq 0
label_58 dq 0
label_59 dq 0
label_5A dq 0
label_5A4D dq 0
label_5C dq 0
label_5C0 dq 0
label_5F dq 0
label_5F0 dq 0
label_60 dq 0
label_6000 dq 0
label_61 dq 0
label_62 dq 0
label_63 dq 0
label_64 dq 0
label_65 dq 0
label_66 dq 0
label_660 dq 0
label_6666666666666667 dq 0
label_66666667 dq 0
label_66A dq 0
label_67 dq 0
label_68 dq 0
label_69 dq 0
label_6A dq 0
label_6A6 dq 0
label_6C dq 0
label_6C65746E dq 0
label_6D dq 0
label_6F dq 0
label_6F0 dq 0
label_6FA dq 0
label_70 dq 0
label_708000007080 dq 0
label_71 dq 0
label_73 dq 0
label_74 dq 0
label_75 dq 0
label_756E6547 dq 0
label_76 dq 0
label_77 dq 0
label_78 dq 0
label_780 dq 0
label_7A dq 0
label_7C dq 0
label_7E dq 0
label_7F dq 0
label_7F0 dq 0
label_7FC0 dq 0
label_7FF dq 0
label_7FF0000000000000 dq 0
label_7FFFFFFD dq 0
label_7FFFFFFF dq 0
label_7FFFFFFFFFFFFFFF dq 0
label_80 dq 0
label_800 dq 0
label_8000 dq 0
label_80000000 dq 0
label_8000000000000 dq 0
label_8000000000000000 dq 0
label_80000003 dq 0
label_80000026 dq 0
label_80000029 dq 0
label_8001F dq 0
label_8040 dq 0
label_8080808080808080 dq 0
label_81 dq 0
label_812 dq 0
label_82 dq 0
label_82A03E5032D2DA70 dq 0
label_83 dq 0
label_84 dq 0
label_85 dq 0
label_85F13E9656DA4870 dq 0
label_86 dq 0
label_88 dq 0
label_8A dq 0
label_8B9C1F4F30D33370 dq 0
label_8C dq 0
label_8D dq 0
label_8E dq 0
label_90 dq 0
label_910 dq 0
label_9375B7955EDE8970 dq 0
label_966 dq 0
label_970 dq 0
label_9799A6753E593B70 dq 0
label_98 dq 0
label_99012E4578D92870 dq 0
label_9F0 dq 0
label_FFFFFFFF80000001 dq 0
label_FFFFFFFFE66CFAE0 dq 0
label_FFFFFFFFFFFF0218 dq 0
label_FFFFFFFFFFFF2800 dq 0
label_FFFFFFFFFFFFC000 dq 0
label_FFFFFFFFFFFFF000 dq 0
label_FFFFFFFFFFFFF910 dq 0
label_FFFFFFFFFFFFF980 dq 0
label_FFFFFFFFFFFFFB10 dq 0
label_FFFFFFFFFFFFFB40 dq 0
label_FFFFFFFFFFFFFBCD dq 0
label_FFFFFFFFFFFFFBCE dq 0
label_FFFFFFFFFFFFFBF0 dq 0
label_FFFFFFFFFFFFFC30 dq 0
label_FFFFFFFFFFFFFDC0 dq 0
label_FFFFFFFFFFFFFDD0 dq 0
label_FFFFFFFFFFFFFE60 dq 0
label_FFFFFFFFFFFFFE78 dq 0
label_FFFFFFFFFFFFFE98 dq 0
label_FFFFFFFFFFFFFEA3 dq 0
label_FFFFFFFFFFFFFF00 dq 0
label_FFFFFFFFFFFFFF20 dq 0
label_FFFFFFFFFFFFFF3E dq 0
label_FFFFFFFFFFFFFF40 dq 0
label_FFFFFFFFFFFFFF60 dq 0
label_FFFFFFFFFFFFFF78 dq 0

end