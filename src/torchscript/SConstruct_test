# 简单的SConstruct文件，用于编译torchscript_test.cpp

import os
import sys

# 设置构建环境
env = Environment()

# 设置为Windows平台
if env['PLATFORM'] == 'win32':
    # 设置VS编译器
    env.Tool('msvc')
    
    # 设置C++标准为C++17
    env.Append(CPPFLAGS=['/std:c++17', '/EHsc', '/utf-8', '/D_CRT_SECURE_NO_WARNINGS'])

# 设置PyTorch路径 - 用户可以根据实际情况修改
# 从环境变量获取或使用默认路径
PYTORCH_PATH = os.environ.get('PYTORCH_PATH', r'D:/Code\\libtorch-win-shared-with-deps-2.8.0+cu126\\libtorch')

# 检查PyTorch路径是否存在
if not os.path.exists(PYTORCH_PATH):
    print(f"错误: PyTorch路径 '{PYTORCH_PATH}' 不存在！")
    print("请设置正确的PYTORCH_PATH环境变量，或直接修改本文件中的PYTORCH_PATH变量")
    Exit(1)

# 设置PyTorch的包含路径
env.Append(CPPPATH=[
    os.path.join(PYTORCH_PATH, 'include'),
    os.path.join(PYTORCH_PATH, 'include', 'torch', 'csrc', 'api', 'include')
])

# 设置PyTorch的库路径
env.Append(LIBPATH=[
    os.path.join(PYTORCH_PATH, 'lib')
])

# 设置需要链接的库
env.Append(LIBS=['torch', 'torch_cpu', 'c10'])

# 创建输出目录
output_dir = '../../bin'
if not os.path.exists(output_dir):
    os.makedirs(output_dir)

# 编译测试程序
torchscript_test_exe = env.Program(
    target=os.path.join(output_dir, 'torchscript_test.exe'),
    source='torchscript_test.cpp'
)

# 设置默认目标
default_targets = [torchscript_test_exe]
Default(default_targets)