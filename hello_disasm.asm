; Disassembly-based converted assembly from EXE
; Generated by reverse engineering the machine code

.model flat, stdcall
.stack 4096

extern GetStdHandle@4: proc
extern WriteConsoleA@20: proc
extern ExitProcess@4: proc
extern lstrlenA@4: proc

STD_OUTPUT_HANDLE equ -11

.data
    str_14001d330 db " === C++20 ", 0
    str_14001d341 db " v1.1 ==== ", 0
    str_14001d350 db "string too long", 0
    str_14001d3a8 db "Unknown exception", 0
    str_14001d3c0 db "bad array new length", 0
    str_14001d3e0 db "bad allocation", 0
    str_14001d5c8 db "bad exception", 0
    str_14001dcf0 db "__based(", 0
    str_14001dd00 db "__cdecl", 0
    str_14001dd08 db "__pascal", 0
    str_14001dd18 db "__stdcall", 0
    str_14001dd28 db "__thiscall", 0
    str_14001dd38 db "__fastcall", 0
    str_14001dd48 db "__vectorcall", 0
    str_14001dd58 db "__clrcall", 0
    str_14001dd64 db "__eabi", 0
    str_14001dd70 db "__swift_1", 0
    str_14001dd80 db "__swift_2", 0
    str_14001dd90 db "__swift_3", 0
    str_14001dda0 db "__ptr64", 0
    str_14001dda8 db "__restrict", 0
    str_14001ddb8 db "__unaligned", 0
    str_14001ddc8 db "restrict(", 0
    str_14001ddd4 db " new", 0
    str_14001dde0 db " delete", 0
    str_14001de08 db "operator", 0
    str_14001de90 db "`vftable'", 0
    str_14001dea0 db "`vbtable'", 0
    str_14001deb0 db "`vcall'", 0
    str_14001deb8 db "`typeof'", 0
    str_14001dec8 db "`local static guard'", 0
    str_14001dee0 db "`string'", 0
    str_14001def0 db "`vbase destructor'", 0
    str_14001df08 db "`vector deleting destructor'", 0
    str_14001df28 db "`default constructor closure'", 0
    str_14001df48 db "`scalar deleting destructor'", 0
    str_14001df68 db "`vector constructor iterator'", 0
    str_14001df88 db "`vector destructor iterator'", 0
    str_14001dfa8 db "`vector vbase constructor iterator'", 0
    str_14001dfd0 db "`virtual displacement map'", 0
    str_14001dff0 db "`eh vector constructor iterator'", 0
    str_14001e018 db "`eh vector destructor iterator'", 0
    str_14001e038 db "`eh vector vbase constructor iterator'", 0
    str_14001e060 db "`copy constructor closure'", 0
    str_14001e080 db "`udt returning'", 0
    str_14001e094 db "`RTTI", 0
    str_14001e0a0 db "`local vftable'", 0
    str_14001e0b0 db "`local vftable constructor closure'", 0
    str_14001e0d4 db " new[]", 0
    str_14001e0e0 db " delete[]", 0
    str_14001e0f0 db "`omni callsig'", 0
    str_14001e100 db "`placement delete closure'", 0
    str_14001e120 db "`placement delete[] closure'", 0
    str_14001e140 db "`managed vector constructor iterator'", 0
    str_14001e168 db "`managed vector destructor iterator'", 0
    str_14001e190 db "`eh vector copy constructor iterator'", 0
    str_14001e1b8 db "`eh vector vbase copy constructor iterator'", 0
    str_14001e1e8 db "`dynamic initializer for '", 0
    str_14001e208 db "`dynamic atexit destructor for '", 0
    str_14001e230 db "`vector copy constructor iterator'", 0
    str_14001e258 db "`vector vbase copy constructor iterator'", 0
    str_14001e288 db "`managed vector copy constructor iterator'", 0
    str_14001e2b8 db "`local static thread guard'", 0
    str_14001e2d8 db "operator "" ", 0
    str_14001e2e8 db "operator co_await", 0
    str_14001e300 db "operator<=>", 0
    str_14001e310 db " Type Descriptor'", 0
    str_14001e328 db " Base Class Descriptor at (", 0
    str_14001e348 db " Base Class Array'", 0
    str_14001e360 db " Class Hierarchy Descriptor'", 0
    str_14001e380 db " Complete Object Locator'", 0
    str_14001e3a0 db "`anonymous namespace'", 0
    str_14001e480 db "FlsAlloc", 0
    str_14001e498 db "FlsFree", 0
    str_14001e4a8 db "FlsGetValue", 0
    str_14001e4c0 db "FlsSetValue", 0
    str_14001e4d8 db "InitializeCriticalSectionEx", 0
    str_14001e710 db "(null)", 0
    str_14001e888 db "CorExitProcess", 0
    str_14001ec9c db "Sunday", 0
    str_14001eca4 db "Monday", 0
    str_14001ecb0 db "Tuesday", 0
    str_14001ecb8 db "Wednesday", 0
    str_14001ecc8 db "Thursday", 0
    str_14001ecd4 db "Friday", 0
    str_14001ece0 db "Saturday", 0
    str_14001ed20 db "January", 0
    str_14001ed28 db "February", 0
    str_14001ed34 db "March", 0
    str_14001ed3c db "April", 0
    str_14001ed44 db "June", 0
    str_14001ed4c db "July", 0
    str_14001ed54 db "August", 0
    str_14001ed60 db "September", 0
    str_14001ed70 db "October", 0
    str_14001ed78 db "November", 0
    str_14001ed88 db "December", 0
    str_14001eda0 db "MM/dd/yy", 0
    str_14001edb0 db "dddd, MMMM dd, yyyy", 0
    str_14001edc8 db "HH:mm:ss", 0
    str_14001f710 db "AreFileApisANSI", 0
    str_14001f728 db "CompareStringEx", 0
    str_14001f748 db "LCMapStringEx", 0
    str_14001f760 db "LocaleNameToLCID", 0
    str_14001f778 db "AppPolicyGetProcessTerminationMethod", 0
    str_14001f830 db "NAN(SNAN)", 0
    str_14001f840 db "nan(snan)", 0
    str_14001f850 db "NAN(IND)", 0
    str_14001f860 db "nan(ind)", 0
    str_14001f86c db "e+000", 0
    str_14001fc80 db " !"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 0
    str_14001fe00 db " !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~", 0
    str_140023330 db "d8L2", 0
    str_14002335c db "[aOni*{", 0
    str_140023386 db "@2&@", 0
    str_1400233ba db ""RP(", 0
    str_140023433 db "eLK(w", 0
    str_1400234a0 db "FEMh", 0
    str_1400234ae db "h0'D", 0
    str_140023500 db "owM&", 0
    str_14002353d db "~ $s%r", 0
    str_14002354c db "@b;zO]", 0
    str_14002358b db "$qE}", 0
    str_1400235c9 db ";*xh", 0
    str_140023633 db "["93", 0
    str_140023664 db "iu+-,", 0
    str_1400236ca db "\\lo}", 0
    str_1400236d5 db "obwQ4", 0
    str_1400236ef db "&Sgw", 0
    str_140023787 db "?nz(", 0
    str_14002383a db "=87M", 0
    str_140023927 db "v2!L.2", 0
    str_1400239a9 db "X/4B", 0
    str_140023a47 db "k=yI", 0
    str_140023aaa db "^<V7w", 0
    str_140023afd db "W&|.", 0
    str_140023be0 db "1#INF", 0
    str_140023be8 db "1#QNAN", 0
    str_140023bf0 db "1#SNAN", 0
    str_140023bf8 db "1#IND", 0
    str_140023d50 db "UUUUUU", 0
    str_140023d80 db "UUUUUU", 0
    str_140023e01 db "TUUUU", 0
    str_140023e24 db "#Ib?", 0
    str_14002469f db "=imb;D", 0
    str_1400246a7 db "=W>6", 0
    str_14002478f db ">[^j", 0
    str_140024797 db ">Kb|", 0
    str_1400247d6 db "+>De", 0
    str_140024849 db "11Y@", 0
    str_14002484e db "/>58d%", 0
    str_140024864 db "MJ$>", 0
    str_14002487f db ">cQ6", 0
    str_140024886 db "!>6'Y", 0
    str_140024897 db ">jtm}S", 0
    str_1400248cf db ">77:", 0
    str_1400248ee db ")>6{1n", 0
    str_1400248fc db "Vr.>T", 0
    str_14002490c db "+f)>0'", 0
    str_14002495b db "Lj[;>", 0
    str_14002497e db "3>fvw", 0
    str_14002498c db ";H9>&X", 0
    str_1400249b2 db "*StO9>T", 0
    str_1400249de db ".>Tu", 0
    str_1400249e4 db ".(!>", 0
    str_1400249fc db "n03>Pu", 0
    str_140024a7d db "S9>H", 0
    str_140024ac4 db "x.&>", 0
    str_140024ad2 db "K~Je#>!", 0
    str_140024ae4 db "-/!>", 0
    str_140024af6 db "(>aI", 0
    str_140024aff db "=cQ6", 0
    str_140024b0b db "+M<7>", 0
    str_140024b1e db "*>f[", 0
    str_140024b2c db "o ->", 0
    str_140024b4c db "l(>>", 0
    str_140024b55 db "c(>\\,", 0
    str_140024b64 db "ET5>", 0
    str_140024b6e db ";>9l", 0
    str_140024b84 db "mG4>", 0
    str_140024bab db "bp(=>?g", 0
    str_140024bbc db "36,>", 0
    str_140024c0d db "37>k", 0
    str_140024c3c db "~X3>", 0
    str_140024c4e db "6>J`", 0
    str_140024c56 db "?>!T", 0
    str_140024c6c db "BC?>6t9^", 0
    str_140024c8d db "8'>0", 0
    str_140024cb1 db "'._M", 0
    str_140024cbf db "=4<,", 0
    str_140024cc5 db "BF>^G", 0
    str_140024cd5 db "K&>.yC", 0
    str_140024ce4 db " 'L>[", 0
    str_140024cec db ".xJ>Hf", 0
    str_140024cf3 db "y\\PD>!", 0
    str_140024d02 db "|b=})>", 0
    str_140024d13 db "c [1>H'", 0
    str_140024d24 db "dL?>", 0
    str_140024d52 db "uzKs@>", 0
    str_140024d6e db "3>N;kU", 0
    str_140024d9d db "kE>fvw", 0
    str_140024db5 db "eF>t", 0
    str_140024dc6 db "L>ev", 0
    str_140024dde db "A>pP&", 0
    str_140024de4 db "V6E>`"(5", 0
    str_140024e2d db ",=>B", 0
    str_140024e36 db "">}t", 0
    str_140024e5c db "0iN>/", 0
    str_140024e6c db "+h->|", 0
    str_140024e7e db "@>%>b", 0
    str_140024ebf db "?qBJ", 0
    str_140025002 db "l@6 ", 0
    str_140025077 db "?-hk", 0
    str_140025149 db "OZQ%", 0
    str_140025239 db "-)4d", 0
    str_14002527f db "?:kP<", 0
    str_14002528f db "?UUUUUU", 0
    str_140025317 db "?f`Y4", 0
    str_140025347 db "?QY^&", 0
    str_140025387 db "?U)#", 0
    str_14002553f db "?ysB", 0
    str_140025567 db "?$G4", 0
    str_14002557f db "?30]", 0
    str_140025677 db "?7zQ6$", 0
    str_1400256a0 db "log10", 0
    str_140025fd8 db ".text$mn", 0
    str_140025fec db ".text$mn$00", 0
    str_140026000 db ".text$mn$21", 0
    str_140026014 db ".text$x", 0
    str_140026024 db ".idata$5", 0
    str_140026038 db ".00cfg", 0
    str_140026048 db ".CRT$XCA", 0
    str_14002605c db ".CRT$XCAA", 0
    str_140026070 db ".CRT$XCZ", 0
    str_140026084 db ".CRT$XIA", 0
    str_140026098 db ".CRT$XIAA", 0
    str_1400260ac db ".CRT$XIAC", 0
    str_1400260c0 db ".CRT$XIC", 0
    str_1400260d4 db ".CRT$XIZ", 0
    str_1400260e8 db ".CRT$XPA", 0
    str_1400260fc db ".CRT$XPX", 0
    str_140026110 db ".CRT$XPXA", 0
    str_140026124 db ".CRT$XPZ", 0
    str_140026138 db ".CRT$XTA", 0
    str_14002614c db ".CRT$XTZ", 0
    str_140026160 db ".rdata", 0
    str_140026170 db ".rdata$00", 0
    str_140026184 db ".rdata$r", 0
    str_140026198 db ".rdata$voltmd", 0
    str_1400261b0 db ".rdata$zzzdbg", 0
    str_1400261c8 db ".rtc$IAA", 0
    str_1400261dc db ".rtc$IZZ", 0
    str_1400261f0 db ".rtc$TAA", 0
    str_140026204 db ".rtc$TZZ", 0
    str_140026218 db ".xdata", 0
    str_140026228 db ".xdata$x", 0
    str_14002623c db ".idata$2", 0
    str_140026250 db ".idata$3", 0
    str_140026264 db ".idata$4", 0
    str_140026278 db ".idata$6", 0
    str_14002628c db ".data", 0
    str_14002629c db ".data$r", 0
    str_1400262ac db ".data$rs", 0
    str_1400262c0 db ".bss", 0
    str_1400262d0 db ".pdata", 0
    str_1400262e0 db "_RDATA", 0
    str_140027c12 db "SetConsoleOutputCP", 0
    str_140027c28 db "RtlCaptureContext", 0
    str_140027c3c db "RtlLookupFunctionEntry", 0
    str_140027c56 db "RtlVirtualUnwind", 0
    str_140027c6a db "UnhandledExceptionFilter", 0
    str_140027c86 db "SetUnhandledExceptionFilter", 0
    str_140027ca4 db "GetCurrentProcess", 0
    str_140027cb8 db "TerminateProcess", 0
    str_140027ccc db "IsProcessorFeaturePresent", 0
    str_140027ce8 db "QueryPerformanceCounter", 0
    str_140027d02 db "GetCurrentProcessId", 0
    str_140027d18 db "GetCurrentThreadId", 0
    str_140027d2e db "GetSystemTimeAsFileTime", 0
    str_140027d48 db "InitializeSListHead", 0
    str_140027d5e db "IsDebuggerPresent", 0
    str_140027d72 db "GetStartupInfoW", 0
    str_140027d84 db "GetModuleHandleW", 0
    str_140027d96 db "KERNEL32.dll", 0
    str_140027da6 db "RtlPcToFileHeader", 0
    str_140027dba db "RaiseException", 0
    str_140027dcc db "RtlUnwindEx", 0
    str_140027dda db "GetLastError", 0
    str_140027dea db "SetLastError", 0
    str_140027dfa db "EncodePointer", 0
    str_140027e0a db "EnterCriticalSection", 0
    str_140027e22 db "LeaveCriticalSection", 0
    str_140027e3a db "DeleteCriticalSection", 0
    str_140027e52 db "InitializeCriticalSectionAndSpinCount", 0
    str_140027e7a db "TlsAlloc", 0
    str_140027e86 db "TlsGetValue", 0
    str_140027e94 db "TlsSetValue", 0
    str_140027ea2 db "TlsFree", 0
    str_140027eac db "FreeLibrary", 0
    str_140027eba db "GetProcAddress", 0
    str_140027ecc db "LoadLibraryExW", 0
    str_140027ede db "GetStdHandle", 0
    str_140027eee db "WriteFile", 0
    str_140027efa db "GetModuleFileNameW", 0
    str_140027f10 db "ExitProcess", 0
    str_140027f1e db "GetModuleHandleExW", 0
    str_140027f34 db "GetCommandLineA", 0
    str_140027f46 db "GetCommandLineW", 0
    str_140027f58 db "HeapAlloc", 0
    str_140027f64 db "HeapFree", 0
    str_140027f70 db "FlsAlloc", 0
    str_140027f7c db "FlsGetValue", 0
    str_140027f8a db "FlsSetValue", 0
    str_140027f98 db "FlsFree", 0
    str_140027fa2 db "CompareStringW", 0
    str_140027fb4 db "LCMapStringW", 0
    str_140027fc4 db "GetFileType", 0
    str_140027fd2 db "FindClose", 0
    str_140027fde db "FindFirstFileExW", 0
    str_140027ff2 db "FindNextFileW", 0
    str_140028002 db "IsValidCodePage", 0
    str_140028014 db "GetACP", 0
    str_14002801e db "GetOEMCP", 0
    str_14002802a db "GetCPInfo", 0
    str_140028036 db "MultiByteToWideChar", 0
    str_14002804c db "WideCharToMultiByte", 0
    str_140028062 db "GetEnvironmentStringsW", 0
    str_14002807c db "FreeEnvironmentStringsW", 0
    str_140028096 db "SetEnvironmentVariableW", 0
    str_1400280b0 db "SetStdHandle", 0
    str_1400280c0 db "GetStringTypeW", 0
    str_1400280d2 db "GetProcessHeap", 0
    str_1400280e4 db "FlushFileBuffers", 0
    str_1400280f8 db "GetConsoleOutputCP", 0
    str_14002810e db "GetConsoleMode", 0
    str_140028120 db "GetFileSizeEx", 0
    str_140028130 db "SetFilePointerEx", 0
    str_140028144 db "HeapSize", 0
    str_140028150 db "HeapReAlloc", 0
    str_14002815e db "CloseHandle", 0
    str_14002816c db "CreateFileW", 0
    str_14002817a db "WriteConsoleW", 0
    str_1400293ea db "                          ", 0
    str_1400294ca db "abcdefghijklmnopqrstuvwxyz", 0
    str_1400294ea db "ABCDEFGHIJKLMNOPQRSTUVWXYZ", 0
    str_140029602 db "                          ", 0
    str_1400296f1 db "abcdefghijklmnopqrstuvwxyz", 0
    str_140029711 db "ABCDEFGHIJKLMNOPQRSTUVWXYZ", 0
    str_140029a90 db ".?AVbad_array_new_length@std@@", 0
    str_140029ac0 db ".?AVbad_alloc@std@@", 0
    str_140029ae8 db ".?AVexception@std@@", 0
    str_140029b10 db ".?AVlogic_error@std@@", 0
    str_140029b38 db ".?AVlength_error@std@@", 0
    str_140029b60 db ".?AVbad_exception@std@@", 0
    str_140029b88 db ".?AVtype_info@@", 0
    newline db 13, 10, 0
    bytes_written dd ?

.code
print_string proc
    push ebp
    mov ebp, esp
    push ebx
    push ecx
    push edx
    
    ; Get stdout handle
    push STD_OUTPUT_HANDLE
    call GetStdHandle@4
    mov ebx, eax
    
    ; Get string length
    push dword ptr [ebp+8]
    call lstrlenA@4
    mov ecx, eax
    
    ; Write string
    push 0
    push offset bytes_written
    push ecx
    push dword ptr [ebp+8]
    push ebx
    call WriteConsoleA@20
    
    ; Write newline
    push 0
    push offset bytes_written
    push 2
    push offset newline
    push ebx
    call WriteConsoleA@20
    
    pop edx
    pop ecx
    pop ebx
    pop ebp
    ret 4
print_string endp

start:
    ; Disassembled machine code from original EXE
    sub rsp, 0x28
    call 0x140003b60
    add rsp, 0x28
    jmp 0x1400034b4
    int3 
    int3 
    sub rsp, 0x48
    lea rcx, [rsp + 0x20]
    call 0x14000314c
    lea rdx, [rip + 0x24207]
    lea rcx, [rsp + 0x20]
    call 0x140004178
    int3 
    sub rsp, 0x48
    lea rcx, [rsp + 0x20]
    call 0x140001750
    lea rdx, [rip + 0x2412f]
    lea rcx, [rsp + 0x20]
    call 0x140004178
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    xor ecx, ecx
    call qword ptr [rip + 0x19993]
    mov rcx, rbx
    call qword ptr [rip + 0x19982]
    call qword ptr [rip + 0x1998c]
    mov rcx, rax
    mov edx, 0xc0000409
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x19980]
    mov qword ptr [rsp + 8], rcx
    sub rsp, 0x38
    mov ecx, 0x17
    call qword ptr [rip + 0x19974]
    test eax, eax
    je 0x1400036d7
    mov ecx, 2
    int 0x29
    lea rcx, [rip + 0x26572]
    call 0x1400038ac
    mov rax, qword ptr [rsp + 0x38]
    mov qword ptr [rip + 0x26659], rax
    lea rax, [rsp + 0x38]
    add rax, 8
    mov qword ptr [rip + 0x265e9], rax
    mov rax, qword ptr [rip + 0x26642]
    mov qword ptr [rip + 0x264b3], rax
    mov rax, qword ptr [rsp + 0x40]
    mov qword ptr [rip + 0x265b7], rax
    mov dword ptr [rip + 0x2648d], 0xc0000409
    mov dword ptr [rip + 0x26487], 1
    mov dword ptr [rip + 0x26491], 1
    mov eax, 8
    imul rax, rax, 0
    lea rcx, [rip + 0x26489]
    mov qword ptr [rcx + rax], 2
    mov eax, 8
    imul rax, rax, 0
    mov rcx, qword ptr [rip + 0x258a1]
    mov qword ptr [rsp + rax + 0x20], rcx
    mov eax, 8
    imul rax, rax, 1
    mov rcx, qword ptr [rip + 0x258cc]
    mov qword ptr [rsp + rax + 0x20], rcx
    lea rcx, [rip + 0x19cb0]
    call 0x140003684
    add rsp, 0x38
    ret
    int3 
    int3 
    sub rsp, 0x28
    mov ecx, 8
    call 0x1400037a0
    add rsp, 0x28
    ret
    int3 
    mov dword ptr [rsp + 8], ecx
    sub rsp, 0x28
    mov ecx, 0x17
    call qword ptr [rip + 0x1988d]
    test eax, eax
    je 0x1400037bf
    mov eax, dword ptr [rsp + 0x30]
    mov ecx, eax
    int 0x29
    lea rcx, [rip + 0x2648a]
    call 0x14000383c
    mov rax, qword ptr [rsp + 0x28]
    mov qword ptr [rip + 0x26571], rax
    lea rax, [rsp + 0x28]
    add rax, 8
    mov qword ptr [rip + 0x26501], rax
    mov rax, qword ptr [rip + 0x2655a]
    mov qword ptr [rip + 0x263cb], rax
    mov dword ptr [rip + 0x263b1], 0xc0000409
    mov dword ptr [rip + 0x263ab], 1
    mov dword ptr [rip + 0x263b5], 1
    mov eax, 8
    imul rax, rax, 0
    lea rcx, [rip + 0x263ad]
    mov edx, dword ptr [rsp + 0x30]
    mov qword ptr [rcx + rax], rdx
    lea rcx, [rip + 0x19bfe]
    call 0x140003684
    add rsp, 0x28
    ret
    mov qword ptr [rsp + 0x20], rbx
    push rdi
    sub rsp, 0x40
    mov rbx, rcx
    call qword ptr [rip + 0x197b9]
    mov rdi, qword ptr [rbx + 0xf8]
    lea rdx, [rsp + 0x50]
    mov rcx, rdi
    xor r8d, r8d
    call qword ptr [rip + 0x197a9]
    test rax, rax
    je 0x14000389e
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rsp + 0x58]
    mov rdx, qword ptr [rsp + 0x50]
    mov r9, rax
    mov qword ptr [rsp + 0x30], rcx
    mov r8, rdi
    lea rcx, [rsp + 0x60]
    mov qword ptr [rsp + 0x28], rcx
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rbx
    call qword ptr [rip + 0x1977a]
    mov rbx, qword ptr [rsp + 0x68]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    int3 
    int3 
    push rbx
    push rsi
    push rdi
    sub rsp, 0x40
    mov rbx, rcx
    call qword ptr [rip + 0x1974b]
    mov rsi, qword ptr [rbx + 0xf8]
    xor edi, edi
    xor r8d, r8d
    lea rdx, [rsp + 0x60]
    mov rcx, rsi
    call qword ptr [rip + 0x19739]
    test rax, rax
    je 0x140003915
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rsp + 0x68]
    mov rdx, qword ptr [rsp + 0x60]
    mov r9, rax
    mov qword ptr [rsp + 0x30], rcx
    mov r8, rsi
    lea rcx, [rsp + 0x70]
    mov qword ptr [rsp + 0x28], rcx
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rbx
    call qword ptr [rip + 0x1970a]
    inc edi
    cmp edi, 2
    jl 0x1400038c6
    add rsp, 0x40
    pop rdi
    pop rsi
    pop rbx
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call 0x1400040b4
    test eax, eax
    je 0x14000394e
    mov rax, qword ptr gs:[0x30]
    mov rcx, qword ptr [rax + 8]
    jmp 0x140003941
    cmp rcx, rax
    je 0x140003955
    xor eax, eax
    lock cmpxchg qword ptr [rip + 0x267dc], rcx
    jne 0x14000393c
    xor al, al
    add rsp, 0x28
    ret
    mov al, 1
    jmp 0x140003950
    int3 
    int3 
    int3 
    sub rsp, 0x28
    test ecx, ecx
    jne 0x14000396b
    mov byte ptr [rip + 0x267c5], 1
    call 0x140003f08
    call 0x1400050f8
    test al, al
    jne 0x14000397d
    xor al, al
    jmp 0x140003991
    call 0x14000e818
    test al, al
    jne 0x14000398f
    xor ecx, ecx
    call 0x140005120
    jmp 0x140003979
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    cmp byte ptr [rip + 0x2678c], 0
    mov ebx, ecx
    jne 0x140003a10
    cmp ecx, 1
    ja 0x140003a18
    call 0x1400040b4
    test eax, eax
    je 0x1400039df
    test ebx, ebx
    jne 0x1400039df
    lea rcx, [rip + 0x26776]
    call 0x14000e67c
    test eax, eax
    jne 0x1400039db
    lea rcx, [rip + 0x2677e]
    call 0x14000e67c
    test eax, eax
    je 0x140003a09
    xor al, al
    jmp 0x140003a12
    movdqa xmm0, xmmword ptr [rip + 0x19a59]
    or rax, 0xffffffffffffffff
    movdqu xmmword ptr [rip + 0x26745], xmm0
    mov qword ptr [rip + 0x2674e], rax
    movdqu xmmword ptr [rip + 0x2674e], xmm0
    mov qword ptr [rip + 0x26757], rax
    mov byte ptr [rip + 0x26721], 1
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    mov ecx, 5
    call 0x140003c80
    int3 
    int3 
    sub rsp, 0x18
    mov r8, rcx
    mov eax, 0x5a4d
    cmp word ptr [rip - 0x3a37], ax
    jne 0x140003ab1
    movsxd rcx, dword ptr [rip - 0x3a04]
    lea rdx, [rip - 0x3a47]
    add rcx, rdx
    cmp dword ptr [rcx], 0x4550
    jne 0x140003ab1
    mov eax, 0x20b
    cmp word ptr [rcx + 0x18], ax
    jne 0x140003ab1
    sub r8, rdx
    movzx edx, word ptr [rcx + 0x14]
    add rdx, 0x18
    add rdx, rcx
    movzx eax, word ptr [rcx + 6]
    lea rcx, [rax + rax*4]
    lea r9, [rdx + rcx*8]
    mov qword ptr [rsp], rdx
    cmp rdx, r9
    je 0x140003a98
    mov ecx, dword ptr [rdx + 0xc]
    cmp r8, rcx
    jb 0x140003a92
    mov eax, dword ptr [rdx + 8]
    add eax, ecx
    cmp r8, rax
    jb 0x140003a9a
    add rdx, 0x28
    jmp 0x140003a77
    xor edx, edx
    test rdx, rdx
    jne 0x140003aa3
    xor al, al
    jmp 0x140003ab7
    cmp dword ptr [rdx + 0x24], 0
    jge 0x140003aad
    xor al, al
    jmp 0x140003ab7
    mov al, 1
    jmp 0x140003ab7
    xor al, al
    jmp 0x140003ab7
    xor al, al
    add rsp, 0x18
    ret
    push rbx
    sub rsp, 0x20
    mov bl, cl
    call 0x1400040b4
    xor edx, edx
    test eax, eax
    je 0x140003ada
    test bl, bl
    jne 0x140003ada
    xchg qword ptr [rip + 0x2664e], rdx
    add rsp, 0x20
    pop rbx
    ret
    push rbx
    sub rsp, 0x20
    cmp byte ptr [rip + 0x26643], 0
    mov bl, cl
    je 0x140003af5
    test dl, dl
    jne 0x140003b01
    call 0x14000e82c
    mov cl, bl
    call 0x140005120
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    cmp qword ptr [rip + 0x2661e], -1
    mov rbx, rcx
    jne 0x140003b26
    call 0x14000e628
    jmp 0x140003b35
    mov rdx, rbx
    lea rcx, [rip + 0x26608]
    call 0x14000e6a4
    xor edx, edx
    test eax, eax
    cmove rdx, rbx
    mov rax, rdx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x140003b0c
    neg rax
    sbb eax, eax
    neg eax
    dec eax
    add rsp, 0x28
    ret
    int3 
    mov qword ptr [rsp + 0x18], rbx
    push rbp
    mov rbp, rsp
    sub rsp, 0x30
    mov rax, qword ptr [rip + 0x2548c]
    movabs rbx, 0x2b992ddfa232
    cmp rax, rbx
    jne 0x140003bf7
    and qword ptr [rbp + 0x10], 0
    lea rcx, [rbp + 0x10]
    call qword ptr [rip + 0x194ce]
    mov rax, qword ptr [rbp + 0x10]
    mov qword ptr [rbp - 0x10], rax
    call qword ptr [rip + 0x194b8]
    mov eax, eax
    xor qword ptr [rbp - 0x10], rax
    call qword ptr [rip + 0x194a4]
    mov eax, eax
    lea rcx, [rbp + 0x18]
    xor qword ptr [rbp - 0x10], rax
    call qword ptr [rip + 0x1948c]
    mov eax, dword ptr [rbp + 0x18]
    lea rcx, [rbp - 0x10]
    shl rax, 0x20
    xor rax, qword ptr [rbp + 0x18]
    xor rax, qword ptr [rbp - 0x10]
    xor rax, rcx
    movabs rcx, 0xffffffffffff
    and rax, rcx
    movabs rcx, 0x2b992ddfa233
    cmp rax, rbx
    cmove rax, rcx
    mov qword ptr [rip + 0x25409], rax
    mov rbx, qword ptr [rsp + 0x50]
    not rax
    mov qword ptr [rip + 0x2543a], rax
    add rsp, 0x30
    pop rbp
    ret
    xor eax, eax
    ret
    int3 
    mov eax, 1
    ret
    int3 
    int3 
    mov eax, 0x4000
    ret
    int3 
    int3 
    lea rcx, [rip + 0x26549]
    jmp qword ptr [rip + 0x1943a]
    int3 
    int3 
    mov al, 1
    ret
    int3 
    ret
    int3 
    lea rax, [rip + 0x26541]
    ret
    sub rsp, 0x28
    call 0x140002ef0
    or qword ptr [rax], 0x24
    call 0x140003c38
    or qword ptr [rax], 2
    add rsp, 0x28
    ret
    int3 
    xor eax, eax
    cmp dword ptr [rip + 0x253ec], eax
    sete al
    ret
    lea rax, [rip + 0x27121]
    ret
    lea rax, [rip + 0x27111]
    ret
    and dword ptr [rip + 0x26509], 0
    ret
    mov qword ptr [rsp + 8], rbx
    push rbp
    lea rbp, [rsp - 0x4c0]
    sub rsp, 0x5c0
    mov ebx, ecx
    mov ecx, 0x17
    call qword ptr [rip + 0x1939e]
    test eax, eax
    je 0x140003caa
    mov ecx, ebx
    int 0x29
    mov ecx, 3
    call 0x140003c78
    xor edx, edx
    lea rcx, [rbp - 0x10]
    mov r8d, 0x4d0
    call 0x14001b630
    lea rcx, [rbp - 0x10]
    call qword ptr [rip + 0x19339]
    mov rbx, qword ptr [rbp + 0xe8]
    lea rdx, [rbp + 0x4d8]
    mov rcx, rbx
    xor r8d, r8d
    call qword ptr [rip + 0x19327]
    test rax, rax
    je 0x140003d2a
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rbp + 0x4e0]
    mov rdx, qword ptr [rbp + 0x4d8]
    mov r9, rax
    mov qword ptr [rsp + 0x30], rcx
    mov r8, rbx
    lea rcx, [rbp + 0x4e8]
    mov qword ptr [rsp + 0x28], rcx
    lea rcx, [rbp - 0x10]
    mov qword ptr [rsp + 0x20], rcx
    xor ecx, ecx
    call qword ptr [rip + 0x192ee]
    mov rax, qword ptr [rbp + 0x4c8]
    lea rcx, [rsp + 0x50]
    mov qword ptr [rbp + 0xe8], rax
    xor edx, edx
    lea rax, [rbp + 0x4c8]
    mov r8d, 0x98
    add rax, 8
    mov qword ptr [rbp + 0x88], rax
    call 0x14001b630
    mov rax, qword ptr [rbp + 0x4c8]
    mov qword ptr [rsp + 0x60], rax
    mov dword ptr [rsp + 0x50], 0x40000015
    mov dword ptr [rsp + 0x54], 1
    call qword ptr [rip + 0x192f2]
    mov ebx, eax
    xor ecx, ecx
    lea rax, [rsp + 0x50]
    mov qword ptr [rsp + 0x40], rax
    lea rax, [rbp - 0x10]
    mov qword ptr [rsp + 0x48], rax
    call qword ptr [rip + 0x1928d]
    lea rcx, [rsp + 0x40]
    call qword ptr [rip + 0x1927a]
    test eax, eax
    jne 0x140003db7
    cmp ebx, 1
    je 0x140003db7
    lea ecx, [rax + 3]
    call 0x140003c78
    mov rbx, qword ptr [rsp + 0x5d0]
    add rsp, 0x5c0
    pop rbp
    ret
    jmp 0x140003c0c
    int3 
    int3 
    int3 
    sub rsp, 0x28
    xor ecx, ecx
    call qword ptr [rip + 0x192a4]
    test rax, rax
    je 0x140003e1a
    mov ecx, 0x5a4d
    cmp word ptr [rax], cx
    jne 0x140003e1a
    movsxd rcx, dword ptr [rax + 0x3c]
    add rcx, rax
    cmp dword ptr [rcx], 0x4550
    jne 0x140003e1a
    mov eax, 0x20b
    cmp word ptr [rcx + 0x18], ax
    jne 0x140003e1a
    cmp dword ptr [rcx + 0x84], 0xe
    jbe 0x140003e1a
    cmp dword ptr [rcx + 0xf8], 0
    setne al
    jmp 0x140003e1c
    xor al, al
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    lea rcx, [rip + 9]
    jmp qword ptr [rip + 0x191f6]
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, qword ptr [rcx]
    mov rdi, rcx
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x140003e68
    cmp dword ptr [rbx + 0x18], 4
    jne 0x140003e68
    mov edx, dword ptr [rbx + 0x20]
    lea eax, [rdx - 0x19930520]
    cmp eax, 2
    jbe 0x140003e75
    cmp edx, 0x1994000
    je 0x140003e75
    mov rbx, qword ptr [rsp + 0x30]
    xor eax, eax
    add rsp, 0x20
    pop rdi
    ret
    call 0x140005294
    mov qword ptr [rax], rbx
    mov rbx, qword ptr [rdi + 8]
    call 0x1400052a8
    mov qword ptr [rax], rbx
    call 0x14000e864
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    lea rbx, [rip + 0x22477]
    lea rdi, [rip + 0x22470]
    jmp 0x140003ebc
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x140003eb8
    call qword ptr [rip + 0x193b8]
    add rbx, 8
    cmp rbx, rdi
    jb 0x140003eaa
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    lea rbx, [rip + 0x2244b]
    lea rdi, [rip + 0x22444]
    jmp 0x140003ef8
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x140003ef4
    call qword ptr [rip + 0x1937c]
    add rbx, 8
    cmp rbx, rdi
    jb 0x140003ee6
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x10
    xor eax, eax
    xor ecx, ecx
    cpuid 
    mov r8d, ecx
    xor r11d, r11d
    mov r10d, edx
    xor r8d, 0x6c65746e
    xor r10d, 0x49656e69
    mov r9d, ebx
    mov esi, eax
    xor ecx, ecx
    lea eax, [r11 + 1]
    or r10d, r8d
    cpuid 
    xor r9d, 0x756e6547
    mov dword ptr [rsp], eax
    or r10d, r9d
    mov dword ptr [rsp + 4], ebx
    mov edi, ecx
    mov dword ptr [rsp + 8], ecx
    mov dword ptr [rsp + 0xc], edx
    jne 0x140003fbc
    or qword ptr [rip + 0x250ff], 0xffffffffffffffff
    and eax, 0xfff3ff0
    mov qword ptr [rip + 0x250e7], 0x8000
    cmp eax, 0x106c0
    je 0x140003fa8
    cmp eax, 0x20660
    je 0x140003fa8
    cmp eax, 0x20670
    je 0x140003fa8
    add eax, 0xfffcf9b0
    cmp eax, 0x20
    ja 0x140003fbc
    movabs rcx, 0x100010001
    bt rcx, rax
    jae 0x140003fbc
    mov r8d, dword ptr [rip + 0x261dd]
    or r8d, 1
    mov dword ptr [rip + 0x261d2], r8d
    jmp 0x140003fc3
    mov r8d, dword ptr [rip + 0x261c9]
    mov eax, 7
    lea r9d, [rax - 5]
    cmp esi, eax
    jl 0x140003ff6
    xor ecx, ecx
    cpuid 
    mov dword ptr [rsp], eax
    mov r11d, ebx
    mov dword ptr [rsp + 4], ebx
    mov dword ptr [rsp + 8], ecx
    mov dword ptr [rsp + 0xc], edx
    bt ebx, 9
    jae 0x140003ff6
    or r8d, r9d
    mov dword ptr [rip + 0x26196], r8d
    mov dword ptr [rip + 0x25058], 1
    mov dword ptr [rip + 0x25055], r9d
    bt edi, 0x14
    jae 0x1400040a2
    mov dword ptr [rip + 0x25040], r9d
    mov ebx, 6
    mov dword ptr [rip + 0x25039], ebx
    bt edi, 0x1b
    jae 0x1400040a2
    bt edi, 0x1c
    jae 0x1400040a2
    xor ecx, ecx
    xgetbv 
    shl rdx, 0x20
    or rdx, rax
    mov qword ptr [rsp + 0x20], rdx
    mov rax, qword ptr [rsp + 0x20]
    and al, bl
    cmp al, bl
    jne 0x1400040a2
    mov eax, dword ptr [rip + 0x2500b]
    or eax, 8
    mov dword ptr [rip + 0x24ffa], 3
    mov dword ptr [rip + 0x24ff8], eax
    test r11b, 0x20
    je 0x1400040a2
    or eax, 0x20
    mov dword ptr [rip + 0x24fe1], 5
    mov dword ptr [rip + 0x24fdf], eax
    mov eax, 0xd0030000
    and r11d, eax
    cmp r11d, eax
    jne 0x1400040a2
    mov rax, qword ptr [rsp + 0x20]
    and al, 0xe0
    cmp al, 0xe0
    jne 0x1400040a2
    or dword ptr [rip + 0x24fc0], 0x40
    mov dword ptr [rip + 0x24fb6], ebx
    mov rbx, qword ptr [rsp + 0x28]
    xor eax, eax
    mov rsi, qword ptr [rsp + 0x30]
    add rsp, 0x10
    pop rdi
    ret
    xor eax, eax
    cmp dword ptr [rip + 0x26cc4], eax
    setne al
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x20
    cmp byte ptr [rcx + 8], 0
    mov r14, rdx
    mov rsi, rcx
    je 0x14000412d
    mov rax, qword ptr [rcx]
    test rax, rax
    je 0x14000412d
    or rdi, 0xffffffffffffffff
    inc rdi
    cmp byte ptr [rax + rdi], 0
    jne 0x1400040ed
    lea rcx, [rdi + 1]
    call 0x14000d3d0
    mov rbx, rax
    test rax, rax
    je 0x140004123
    mov r8, qword ptr [rsi]
    lea rdx, [rdi + 1]
    mov rcx, rax
    call 0x14000e890
    mov rax, rbx
    mov byte ptr [r14 + 8], 1
    mov qword ptr [r14], rax
    xor ebx, ebx
    mov rcx, rbx
    call 0x14000d3d8
    jmp 0x140004137
    mov rax, qword ptr [rcx]
    mov qword ptr [rdx], rax
    mov byte ptr [rdx + 8], 0
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    mov rdi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop r14
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    cmp byte ptr [rcx + 8], 0
    mov rbx, rcx
    je 0x140004167
    mov rcx, qword ptr [rcx]
    call 0x14000d3d8
    and qword ptr [rbx], 0
    mov byte ptr [rbx + 8], 0
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x18], rbx
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    sub rsp, 0x50
    mov rbx, rdx
    mov rsi, rcx
    mov edi, 0x19930520
    test rdx, rdx
    je 0x1400041b4
    test byte ptr [rdx], 0x10
    je 0x1400041b4
    mov rcx, qword ptr [rcx]
    sub rcx, 8
    mov rax, qword ptr [rcx]
    mov rbx, qword ptr [rax + 0x30]
    mov rax, qword ptr [rax + 0x40]
    call qword ptr [rip + 0x190bc]
    xor eax, eax
    mov qword ptr [rsp + 0x20], rax
    test rbx, rbx
    je 0x1400041e2
    lea rdx, [rsp + 0x20]
    mov rcx, rbx
    call qword ptr [rip + 0x18ec2]
    mov qword ptr [rsp + 0x20], rax
    test byte ptr [rbx], 8
    jne 0x1400041dd
    test rax, rax
    jne 0x1400041e2
    mov edi, 0x1994000
    mov edx, 1
    mov qword ptr [rsp + 0x28], rdi
    lea r9, [rsp + 0x28]
    mov qword ptr [rsp + 0x30], rsi
    mov ecx, 0xe06d7363
    mov qword ptr [rsp + 0x38], rbx
    mov qword ptr [rsp + 0x40], rax
    lea r8d, [rdx + 3]
    call qword ptr [rip + 0x18e89]
    mov rbx, qword ptr [rsp + 0x70]
    mov rsi, qword ptr [rsp + 0x78]
    add rsp, 0x50
    pop rdi
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x20], r9
    mov qword ptr [rax + 0x18], r8
    mov qword ptr [rax + 0x10], rdx
    mov qword ptr [rax + 8], rcx
    push rbx
    sub rsp, 0x70
    mov rbx, rcx
    and dword ptr [rax - 0x38], 0
    mov qword ptr [rax - 0x20], rcx
    mov qword ptr [rax - 0x18], r8
    call 0x1400052e8
    lea rdx, [rsp + 0x58]
    mov ecx, dword ptr [rbx]
    mov rax, qword ptr [rax + 0x10]
    call qword ptr [rip + 0x19013]
    mov dword ptr [rsp + 0x40], 0
    jmp 0x140004267
    mov eax, dword ptr [rsp + 0x40]
    add rsp, 0x70
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x20], r9
    mov qword ptr [rax + 0x18], r8
    mov qword ptr [rax + 0x10], rdx
    mov qword ptr [rax + 8], rcx
    push rbx
    sub rsp, 0x70
    mov rbx, rcx
    and dword ptr [rax - 0x38], 0
    mov qword ptr [rax - 0x20], rcx
    mov qword ptr [rax - 0x18], r8
    call 0x1400052e8
    lea rdx, [rsp + 0x58]
    mov ecx, dword ptr [rbx]
    mov rax, qword ptr [rax + 0x10]
    call qword ptr [rip + 0x18fbf]
    mov dword ptr [rsp + 0x40], 0
    jmp 0x1400042bb
    mov eax, dword ptr [rsp + 0x40]
    add rsp, 0x70
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov edi, dword ptr [rcx + 0xc]
    mov esi, edx
    mov rbp, rcx
    test edi, edi
    je 0x140004313
    lea ebx, [rdi - 1]
    mov edi, ebx
    call 0x1400052e8
    lea rdx, [rbx + rbx*4]
    mov rax, qword ptr [rax + 0x60]
    lea rcx, [rax + rdx*4]
    movsxd rax, dword ptr [rbp + 0x10]
    add rax, rcx
    cmp esi, dword ptr [rax + 4]
    jle 0x14000430f
    cmp esi, dword ptr [rax + 8]
    jle 0x140004315
    test ebx, ebx
    jne 0x1400042e8
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    mov bl, byte ptr [rcx]
    lea r10, [rcx + 1]
    mov byte ptr [rdx], bl
    mov esi, r9d
    lea r14, [rip - 0x4353]
    mov rbp, r8
    mov r11, rdx
    mov rdi, rcx
    test bl, 4
    je 0x140004385
    movzx ecx, byte ptr [r10]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1d450]
    mov cl, byte ptr [rcx + r14 + 0x1d460]
    sub r10, rax
    mov eax, dword ptr [r10 - 4]
    shr eax, cl
    mov dword ptr [rdx + 4], eax
    test bl, 8
    je 0x140004394
    mov eax, dword ptr [r10]
    add r10, 4
    mov dword ptr [rdx + 8], eax
    test bl, 0x10
    je 0x1400043a3
    mov eax, dword ptr [r10]
    add r10, 4
    mov dword ptr [rdx + 0xc], eax
    xor r9d, r9d
    lea r8, [r10 + 4]
    cmp byte ptr [rsp + 0x30], r9b
    jne 0x140004411
    test bl, 2
    je 0x140004411
    mov dword ptr [rdx + 0x10], r9d
    cmp dword ptr [r10], r9d
    je 0x140004408
    movsxd rdx, dword ptr [r10]
    add rdx, rbp
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1d450]
    mov cl, byte ptr [rcx + r14 + 0x1d460]
    sub rdx, rax
    mov r10d, dword ptr [rdx - 4]
    shr r10d, cl
    test r10d, r10d
    je 0x140004417
    mov eax, dword ptr [rdx]
    mov ecx, dword ptr [rdx + 4]
    lea rdx, [rdx + 8]
    cmp eax, esi
    je 0x140004402
    inc r9d
    cmp r9d, r10d
    jb 0x1400043eb
    jmp 0x140004417
    mov dword ptr [r11 + 0x10], ecx
    jmp 0x140004417
    mov ecx, 7
    int 0x29
    jmp 0x140004417
    mov eax, dword ptr [r10]
    mov dword ptr [rdx + 0x10], eax
    test bl, 1
    je 0x140004441
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rdx, byte ptr [rcx + r14 + 0x1d450]
    mov cl, byte ptr [rcx + r14 + 0x1d460]
    sub r8, rdx
    mov edx, dword ptr [r8 - 4]
    shr edx, cl
    mov dword ptr [r11 + 0x14], edx
    mov rbx, qword ptr [rsp + 0x10]
    sub r8, rdi
    mov rbp, qword ptr [rsp + 0x18]
    mov rax, r8
    mov rsi, qword ptr [rsp + 0x20]
    mov rdi, qword ptr [rsp + 0x28]
    pop r14
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rdx
    mov rdx, rcx
    mov rcx, rbx
    call 0x1400054cc
    mov edx, eax
    mov rcx, rbx
    call 0x1400042c8
    test rax, rax
    setne al
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    mov al, byte ptr [rdx]
    and al, 1
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    lea r9, [rsp + 0x48]
    mov rbx, r8
    mov rdi, rdx
    call 0x14000452c
    mov rdx, rdi
    mov rcx, rbx
    mov rsi, rax
    call 0x1400054cc
    mov edx, eax
    mov rcx, rbx
    call 0x1400042c8
    test rax, rax
    jne 0x1400044d6
    or r9d, 0xffffffff
    jmp 0x1400044da
    mov r9d, dword ptr [rax + 4]
    mov r8, rbx
    mov rdx, rdi
    mov rcx, rsi
    call 0x140007c90
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    sub rsp, 0x28
    test byte ptr [r8], 1
    mov rcx, qword ptr [rcx]
    mov qword ptr [rsp + 0x30], rcx
    je 0x140004517
    mov eax, dword ptr [r8 + 0x14]
    mov rcx, qword ptr [rax + rcx]
    mov qword ptr [rsp + 0x30], rcx
    or r9d, 0xffffffff
    lea rcx, [rsp + 0x30]
    call 0x140007e1c
    add rsp, 0x28
    ret
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rsi
    push rdi
    push r12
    push r14
    push r15
    sub rsp, 0x20
    mov esi, dword ptr [r8 + 0xc]
    mov r12, rcx
    mov rcx, r8
    mov rdi, r9
    mov r14, r8
    mov r15, rdx
    call 0x1400054cc
    mov r10, qword ptr [r12]
    mov ebp, eax
    mov qword ptr [rdi], r10
    jmp 0x1400045c8
    movsxd rax, dword ptr [r14 + 0x10]
    lea ecx, [rsi - 1]
    mov esi, ecx
    lea rcx, [rcx + rcx*4]
    lea rbx, [rax + rcx*4]
    add rbx, qword ptr [r15 + 8]
    cmp ebp, dword ptr [rbx + 4]
    jle 0x1400045c8
    cmp ebp, dword ptr [rbx + 8]
    jg 0x1400045c8
    mov rcx, qword ptr [r15]
    lea rdx, [rsp + 0x50]
    xor r8d, r8d
    call qword ptr [rip + 0x18a7b]
    movsxd r8, dword ptr [rbx + 0x10]
    xor ecx, ecx
    add r8, qword ptr [rsp + 0x50]
    mov r9d, dword ptr [rbx + 0xc]
    mov r10d, dword ptr [rax]
    test r9d, r9d
    je 0x1400045c3
    lea rdx, [r8 + 0xc]
    movsxd rax, dword ptr [rdx]
    cmp rax, r10
    je 0x1400045c3
    inc ecx
    add rdx, 0x14
    cmp ecx, r9d
    jb 0x1400045b0
    cmp ecx, r9d
    jb 0x1400045ce
    test esi, esi
    jne 0x140004565
    jmp 0x1400045e2
    mov rax, qword ptr [r12]
    lea rcx, [rcx + rcx*4]
    movsxd rcx, dword ptr [r8 + rcx*4 + 0x10]
    mov rcx, qword ptr [rcx + rax]
    mov qword ptr [rdi], rcx
    mov rbx, qword ptr [rsp + 0x58]
    mov rax, rdi
    mov rbp, qword ptr [rsp + 0x60]
    add rsp, 0x20
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    ret
    mov rax, qword ptr [rcx]
    mov rdx, rcx
    mov qword ptr [r9], rax
    test byte ptr [r8], 1
    je 0x140004619
    mov ecx, dword ptr [r8 + 0x14]
    mov rax, qword ptr [rdx]
    mov rcx, qword ptr [rcx + rax]
    mov qword ptr [r9], rcx
    mov rax, r9
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x40
    mov rbx, qword ptr [rsp + 0x90]
    mov r15, rdx
    mov rsi, rcx
    mov rdx, r9
    mov rcx, rbx
    mov rdi, r9
    mov r14d, r8d
    mov ebp, dword ptr [rbx + 0xc]
    call 0x1400054cc
    xor r10d, r10d
    mov r9d, eax
    test ebp, ebp
    je 0x14000474b
    mov r11, qword ptr [rdi + 8]
    or r12d, 0xffffffff
    movsxd rbx, dword ptr [rbx + 0x10]
    mov r8d, r12d
    mov r13d, r12d
    mov edx, ebp
    lea edi, [rdx - 1]
    lea rcx, [rdi + rdi*4]
    lea rax, [r11 + rcx*4]
    cmp r9d, dword ptr [rax + rbx + 4]
    jle 0x140004699
    cmp r9d, dword ptr [rax + rbx + 8]
    jle 0x14000469f
    mov edx, edi
    test edi, edi
    jne 0x140004680
    test edx, edx
    je 0x1400046b3
    lea eax, [rdx - 1]
    lea rax, [rax + rax*4]
    lea r9, [r11 + rax*4]
    add r9, rbx
    jmp 0x1400046b6
    mov r9, r10
    mov edx, r10d
    lea rcx, [r11 + rbx]
    test r9, r9
    je 0x1400046d3
    mov eax, dword ptr [r9 + 4]
    cmp dword ptr [rcx], eax
    jle 0x1400046e8
    mov eax, dword ptr [r9 + 8]
    cmp dword ptr [rcx + 4], eax
    jg 0x1400046e8
    cmp r14d, dword ptr [rcx]
    jl 0x1400046e8
    cmp r14d, dword ptr [rcx + 4]
    jg 0x1400046e8
    cmp r8d, r12d
    mov r13d, edx
    cmove r8d, edx
    inc edx
    add rcx, 0x14
    cmp edx, ebp
    jb 0x1400046bd
    mov eax, r10d
    mov qword ptr [rsp + 0x20], r15
    lea r11, [rsp + 0x40]
    mov qword ptr [rsp + 0x30], r15
    mov rbx, qword ptr [r11 + 0x30]
    cmp r8d, r12d
    mov rbp, qword ptr [r11 + 0x38]
    cmovne eax, r8d
    mov dword ptr [rsp + 0x28], eax
    lea eax, [r13 + 1]
    movups xmm0, xmmword ptr [rsp + 0x20]
    cmovne r10d, eax
    mov rax, rsi
    mov dword ptr [rsp + 0x38], r10d
    movups xmm1, xmmword ptr [rsp + 0x30]
    movdqu xmmword ptr [rsi], xmm0
    movdqu xmmword ptr [rsi + 0x10], xmm1
    mov rsi, qword ptr [r11 + 0x40]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    call 0x14000e8f0
    int3 
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x60
    mov qword ptr [rsp + 0x20], rdx
    mov rdi, rdx
    movaps xmmword ptr [rax - 0x18], xmm6
    mov rbp, rcx
    mov qword ptr [rsp + 0x30], rdx
    xor ebx, ebx
    mov dword ptr [rsp + 0x28], ebx
    lea rdx, [rax - 0x28]
    movaps xmm6, xmmword ptr [rsp + 0x20]
    mov rcx, rdi
    movdqa xmmword ptr [rax - 0x28], xmm6
    mov r14d, r8d
    xor esi, esi
    call 0x140004ae4
    mov r9d, dword ptr [rdi]
    xor edx, edx
    test r9d, r9d
    je 0x140004872
    mov r8, qword ptr [rdi + 8]
    lea r10, [rip - 0x47bb]
    mov rax, qword ptr [rdi + 0x18]
    mov ecx, ebx
    cmp r14d, eax
    jl 0x1400047e1
    shr rax, 0x20
    cmp r14d, eax
    jg 0x1400047e1
    test ecx, ecx
    mov ebx, edx
    mov esi, edx
    cmove ebx, ecx
    mov dword ptr [rsp + 0x28], ebx
    movaps xmm6, xmmword ptr [rsp + 0x20]
    movzx ecx, byte ptr [r8]
    inc edx
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r10 + 0x1d450]
    mov cl, byte ptr [rcx + r10 + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [rdi + 8], r8
    mov dword ptr [rdi + 0x18], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r10 + 0x1d450]
    mov cl, byte ptr [rcx + r10 + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [rdi + 8], r8
    mov dword ptr [rdi + 0x1c], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r10 + 0x1d450]
    mov cl, byte ptr [rcx + r10 + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [rdi + 8], r8
    mov dword ptr [rdi + 0x20], eax
    mov eax, dword ptr [r8]
    add r8, 4
    mov qword ptr [rdi + 8], r8
    mov dword ptr [rdi + 0x24], eax
    cmp edx, r9d
    jne 0x1400047bb
    inc esi
    movdqa xmmword ptr [rsp + 0x40], xmm6
    lea rdx, [rsp + 0x40]
    mov dword ptr [rsp + 0x38], esi
    mov rcx, rdi
    call 0x140004ae4
    movups xmm0, xmmword ptr [rsp + 0x30]
    lea r11, [rsp + 0x60]
    mov rax, rbp
    mov rbx, qword ptr [r11 + 0x10]
    mov rsi, qword ptr [r11 + 0x20]
    mov rdi, qword ptr [r11 + 0x28]
    movdqu xmmword ptr [rbp], xmm6
    movaps xmm6, xmmword ptr [rsp + 0x50]
    movdqu xmmword ptr [rbp + 0x10], xmm0
    mov rbp, qword ptr [r11 + 0x18]
    mov rsp, r11
    pop r14
    ret
    int3 
    int3 
    int3 
    push rbp
    lea rbp, [rsp - 0x1f]
    sub rsp, 0xe0
    mov rax, qword ptr [rip + 0x2472b]
    xor rax, rsp
    mov qword ptr [rbp + 0xf], rax
    mov r10, qword ptr [rbp + 0x77]
    lea rax, [rip + 0x18c29]
    movups xmm0, xmmword ptr [rax]
    mov r11, rcx
    lea rcx, [rsp + 0x30]
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx], xmm0
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm1, xmmword ptr [rax + 0x80]
    movups xmmword ptr [rcx + 0x60], xmm0
    movups xmm0, xmmword ptr [rax + 0x70]
    mov rax, qword ptr [rax + 0x90]
    movups xmmword ptr [rcx + 0x70], xmm0
    movups xmmword ptr [rcx + 0x80], xmm1
    mov qword ptr [rcx + 0x90], rax
    lea rax, [rip + 0x2cbc]
    mov rcx, qword ptr [r11]
    mov qword ptr [rbp - 0x71], rax
    mov rax, qword ptr [rbp + 0x4f]
    mov qword ptr [rbp - 0x61], rax
    movsxd rax, dword ptr [rbp + 0x5f]
    mov qword ptr [rbp - 0x59], rax
    mov rax, qword ptr [rbp + 0x57]
    mov qword ptr [rbp - 0x49], rax
    movzx eax, byte ptr [rbp + 0x7f]
    mov qword ptr [rbp - 0x39], rax
    mov rax, qword ptr [r10 + 0x40]
    mov qword ptr [rsp + 0x28], rax
    mov rax, qword ptr [r10 + 0x28]
    mov qword ptr [rbp - 0x69], r9
    xor r9d, r9d
    mov qword ptr [rbp - 0x51], r8
    lea r8, [rsp + 0x30]
    mov qword ptr [rbp - 0x41], rdx
    mov rdx, qword ptr [r10]
    mov qword ptr [rsp + 0x20], rax
    mov qword ptr [rbp - 0x31], 0x19930520
    call qword ptr [rip + 0x186f2]
    mov rcx, qword ptr [rbp + 0xf]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0xe0
    pop rbp
    ret
    int3 
    push rbp
    lea rbp, [rsp - 0x1f]
    sub rsp, 0xe0
    mov rax, qword ptr [rip + 0x24627]
    xor rax, rsp
    mov qword ptr [rbp + 0xf], rax
    mov r10, qword ptr [rbp + 0x77]
    lea rax, [rip + 0x18a85]
    movups xmm0, xmmword ptr [rax]
    mov r11, rcx
    lea rcx, [rsp + 0x30]
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx], xmm0
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm1, xmmword ptr [rax + 0x80]
    movups xmmword ptr [rcx + 0x60], xmm0
    movups xmm0, xmmword ptr [rax + 0x70]
    mov rax, qword ptr [rax + 0x90]
    movups xmmword ptr [rcx + 0x70], xmm0
    movups xmmword ptr [rcx + 0x80], xmm1
    mov qword ptr [rcx + 0x90], rax
    lea rax, [rip + 0x2da4]
    mov qword ptr [rbp - 0x71], rax
    mov rax, qword ptr [rbp + 0x4f]
    mov qword ptr [rbp - 0x61], rax
    movsxd rax, dword ptr [rbp + 0x5f]
    mov qword ptr [rbp - 0x51], r8
    mov r8, qword ptr [rbp + 0x6f]
    mov qword ptr [rbp - 0x59], rax
    movzx eax, byte ptr [rbp + 0x7f]
    mov qword ptr [rbp - 0x39], rax
    mov rcx, qword ptr [r8 + 0x18]
    mov r8, qword ptr [r8 + 0x20]
    add rcx, qword ptr [r10 + 8]
    add r8, qword ptr [r10 + 8]
    movsxd rax, dword ptr [rbp + 0x67]
    mov qword ptr [rbp - 0x19], rax
    mov rax, qword ptr [r10 + 0x40]
    mov qword ptr [rsp + 0x28], rax
    mov rax, qword ptr [r10 + 0x28]
    mov qword ptr [rbp - 0x69], r9
    xor r9d, r9d
    mov qword ptr [rbp - 0x49], rcx
    mov rcx, qword ptr [r11]
    mov qword ptr [rbp - 0x41], rdx
    mov rdx, qword ptr [r10]
    mov qword ptr [rbp - 0x29], r8
    lea r8, [rsp + 0x30]
    mov qword ptr [rsp + 0x20], rax
    mov qword ptr [rbp - 0x31], 0x19930520
    call qword ptr [rip + 0x185d2]
    mov rcx, qword ptr [rbp + 0xf]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0xe0
    pop rbp
    ret
    int3 
    mov r8, qword ptr [rcx + 0x10]
    lea r11, [rip - 0x4aef]
    mov qword ptr [rcx + 8], r8
    mov r9, rcx
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], r8
    mov dword ptr [r9 + 0x18], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x1c], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [r11 + rcx + 0x1d450]
    mov cl, byte ptr [r11 + rcx + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x20], eax
    mov eax, dword ptr [r8]
    add r8, 4
    cmp dword ptr [rdx + 8], 0
    mov qword ptr [r9 + 8], r8
    mov dword ptr [r9 + 0x24], eax
    je 0x140004ca5
    mov r10d, dword ptr [rdx + 8]
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x18], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x1c], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    lea rdx, [r8 + 4]
    mov qword ptr [r9 + 8], r8
    shr eax, cl
    mov dword ptr [r9 + 0x20], eax
    mov eax, dword ptr [r8]
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x24], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x18], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x1c], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    lea r8, [rdx + 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x20], eax
    mov eax, dword ptr [rdx]
    mov qword ptr [r9 + 8], r8
    mov dword ptr [r9 + 0x24], eax
    sub r10, 1
    jne 0x140004b8e
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov qword ptr [rcx], rdx
    call 0x1400052e8
    cmp rbx, qword ptr [rax + 0x58]
    jae 0x140004cca
    call 0x1400052e8
    mov rcx, qword ptr [rax + 0x58]
    jmp 0x140004ccc
    xor ecx, ecx
    mov qword ptr [rbx + 8], rcx
    call 0x1400052e8
    mov qword ptr [rax + 0x58], rbx
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rcx
    call 0x1400052e8
    cmp rdi, qword ptr [rax + 0x58]
    jne 0x140004d31
    call 0x1400052e8
    mov rdx, qword ptr [rax + 0x58]
    test rdx, rdx
    je 0x140004d31
    mov rbx, qword ptr [rdx + 8]
    cmp rdi, rdx
    je 0x140004d1d
    mov rdx, rbx
    test rbx, rbx
    je 0x140004d31
    jmp 0x140004d0a
    call 0x1400052e8
    mov qword ptr [rax + 0x58], rbx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    call 0x14000e8f0
    int3 
    int3 
    sub rsp, 0x28
    call 0x1400052e8
    mov rax, qword ptr [rax + 0x60]
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x1400052e8
    mov rax, qword ptr [rax + 0x68]
    add rsp, 0x28
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    call 0x1400052e8
    mov qword ptr [rax + 0x60], rbx
    add rsp, 0x20
    pop rbx
    ret
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    call 0x1400052e8
    mov qword ptr [rax + 0x68], rbx
    add rsp, 0x20
    pop rbx
    ret
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 0x18], rbp
    mov qword ptr [rax + 0x20], rsi
    push rdi
    sub rsp, 0x40
    mov rbx, qword ptr [r9 + 8]
    mov rdi, r9
    mov rsi, r8
    mov qword ptr [rax + 8], rdx
    mov rbp, rcx
    call 0x1400052e8
    mov qword ptr [rax + 0x60], rbx
    mov rbx, qword ptr [rbp + 0x38]
    call 0x1400052e8
    mov qword ptr [rax + 0x68], rbx
    call 0x1400052e8
    mov rcx, qword ptr [rdi + 0x38]
    mov r9, rdi
    mov r8, rsi
    mov edx, dword ptr [rcx]
    mov rcx, rbp
    add rdx, qword ptr [rax + 0x60]
    xor eax, eax
    mov byte ptr [rsp + 0x38], al
    mov qword ptr [rsp + 0x30], rax
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], rdx
    lea rdx, [rsp + 0x50]
    call 0x1400073f4
    mov rbx, qword ptr [rsp + 0x58]
    mov rbp, qword ptr [rsp + 0x60]
    mov rsi, qword ptr [rsp + 0x68]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 0x18], rbp
    mov qword ptr [rax + 0x20], rsi
    push rdi
    sub rsp, 0x60
    and dword ptr [rax - 0x24], 0
    mov rdi, r9
    and dword ptr [rax - 0x20], 0
    mov rsi, r8
    and dword ptr [rax - 0x1c], 0
    mov rbp, rcx
    and dword ptr [rax - 0x18], 0
    and dword ptr [rax - 0x14], 0
    mov rbx, qword ptr [r9 + 8]
    mov byte ptr [rax - 0x28], 0
    mov qword ptr [rax + 8], rdx
    call 0x1400052e8
    mov qword ptr [rax + 0x60], rbx
    mov rbx, qword ptr [rbp + 0x38]
    call 0x1400052e8
    mov qword ptr [rax + 0x68], rbx
    call 0x1400052e8
    mov rcx, qword ptr [rdi + 0x38]
    lea rdx, [rsp + 0x40]
    mov r9, qword ptr [rdi + 0x10]
    mov r8, qword ptr [rdi + 8]
    mov byte ptr [rsp + 0x20], 0
    mov ecx, dword ptr [rcx]
    add rcx, qword ptr [rax + 0x60]
    mov r9d, dword ptr [r9]
    call 0x14000432c
    mov byte ptr [rsp + 0x38], 0
    lea rax, [rsp + 0x40]
    and qword ptr [rsp + 0x30], 0
    lea rdx, [rsp + 0x70]
    and dword ptr [rsp + 0x28], 0
    mov r9, rdi
    mov r8, rsi
    mov qword ptr [rsp + 0x20], rax
    mov rcx, rbp
    call 0x1400073fc
    lea r11, [rsp + 0x60]
    mov rbx, qword ptr [r11 + 0x18]
    mov rbp, qword ptr [r11 + 0x20]
    mov rsi, qword ptr [r11 + 0x28]
    mov rsp, r11
    pop rdi
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x40
    mov rsi, rcx
    mov r15, r9
    mov rcx, r8
    mov rbp, r8
    mov r13, rdx
    call 0x1400085d4
    mov r12, qword ptr [r15 + 8]
    mov r14, qword ptr [r15]
    mov rbx, qword ptr [r15 + 0x38]
    sub r14, r12
    test byte ptr [rsi + 4], 0x66
    mov edi, dword ptr [r15 + 0x48]
    jne 0x14000501d
    mov qword ptr [rsp + 0x30], rsi
    mov qword ptr [rsp + 0x38], rbp
    jmp 0x140005009
    mov ecx, edi
    add rcx, rcx
    mov ebp, edi
    mov eax, dword ptr [rbx + rcx*8 + 4]
    cmp r14, rax
    jb 0x140005007
    mov eax, dword ptr [rbx + rcx*8 + 8]
    cmp r14, rax
    jae 0x140005007
    cmp dword ptr [rbx + rcx*8 + 0x10], 0
    je 0x140005007
    cmp dword ptr [rbx + rcx*8 + 0xc], 1
    je 0x140004f89
    mov eax, dword ptr [rbx + rcx*8 + 0xc]
    mov rdx, r13
    add rax, r12
    lea rcx, [rsp + 0x30]
    call rax
    test eax, eax
    js 0x140005016
    jle 0x140005007
    cmp dword ptr [rsi], 0xe06d7363
    jne 0x140004fb9
    cmp qword ptr [rip + 0x1860f], 0
    je 0x140004fb9
    lea rcx, [rip + 0x18606]
    call 0x14001ab20
    test eax, eax
    je 0x140004fb9
    mov edx, 1
    mov rcx, rsi
    call qword ptr [rip + 0x185ef]
    lea rax, [rbp + 1]
    mov r8d, 1
    add rax, rax
    mov rdx, r13
    mov ecx, dword ptr [rbx + rax*8]
    add rcx, r12
    call 0x1400085a0
    mov r9d, dword ptr [rsi]
    lea rax, [rbp + 1]
    add rax, rax
    mov r8, rsi
    mov rcx, r13
    mov edx, dword ptr [rbx + rax*8]
    mov rax, qword ptr [r15 + 0x40]
    add rdx, r12
    mov qword ptr [rsp + 0x28], rax
    mov rax, qword ptr [r15 + 0x28]
    mov qword ptr [rsp + 0x20], rax
    call qword ptr [rip + 0x1809e]
    call 0x1400085d0
    inc edi
    cmp edi, dword ptr [rbx]
    jb 0x140004f3b
    jmp 0x1400050d4
    xor eax, eax
    jmp 0x1400050d9
    mov rbp, qword ptr [r15 + 0x20]
    sub rbp, r12
    jmp 0x1400050c8
    mov r9d, edi
    add r9, r9
    mov eax, dword ptr [rbx + r9*8 + 4]
    cmp r14, rax
    jb 0x1400050c6
    mov eax, dword ptr [rbx + r9*8 + 8]
    cmp r14, rax
    jae 0x1400050c6
    test byte ptr [rsi + 4], 0x20
    je 0x14000508c
    xor edx, edx
    test r8d, r8d
    je 0x140005088
    mov ecx, edx
    add rcx, rcx
    mov eax, dword ptr [rbx + rcx*8 + 4]
    cmp rbp, rax
    jb 0x140005081
    mov eax, dword ptr [rbx + rcx*8 + 8]
    cmp rbp, rax
    jae 0x140005081
    mov eax, dword ptr [rbx + r9*8 + 0x10]
    cmp dword ptr [rbx + rcx*8 + 0x10], eax
    jne 0x140005081
    mov eax, dword ptr [rbx + r9*8 + 0xc]
    cmp dword ptr [rbx + rcx*8 + 0xc], eax
    je 0x140005088
    inc edx
    cmp edx, r8d
    jb 0x140005054
    cmp edx, dword ptr [rbx]
    jne 0x1400050d4
    mov eax, edi
    inc rax
    mov ecx, edi
    add rax, rax
    add rcx, rcx
    cmp dword ptr [rbx + rax*8], 0
    je 0x1400050af
    mov eax, dword ptr [rbx + rax*8]
    cmp rbp, rax
    jne 0x1400050c6
    test byte ptr [rsi + 4], 0x20
    jne 0x1400050d4
    jmp 0x1400050c6
    lea eax, [rdi + 1]
    mov rdx, r13
    mov dword ptr [r15 + 0x48], eax
    mov r8d, dword ptr [rbx + rcx*8 + 0xc]
    mov cl, 1
    add r8, r12
    call r8
    inc edi
    mov r8d, dword ptr [rbx]
    cmp edi, r8d
    jb 0x140005029
    mov eax, 1
    lea r11, [rsp + 0x40]
    mov rbx, qword ptr [r11 + 0x30]
    mov rbp, qword ptr [r11 + 0x38]
    mov rsi, qword ptr [r11 + 0x40]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    sub rsp, 0x28
    call 0x14000860c
    test al, al
    jne 0x140005109
    xor al, al
    jmp 0x14000511b
    call 0x1400053c4
    test al, al
    jne 0x140005119
    call 0x140008654
    jmp 0x140005105
    mov al, 1
    add rsp, 0x28
    ret
    sub rsp, 0x28
    test cl, cl
    jne 0x140005132
    call 0x14000540c
    call 0x140008654
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    cmp rcx, rdx
    je 0x14000515a
    add rdx, 9
    lea rax, [rcx + 9]
    sub rdx, rax
    mov cl, byte ptr [rax]
    cmp cl, byte ptr [rax + rdx]
    jne 0x14000515d
    inc rax
    test cl, cl
    jne 0x14000514c
    xor eax, eax
    ret
    sbb eax, eax
    or eax, 1
    ret
    int3 
    test rcx, rcx
    je 0x1400051d0
    mov byte ptr [rsp + 0x10], dl
    sub rsp, 0x48
    cmp dword ptr [rcx], 0xe06d7363
    jne 0x1400051cc
    cmp dword ptr [rcx + 0x18], 4
    jne 0x1400051cc
    mov eax, dword ptr [rcx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x1400051cc
    mov rax, qword ptr [rcx + 0x30]
    test rax, rax
    je 0x1400051cc
    movsxd rdx, dword ptr [rax + 4]
    test edx, edx
    je 0x1400051ae
    add rdx, qword ptr [rcx + 0x38]
    mov rcx, qword ptr [rcx + 0x28]
    call 0x1400051d4
    jmp 0x1400051cc
    jmp 0x1400051cc
    test byte ptr [rax], 0x10
    je 0x1400051cc
    mov rax, qword ptr [rcx + 0x28]
    mov rcx, qword ptr [rax]
    test rcx, rcx
    je 0x1400051cc
    mov rax, qword ptr [rcx]
    mov rax, qword ptr [rax + 0x10]
    call qword ptr [rip + 0x180a4]
    add rsp, 0x48
    ret
    int3 
    int3 
    int3 
    jmp rdx
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    call 0x1400052e8
    mov rdx, qword ptr [rax + 0x58]
    jmp 0x1400051f5
    cmp qword ptr [rdx], rbx
    je 0x140005203
    mov rdx, qword ptr [rdx + 8]
    test rdx, rdx
    jne 0x1400051ec
    lea eax, [rdx + 1]
    add rsp, 0x20
    pop rbx
    ret
    xor eax, eax
    jmp 0x1400051fd
    int3 
    movsxd rax, dword ptr [rdx]
    add rax, rcx
    cmp dword ptr [rdx + 4], 0
    jl 0x14000522a
    movsxd r9, dword ptr [rdx + 4]
    movsxd rdx, dword ptr [rdx + 8]
    mov rcx, qword ptr [r9 + rcx]
    movsxd r8, dword ptr [rdx + rcx]
    add r8, r9
    add rax, r8
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, qword ptr [rcx]
    mov rbx, rcx
    cmp dword ptr [rdi], 0xe0434352
    je 0x140005256
    cmp dword ptr [rdi], 0xe0434f4d
    je 0x140005256
    cmp dword ptr [rdi], 0xe06d7363
    je 0x140005276
    jmp 0x140005269
    call 0x1400052e8
    cmp dword ptr [rax + 0x30], 0
    jle 0x140005269
    call 0x1400052e8
    dec dword ptr [rax + 0x30]
    mov rbx, qword ptr [rsp + 0x30]
    xor eax, eax
    add rsp, 0x20
    pop rdi
    ret
    call 0x1400052e8
    mov qword ptr [rax + 0x20], rdi
    mov rbx, qword ptr [rbx + 8]
    call 0x1400052e8
    mov qword ptr [rax + 0x28], rbx
    call 0x14000e864
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call 0x1400052e8
    add rax, 0x20
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x1400052e8
    add rax, 0x28
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x14000e864
    int3 
    int3 
    int3 
    sub rsp, 0x28
    test rcx, rcx
    je 0x1400052e2
    lea rax, [rip + 0x24ec8]
    cmp rcx, rax
    je 0x1400052e2
    call 0x14000d3d8
    add rsp, 0x28
    ret
    int3 
    sub rsp, 0x28
    call 0x140005304
    test rax, rax
    je 0x1400052fb
    add rsp, 0x28
    ret
    call 0x14000e8f0
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    cmp dword ptr [rip + 0x23d56], -1
    jne 0x140005323
    xor eax, eax
    jmp 0x1400053b3
    call qword ptr [rip + 0x17d7f]
    mov ecx, dword ptr [rip + 0x23d41]
    mov edi, eax
    call 0x140009628
    or rdx, 0xffffffffffffffff
    xor esi, esi
    cmp rax, rdx
    je 0x1400053a8
    test rax, rax
    je 0x14000534b
    mov rsi, rax
    jmp 0x1400053a8
    mov ecx, dword ptr [rip + 0x23d1f]
    call 0x140009670
    test eax, eax
    je 0x1400053a8
    mov edx, 0x80
    lea ecx, [rdx - 0x7f]
    call 0x14000e948
    mov ecx, dword ptr [rip + 0x23d03]
    mov rbx, rax
    test rax, rax
    je 0x140005399
    mov rdx, rax
    call 0x140009670
    test eax, eax
    je 0x140005393
    mov rax, rbx
    mov dword ptr [rbx + 0x78], 0xfffffffe
    mov rbx, rsi
    mov rsi, rax
    jmp 0x1400053a0
    mov ecx, dword ptr [rip + 0x23cd7]
    xor edx, edx
    call 0x140009670
    mov rcx, rbx
    call 0x14000d3d8
    mov ecx, edi
    call qword ptr [rip + 0x17d00]
    mov rax, rsi
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    sub rsp, 0x28
    lea rcx, [rip - 0x107]
    call 0x140009598
    mov dword ptr [rip + 0x23c96], eax
    cmp eax, -1
    je 0x140005404
    lea rdx, [rip + 0x24dba]
    mov ecx, eax
    call 0x140009670
    test eax, eax
    je 0x1400053ff
    mov dword ptr [rip + 0x24e1d], 0xfffffffe
    mov al, 1
    jmp 0x140005406
    call 0x14000540c
    xor al, al
    add rsp, 0x28
    ret
    int3 
    sub rsp, 0x28
    mov ecx, dword ptr [rip + 0x23c5a]
    cmp ecx, -1
    je 0x140005427
    call 0x1400095e0
    or dword ptr [rip + 0x23c49], 0xffffffff
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    movsxd r9, dword ptr [r8 + 0x1c]
    mov r10, r8
    mov rax, qword ptr [rcx]
    mov eax, dword ptr [r9 + rax]
    cmp eax, -2
    jne 0x140005452
    mov r8, qword ptr [rdx]
    mov rcx, r10
    call 0x1400054dc
    add rsp, 0x28
    ret
    int3 
    push rbx
    sub rsp, 0x20
    lea r9, [rsp + 0x40]
    mov rbx, r8
    call 0x14000452c
    mov rcx, qword ptr [rax]
    movsxd rax, dword ptr [rbx + 0x1c]
    mov qword ptr [rsp + 0x40], rcx
    mov eax, dword ptr [rax + rcx + 4]
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    movsxd rdx, dword ptr [rdx + 0x1c]
    mov rax, qword ptr [rcx]
    mov dword ptr [rdx + rax], r8d
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov edi, r9d
    mov rbx, r8
    lea r9, [rsp + 0x40]
    call 0x14000452c
    mov rcx, qword ptr [rax]
    movsxd rax, dword ptr [rbx + 0x1c]
    mov qword ptr [rsp + 0x40], rcx
    cmp edi, dword ptr [rax + rcx + 4]
    jle 0x1400054c0
    mov dword ptr [rax + rcx + 4], edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov r8, qword ptr [rdx]
    jmp 0x1400054dc
    mov r8, qword ptr [rdx]
    jmp 0x140005544
    push rbx
    sub rsp, 0x20
    mov rbx, r8
    test rcx, rcx
    je 0x14000553c
    movsxd r11, dword ptr [rcx + 0x18]
    mov r10, qword ptr [rdx + 8]
    lea rax, [r10 + r11]
    test rax, rax
    je 0x14000553c
    mov r8d, dword ptr [rcx + 0x14]
    xor r9d, r9d
    test r8d, r8d
    je 0x140005537
    lea rcx, [r11 + r9*8]
    movsxd rdx, dword ptr [rcx + r10]
    add rdx, r10
    cmp rbx, rdx
    jb 0x14000551f
    inc r9d
    cmp r9d, r8d
    jb 0x140005507
    test r9d, r9d
    je 0x140005537
    lea ecx, [r9 - 1]
    lea rax, [r10 + rcx*8]
    mov eax, dword ptr [rax + r11 + 4]
    add rsp, 0x20
    pop rbx
    ret
    or eax, 0xffffffff
    jmp 0x140005531
    call 0x14000e8f0
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    or ebp, 0xffffffff
    mov rbx, r8
    cmp dword ptr [rcx + 0x10], 0
    mov r10, rdx
    je 0x140005618
    movsxd r9, dword ptr [rcx + 0x10]
    lea r14, [rip - 0x5577]
    mov rdi, qword ptr [rdx + 8]
    xor esi, esi
    add r9, rdi
    xor r8d, r8d
    mov edx, ebp
    movzx ecx, byte ptr [r9]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1d450]
    mov cl, byte ptr [rcx + r14 + 0x1d460]
    sub r9, rax
    mov r11d, dword ptr [r9 - 4]
    shr r11d, cl
    test r11d, r11d
    je 0x140005618
    mov rax, qword ptr [r10 + 0x10]
    mov r10d, dword ptr [rax]
    movzx ecx, byte ptr [r9]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1d450]
    mov cl, byte ptr [rcx + r14 + 0x1d460]
    sub r9, rax
    mov eax, dword ptr [r9 - 4]
    shr eax, cl
    add esi, eax
    mov eax, esi
    add rax, r10
    add rax, rdi
    cmp rbx, rax
    jb 0x14000560e
    movzx ecx, byte ptr [r9]
    inc r8d
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r14 + 0x1d450]
    mov cl, byte ptr [rcx + r14 + 0x1d460]
    sub r9, rax
    mov edx, dword ptr [r9 - 4]
    shr edx, cl
    dec edx
    cmp r8d, r11d
    jb 0x1400055b3
    test r8d, r8d
    cmove edx, ebp
    mov eax, edx
    jmp 0x14000561a
    mov eax, ebp
    mov rbx, qword ptr [rsp + 0x10]
    mov rbp, qword ptr [rsp + 0x18]
    mov rsi, qword ptr [rsp + 0x20]
    mov rdi, qword ptr [rsp + 0x28]
    pop r14
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov r14, r9
    mov rbx, r8
    mov rsi, rdx
    mov r13, rcx
    xor edi, edi
    cmp dword ptr [r8 + 4], edi
    je 0x140005670
    movsxd r15, dword ptr [r8 + 4]
    call 0x140004d38
    lea rdx, [r15 + rax]
    jmp 0x140005676
    mov rdx, rdi
    mov r15d, edi
    test rdx, rdx
    je 0x1400057f6
    test r15d, r15d
    je 0x140005695
    call 0x140004d38
    mov rcx, rax
    movsxd rax, dword ptr [rbx + 4]
    add rcx, rax
    jmp 0x140005698
    mov rcx, rdi
    cmp byte ptr [rcx + 0x10], dil
    je 0x1400057f6
    cmp dword ptr [rbx + 8], edi
    jne 0x1400056af
    cmp dword ptr [rbx], edi
    jge 0x1400057f6
    cmp dword ptr [rbx], edi
    jl 0x1400056bd
    movsxd rax, dword ptr [rbx + 8]
    add rax, qword ptr [rsi]
    mov rsi, rax
    test byte ptr [rbx], 0x80
    je 0x1400056f4
    test byte ptr [r14], 0x10
    je 0x1400056f4
    mov rax, qword ptr [rip + 0x24ac1]
    test rax, rax
    je 0x1400056f4
    call qword ptr [rip + 0x17b96]
    test rax, rax
    je 0x140005812
    test rsi, rsi
    je 0x140005812
    mov qword ptr [rsi], rax
    mov rcx, rax
    jmp 0x140005753
    test byte ptr [rbx], 8
    je 0x140005714
    mov rcx, qword ptr [r13 + 0x28]
    test rcx, rcx
    je 0x140005817
    test rsi, rsi
    je 0x140005817
    mov qword ptr [rsi], rcx
    jmp 0x140005753
    test byte ptr [r14], 1
    je 0x140005764
    mov rdx, qword ptr [r13 + 0x28]
    test rdx, rdx
    je 0x14000581c
    test rsi, rsi
    je 0x14000581c
    movsxd r8, dword ptr [r14 + 0x14]
    mov rcx, rsi
    call 0x14001af90
    cmp dword ptr [r14 + 0x14], 8
    jne 0x1400057f2
    cmp qword ptr [rsi], rdi
    je 0x1400057f2
    mov rcx, qword ptr [rsi]
    lea rdx, [r14 + 8]
    call 0x140005208
    mov qword ptr [rsi], rax
    jmp 0x1400057f2
    cmp dword ptr [r14 + 0x18], edi
    je 0x140005779
    movsxd rbx, dword ptr [r14 + 0x18]
    call 0x140004d4c
    lea rcx, [rbx + rax]
    jmp 0x14000577e
    mov rcx, rdi
    mov ebx, edi
    test rcx, rcx
    jne 0x1400057b7
    cmp qword ptr [r13 + 0x28], rdi
    je 0x140005821
    test rsi, rsi
    je 0x140005821
    movsxd rbx, dword ptr [r14 + 0x14]
    lea rdx, [r14 + 8]
    mov rcx, qword ptr [r13 + 0x28]
    call 0x140005208
    mov rdx, rax
    mov r8, rbx
    mov rcx, rsi
    call 0x14001af90
    jmp 0x1400057f2
    cmp qword ptr [r13 + 0x28], rdi
    je 0x140005826
    test rsi, rsi
    je 0x140005826
    test ebx, ebx
    je 0x1400057d7
    call 0x140004d4c
    mov rcx, rax
    movsxd rax, dword ptr [r14 + 0x18]
    add rcx, rax
    jmp 0x1400057da
    mov rcx, rdi
    test rcx, rcx
    je 0x140005826
    mov al, byte ptr [r14]
    and al, 4
    neg al
    sbb ecx, ecx
    neg ecx
    inc ecx
    mov edi, ecx
    mov dword ptr [rsp + 0x20], ecx
    mov eax, edi
    jmp 0x1400057f8
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rsi, qword ptr [rsp + 0x58]
    mov rdi, qword ptr [rsp + 0x60]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    ret
    call 0x14000e8f0
    call 0x14000e8f0
    call 0x14000e8f0
    call 0x14000e8f0
    call 0x14000e8f0
    nop 
    call 0x14000e8f0
    nop 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov r14, r9
    mov rbx, r8
    mov rsi, rdx
    mov r13, rcx
    xor edi, edi
    cmp dword ptr [r8 + 8], edi
    je 0x140005870
    movsxd r15, dword ptr [r8 + 8]
    call 0x140004d38
    lea rdx, [r15 + rax]
    jmp 0x140005876
    mov rdx, rdi
    mov r15d, edi
    test rdx, rdx
    je 0x1400059f9
    test r15d, r15d
    je 0x140005895
    call 0x140004d38
    mov rcx, rax
    movsxd rax, dword ptr [rbx + 8]
    add rcx, rax
    jmp 0x140005898
    mov rcx, rdi
    cmp byte ptr [rcx + 0x10], dil
    je 0x1400059f9
    cmp dword ptr [rbx + 0xc], edi
    jne 0x1400058b0
    cmp dword ptr [rbx + 4], edi
    jge 0x1400059f9
    cmp dword ptr [rbx + 4], edi
    jl 0x1400058be
    mov eax, dword ptr [rbx + 0xc]
    add rax, qword ptr [rsi]
    mov rsi, rax
    test byte ptr [rbx + 4], 0x80
    je 0x1400058f6
    test byte ptr [r14], 0x10
    je 0x1400058f6
    mov rax, qword ptr [rip + 0x248bf]
    test rax, rax
    je 0x1400058f6
    call qword ptr [rip + 0x17994]
    test rax, rax
    je 0x140005a15
    test rsi, rsi
    je 0x140005a15
    mov qword ptr [rsi], rax
    mov rcx, rax
    jmp 0x140005956
    test byte ptr [rbx + 4], 8
    je 0x140005917
    mov rcx, qword ptr [r13 + 0x28]
    test rcx, rcx
    je 0x140005a1a
    test rsi, rsi
    je 0x140005a1a
    mov qword ptr [rsi], rcx
    jmp 0x140005956
    test byte ptr [r14], 1
    je 0x140005967
    mov rdx, qword ptr [r13 + 0x28]
    test rdx, rdx
    je 0x140005a1f
    test rsi, rsi
    je 0x140005a1f
    movsxd r8, dword ptr [r14 + 0x14]
    mov rcx, rsi
    call 0x14001af90
    cmp dword ptr [r14 + 0x14], 8
    jne 0x1400059f5
    cmp qword ptr [rsi], rdi
    je 0x1400059f5
    mov rcx, qword ptr [rsi]
    lea rdx, [r14 + 8]
    call 0x140005208
    mov qword ptr [rsi], rax
    jmp 0x1400059f5
    cmp dword ptr [r14 + 0x18], edi
    je 0x14000597c
    movsxd rbx, dword ptr [r14 + 0x18]
    call 0x140004d4c
    lea rcx, [rbx + rax]
    jmp 0x140005981
    mov rcx, rdi
    mov ebx, edi
    test rcx, rcx
    jne 0x1400059ba
    cmp qword ptr [r13 + 0x28], rdi
    je 0x140005a24
    test rsi, rsi
    je 0x140005a24
    movsxd rbx, dword ptr [r14 + 0x14]
    lea rdx, [r14 + 8]
    mov rcx, qword ptr [r13 + 0x28]
    call 0x140005208
    mov rdx, rax
    mov r8, rbx
    mov rcx, rsi
    call 0x14001af90
    jmp 0x1400059f5
    cmp qword ptr [r13 + 0x28], rdi
    je 0x140005a29
    test rsi, rsi
    je 0x140005a29
    test ebx, ebx
    je 0x1400059da
    call 0x140004d4c
    mov rcx, rax
    movsxd rax, dword ptr [r14 + 0x18]
    add rcx, rax
    jmp 0x1400059dd
    mov rcx, rdi
    test rcx, rcx
    je 0x140005a29
    mov al, byte ptr [r14]
    and al, 4
    neg al
    sbb ecx, ecx
    neg ecx
    inc ecx
    mov edi, ecx
    mov dword ptr [rsp + 0x20], ecx
    mov eax, edi
    jmp 0x1400059fb
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rsi, qword ptr [rsp + 0x58]
    mov rdi, qword ptr [rsp + 0x60]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    ret
    call 0x14000e8f0
    call 0x14000e8f0
    call 0x14000e8f0
    call 0x14000e8f0
    call 0x14000e8f0
    nop 
    call 0x14000e8f0
    nop 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x20
    mov rdi, r9
    mov r14, rcx
    xor ebx, ebx
    cmp dword ptr [r8], ebx
    jge 0x140005a5f
    mov rsi, rdx
    jmp 0x140005a66
    movsxd rsi, dword ptr [r8 + 8]
    add rsi, qword ptr [rdx]
    call 0x140005634
    sub eax, 1
    je 0x140005aac
    cmp eax, 1
    jne 0x140005adc
    lea rdx, [rdi + 8]
    mov rcx, qword ptr [r14 + 0x28]
    call 0x140005208
    mov r14, rax
    cmp dword ptr [rdi + 0x18], ebx
    je 0x140005a96
    call 0x140004d4c
    movsxd rbx, dword ptr [rdi + 0x18]
    add rbx, rax
    mov r9d, 1
    mov r8, r14
    mov rdx, rbx
    mov rcx, rsi
    call 0x1400083dc
    jmp 0x140005adc
    lea rdx, [rdi + 8]
    mov rcx, qword ptr [r14 + 0x28]
    call 0x140005208
    mov r14, rax
    cmp dword ptr [rdi + 0x18], ebx
    je 0x140005acd
    call 0x140004d4c
    movsxd rbx, dword ptr [rdi + 0x18]
    add rbx, rax
    mov r8, r14
    mov rdx, rbx
    mov rcx, rsi
    call 0x1400083d0
    nop 
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    mov rdi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop r14
    ret
    call 0x14000e8f0
    nop 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x20
    mov rdi, r9
    mov r14, rcx
    xor ebx, ebx
    cmp dword ptr [r8 + 4], ebx
    jge 0x140005b20
    mov rsi, rdx
    jmp 0x140005b27
    mov esi, dword ptr [r8 + 0xc]
    add rsi, qword ptr [rdx]
    call 0x140005834
    sub eax, 1
    je 0x140005b6d
    cmp eax, 1
    jne 0x140005b9d
    lea rdx, [rdi + 8]
    mov rcx, qword ptr [r14 + 0x28]
    call 0x140005208
    mov r14, rax
    cmp dword ptr [rdi + 0x18], ebx
    je 0x140005b57
    call 0x140004d4c
    movsxd rbx, dword ptr [rdi + 0x18]
    add rbx, rax
    mov r9d, 1
    mov r8, r14
    mov rdx, rbx
    mov rcx, rsi
    call 0x1400083dc
    jmp 0x140005b9d
    lea rdx, [rdi + 8]
    mov rcx, qword ptr [r14 + 0x28]
    call 0x140005208
    mov r14, rax
    cmp dword ptr [rdi + 0x18], ebx
    je 0x140005b8e
    call 0x140004d4c
    movsxd rbx, dword ptr [rdi + 0x18]
    add rbx, rax
    mov r8, r14
    mov rdx, rbx
    mov rcx, rsi
    call 0x1400083d0
    nop 
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    mov rdi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop r14
    ret
    call 0x14000e8f0
    nop 
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x18], r8
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x60
    mov r13, qword ptr [rsp + 0xc0]
    mov r15, r9
    mov r12, rdx
    lea r9, [rax + 0x10]
    mov rbp, rcx
    mov r8, r13
    mov rdx, r15
    mov rcx, r12
    call 0x14000452c
    mov r9, qword ptr [rsp + 0xd0]
    mov r14, rax
    mov rsi, qword ptr [rsp + 0xc8]
    test r9, r9
    je 0x140005c1f
    mov r8, rsi
    mov rdx, rax
    mov rcx, rbp
    call 0x140005a38
    mov rcx, qword ptr [rsp + 0xd8]
    mov ebx, dword ptr [rcx + 8]
    mov edi, dword ptr [rcx]
    call 0x140004d38
    movsxd rcx, dword ptr [rsi + 0xc]
    mov r9, r14
    mov r8, qword ptr [rsp + 0xb0]
    add rax, rcx
    mov cl, byte ptr [rsp + 0xf8]
    mov rdx, rbp
    mov byte ptr [rsp + 0x50], cl
    mov rcx, r12
    mov qword ptr [rsp + 0x48], r15
    mov qword ptr [rsp + 0x40], rsi
    mov dword ptr [rsp + 0x38], ebx
    mov dword ptr [rsp + 0x30], edi
    mov qword ptr [rsp + 0x28], r13
    mov qword ptr [rsp + 0x20], rax
    call 0x1400048c0
    mov rbx, qword ptr [rsp + 0xa0]
    add rsp, 0x60
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x18], r8
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x60
    mov r13, qword ptr [rsp + 0xc0]
    mov r15, r9
    mov r12, rdx
    lea r9, [rax + 0x10]
    mov rbp, rcx
    mov r8, r13
    mov rdx, r15
    mov rcx, r12
    call 0x1400045fc
    mov r9, qword ptr [rsp + 0xd0]
    mov r14, rax
    mov rsi, qword ptr [rsp + 0xc8]
    test r9, r9
    je 0x140005cf3
    mov r8, rsi
    mov rdx, rax
    mov rcx, rbp
    call 0x140005af8
    mov rcx, qword ptr [rsp + 0xd8]
    mov ebx, dword ptr [rcx + 8]
    mov edi, dword ptr [rcx]
    call 0x140004d38
    movsxd rcx, dword ptr [rsi + 0x10]
    mov r9, r14
    mov r8, qword ptr [rsp + 0xb0]
    add rax, rcx
    mov cl, byte ptr [rsp + 0xf8]
    mov rdx, rbp
    mov byte ptr [rsp + 0x50], cl
    mov rcx, r12
    mov qword ptr [rsp + 0x48], r15
    mov qword ptr [rsp + 0x40], rsi
    mov dword ptr [rsp + 0x38], ebx
    mov dword ptr [rsp + 0x30], edi
    mov qword ptr [rsp + 0x28], r13
    mov qword ptr [rsp + 0x20], rax
    call 0x1400049c4
    mov rbx, qword ptr [rsp + 0xa0]
    add rsp, 0x60
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    lea rbp, [rsp - 0x28]
    sub rsp, 0x128
    mov rax, qword ptr [rip + 0x2327c]
    xor rax, rsp
    mov qword ptr [rbp + 0x10], rax
    mov rdi, qword ptr [rbp + 0x90]
    mov r12, rdx
    mov r13, qword ptr [rbp + 0xa8]
    mov r15, r8
    mov qword ptr [rsp + 0x68], r8
    mov rbx, rcx
    mov qword ptr [rbp - 0x80], rdx
    mov r8, rdi
    mov rcx, r12
    mov qword ptr [rbp - 0x68], r13
    mov rdx, r9
    mov byte ptr [rsp + 0x60], 0
    mov rsi, r9
    call 0x140008124
    mov r14d, eax
    cmp eax, -1
    jl 0x14000622c
    cmp eax, dword ptr [rdi + 4]
    jge 0x14000622c
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x140005eaf
    cmp dword ptr [rbx + 0x18], 4
    jne 0x140005eaf
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x140005eaf
    cmp qword ptr [rbx + 0x30], 0
    jne 0x140005eaf
    call 0x1400052e8
    cmp qword ptr [rax + 0x20], 0
    je 0x1400061c5
    call 0x1400052e8
    mov rbx, qword ptr [rax + 0x20]
    call 0x1400052e8
    mov rcx, qword ptr [rbx + 0x38]
    mov byte ptr [rsp + 0x60], 1
    mov r15, qword ptr [rax + 0x28]
    mov qword ptr [rsp + 0x68], r15
    call 0x140004d78
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x140005e67
    cmp dword ptr [rbx + 0x18], 4
    jne 0x140005e67
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x140005e67
    cmp qword ptr [rbx + 0x30], 0
    je 0x14000622c
    call 0x1400052e8
    cmp qword ptr [rax + 0x38], 0
    je 0x140005eaf
    call 0x1400052e8
    mov r15, qword ptr [rax + 0x38]
    call 0x1400052e8
    mov rdx, r15
    mov rcx, rbx
    and qword ptr [rax + 0x38], 0
    call 0x1400081bc
    test al, al
    jne 0x140005eaa
    mov rcx, r15
    call 0x1400082ac
    test al, al
    je 0x140006209
    jmp 0x1400061e5
    mov r15, qword ptr [rsp + 0x68]
    mov rax, qword ptr [rsi + 8]
    mov qword ptr [rbp - 0x40], rax
    mov qword ptr [rbp - 0x48], rdi
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x14000617c
    cmp dword ptr [rbx + 0x18], 4
    jne 0x14000617c
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x14000617c
    xor r15d, r15d
    cmp dword ptr [rdi + 0xc], r15d
    jbe 0x1400060ad
    mov eax, dword ptr [rbp + 0xa0]
    lea rdx, [rbp - 0x48]
    mov dword ptr [rsp + 0x28], eax
    lea rcx, [rbp - 0x28]
    mov r9, rsi
    mov qword ptr [rsp + 0x20], rdi
    mov r8d, r14d
    call 0x140004620
    movups xmm1, xmmword ptr [rbp - 0x28]
    movdqa xmm0, xmm1
    psrldq xmm0, 8
    movd eax, xmm0
    movdqu xmmword ptr [rbp - 0x38], xmm1
    cmp eax, dword ptr [rbp - 0x10]
    jae 0x1400060ad
    mov r12d, dword ptr [rbp - 0x30]
    movq r9, xmm1
    mov qword ptr [rsp + 0x78], r9
    mov rax, qword ptr [rbp - 0x38]
    mov rax, qword ptr [rax]
    movsxd rdx, dword ptr [rax + 0x10]
    mov eax, r12d
    lea rcx, [rax + rax*4]
    mov rax, qword ptr [r9 + 8]
    lea r8, [rdx + rcx*4]
    movups xmm0, xmmword ptr [r8 + rax]
    movsxd rcx, dword ptr [r8 + rax + 0x10]
    mov dword ptr [rbp - 0x50], ecx
    movd eax, xmm0
    movups xmmword ptr [rbp - 0x60], xmm0
    cmp eax, r14d
    jg 0x14000609c
    movq rax, xmm0
    shr rax, 0x20
    cmp r14d, eax
    jg 0x14000609c
    add rcx, qword ptr [rsi + 8]
    psrldq xmm0, 8
    movq r13, xmm0
    mov qword ptr [rbp - 0x70], rcx
    shr r13, 0x20
    test r13d, r13d
    je 0x140006099
    mov eax, r15d
    lea rax, [rax + rax*4]
    movups xmm0, xmmword ptr [rcx + rax*4]
    movups xmmword ptr [rbp - 8], xmm0
    mov eax, dword ptr [rcx + rax*4 + 0x10]
    mov dword ptr [rbp + 8], eax
    call 0x140004d4c
    mov rcx, qword ptr [rbx + 0x30]
    add rax, 4
    movsxd rdx, dword ptr [rcx + 0xc]
    add rax, rdx
    mov qword ptr [rsp + 0x70], rax
    call 0x140004d4c
    mov rcx, qword ptr [rbx + 0x30]
    movsxd rdx, dword ptr [rcx + 0xc]
    mov ecx, dword ptr [rax + rdx]
    mov dword ptr [rsp + 0x64], ecx
    test ecx, ecx
    jle 0x14000602a
    call 0x140004d4c
    mov rcx, qword ptr [rsp + 0x70]
    mov r8, qword ptr [rbx + 0x30]
    movsxd rcx, dword ptr [rcx]
    add rax, rcx
    lea rcx, [rbp - 8]
    mov rdx, rax
    mov qword ptr [rbp - 0x78], rax
    call 0x140006c9c
    test eax, eax
    jne 0x14000603b
    mov eax, dword ptr [rsp + 0x64]
    add qword ptr [rsp + 0x70], 4
    dec eax
    mov dword ptr [rsp + 0x64], eax
    test eax, eax
    jg 0x140005fee
    inc r15d
    cmp r15d, r13d
    je 0x140006094
    mov rcx, qword ptr [rbp - 0x70]
    jmp 0x140005fa7
    mov al, byte ptr [rbp + 0x98]
    mov r9, rsi
    mov r8, qword ptr [rsp + 0x68]
    mov rcx, rbx
    mov rdx, qword ptr [rbp - 0x80]
    mov byte ptr [rsp + 0x58], al
    mov al, byte ptr [rsp + 0x60]
    mov byte ptr [rsp + 0x50], al
    mov rax, qword ptr [rbp - 0x68]
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rbp + 0xa0]
    mov dword ptr [rsp + 0x40], eax
    lea rax, [rbp - 0x60]
    mov qword ptr [rsp + 0x38], rax
    mov rax, qword ptr [rbp - 0x78]
    mov qword ptr [rsp + 0x30], rax
    lea rax, [rbp - 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rdi
    call 0x140005bbc
    mov r9, qword ptr [rsp + 0x78]
    xor r15d, r15d
    inc r12d
    cmp r12d, dword ptr [rbp - 0x10]
    jb 0x140005f3e
    mov r12, qword ptr [rbp - 0x80]
    mov eax, dword ptr [rdi]
    and eax, 0x1fffffff
    cmp eax, 0x19930521
    jb 0x1400061b9
    cmp dword ptr [rdi + 0x20], r15d
    je 0x1400060d3
    call 0x140004d38
    movsxd rcx, dword ptr [rdi + 0x20]
    add rax, rcx
    jne 0x1400060f4
    mov eax, dword ptr [rdi + 0x24]
    shr eax, 2
    test al, 1
    je 0x1400061b9
    mov rdx, rdi
    mov rcx, rsi
    call 0x140004460
    test al, al
    jne 0x1400061b9
    mov eax, dword ptr [rdi + 0x24]
    shr eax, 2
    test al, 1
    jne 0x14000620f
    cmp dword ptr [rdi + 0x20], r15d
    je 0x140006119
    call 0x140004d38
    mov rdx, rax
    movsxd rax, dword ptr [rdi + 0x20]
    add rdx, rax
    jmp 0x14000611c
    mov rdx, r15
    mov rcx, rbx
    call 0x1400081bc
    test al, al
    jne 0x1400061b9
    lea r9, [rbp - 0x78]
    mov r8, rdi
    mov rdx, rsi
    mov rcx, r12
    call 0x14000452c
    mov cl, byte ptr [rbp + 0x98]
    mov r9, rax
    mov r8, qword ptr [rsp + 0x68]
    mov rdx, rbx
    mov byte ptr [rsp + 0x50], cl
    or ecx, 0xffffffff
    mov qword ptr [rsp + 0x48], rsi
    mov qword ptr [rsp + 0x40], r15
    mov dword ptr [rsp + 0x38], ecx
    mov dword ptr [rsp + 0x30], ecx
    mov rcx, r12
    mov qword ptr [rsp + 0x28], rdi
    mov qword ptr [rsp + 0x20], r15
    call 0x1400048c0
    jmp 0x1400061b9
    cmp dword ptr [rdi + 0xc], 0
    jbe 0x1400061b9
    cmp byte ptr [rbp + 0x98], 0
    jne 0x14000622c
    mov eax, dword ptr [rbp + 0xa0]
    mov r9, rsi
    mov qword ptr [rsp + 0x38], r13
    mov r8, r15
    mov dword ptr [rsp + 0x30], eax
    mov rdx, r12
    mov dword ptr [rsp + 0x28], r14d
    mov rcx, rbx
    mov qword ptr [rsp + 0x20], rdi
    call 0x140006738
    call 0x1400052e8
    cmp qword ptr [rax + 0x38], 0
    jne 0x14000622c
    mov rcx, qword ptr [rbp + 0x10]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0x128
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    mov dl, 1
    mov rcx, rbx
    call 0x140005164
    lea rcx, [rbp - 0x60]
    call 0x1400075ec
    lea rdx, [rip + 0x21729]
    lea rcx, [rbp - 0x60]
    call 0x140004178
    int3 
    call 0x14000e864
    int3 
    call 0x1400052e8
    mov qword ptr [rax + 0x20], rbx
    call 0x1400052e8
    mov rcx, qword ptr [rsp + 0x68]
    mov qword ptr [rax + 0x28], rcx
    call 0x14000e864
    int3 
    call 0x14000e8f0
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    lea rbp, [rsp - 0x88]
    sub rsp, 0x188
    mov rax, qword ptr [rip + 0x22da9]
    xor rax, rsp
    mov qword ptr [rbp + 0x70], rax
    mov r14, qword ptr [rbp + 0xf0]
    mov r15, rdx
    mov r12, qword ptr [rbp + 0x108]
    mov rbx, rcx
    mov qword ptr [rsp + 0x78], rdx
    mov rcx, r14
    mov rdx, r9
    mov qword ptr [rbp - 0x60], r12
    mov rsi, r9
    mov byte ptr [rsp + 0x60], 0
    mov r13, r8
    call 0x1400054d4
    cmp dword ptr [rsi + 0x48], 0
    mov edi, eax
    je 0x1400062b0
    call 0x1400052e8
    cmp dword ptr [rax + 0x78], -2
    jne 0x14000672f
    mov edi, dword ptr [rsi + 0x48]
    sub edi, 2
    jmp 0x1400062cf
    call 0x1400052e8
    cmp dword ptr [rax + 0x78], -2
    je 0x1400062cf
    call 0x1400052e8
    mov edi, dword ptr [rax + 0x78]
    call 0x1400052e8
    mov dword ptr [rax + 0x78], 0xfffffffe
    cmp edi, -1
    jl 0x14000672f
    cmp dword ptr [r14 + 8], 0
    lea r8, [rip - 0x62e4]
    je 0x14000630f
    movsxd rdx, dword ptr [r14 + 8]
    add rdx, qword ptr [rsi + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1d450]
    mov cl, byte ptr [rcx + r8 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    jmp 0x140006311
    xor eax, eax
    cmp edi, eax
    jge 0x14000672f
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x1400063e9
    cmp dword ptr [rbx + 0x18], 4
    jne 0x1400063e9
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x1400063e9
    cmp qword ptr [rbx + 0x30], 0
    jne 0x1400063e9
    call 0x1400052e8
    cmp qword ptr [rax + 0x20], 0
    je 0x1400066cd
    call 0x1400052e8
    mov rbx, qword ptr [rax + 0x20]
    call 0x1400052e8
    mov rcx, qword ptr [rbx + 0x38]
    mov byte ptr [rsp + 0x60], 1
    mov r13, qword ptr [rax + 0x28]
    call 0x140004d78
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x1400063a1
    cmp dword ptr [rbx + 0x18], 4
    jne 0x1400063a1
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x1400063a1
    cmp qword ptr [rbx + 0x30], 0
    je 0x14000672f
    call 0x1400052e8
    cmp qword ptr [rax + 0x38], 0
    je 0x1400063e9
    call 0x1400052e8
    mov r15, qword ptr [rax + 0x38]
    call 0x1400052e8
    mov rdx, r15
    mov rcx, rbx
    and qword ptr [rax + 0x38], 0
    call 0x1400081bc
    test al, al
    jne 0x1400063e4
    mov rcx, r15
    call 0x1400082ac
    test al, al
    je 0x140006711
    jmp 0x1400066ed
    mov r15, qword ptr [rsp + 0x78]
    mov r8, qword ptr [rsi + 8]
    lea rcx, [rbp - 0x10]
    mov rdx, r14
    call 0x1400074cc
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x140006685
    cmp dword ptr [rbx + 0x18], 4
    jne 0x140006685
    mov eax, dword ptr [rbx + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x140006685
    cmp dword ptr [rbp - 0x10], 0
    jbe 0x14000666a
    mov eax, dword ptr [rbp + 0x100]
    lea rdx, [rbp - 0x10]
    mov dword ptr [rsp + 0x28], eax
    lea rcx, [rbp - 0x58]
    mov r9, rsi
    mov qword ptr [rsp + 0x20], r14
    mov r8d, edi
    call 0x140004754
    movups xmm1, xmmword ptr [rbp - 0x58]
    movdqa xmm0, xmm1
    psrldq xmm0, 8
    movd eax, xmm0
    movdqu xmmword ptr [rbp - 0x78], xmm1
    cmp eax, dword ptr [rbp - 0x40]
    jae 0x14000666a
    mov eax, dword ptr [rbp - 0x70]
    movq r15, xmm1
    mov qword ptr [rbp - 0x80], r15
    mov dword ptr [rsp + 0x68], eax
    movups xmm0, xmmword ptr [r15 + 0x18]
    movq rax, xmm0
    movups xmmword ptr [rbp - 0x78], xmm0
    cmp eax, edi
    jg 0x1400065c5
    shr rax, 0x20
    cmp edi, eax
    jg 0x1400065c5
    mov r9, qword ptr [rsi + 0x10]
    lea rdx, [rbp - 0x78]
    mov r8, qword ptr [rsi + 8]
    lea rcx, [rbp + 0x20]
    mov r9d, dword ptr [r9]
    call 0x140007448
    mov eax, dword ptr [rbp + 0x20]
    xor r12d, r12d
    mov dword ptr [rsp + 0x64], r12d
    mov dword ptr [rsp + 0x6c], eax
    test eax, eax
    je 0x1400065c5
    movups xmm0, xmmword ptr [rbp + 0x38]
    movups xmm1, xmmword ptr [rbp + 0x48]
    movups xmmword ptr [rbp - 0x38], xmm0
    movsd xmm0, qword ptr [rbp + 0x58]
    movsd qword ptr [rbp - 0x18], xmm0
    movups xmmword ptr [rbp - 0x28], xmm1
    call 0x140004d4c
    mov rcx, qword ptr [rbx + 0x30]
    add rax, 4
    movsxd rdx, dword ptr [rcx + 0xc]
    add rax, rdx
    mov qword ptr [rsp + 0x70], rax
    call 0x140004d4c
    mov rcx, qword ptr [rbx + 0x30]
    movsxd rdx, dword ptr [rcx + 0xc]
    mov r15d, dword ptr [rax + rdx]
    test r15d, r15d
    jle 0x14000654f
    call 0x140004d4c
    mov r8, qword ptr [rbx + 0x30]
    mov r12, rax
    mov rax, qword ptr [rsp + 0x70]
    movsxd rcx, dword ptr [rax]
    add r12, rcx
    lea rcx, [rbp - 0x38]
    mov rdx, r12
    call 0x140006ddc
    test eax, eax
    jne 0x14000656d
    add qword ptr [rsp + 0x70], 4
    dec r15d
    test r15d, r15d
    jg 0x140006515
    mov r12d, dword ptr [rsp + 0x64]
    lea rcx, [rbp + 0x20]
    call 0x140007a48
    inc r12d
    mov dword ptr [rsp + 0x64], r12d
    cmp r12d, dword ptr [rsp + 0x6c]
    jne 0x1400064cc
    jmp 0x1400065c1
    mov al, byte ptr [rbp + 0xf8]
    mov r9, rsi
    mov rdx, qword ptr [rsp + 0x78]
    mov r8, r13
    mov byte ptr [rsp + 0x58], al
    mov rcx, rbx
    mov al, byte ptr [rsp + 0x60]
    mov byte ptr [rsp + 0x50], al
    mov rax, qword ptr [rbp - 0x60]
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rbp + 0x100]
    mov dword ptr [rsp + 0x40], eax
    lea rax, [rbp - 0x78]
    mov qword ptr [rsp + 0x38], rax
    lea rax, [rbp - 0x38]
    mov qword ptr [rsp + 0x30], r12
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], r14
    call 0x140005c90
    mov r15, qword ptr [rbp - 0x80]
    mov r8, qword ptr [r15 + 8]
    lea rdx, [rip - 0x65d0]
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + rdx + 0x1d450]
    mov cl, byte ptr [rcx + rdx + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [r15 + 8], r8
    mov dword ptr [r15 + 0x18], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + rdx + 0x1d450]
    mov cl, byte ptr [rcx + rdx + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov qword ptr [r15 + 8], r8
    mov dword ptr [r15 + 0x1c], eax
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + rdx + 0x1d450]
    mov cl, byte ptr [rcx + rdx + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov ecx, dword ptr [rsp + 0x68]
    mov dword ptr [r15 + 0x20], eax
    inc ecx
    mov qword ptr [r15 + 8], r8
    lea rax, [r8 + 4]
    mov edx, dword ptr [r8]
    mov qword ptr [r15 + 8], rax
    mov dword ptr [r15 + 0x24], edx
    mov dword ptr [rsp + 0x68], ecx
    cmp ecx, dword ptr [rbp - 0x40]
    jb 0x14000647b
    test byte ptr [r14], 0x40
    je 0x1400066c1
    mov rdx, r14
    mov rcx, rsi
    call 0x14000448c
    test al, al
    je 0x140006717
    jmp 0x1400066c1
    cmp dword ptr [rbp - 0x10], 0
    jbe 0x1400066c1
    cmp byte ptr [rbp + 0xf8], 0
    jne 0x14000672f
    mov eax, dword ptr [rbp + 0x100]
    mov r9, rsi
    mov qword ptr [rsp + 0x38], r12
    mov r8, r13
    mov dword ptr [rsp + 0x30], eax
    mov rdx, r15
    mov dword ptr [rsp + 0x28], edi
    mov rcx, rbx
    mov qword ptr [rsp + 0x20], r14
    call 0x1400069a8
    call 0x1400052e8
    cmp qword ptr [rax + 0x38], 0
    jne 0x14000672f
    mov rcx, qword ptr [rbp + 0x70]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0x188
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    mov dl, 1
    mov rcx, rbx
    call 0x140005164
    lea rcx, [rbp - 0x78]
    call 0x1400075ec
    lea rdx, [rip + 0x21221]
    lea rcx, [rbp - 0x78]
    call 0x140004178
    int3 
    call 0x14000e864
    int3 
    call 0x1400052e8
    mov qword ptr [rax + 0x20], rbx
    call 0x1400052e8
    mov qword ptr [rax + 0x28], r13
    call 0x14000e864
    int3 
    call 0x14000e8f0
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x20], rbx
    mov qword ptr [rsp + 0x18], r8
    mov qword ptr [rsp + 0x10], rdx
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0xc0
    cmp dword ptr [rcx], 0x80000003
    mov rbp, r9
    mov r12, r8
    mov r14, rdx
    mov rsi, rcx
    je 0x140006984
    call 0x1400052e8
    mov r13d, dword ptr [rsp + 0x130]
    mov r15d, dword ptr [rsp + 0x128]
    mov rdi, qword ptr [rsp + 0x120]
    cmp qword ptr [rax + 0x10], 0
    je 0x1400067f0
    xor ecx, ecx
    call qword ptr [rip + 0x1691b]
    mov rbx, rax
    call 0x1400052e8
    cmp qword ptr [rax + 0x10], rbx
    je 0x1400067f0
    cmp dword ptr [rsi], 0xe0434f4d
    je 0x1400067f0
    cmp dword ptr [rsi], 0xe0434352
    je 0x1400067f0
    mov rax, qword ptr [rsp + 0x138]
    mov r9, rbp
    mov dword ptr [rsp + 0x38], r15d
    mov r8, r12
    mov qword ptr [rsp + 0x30], rax
    mov rdx, r14
    mov dword ptr [rsp + 0x28], r13d
    mov rcx, rsi
    mov qword ptr [rsp + 0x20], rdi
    call 0x140004220
    test eax, eax
    jne 0x140006984
    mov rax, qword ptr [rbp + 8]
    mov qword ptr [rsp + 0x68], rax
    mov qword ptr [rsp + 0x60], rdi
    cmp dword ptr [rdi + 0xc], 0
    jbe 0x14000699f
    mov dword ptr [rsp + 0x28], r13d
    lea rdx, [rsp + 0x60]
    mov r9, rbp
    mov qword ptr [rsp + 0x20], rdi
    mov r8d, r15d
    lea rcx, [rsp + 0x98]
    call 0x140004620
    movups xmm1, xmmword ptr [rsp + 0x98]
    movdqa xmm0, xmm1
    psrldq xmm0, 8
    movd eax, xmm0
    movdqu xmmword ptr [rsp + 0x70], xmm1
    cmp eax, dword ptr [rsp + 0xb0]
    jae 0x140006984
    mov r14d, dword ptr [rsp + 0x78]
    movq r9, xmm1
    mov qword ptr [rsp + 0x100], r9
    mov rax, qword ptr [rsp + 0x70]
    mov rax, qword ptr [rax]
    movsxd rdx, dword ptr [rax + 0x10]
    mov eax, r14d
    lea rcx, [rax + rax*4]
    mov rax, qword ptr [r9 + 8]
    lea r8, [rdx + rcx*4]
    movups xmm0, xmmword ptr [r8 + rax]
    movsxd rdx, dword ptr [r8 + rax + 0x10]
    mov dword ptr [rsp + 0x90], edx
    movd eax, xmm0
    movups xmmword ptr [rsp + 0x80], xmm0
    cmp eax, r15d
    jg 0x140006963
    movq rax, xmm0
    shr rax, 0x20
    cmp r15d, eax
    jg 0x140006963
    mov rbx, qword ptr [rbp + 8]
    add rbx, -0x14
    psrldq xmm0, 8
    movq rax, xmm0
    shr rax, 0x20
    lea rcx, [rax + rax*4]
    lea rdx, [rdx + rcx*4]
    add rbx, rdx
    cmp dword ptr [rbx + 4], 0
    je 0x14000690f
    movsxd r12, dword ptr [rbx + 4]
    call 0x140004d38
    add rax, r12
    je 0x140006907
    test r12d, r12d
    je 0x1400068ff
    call 0x140004d38
    movsxd rcx, dword ptr [rbx + 4]
    add rax, rcx
    jmp 0x140006901
    xor eax, eax
    cmp byte ptr [rax + 0x10], 0
    jne 0x140006963
    mov r12, qword ptr [rsp + 0x110]
    test byte ptr [rbx], 0x40
    jne 0x140006963
    mov rax, qword ptr [rsp + 0x138]
    mov r9, rbp
    mov rdx, qword ptr [rsp + 0x108]
    mov r8, r12
    mov byte ptr [rsp + 0x58], 0
    mov rcx, rsi
    mov byte ptr [rsp + 0x50], 1
    mov qword ptr [rsp + 0x48], rax
    lea rax, [rsp + 0x80]
    mov dword ptr [rsp + 0x40], r13d
    mov qword ptr [rsp + 0x38], rax
    and qword ptr [rsp + 0x30], 0
    mov qword ptr [rsp + 0x28], rbx
    mov qword ptr [rsp + 0x20], rdi
    call 0x140005bbc
    mov r12, qword ptr [rsp + 0x110]
    inc r14d
    mov r9, qword ptr [rsp + 0x100]
    cmp r14d, dword ptr [rsp + 0xb0]
    jb 0x140006864
    mov rbx, qword ptr [rsp + 0x118]
    add rsp, 0xc0
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    call 0x14000e8f0
    int3 
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    lea rbp, [rsp - 0x38]
    sub rsp, 0x138
    mov rax, qword ptr [rip + 0x22638]
    xor rax, rsp
    mov qword ptr [rbp + 0x28], rax
    cmp dword ptr [rcx], 0x80000003
    mov rdi, r9
    mov rax, qword ptr [rbp + 0xb8]
    mov r13, rdx
    mov r14, qword ptr [rbp + 0xa0]
    mov rsi, rcx
    mov qword ptr [rsp + 0x70], rax
    mov qword ptr [rsp + 0x78], r8
    je 0x140006c76
    call 0x1400052e8
    mov r12d, dword ptr [rbp + 0xb0]
    mov r15d, dword ptr [rbp + 0xa8]
    cmp qword ptr [rax + 0x10], 0
    je 0x140006a70
    xor ecx, ecx
    call qword ptr [rip + 0x1669a]
    mov rbx, rax
    call 0x1400052e8
    cmp qword ptr [rax + 0x10], rbx
    je 0x140006a70
    cmp dword ptr [rsi], 0xe0434f4d
    je 0x140006a70
    cmp dword ptr [rsi], 0xe0434352
    je 0x140006a70
    mov rax, qword ptr [rsp + 0x70]
    mov r9, rdi
    mov r8, qword ptr [rsp + 0x78]
    mov rdx, r13
    mov dword ptr [rsp + 0x38], r15d
    mov rcx, rsi
    mov qword ptr [rsp + 0x30], rax
    mov dword ptr [rsp + 0x28], r12d
    mov qword ptr [rsp + 0x20], r14
    call 0x140004274
    test eax, eax
    jne 0x140006c76
    mov r8, qword ptr [rdi + 8]
    lea rcx, [rbp]
    mov rdx, r14
    call 0x1400074cc
    cmp dword ptr [rbp], 0
    jbe 0x140006c96
    mov dword ptr [rsp + 0x28], r12d
    lea rdx, [rbp]
    mov r9, rdi
    mov qword ptr [rsp + 0x20], r14
    mov r8d, r15d
    lea rcx, [rbp - 0x70]
    call 0x140004754
    movups xmm1, xmmword ptr [rbp - 0x70]
    movdqa xmm0, xmm1
    psrldq xmm0, 8
    movd eax, xmm0
    movdqu xmmword ptr [rbp - 0x80], xmm1
    cmp eax, dword ptr [rbp - 0x58]
    jae 0x140006c76
    mov eax, dword ptr [rbp - 0x78]
    lea r9, [rip - 0x6ad0]
    movq r8, xmm1
    mov dword ptr [rsp + 0x60], eax
    mov qword ptr [rsp + 0x68], r8
    movups xmm0, xmmword ptr [r8 + 0x18]
    movq rax, xmm0
    movups xmmword ptr [rbp - 0x80], xmm0
    cmp eax, r15d
    jg 0x140006bdc
    shr rax, 0x20
    cmp r15d, eax
    jg 0x140006bdc
    mov r9, qword ptr [rdi + 0x10]
    lea rdx, [rbp - 0x80]
    mov r8, qword ptr [rdi + 8]
    lea rcx, [rbp - 0x50]
    mov r9d, dword ptr [r9]
    call 0x140007448
    mov rax, qword ptr [rbp - 0x40]
    lea rcx, [rbp - 0x50]
    mov qword ptr [rbp - 0x48], rax
    call 0x140007a48
    mov rax, qword ptr [rbp - 0x40]
    lea rcx, [rbp - 0x50]
    mov ebx, dword ptr [rbp - 0x50]
    mov qword ptr [rbp - 0x48], rax
    call 0x140007a48
    sub ebx, 1
    je 0x140006b53
    lea rcx, [rbp - 0x50]
    call 0x140007a48
    sub rbx, 1
    jne 0x140006b44
    cmp dword ptr [rbp - 0x30], 0
    je 0x140006b81
    call 0x140004d38
    movsxd rdx, dword ptr [rbp - 0x30]
    add rax, rdx
    je 0x140006b81
    test edx, edx
    je 0x140006b79
    call 0x140004d38
    movsxd rcx, dword ptr [rbp - 0x30]
    add rax, rcx
    jmp 0x140006b7b
    xor eax, eax
    cmp byte ptr [rax + 0x10], 0
    jne 0x140006bd0
    test byte ptr [rbp - 0x34], 0x40
    jne 0x140006bd0
    mov rax, qword ptr [rsp + 0x70]
    mov r9, rdi
    mov r8, qword ptr [rsp + 0x78]
    mov rdx, r13
    mov byte ptr [rsp + 0x58], 0
    mov rcx, rsi
    mov byte ptr [rsp + 0x50], 1
    mov qword ptr [rsp + 0x48], rax
    lea rax, [rbp - 0x80]
    mov dword ptr [rsp + 0x40], r12d
    mov qword ptr [rsp + 0x38], rax
    lea rax, [rbp - 0x38]
    and qword ptr [rsp + 0x30], 0
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], r14
    call 0x140005c90
    mov r8, qword ptr [rsp + 0x68]
    lea r9, [rip - 0x6bdc]
    mov rdx, qword ptr [r8 + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r9 + 0x1d450]
    mov cl, byte ptr [rcx + r9 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r8 + 8], rdx
    mov dword ptr [r8 + 0x18], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r9 + 0x1d450]
    mov cl, byte ptr [rcx + r9 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r8 + 8], rdx
    mov dword ptr [r8 + 0x1c], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r9 + 0x1d450]
    mov cl, byte ptr [rcx + r9 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [r8 + 0x20], eax
    lea rax, [rdx + 4]
    mov qword ptr [r8 + 8], rdx
    mov ecx, dword ptr [rdx]
    mov dword ptr [r8 + 0x24], ecx
    mov ecx, dword ptr [rsp + 0x60]
    inc ecx
    mov qword ptr [r8 + 8], rax
    mov dword ptr [rsp + 0x60], ecx
    cmp ecx, dword ptr [rbp - 0x58]
    jb 0x140006ade
    mov rcx, qword ptr [rbp + 0x28]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0x138
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    call 0x14000e8f0
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x20
    xor ebx, ebx
    mov r14, r8
    mov rbp, rdx
    mov rdi, rcx
    cmp dword ptr [rcx + 4], ebx
    je 0x140006db9
    movsxd rsi, dword ptr [rcx + 4]
    call 0x140004d38
    mov r9, rax
    add r9, rsi
    je 0x140006db9
    test esi, esi
    je 0x140006cf1
    movsxd rsi, dword ptr [rdi + 4]
    call 0x140004d38
    lea rcx, [rsi + rax]
    jmp 0x140006cf6
    mov rcx, rbx
    mov esi, ebx
    cmp byte ptr [rcx + 0x10], bl
    je 0x140006db9
    test byte ptr [rdi], 0x80
    je 0x140006d0e
    test byte ptr [rbp], 0x10
    jne 0x140006db9
    test esi, esi
    je 0x140006d23
    call 0x140004d38
    mov rsi, rax
    movsxd rax, dword ptr [rdi + 4]
    add rsi, rax
    jmp 0x140006d26
    mov rsi, rbx
    call 0x140004d4c
    mov rcx, rax
    movsxd rax, dword ptr [rbp + 4]
    add rcx, rax
    cmp rsi, rcx
    je 0x140006d85
    cmp dword ptr [rdi + 4], ebx
    je 0x140006d50
    call 0x140004d38
    mov rsi, rax
    movsxd rax, dword ptr [rdi + 4]
    add rsi, rax
    jmp 0x140006d53
    mov rsi, rbx
    call 0x140004d4c
    movsxd r8, dword ptr [rbp + 4]
    add r8, 0x10
    add r8, rax
    lea rax, [rsi + 0x10]
    sub r8, rax
    movzx ecx, byte ptr [rax]
    movzx edx, byte ptr [rax + r8]
    sub ecx, edx
    jne 0x140006d7d
    inc rax
    test edx, edx
    jne 0x140006d6a
    test ecx, ecx
    je 0x140006d85
    xor eax, eax
    jmp 0x140006dbe
    mov al, 2
    test byte ptr [rbp], al
    je 0x140006d91
    test byte ptr [rdi], 8
    je 0x140006db5
    test byte ptr [r14], 1
    je 0x140006d9c
    test byte ptr [rdi], 1
    je 0x140006db5
    test byte ptr [r14], 4
    je 0x140006da7
    test byte ptr [rdi], 4
    je 0x140006db5
    test byte ptr [r14], al
    je 0x140006db0
    test byte ptr [rdi], al
    je 0x140006db5
    mov ebx, 1
    mov eax, ebx
    jmp 0x140006dbe
    mov eax, 1
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop r14
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    xor ebx, ebx
    mov r15, r8
    mov r14, rdx
    mov rdi, rcx
    cmp dword ptr [rcx + 8], ebx
    je 0x140006f09
    movsxd rsi, dword ptr [rcx + 8]
    call 0x140004d38
    mov r8, rax
    add r8, rsi
    je 0x140006f09
    test esi, esi
    je 0x140006e30
    movsxd rbp, dword ptr [rdi + 8]
    call 0x140004d38
    lea rcx, [rax + rbp]
    jmp 0x140006e35
    mov rcx, rbx
    mov ebp, ebx
    cmp byte ptr [rcx + 0x10], bl
    je 0x140006f09
    lea rsi, [rdi + 4]
    test byte ptr [rsi], 0x80
    je 0x140006e51
    test byte ptr [r14], 0x10
    jne 0x140006f09
    test ebp, ebp
    je 0x140006e66
    call 0x140004d38
    mov rbp, rax
    movsxd rax, dword ptr [rdi + 8]
    add rbp, rax
    jmp 0x140006e69
    mov rbp, rbx
    call 0x140004d4c
    mov rcx, rax
    movsxd rax, dword ptr [r14 + 4]
    add rcx, rax
    cmp rbp, rcx
    je 0x140006ecc
    cmp dword ptr [rdi + 8], ebx
    je 0x140006e93
    call 0x140004d38
    mov rsi, rax
    movsxd rax, dword ptr [rdi + 8]
    add rsi, rax
    jmp 0x140006e96
    mov rsi, rbx
    call 0x140004d4c
    movsxd r8, dword ptr [r14 + 4]
    add r8, 0x10
    add r8, rax
    lea rax, [rsi + 0x10]
    sub r8, rax
    movzx ecx, byte ptr [rax]
    movzx edx, byte ptr [rax + r8]
    sub ecx, edx
    jne 0x140006ec0
    inc rax
    test edx, edx
    jne 0x140006ead
    test ecx, ecx
    je 0x140006ec8
    xor eax, eax
    jmp 0x140006f0e
    lea rsi, [rdi + 4]
    mov al, 2
    test byte ptr [r14], al
    je 0x140006ede
    test byte ptr [rsi], 8
    je 0x140006f05
    add rdi, 4
    jmp 0x140006ee1
    mov rdi, rsi
    test byte ptr [r15], 1
    je 0x140006eec
    test byte ptr [rsi], 1
    je 0x140006f05
    test byte ptr [r15], 4
    je 0x140006ef7
    test byte ptr [rsi], 4
    je 0x140006f05
    test byte ptr [r15], al
    je 0x140006f00
    test byte ptr [rdi], al
    je 0x140006f05
    mov ebx, 1
    mov eax, ebx
    jmp 0x140006f0e
    mov eax, 1
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x50
    mov rdi, rcx
    mov rsi, r9
    mov rcx, r8
    mov r14, r8
    mov rbp, rdx
    call 0x1400085d4
    call 0x1400052e8
    mov rbx, qword ptr [rsp + 0x80]
    mov ecx, 0x80000029
    mov edx, 0x80000026
    cmp dword ptr [rax + 0x40], 0
    jne 0x140006faa
    cmp dword ptr [rdi], 0xe06d7363
    je 0x140006faa
    cmp dword ptr [rdi], ecx
    jne 0x140006f8e
    cmp dword ptr [rdi + 0x18], 0xf
    jne 0x140006f92
    cmp qword ptr [rdi + 0x60], 0x19930520
    je 0x140006faa
    cmp dword ptr [rdi], edx
    je 0x140006faa
    mov eax, dword ptr [rbx]
    and eax, 0x1fffffff
    cmp eax, 0x19930522
    jb 0x140006faa
    test byte ptr [rbx + 0x24], 1
    jne 0x140007139
    test byte ptr [rdi + 4], 0x66
    je 0x140007042
    cmp dword ptr [rbx + 4], 0
    je 0x140007139
    cmp dword ptr [rsp + 0x88], 0
    jne 0x140007139
    test byte ptr [rdi + 4], 0x20
    je 0x14000702f
    cmp dword ptr [rdi], edx
    jne 0x14000700d
    mov r8, qword ptr [rsi + 0x20]
    mov rdx, rsi
    mov rcx, rbx
    call 0x1400054dc
    cmp eax, -1
    jl 0x140007159
    cmp eax, dword ptr [rbx + 4]
    jge 0x140007159
    mov r9d, eax
    mov rcx, rbp
    mov rdx, rsi
    mov r8, rbx
    call 0x140007c90
    jmp 0x140007139
    cmp dword ptr [rdi], ecx
    jne 0x14000702f
    mov r9d, dword ptr [rdi + 0x38]
    cmp r9d, -1
    jl 0x140007159
    cmp r9d, dword ptr [rbx + 4]
    jge 0x140007159
    mov rcx, qword ptr [rdi + 0x28]
    jmp 0x140006ffd
    mov r8, rbx
    mov rdx, rsi
    mov rcx, rbp
    call 0x140004494
    jmp 0x140007139
    cmp dword ptr [rbx + 0xc], 0
    jne 0x14000708a
    mov eax, dword ptr [rbx]
    and eax, 0x1fffffff
    cmp eax, 0x19930521
    jb 0x14000706a
    cmp dword ptr [rbx + 0x20], 0
    je 0x14000706a
    call 0x140004d38
    movsxd rcx, dword ptr [rbx + 0x20]
    add rax, rcx
    jne 0x14000708a
    mov eax, dword ptr [rbx]
    and eax, 0x1fffffff
    cmp eax, 0x19930522
    jb 0x140007139
    mov eax, dword ptr [rbx + 0x24]
    shr eax, 2
    test al, 1
    je 0x140007139
    cmp dword ptr [rdi], 0xe06d7363
    jne 0x140007100
    cmp dword ptr [rdi + 0x18], 3
    jb 0x140007100
    cmp dword ptr [rdi + 0x20], 0x19930522
    jbe 0x140007100
    mov rax, qword ptr [rdi + 0x30]
    cmp dword ptr [rax + 8], 0
    je 0x140007100
    call 0x140004d4c
    mov rcx, qword ptr [rdi + 0x30]
    mov r10, rax
    movsxd rdx, dword ptr [rcx + 8]
    add r10, rdx
    je 0x140007100
    movzx ecx, byte ptr [rsp + 0x98]
    mov r9, rsi
    mov eax, dword ptr [rsp + 0x88]
    mov r8, r14
    mov dword ptr [rsp + 0x38], ecx
    mov rdx, rbp
    mov rcx, qword ptr [rsp + 0x90]
    mov qword ptr [rsp + 0x30], rcx
    mov rcx, rdi
    mov dword ptr [rsp + 0x28], eax
    mov rax, r10
    mov qword ptr [rsp + 0x20], rbx
    call qword ptr [rip + 0x16172]
    jmp 0x14000713e
    mov rax, qword ptr [rsp + 0x90]
    mov r9, rsi
    mov qword ptr [rsp + 0x38], rax
    mov r8, r14
    mov eax, dword ptr [rsp + 0x88]
    mov rdx, rbp
    mov dword ptr [rsp + 0x30], eax
    mov rcx, rdi
    mov al, byte ptr [rsp + 0x98]
    mov byte ptr [rsp + 0x28], al
    mov qword ptr [rsp + 0x20], rbx
    call 0x140005d64
    mov eax, 1
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    mov rdi, qword ptr [rsp + 0x78]
    add rsp, 0x50
    pop r14
    ret
    call 0x14000e8f0
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x80
    mov rbx, rcx
    mov rbp, r9
    mov rcx, r8
    mov r15, r8
    mov r14, rdx
    call 0x1400085d4
    call 0x1400052e8
    mov rdi, qword ptr [rsp + 0xc0]
    xor esi, esi
    mov r8d, 0x80000029
    mov r9d, 0x80000026
    cmp dword ptr [rax + 0x40], esi
    jne 0x1400071da
    cmp dword ptr [rbx], 0xe06d7363
    je 0x1400071da
    cmp dword ptr [rbx], r8d
    jne 0x1400071cc
    cmp dword ptr [rbx + 0x18], 0xf
    jne 0x1400071d1
    cmp qword ptr [rbx + 0x60], 0x19930520
    je 0x1400071da
    cmp dword ptr [rbx], r9d
    je 0x1400071da
    test byte ptr [rdi], 0x20
    jne 0x1400073cc
    test byte ptr [rbx + 4], 0x66
    je 0x1400072fe
    cmp dword ptr [rdi + 8], esi
    je 0x1400073cc
    movsxd rdx, dword ptr [rdi + 8]
    lea r15, [rip - 0x71f8]
    add rdx, qword ptr [rbp + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r15 + 0x1d450]
    mov cl, byte ptr [rcx + r15 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    test eax, eax
    je 0x1400073cc
    cmp dword ptr [rsp + 0xc8], esi
    jne 0x1400073cc
    test byte ptr [rbx + 4], 0x20
    je 0x1400072eb
    cmp dword ptr [rbx], r9d
    jne 0x1400072a2
    mov r8, qword ptr [rbp + 0x20]
    mov rdx, rbp
    mov rcx, rdi
    call 0x140005544
    mov r9d, eax
    cmp eax, -1
    jl 0x1400073ee
    cmp dword ptr [rdi + 8], esi
    je 0x140007286
    movsxd rdx, dword ptr [rdi + 8]
    add rdx, qword ptr [rbp + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r15 + 0x1d450]
    mov cl, byte ptr [rcx + r15 + 0x1d460]
    sub rdx, rax
    mov esi, dword ptr [rdx - 4]
    shr esi, cl
    cmp r9d, esi
    jge 0x1400073ee
    mov rcx, r14
    mov rdx, rbp
    mov r8, rdi
    call 0x140007e1c
    jmp 0x1400073cc
    cmp dword ptr [rbx], r8d
    jne 0x1400072eb
    mov r9d, dword ptr [rbx + 0x38]
    cmp r9d, -1
    jl 0x1400073ee
    movsxd rdx, dword ptr [rdi + 8]
    add rdx, qword ptr [rbp + 8]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r15 + 0x1d450]
    mov cl, byte ptr [rcx + r15 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    cmp r9d, eax
    jge 0x1400073ee
    mov rcx, qword ptr [rbx + 0x28]
    jmp 0x140007292
    mov r8, rdi
    mov rdx, rbp
    mov rcx, r14
    call 0x1400044f8
    jmp 0x1400073cc
    mov r8, qword ptr [rbp + 8]
    lea rcx, [rsp + 0x50]
    mov rdx, rdi
    call 0x1400074cc
    cmp dword ptr [rsp + 0x50], esi
    jne 0x14000731e
    test byte ptr [rdi], 0x40
    je 0x1400073cc
    cmp dword ptr [rbx], 0xe06d7363
    jne 0x140007393
    cmp dword ptr [rbx + 0x18], 3
    jb 0x140007393
    cmp dword ptr [rbx + 0x20], 0x19930522
    jbe 0x140007393
    mov rax, qword ptr [rbx + 0x30]
    cmp dword ptr [rax + 8], esi
    je 0x140007393
    call 0x140004d4c
    mov rcx, qword ptr [rbx + 0x30]
    mov r10, rax
    movsxd rdx, dword ptr [rcx + 8]
    add r10, rdx
    je 0x140007393
    movzx ecx, byte ptr [rsp + 0xd8]
    mov r9, rbp
    mov eax, dword ptr [rsp + 0xc8]
    mov r8, r15
    mov dword ptr [rsp + 0x38], ecx
    mov rdx, r14
    mov rcx, qword ptr [rsp + 0xd0]
    mov qword ptr [rsp + 0x30], rcx
    mov rcx, rbx
    mov dword ptr [rsp + 0x28], eax
    mov rax, r10
    mov qword ptr [rsp + 0x20], rdi
    call qword ptr [rip + 0x15edf]
    jmp 0x1400073d1
    mov rax, qword ptr [rsp + 0xd0]
    mov r9, rbp
    mov qword ptr [rsp + 0x38], rax
    mov r8, r15
    mov eax, dword ptr [rsp + 0xc8]
    mov rdx, r14
    mov dword ptr [rsp + 0x30], eax
    mov rcx, rbx
    mov al, byte ptr [rsp + 0xd8]
    mov byte ptr [rsp + 0x28], al
    mov qword ptr [rsp + 0x20], rdi
    call 0x140006234
    mov eax, 1
    lea r11, [rsp + 0x80]
    mov rbx, qword ptr [r11 + 0x20]
    mov rbp, qword ptr [r11 + 0x28]
    mov rsi, qword ptr [r11 + 0x30]
    mov rsp, r11
    pop r15
    pop r14
    pop rdi
    ret
    call 0x14000e8f0
    int3 
    jmp 0x140006f28
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x40
    mov al, byte ptr [rsp + 0x88]
    mov byte ptr [rsp + 0x38], al
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x30], rax
    mov eax, dword ptr [rsp + 0x78]
    mov dword ptr [rsp + 0x28], eax
    mov rax, qword ptr [rsp + 0x70]
    mov qword ptr [rsp + 0x20], rax
    call 0x140007160
    mov ebx, eax
    call 0x1400052e8
    mov dword ptr [rax + 0x78], 0xfffffffe
    mov eax, ebx
    add rsp, 0x40
    pop rbx
    ret
    int3 
    push rbx
    sub rsp, 0x20
    xor eax, eax
    xorps xmm0, xmm0
    mov qword ptr [rcx + 8], rax
    mov rbx, rcx
    mov qword ptr [rcx + 0x10], rax
    mov byte ptr [rcx + 0x18], al
    mov qword ptr [rcx + 0x1c], rax
    mov qword ptr [rcx + 0x24], rax
    movups xmmword ptr [rcx + 0x30], xmm0
    mov qword ptr [rcx + 0x40], r8
    mov dword ptr [rcx + 0x48], r9d
    cmp dword ptr [rdx + 0xc], eax
    je 0x1400074bf
    movsxd rdx, dword ptr [rdx + 0xc]
    add rdx, r8
    lea r8, [rip - 0x7488]
    mov qword ptr [rcx + 8], rdx
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1d450]
    mov cl, byte ptr [rcx + r8 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov rcx, rbx
    mov dword ptr [rbx], eax
    mov qword ptr [rbx + 8], rdx
    mov qword ptr [rbx + 0x10], rdx
    call 0x140007a48
    jmp 0x1400074c1
    mov dword ptr [rcx], eax
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    xor eax, eax
    xorps xmm0, xmm0
    mov qword ptr [rcx + 8], rax
    mov r9, rcx
    mov qword ptr [rcx + 0x10], rax
    movups xmmword ptr [rcx + 0x18], xmm0
    cmp dword ptr [rdx + 0xc], eax
    je 0x1400075aa
    movsxd rdx, dword ptr [rdx + 0xc]
    add rdx, r8
    lea r8, [rip - 0x74f7]
    mov qword ptr [rcx + 8], rdx
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1d450]
    mov cl, byte ptr [rcx + r8 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9], eax
    mov qword ptr [r9 + 0x10], rdx
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1d450]
    mov cl, byte ptr [rcx + r8 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x18], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1d450]
    mov cl, byte ptr [rcx + r8 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9 + 8], rdx
    mov dword ptr [r9 + 0x1c], eax
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r8 + 0x1d450]
    mov cl, byte ptr [rcx + r8 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [r9 + 0x20], eax
    lea rax, [rdx + 4]
    mov qword ptr [r9 + 8], rdx
    mov ecx, dword ptr [rdx]
    mov qword ptr [r9 + 8], rax
    mov dword ptr [r9 + 0x24], ecx
    jmp 0x1400075ac
    mov dword ptr [rcx], eax
    mov rax, r9
    ret
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov rax, rdx
    lea rcx, [rip + 0x15da5]
    xorps xmm0, xmm0
    mov qword ptr [rbx], rcx
    lea rdx, [rbx + 8]
    lea rcx, [rax + 8]
    movups xmmword ptr [rdx], xmm0
    call 0x1400040c0
    lea rax, [rip + 0x15fd8]
    mov qword ptr [rbx], rax
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    and qword ptr [rcx + 0x10], 0
    lea rax, [rip + 0x15fd0]
    mov qword ptr [rcx + 8], rax
    lea rax, [rip + 0x15fb5]
    mov qword ptr [rcx], rax
    mov rax, rcx
    ret
    int3 
    int3 
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x70
    mov rdi, rcx
    xor r15d, r15d
    mov dword ptr [rsp + 0x20], r15d
    and dword ptr [rsp + 0xb0], r15d
    and qword ptr [rsp + 0x28], r15
    and qword ptr [rsp + 0xc8], r15
    call 0x1400052e8
    mov r13, qword ptr [rax + 0x28]
    mov qword ptr [rsp + 0x40], r13
    call 0x1400052e8
    mov rax, qword ptr [rax + 0x20]
    mov qword ptr [rsp + 0xc0], rax
    mov rsi, qword ptr [rdi + 0x50]
    mov qword ptr [rsp + 0xb8], rsi
    mov rax, qword ptr [rdi + 0x48]
    mov qword ptr [rsp + 0x30], rax
    mov rbx, qword ptr [rdi + 0x40]
    mov rax, qword ptr [rdi + 0x30]
    mov qword ptr [rsp + 0x48], rax
    mov r14, qword ptr [rdi + 0x28]
    mov qword ptr [rsp + 0x50], r14
    mov rcx, rbx
    call 0x1400085d4
    call 0x1400052e8
    mov qword ptr [rax + 0x20], rsi
    call 0x1400052e8
    mov qword ptr [rax + 0x28], rbx
    call 0x1400052e8
    mov rdx, qword ptr [rax + 0x20]
    mov rdx, qword ptr [rdx + 0x28]
    lea rcx, [rsp + 0x60]
    call 0x140004ca8
    mov r12, rax
    mov qword ptr [rsp + 0x38], rax
    cmp qword ptr [rdi + 0x58], r15
    je 0x1400076e1
    mov dword ptr [rsp + 0xb0], 1
    call 0x1400052e8
    mov rcx, qword ptr [rax + 0x70]
    mov qword ptr [rsp + 0xc8], rcx
    mov r8d, 0x100
    mov rdx, r14
    mov rcx, qword ptr [rsp + 0x48]
    call 0x140009770
    mov rbx, rax
    mov qword ptr [rsp + 0x28], rax
    mov rdi, qword ptr [rsp + 0xc0]
    jmp 0x14000777e
    mov dword ptr [rsp + 0x20], 1
    call 0x1400052e8
    and dword ptr [rax + 0x40], 0
    mov rsi, qword ptr [rsp + 0xb8]
    cmp dword ptr [rsp + 0xb0], 0
    je 0x14000774a
    mov dl, 1
    mov rcx, rsi
    call 0x140005164
    mov rcx, qword ptr [rsp + 0xc8]
    lea r9, [rcx + 0x20]
    mov r8d, dword ptr [rcx + 0x18]
    mov edx, dword ptr [rcx + 4]
    mov ecx, dword ptr [rcx]
    jmp 0x140007757
    lea r9, [rsi + 0x20]
    mov r8d, dword ptr [rsi + 0x18]
    mov edx, dword ptr [rsi + 4]
    mov ecx, dword ptr [rsi]
    call qword ptr [rip + 0x1593b]
    mov r15d, dword ptr [rsp + 0x20]
    mov rbx, qword ptr [rsp + 0x28]
    mov r13, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0xc0]
    mov r14, qword ptr [rsp + 0x50]
    mov r12, qword ptr [rsp + 0x38]
    mov rcx, r12
    call 0x140004ce4
    test r15d, r15d
    jne 0x1400077bd
    cmp dword ptr [rsi], 0xe06d7363
    jne 0x1400077bd
    cmp dword ptr [rsi + 0x18], 4
    jne 0x1400077bd
    mov eax, dword ptr [rsi + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x1400077bd
    mov rcx, qword ptr [rsi + 0x28]
    call 0x1400051d8
    test eax, eax
    je 0x1400077bd
    mov dl, 1
    mov rcx, rsi
    call 0x140005164
    call 0x1400052e8
    mov qword ptr [rax + 0x20], rdi
    call 0x1400052e8
    mov qword ptr [rax + 0x28], r13
    mov rax, qword ptr [rsp + 0x30]
    movsxd rcx, dword ptr [rax + 0x1c]
    mov rax, qword ptr [r14]
    mov qword ptr [rcx + rax], 0xfffffffffffffffe
    mov rax, rbx
    add rsp, 0x70
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    ret
    int3 
    int3 
    mov rax, rsp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r15
    sub rsp, 0xa8
    mov rdi, rcx
    xor r12d, r12d
    mov dword ptr [rsp + 0x20], r12d
    and dword ptr [rsp + 0xf0], r12d
    and qword ptr [rsp + 0x28], r12
    and qword ptr [rsp + 0x40], r12
    mov byte ptr [rax - 0x80], r12b
    and dword ptr [rax - 0x7c], r12d
    and dword ptr [rax - 0x78], r12d
    and dword ptr [rax - 0x74], r12d
    and dword ptr [rax - 0x70], r12d
    and dword ptr [rax - 0x6c], r12d
    call 0x1400052e8
    mov rax, qword ptr [rax + 0x28]
    mov qword ptr [rsp + 0x38], rax
    call 0x1400052e8
    mov rax, qword ptr [rax + 0x20]
    mov qword ptr [rsp + 0x30], rax
    mov rsi, qword ptr [rdi + 0x50]
    mov qword ptr [rsp + 0xf8], rsi
    mov rbx, qword ptr [rdi + 0x40]
    mov rax, qword ptr [rdi + 0x30]
    mov qword ptr [rsp + 0x50], rax
    mov r15, qword ptr [rdi + 0x28]
    mov rax, qword ptr [rdi + 0x48]
    mov qword ptr [rsp + 0x70], rax
    mov rax, qword ptr [rdi + 0x68]
    mov qword ptr [rsp + 0x78], rax
    mov eax, dword ptr [rdi + 0x78]
    mov dword ptr [rsp + 0xe8], eax
    mov eax, dword ptr [rdi + 0x38]
    mov dword ptr [rsp + 0xe0], eax
    mov rcx, rbx
    call 0x1400085d4
    call 0x1400052e8
    mov qword ptr [rax + 0x20], rsi
    call 0x1400052e8
    mov qword ptr [rax + 0x28], rbx
    call 0x1400052e8
    mov rdx, qword ptr [rax + 0x20]
    mov rdx, qword ptr [rdx + 0x28]
    lea rcx, [rsp + 0x88]
    call 0x140004ca8
    mov r13, rax
    mov qword ptr [rsp + 0x48], rax
    cmp qword ptr [rdi + 0x58], r12
    je 0x1400078fa
    mov dword ptr [rsp + 0xf0], 1
    call 0x1400052e8
    mov rcx, qword ptr [rax + 0x70]
    mov qword ptr [rsp + 0x40], rcx
    mov r8d, 0x100
    mov rdx, r15
    mov rcx, qword ptr [rsp + 0x50]
    call 0x1400097b0
    mov rbx, rax
    mov qword ptr [rsp + 0x28], rax
    cmp rax, 2
    jge 0x14000792e
    mov rbx, qword ptr [rsp + rax*8 + 0x70]
    test rbx, rbx
    je 0x140007a41
    mov qword ptr [rsp + 0x28], rbx
    mov rdx, r15
    mov rcx, rbx
    call 0x1400097e0
    mov rdi, qword ptr [rsp + 0x38]
    mov r15, qword ptr [rsp + 0x30]
    jmp 0x1400079c1
    mov dword ptr [rsp + 0x20], 1
    call 0x1400052e8
    and dword ptr [rax + 0x40], 0
    call 0x1400052e8
    mov ecx, dword ptr [rsp + 0xe8]
    mov dword ptr [rax + 0x78], ecx
    mov rsi, qword ptr [rsp + 0xf8]
    cmp dword ptr [rsp + 0xf0], 0
    je 0x140007995
    mov dl, 1
    mov rcx, rsi
    call 0x140005164
    mov rcx, qword ptr [rsp + 0x40]
    lea r9, [rcx + 0x20]
    mov r8d, dword ptr [rcx + 0x18]
    mov edx, dword ptr [rcx + 4]
    mov ecx, dword ptr [rcx]
    jmp 0x1400079a2
    lea r9, [rsi + 0x20]
    mov r8d, dword ptr [rsi + 0x18]
    mov edx, dword ptr [rsi + 4]
    mov ecx, dword ptr [rsi]
    call qword ptr [rip + 0x156f0]
    mov r12d, dword ptr [rsp + 0x20]
    mov rbx, qword ptr [rsp + 0x28]
    mov rdi, qword ptr [rsp + 0x38]
    mov r15, qword ptr [rsp + 0x30]
    mov r13, qword ptr [rsp + 0x48]
    mov rcx, r13
    call 0x140004ce4
    test r12d, r12d
    jne 0x140007a00
    cmp dword ptr [rsi], 0xe06d7363
    jne 0x140007a00
    cmp dword ptr [rsi + 0x18], 4
    jne 0x140007a00
    mov eax, dword ptr [rsi + 0x20]
    sub eax, 0x19930520
    cmp eax, 2
    ja 0x140007a00
    mov rcx, qword ptr [rsi + 0x28]
    call 0x1400051d8
    test eax, eax
    je 0x140007a00
    mov dl, 1
    mov rcx, rsi
    call 0x140005164
    call 0x1400052e8
    mov qword ptr [rax + 0x20], r15
    call 0x1400052e8
    mov qword ptr [rax + 0x28], rdi
    call 0x1400052e8
    mov ecx, dword ptr [rsp + 0xe0]
    mov dword ptr [rax + 0x78], ecx
    call 0x1400052e8
    mov dword ptr [rax + 0x78], 0xfffffffe
    mov rax, rbx
    add rsp, 0xa8
    pop r15
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    ret
    call 0x14000e8f0
    nop 
    int3 
    xor eax, eax
    lea r11, [rip - 0x7a51]
    mov byte ptr [rcx + 0x18], al
    xorps xmm0, xmm0
    mov qword ptr [rcx + 0x1c], rax
    mov r8, rcx
    mov qword ptr [rcx + 0x24], rax
    movups xmmword ptr [rcx + 0x30], xmm0
    mov rax, qword ptr [rcx + 8]
    mov r9b, byte ptr [rax]
    lea rdx, [rax + 1]
    mov byte ptr [rcx + 0x18], r9b
    mov qword ptr [rcx + 8], rdx
    test r9b, 1
    je 0x140007aa6
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [r8 + 0x1c], eax
    mov qword ptr [r8 + 8], rdx
    test r9b, 2
    je 0x140007aba
    mov eax, dword ptr [rdx]
    add rdx, 4
    mov qword ptr [r8 + 8], rdx
    mov dword ptr [r8 + 0x20], eax
    test r9b, 4
    je 0x140007ae7
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [r8 + 0x24], eax
    mov qword ptr [r8 + 8], rdx
    mov eax, dword ptr [rdx]
    lea r10, [rdx + 4]
    mov dword ptr [r8 + 0x28], eax
    mov cl, 0x30
    mov al, r9b
    mov qword ptr [r8 + 8], r10
    and al, cl
    test r9b, 8
    je 0x140007b42
    cmp al, 0x10
    jne 0x140007b16
    movsxd rcx, dword ptr [r10]
    lea rax, [r10 + 4]
    mov qword ptr [r8 + 8], rax
    mov qword ptr [r8 + 0x30], rcx
    ret
    and r9b, cl
    cmp r9b, 0x20
    jne 0x140007bdb
    movsxd rax, dword ptr [r10]
    lea rdx, [r10 + 4]
    mov qword ptr [r8 + 8], rdx
    mov qword ptr [r8 + 0x30], rax
    lea rax, [rdx + 4]
    movsxd rcx, dword ptr [rdx]
    mov qword ptr [r8 + 8], rax
    jmp 0x140007bd7
    cmp al, 0x10
    jne 0x140007b76
    movzx ecx, byte ptr [r10]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub r10, rax
    mov eax, dword ptr [r8 + 0x48]
    mov edx, dword ptr [r10 - 4]
    shr edx, cl
    add eax, edx
    mov qword ptr [r8 + 8], r10
    mov qword ptr [r8 + 0x30], rax
    ret
    and r9b, cl
    cmp r9b, 0x20
    jne 0x140007bdb
    movzx ecx, byte ptr [r10]
    mov edx, dword ptr [r8 + 0x48]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub r10, rax
    mov eax, dword ptr [r10 - 4]
    shr eax, cl
    mov qword ptr [r8 + 8], r10
    lea ecx, [rdx + rax]
    mov qword ptr [r8 + 0x30], rcx
    movzx ecx, byte ptr [r10]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub r10, rax
    mov eax, dword ptr [r10 - 4]
    shr eax, cl
    mov qword ptr [r8 + 8], r10
    lea ecx, [rdx + rax]
    mov qword ptr [r8 + 0x38], rcx
    ret
    push rbx
    sub rsp, 0x20
    mov r9, qword ptr [rcx]
    mov rbx, r8
    and dword ptr [r8], 0
    mov ecx, 0xe06d7363
    cmp dword ptr [r9], ecx
    jne 0x140007c57
    cmp dword ptr [r9 + 0x18], 4
    mov r8d, 0x19930520
    jne 0x140007c1f
    mov eax, dword ptr [r9 + 0x20]
    sub eax, r8d
    cmp eax, 2
    ja 0x140007c1f
    mov rax, qword ptr [rdx + 0x28]
    cmp qword ptr [r9 + 0x28], rax
    jne 0x140007c1f
    mov dword ptr [rbx], 1
    cmp dword ptr [r9], ecx
    jne 0x140007c57
    cmp dword ptr [r9 + 0x18], 4
    jne 0x140007c57
    mov ecx, dword ptr [r9 + 0x20]
    sub ecx, r8d
    cmp ecx, 2
    ja 0x140007c57
    cmp qword ptr [r9 + 0x30], 0
    jne 0x140007c57
    call 0x1400052e8
    mov dword ptr [rax + 0x40], 1
    mov eax, 1
    mov dword ptr [rbx], 1
    jmp 0x140007c59
    xor eax, eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov edi, r8d
    mov r8, r9
    call 0x140007bdc
    mov ebx, eax
    test eax, eax
    jne 0x140007c83
    call 0x1400052e8
    mov dword ptr [rax + 0x78], edi
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov dword ptr [rsp + 0x20], r9d
    mov qword ptr [rsp + 0x18], r8
    mov qword ptr [rsp + 8], rcx
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov r12d, r9d
    mov rsi, r8
    mov rbx, rdx
    mov r15, rcx
    call 0x140004d38
    mov r13, rax
    mov qword ptr [rsp + 0x28], rax
    mov r8, rsi
    mov rdx, rbx
    mov rcx, r15
    call 0x140005430
    mov edi, eax
    call 0x1400052e8
    inc dword ptr [rax + 0x30]
    cmp edi, -1
    je 0x140007dd3
    cmp edi, r12d
    jle 0x140007dd3
    cmp edi, -1
    jle 0x140007e0e
    cmp edi, dword ptr [rsi + 4]
    jge 0x140007e0e
    movsxd r14, edi
    call 0x140004d38
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    mov edi, dword ptr [rcx + rax]
    mov dword ptr [rsp + 0x20], edi
    call 0x140004d38
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    cmp dword ptr [rcx + rax + 4], 0
    je 0x140007d4a
    call 0x140004d38
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    movsxd rbx, dword ptr [rcx + rax + 4]
    call 0x140004d38
    add rax, rbx
    jmp 0x140007d4c
    xor eax, eax
    test rax, rax
    je 0x140007daa
    mov r8d, edi
    mov rdx, rsi
    mov rcx, r15
    call 0x140005484
    call 0x140004d38
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    cmp dword ptr [rcx + rax + 4], 0
    je 0x140007d8f
    call 0x140004d38
    movsxd rcx, dword ptr [rsi + 8]
    lea rax, [rax + r14*8]
    movsxd rbx, dword ptr [rcx + rax + 4]
    call 0x140004d38
    add rax, rbx
    jmp 0x140007d91
    xor eax, eax
    mov r8d, 0x103
    mov rdx, r15
    mov rcx, rax
    call 0x140009770
    mov rcx, r13
    call 0x140004d60
    jmp 0x140007dca
    mov r12d, dword ptr [rsp + 0x88]
    mov rsi, qword ptr [rsp + 0x80]
    mov r15, qword ptr [rsp + 0x70]
    mov r13, qword ptr [rsp + 0x28]
    mov edi, dword ptr [rsp + 0x20]
    mov dword ptr [rsp + 0x24], edi
    jmp 0x140007cdf
    call 0x1400052e8
    cmp dword ptr [rax + 0x30], 0
    jle 0x140007de6
    call 0x1400052e8
    dec dword ptr [rax + 0x30]
    cmp edi, -1
    je 0x140007df0
    cmp edi, r12d
    jg 0x140007e14
    mov r8d, edi
    mov rdx, rsi
    mov rcx, r15
    call 0x140005484
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    ret
    call 0x14000e8f0
    nop 
    call 0x14000e8f0
    nop 
    int3 
    int3 
    mov rax, rsp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x100
    movaps xmmword ptr [rax - 0x48], xmm6
    mov rax, qword ptr [rip + 0x211c4]
    xor rax, rsp
    mov qword ptr [rsp + 0xe0], rax
    mov r13d, r9d
    mov rbx, r8
    mov rsi, rdx
    mov r12, rcx
    mov qword ptr [rsp + 0x70], rcx
    mov qword ptr [rsp + 0x60], rcx
    mov dword ptr [rsp + 0x48], r9d
    call 0x140004d38
    mov qword ptr [rsp + 0x68], rax
    mov rdx, rsi
    mov rcx, rbx
    call 0x1400054d4
    mov edi, eax
    lea r14, [rsi + 0x48]
    mov qword ptr [rsp + 0x78], r14
    cmp dword ptr [r14], 0
    je 0x140007e9f
    call 0x1400052e8
    cmp dword ptr [rax + 0x78], -2
    jne 0x14000811d
    mov edi, dword ptr [r14]
    sub edi, 2
    jmp 0x140007ebe
    call 0x1400052e8
    cmp dword ptr [rax + 0x78], -2
    je 0x140007ebe
    call 0x1400052e8
    mov edi, dword ptr [rax + 0x78]
    call 0x1400052e8
    mov dword ptr [rax + 0x78], 0xfffffffe
    call 0x1400052e8
    inc dword ptr [rax + 0x30]
    add rsi, 8
    mov qword ptr [rsp + 0x80], rsi
    xor edx, edx
    mov qword ptr [rsp + 0xc8], rdx
    xorps xmm0, xmm0
    movups xmmword ptr [rsp + 0xd0], xmm0
    cmp dword ptr [rbx + 8], edx
    je 0x140007f2b
    movsxd rdx, dword ptr [rbx + 8]
    add rdx, qword ptr [rsi]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    lea r8, [rip - 0x7f00]
    movsx rax, byte ptr [rcx + r8 + 0x1d450]
    movzx ecx, byte ptr [rcx + r8 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov dword ptr [rsp + 0xc0], eax
    mov qword ptr [rsp + 0xc8], rdx
    jmp 0x140007f32
    and dword ptr [rsp + 0xc0], edx
    lea rax, [rsp + 0xc0]
    mov qword ptr [rsp + 0x30], rax
    mov qword ptr [rsp + 0x38], rdx
    lea rax, [rsp + 0xc0]
    mov qword ptr [rsp + 0x50], rax
    mov qword ptr [rsp + 0x58], rdx
    lea rax, [rsp + 0x50]
    mov qword ptr [rsp + 0x20], rax
    lea r9, [rsp + 0x30]
    mov r8d, r13d
    mov edx, edi
    lea rcx, [rsp + 0xc0]
    call 0x1400083ec
    nop 
    lea rax, [rsp + 0xc0]
    mov qword ptr [rsp + 0x88], rax
    mov rax, qword ptr [rsp + 0xc8]
    mov qword ptr [rsp + 0x90], rax
    mov r15, qword ptr [rsp + 0x38]
    cmp r15, rax
    jb 0x1400080df
    cmp r15, qword ptr [rsp + 0x58]
    jbe 0x1400080df
    lea rdx, [rsp + 0x38]
    mov rcx, qword ptr [rsp + 0x30]
    call 0x140008334
    mov qword ptr [rsp + 0x38], r15
    mov rbx, qword ptr [rsp + 0x30]
    movups xmm6, xmmword ptr [rbx + 0x10]
    movups xmmword ptr [rsp + 0xb0], xmm6
    movaps xmm0, xmmword ptr [rsp + 0x30]
    movdqa xmmword ptr [rsp + 0xa0], xmm0
    lea rdx, [rsp + 0x38]
    mov rcx, rbx
    call 0x140008334
    mov eax, dword ptr [rbx + 0x10]
    sub r15, rax
    mov qword ptr [rsp + 0x38], r15
    lea rax, [rsp + 0x30]
    mov qword ptr [rsp + 0x20], rax
    mov r9d, edi
    lea r8, [rsp + 0xa0]
    mov edx, r13d
    lea rcx, [rsp + 0x50]
    call 0x1400084bc
    mov edi, eax
    mov dword ptr [rsp + 0x44], eax
    and dword ptr [rsp + 0x40], 0
    xor r9d, r9d
    movdqa xmm0, xmm6
    psrldq xmm0, 8
    movd eax, xmm0
    movdqa xmm1, xmm6
    psrldq xmm1, 4
    movd ecx, xmm1
    test ecx, ecx
    cmovne r9d, eax
    mov dword ptr [rsp + 0x40], r9d
    test r9d, r9d
    je 0x1400080da
    lea eax, [rdi + 2]
    mov dword ptr [r14], eax
    lea eax, [rcx - 1]
    cmp eax, 1
    jbe 0x14000807e
    movsxd rcx, r9d
    add rcx, qword ptr [rsi]
    mov r8d, 0x103
    mov rdx, r12
    call 0x140009770
    jmp 0x1400080b3
    mov rax, qword ptr [rsp + 0x60]
    mov rdx, qword ptr [rax]
    psrldq xmm6, 0xc
    cmp ecx, 2
    jne 0x14000809a
    movd eax, xmm6
    mov r8, qword ptr [rax + rdx]
    jmp 0x1400080a2
    movd r8d, xmm6
    add r8, rdx
    movsxd rcx, r9d
    add rcx, qword ptr [rsi]
    mov r9d, 0x103
    call 0x140009810
    mov rcx, qword ptr [rsp + 0x68]
    call 0x140004d60
    jmp 0x1400080da
    mov edi, dword ptr [rsp + 0x44]
    mov r12, qword ptr [rsp + 0x70]
    mov r14, qword ptr [rsp + 0x78]
    mov rsi, qword ptr [rsp + 0x80]
    mov r13d, dword ptr [rsp + 0x48]
    jmp 0x140007f78
    call 0x1400052e8
    cmp dword ptr [rax + 0x30], 0
    jle 0x1400080f2
    call 0x1400052e8
    dec dword ptr [rax + 0x30]
    mov rcx, qword ptr [rsp + 0xe0]
    xor rcx, rsp
    call 0x1400033b0
    movaps xmm6, xmmword ptr [rsp + 0xf0]
    add rsp, 0x100
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    ret
    call 0x14000e8f0
    nop 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rbp, rcx
    mov rdi, r8
    mov rcx, r8
    mov rsi, rdx
    call 0x1400054cc
    lea r9, [rsp + 0x48]
    mov r8, rdi
    mov rdx, rsi
    mov rcx, rbp
    mov ebx, eax
    call 0x14000452c
    mov r8, rdi
    mov rdx, rsi
    mov rcx, rbp
    call 0x140005458
    cmp ebx, eax
    jle 0x140008193
    mov r8d, ebx
    lea rcx, [rsp + 0x48]
    mov rdx, rdi
    call 0x140005484
    mov r9d, ebx
    mov r8, rdi
    mov rdx, rsi
    mov rcx, rbp
    call 0x140005490
    jmp 0x1400081a3
    mov r8, rdi
    mov rdx, rsi
    mov rcx, rbp
    call 0x140005458
    mov ebx, eax
    mov rbp, qword ptr [rsp + 0x38]
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov rbp, rdx
    mov r13, rcx
    test rdx, rdx
    je 0x1400082a3
    xor r15b, r15b
    xor esi, esi
    cmp dword ptr [rdx], esi
    jle 0x140008283
    call 0x140004d4c
    mov rdx, rax
    mov rax, qword ptr [r13 + 0x30]
    movsxd r12, dword ptr [rax + 0xc]
    add r12, 4
    add r12, rdx
    call 0x140004d4c
    mov rdx, rax
    mov rax, qword ptr [r13 + 0x30]
    movsxd rcx, dword ptr [rax + 0xc]
    mov r14d, dword ptr [rdx + rcx]
    test r14d, r14d
    jle 0x140008278
    movsxd rax, esi
    lea rax, [rax + rax*4]
    mov qword ptr [rsp + 0x58], rax
    call 0x140004d4c
    mov rbx, qword ptr [r13 + 0x30]
    mov rdi, rax
    movsxd rax, dword ptr [r12]
    add rdi, rax
    call 0x140004d38
    mov rdx, qword ptr [rsp + 0x58]
    mov r8, rbx
    movsxd rcx, dword ptr [rbp + 4]
    lea rax, [rax + rdx*4]
    mov rdx, rdi
    add rcx, rax
    call 0x140006c9c
    test eax, eax
    jne 0x140008275
    dec r14d
    add r12, 4
    test r14d, r14d
    jg 0x140008230
    jmp 0x140008278
    mov r15b, 1
    inc esi
    cmp esi, dword ptr [rbp]
    jl 0x1400081f4
    mov rbx, qword ptr [rsp + 0x50]
    mov al, r15b
    mov rbp, qword ptr [rsp + 0x60]
    mov rsi, qword ptr [rsp + 0x68]
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    call 0x14000e8f0
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    xor ebp, ebp
    mov rdi, rcx
    cmp dword ptr [rcx], ebp
    jle 0x140008319
    xor esi, esi
    call 0x140004d38
    movsxd rcx, dword ptr [rdi + 4]
    add rax, rsi
    cmp dword ptr [rcx + rax + 4], 0
    je 0x1400082f9
    call 0x140004d38
    movsxd rcx, dword ptr [rdi + 4]
    add rax, rsi
    movsxd rbx, dword ptr [rcx + rax + 4]
    call 0x140004d38
    add rax, rbx
    jmp 0x1400082fb
    xor eax, eax
    lea rcx, [rax + 8]
    lea rdx, [rip + 0x21852]
    call 0x14000513c
    test eax, eax
    je 0x140008330
    inc ebp
    add rsi, 0x14
    cmp ebp, dword ptr [rdi]
    jl 0x1400082cb
    xor al, al
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    mov al, 1
    jmp 0x14000831b
    mov r8, qword ptr [rdx]
    lea r11, [rip - 0x833e]
    mov r10, rcx
    mov r9, rdx
    movzx ecx, byte ptr [r8]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub r8, rax
    mov eax, dword ptr [r8 - 4]
    shr eax, cl
    mov ecx, eax
    mov qword ptr [rdx], r8
    and ecx, 3
    shr eax, 2
    mov dword ptr [r10 + 0x10], eax
    mov dword ptr [r10 + 0x14], ecx
    lea eax, [rcx - 1]
    cmp eax, 1
    jbe 0x140008396
    cmp ecx, 3
    jne 0x1400083cf
    mov rax, qword ptr [rdx]
    mov ecx, dword ptr [rax]
    add rax, 4
    mov qword ptr [rdx], rax
    mov dword ptr [r10 + 0x18], ecx
    ret
    mov rax, qword ptr [rdx]
    mov ecx, dword ptr [rax]
    add rax, 4
    mov qword ptr [rdx], rax
    mov dword ptr [r10 + 0x18], ecx
    mov rdx, qword ptr [rdx]
    movzx ecx, byte ptr [rdx]
    and ecx, 0xf
    movsx rax, byte ptr [rcx + r11 + 0x1d450]
    mov cl, byte ptr [rcx + r11 + 0x1d460]
    sub rdx, rax
    mov eax, dword ptr [rdx - 4]
    shr eax, cl
    mov qword ptr [r9], rdx
    mov dword ptr [r10 + 0x1c], eax
    ret
    mov rax, rdx
    mov rdx, r8
    jmp rax
    int3 
    int3 
    int3 
    mov rax, r8
    mov r10, rdx
    mov rdx, rax
    mov r8d, r9d
    jmp r10
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 0x18], rbx
    mov qword ptr [r11 + 0x20], r9
    mov dword ptr [rsp + 0x10], edx
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov rax, qword ptr [rcx + 8]
    xor bpl, bpl
    xor r14b, r14b
    mov qword ptr [r11 + 8], rax
    xor edi, edi
    mov r12, r9
    mov r13d, r8d
    mov rbx, rcx
    lea rsi, [rax - 1]
    mov r15, rsi
    cmp dword ptr [rcx], edi
    jle 0x140008471
    mov r12d, dword ptr [r11 + 0x10]
    cmp edi, r12d
    jne 0x14000843d
    mov rsi, rax
    mov bpl, 1
    cmp edi, r13d
    jne 0x140008448
    mov r15, rax
    mov r14b, 1
    test bpl, bpl
    je 0x140008452
    test r14b, r14b
    jne 0x14000846c
    lea rdx, [rsp + 0x60]
    mov rcx, rbx
    call 0x140008334
    inc edi
    cmp edi, dword ptr [rbx]
    jge 0x14000846c
    mov rax, qword ptr [rsp + 0x60]
    jmp 0x140008432
    mov r12, qword ptr [rsp + 0x78]
    mov rax, qword ptr [r12]
    mov qword ptr [r12 + 8], rsi
    movups xmm0, xmmword ptr [rbx]
    movups xmmword ptr [rax], xmm0
    movups xmm1, xmmword ptr [rbx + 0x10]
    movups xmmword ptr [rax + 0x10], xmm1
    mov rax, qword ptr [rsp + 0x80]
    mov rcx, qword ptr [rax]
    mov qword ptr [rax + 8], r15
    movups xmm0, xmmword ptr [rbx]
    movups xmmword ptr [rcx], xmm0
    movups xmm1, xmmword ptr [rbx + 0x10]
    mov rbx, qword ptr [rsp + 0x70]
    movups xmmword ptr [rcx + 0x10], xmm1
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x30
    mov rdi, qword ptr [rsp + 0x60]
    mov ebx, edx
    mov rsi, r8
    mov r10, rcx
    mov rdx, qword ptr [rdi + 8]
    cmp rdx, qword ptr [r8 + 8]
    ja 0x140008559
    cmp qword ptr [rcx + 8], rdx
    ja 0x140008559
    mov rax, qword ptr [r8 + 8]
    mov rcx, rdx
    sub rcx, qword ptr [r10 + 8]
    sub rax, rdx
    cmp rcx, rax
    jge 0x140008528
    movups xmm0, xmmword ptr [r10]
    movups xmmword ptr [rsp + 0x20], xmm0
    cmp rdx, qword ptr [r10 + 8]
    jbe 0x140008555
    mov rcx, qword ptr [rsp + 0x20]
    lea rdx, [rsp + 0x28]
    call 0x140008334
    mov rax, qword ptr [rsp + 0x28]
    inc ebx
    cmp qword ptr [rdi + 8], rax
    ja 0x14000850a
    jmp 0x140008555
    mov ebx, r9d
    movups xmm0, xmmword ptr [rdi]
    movups xmmword ptr [rsp + 0x20], xmm0
    cmp qword ptr [r8 + 8], rdx
    jbe 0x140008555
    mov rcx, qword ptr [rsp + 0x20]
    lea rdx, [rsp + 0x28]
    call 0x140008334
    mov rcx, qword ptr [rsp + 0x28]
    dec ebx
    cmp qword ptr [rsi + 8], rcx
    ja 0x140008539
    mov eax, ebx
    jmp 0x14000855c
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov qword ptr [rsp + 8], rcx
    mov qword ptr [rsp + 0x18], rdx
    mov dword ptr [rsp + 0x10], r8d
    mov r9, 0x19930520
    jmp 0x1400085c0
    int3 
    int3 
    int3 
    int3 
    int3 
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    ret
    int3 
    int3 
    int3 
    mov rax, qword ptr [rip + 0x14c85]
    lea rdx, [rip - 0x49ae]
    cmp rax, rdx
    je 0x14000860a
    mov rax, qword ptr gs:[0x30]
    mov rcx, qword ptr [rcx + 0x98]
    cmp rcx, qword ptr [rax + 0x10]
    jb 0x140008603
    cmp rcx, qword ptr [rax + 8]
    jbe 0x14000860a
    mov ecx, 0xd
    int 0x29
    ret
    int3 
    push rbx
    sub rsp, 0x20
    xor ebx, ebx
    lea rdx, [rip + 0x21c05]
    xor r8d, r8d
    lea rcx, [rbx + rbx*4]
    lea rcx, [rdx + rcx*8]
    mov edx, 0xfa0
    call 0x1400096c4
    test eax, eax
    je 0x140008645
    inc dword ptr [rip + 0x21c0e]
    inc ebx
    cmp ebx, 1
    jb 0x140008614
    mov al, 1
    jmp 0x14000864c
    call 0x140008654
    xor al, al
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, dword ptr [rip + 0x21be8]
    jmp 0x14000867f
    lea rax, [rip + 0x21bb7]
    dec ebx
    lea rcx, [rbx + rbx*4]
    lea rcx, [rax + rcx*8]
    call qword ptr [rip + 0x14a57]
    dec dword ptr [rip + 0x21bc9]
    test ebx, ebx
    jne 0x140008662
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov rax, rcx
    lea r10, [rip - 0x86aa]
    cmp r8, 0xf
    ja 0x1400087c0
    nop word ptr [rax + rax]
    mov r9d, dword ptr [r10 + r8*4 + 0x2d000]
    add r9, r10
    jmp r9
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    movzx r10d, byte ptr [rdx + 0xe]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    mov byte ptr [rax + 0xe], r10b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xa]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    mov byte ptr [rax + 0xa], r9b
    ret
    movzx ecx, word ptr [rdx]
    mov word ptr [rax], cx
    ret
    nop 
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    movzx r9d, byte ptr [rdx + 6]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    mov byte ptr [rax + 6], r9b
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    ret
    movzx ecx, word ptr [rdx]
    movzx r8d, byte ptr [rdx + 2]
    mov word ptr [rax], cx
    mov byte ptr [rax + 2], r8b
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov byte ptr [rax + 0xc], r9b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, byte ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov byte ptr [rax + 8], cl
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, byte ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov byte ptr [rax + 4], r8b
    ret
    mov rcx, qword ptr [rdx]
    mov qword ptr [rax], rcx
    ret
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rax], cl
    ret
    mov ecx, dword ptr [rdx]
    mov dword ptr [rax], ecx
    ret
    nop 
    cmp r8, 0x20
    ja 0x1400087dd
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + r8 - 0x10]
    movdqu xmmword ptr [rcx], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm2
    ret
    lea r9, [rdx + r8]
    cmp rcx, rdx
    cmovbe r9, rcx
    cmp rcx, r9
    jb 0x140009890
    cmp r8, 0x180000
    jae 0x140008807
    cmp r8, 0x2000
    jae 0x140009870
    vmovdqu ymm0, ymmword ptr [rdx]
    vmovdqu ymm5, ymmword ptr [rdx + r8 - 0x20]
    cmp r8, 0x100
    jbe 0x1400088d8
    mov r9, rcx
    and r9, 0x1f
    sub r9, 0x20
    sub rcx, r9
    sub rdx, r9
    add r8, r9
    cmp r8, 0x100
    jbe 0x1400088d8
    cmp r8, 0x180000
    ja 0x140008980
    nop dword ptr [rax]
    vmovdqu ymm1, ymmword ptr [rdx]
    vmovdqu ymm2, ymmword ptr [rdx + 0x20]
    vmovdqu ymm3, ymmword ptr [rdx + 0x40]
    vmovdqu ymm4, ymmword ptr [rdx + 0x60]
    vmovdqa ymmword ptr [rcx], ymm1
    vmovdqa ymmword ptr [rcx + 0x20], ymm2
    vmovdqa ymmword ptr [rcx + 0x40], ymm3
    vmovdqa ymmword ptr [rcx + 0x60], ymm4
    vmovdqu ymm1, ymmword ptr [rdx + 0x80]
    vmovdqu ymm2, ymmword ptr [rdx + 0xa0]
    vmovdqu ymm3, ymmword ptr [rdx + 0xc0]
    vmovdqu ymm4, ymmword ptr [rdx + 0xe0]
    vmovdqa ymmword ptr [rcx + 0x80], ymm1
    vmovdqa ymmword ptr [rcx + 0xa0], ymm2
    vmovdqa ymmword ptr [rcx + 0xc0], ymm3
    vmovdqa ymmword ptr [rcx + 0xe0], ymm4
    add rcx, 0x100
    add rdx, 0x100
    sub r8, 0x100
    cmp r8, 0x100
    jae 0x140008850
    lea r9, [r8 + 0x1f]
    and r9, 0xffffffffffffffe0
    mov r11, r9
    shr r11, 5
    mov r11d, dword ptr [r10 + r11*4 + 0x2d040]
    add r11, r10
    jmp r11
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x100]
    vmovdqu ymmword ptr [rcx + r9 - 0x100], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xe0]
    vmovdqu ymmword ptr [rcx + r9 - 0xe0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xc0]
    vmovdqu ymmword ptr [rcx + r9 - 0xc0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xa0]
    vmovdqu ymmword ptr [rcx + r9 - 0xa0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x80]
    vmovdqu ymmword ptr [rcx + r9 - 0x80], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x60]
    vmovdqu ymmword ptr [rcx + r9 - 0x60], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x40]
    vmovdqu ymmword ptr [rcx + r9 - 0x40], ymm1
    vmovdqu ymmword ptr [rcx + r8 - 0x20], ymm5
    vmovdqu ymmword ptr [rax], ymm0
    vzeroupper 
    ret
    nop 
    vmovdqu ymm1, ymmword ptr [rdx]
    vmovdqu ymm2, ymmword ptr [rdx + 0x20]
    vmovdqu ymm3, ymmword ptr [rdx + 0x40]
    vmovdqu ymm4, ymmword ptr [rdx + 0x60]
    vmovntdq ymmword ptr [rcx], ymm1
    vmovntdq ymmword ptr [rcx + 0x20], ymm2
    vmovntdq ymmword ptr [rcx + 0x40], ymm3
    vmovntdq ymmword ptr [rcx + 0x60], ymm4
    vmovdqu ymm1, ymmword ptr [rdx + 0x80]
    vmovdqu ymm2, ymmword ptr [rdx + 0xa0]
    vmovdqu ymm3, ymmword ptr [rdx + 0xc0]
    vmovdqu ymm4, ymmword ptr [rdx + 0xe0]
    vmovntdq ymmword ptr [rcx + 0x80], ymm1
    vmovntdq ymmword ptr [rcx + 0xa0], ymm2
    vmovntdq ymmword ptr [rcx + 0xc0], ymm3
    vmovntdq ymmword ptr [rcx + 0xe0], ymm4
    add rcx, 0x100
    add rdx, 0x100
    sub r8, 0x100
    cmp r8, 0x100
    jae 0x140008980
    lea r9, [r8 + 0x1f]
    and r9, 0xffffffffffffffe0
    mov r11, r9
    shr r11, 5
    mov r11d, dword ptr [r10 + r11*4 + 0x2d064]
    add r11, r10
    jmp r11
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x100]
    vmovntdq ymmword ptr [rcx + r9 - 0x100], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xe0]
    vmovntdq ymmword ptr [rcx + r9 - 0xe0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xc0]
    vmovntdq ymmword ptr [rcx + r9 - 0xc0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xa0]
    vmovntdq ymmword ptr [rcx + r9 - 0xa0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x80]
    vmovntdq ymmword ptr [rcx + r9 - 0x80], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x60]
    vmovntdq ymmword ptr [rcx + r9 - 0x60], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x40]
    vmovntdq ymmword ptr [rcx + r9 - 0x40], ymm1
    vmovdqu ymmword ptr [rcx + r8 - 0x20], ymm5
    vmovdqu ymmword ptr [rax], ymm0
    sfence 
    vzeroupper 
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov rax, rcx
    lea r10, [rip - 0x8ada]
    cmp r8, 0xf
    ja 0x140008bf0
    nop word ptr [rax + rax]
    mov r9d, dword ptr [r10 + r8*4 + 0x2d090]
    add r9, r10
    jmp r9
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    movzx r10d, byte ptr [rdx + 0xe]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    mov byte ptr [rax + 0xe], r10b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xa]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    mov byte ptr [rax + 0xa], r9b
    ret
    movzx ecx, word ptr [rdx]
    mov word ptr [rax], cx
    ret
    nop 
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    movzx r9d, byte ptr [rdx + 6]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    mov byte ptr [rax + 6], r9b
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    ret
    movzx ecx, word ptr [rdx]
    movzx r8d, byte ptr [rdx + 2]
    mov word ptr [rax], cx
    mov byte ptr [rax + 2], r8b
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov byte ptr [rax + 0xc], r9b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, byte ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov byte ptr [rax + 8], cl
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, byte ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov byte ptr [rax + 4], r8b
    ret
    mov rcx, qword ptr [rdx]
    mov qword ptr [rax], rcx
    ret
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rax], cl
    ret
    mov ecx, dword ptr [rdx]
    mov dword ptr [rax], ecx
    ret
    nop 
    cmp r8, 0x20
    ja 0x140008c0d
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + r8 - 0x10]
    movdqu xmmword ptr [rcx], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm2
    ret
    lea r9, [rdx + r8]
    cmp rcx, rdx
    cmovbe r9, rcx
    cmp rcx, r9
    jb 0x1400099a0
    cmp r8, 0x180000
    jae 0x140008c37
    cmp r8, 0x2000
    jae 0x140009980
    vmovdqu ymm0, ymmword ptr [rdx]
    vmovdqu ymm5, ymmword ptr [rdx + r8 - 0x20]
    cmp r8, 0x100
    jbe 0x140008d08
    mov r9, rcx
    and r9, 0x1f
    sub r9, 0x20
    sub rcx, r9
    sub rdx, r9
    add r8, r9
    cmp r8, 0x100
    jbe 0x140008d08
    cmp r8, 0x180000
    ja 0x140008db0
    nop dword ptr [rax]
    vmovdqu ymm1, ymmword ptr [rdx]
    vmovdqu ymm2, ymmword ptr [rdx + 0x20]
    vmovdqu ymm3, ymmword ptr [rdx + 0x40]
    vmovdqu ymm4, ymmword ptr [rdx + 0x60]
    vmovdqa ymmword ptr [rcx], ymm1
    vmovdqa ymmword ptr [rcx + 0x20], ymm2
    vmovdqa ymmword ptr [rcx + 0x40], ymm3
    vmovdqa ymmword ptr [rcx + 0x60], ymm4
    vmovdqu ymm1, ymmword ptr [rdx + 0x80]
    vmovdqu ymm2, ymmword ptr [rdx + 0xa0]
    vmovdqu ymm3, ymmword ptr [rdx + 0xc0]
    vmovdqu ymm4, ymmword ptr [rdx + 0xe0]
    vmovdqa ymmword ptr [rcx + 0x80], ymm1
    vmovdqa ymmword ptr [rcx + 0xa0], ymm2
    vmovdqa ymmword ptr [rcx + 0xc0], ymm3
    vmovdqa ymmword ptr [rcx + 0xe0], ymm4
    add rcx, 0x100
    add rdx, 0x100
    sub r8, 0x100
    cmp r8, 0x100
    jae 0x140008c80
    lea r9, [r8 + 0x1f]
    and r9, 0xffffffffffffffe0
    mov r11, r9
    shr r11, 5
    mov r11d, dword ptr [r10 + r11*4 + 0x2d0d0]
    add r11, r10
    jmp r11
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x100]
    vmovdqu ymmword ptr [rcx + r9 - 0x100], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xe0]
    vmovdqu ymmword ptr [rcx + r9 - 0xe0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xc0]
    vmovdqu ymmword ptr [rcx + r9 - 0xc0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xa0]
    vmovdqu ymmword ptr [rcx + r9 - 0xa0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x80]
    vmovdqu ymmword ptr [rcx + r9 - 0x80], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x60]
    vmovdqu ymmword ptr [rcx + r9 - 0x60], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x40]
    vmovdqu ymmword ptr [rcx + r9 - 0x40], ymm1
    vmovdqu ymmword ptr [rcx + r8 - 0x20], ymm5
    vmovdqu ymmword ptr [rax], ymm0
    vzeroupper 
    ret
    nop 
    vmovdqu ymm1, ymmword ptr [rdx]
    vmovdqu ymm2, ymmword ptr [rdx + 0x20]
    vmovdqu ymm3, ymmword ptr [rdx + 0x40]
    vmovdqu ymm4, ymmword ptr [rdx + 0x60]
    vmovntdq ymmword ptr [rcx], ymm1
    vmovntdq ymmword ptr [rcx + 0x20], ymm2
    vmovntdq ymmword ptr [rcx + 0x40], ymm3
    vmovntdq ymmword ptr [rcx + 0x60], ymm4
    vmovdqu ymm1, ymmword ptr [rdx + 0x80]
    vmovdqu ymm2, ymmword ptr [rdx + 0xa0]
    vmovdqu ymm3, ymmword ptr [rdx + 0xc0]
    vmovdqu ymm4, ymmword ptr [rdx + 0xe0]
    vmovntdq ymmword ptr [rcx + 0x80], ymm1
    vmovntdq ymmword ptr [rcx + 0xa0], ymm2
    vmovntdq ymmword ptr [rcx + 0xc0], ymm3
    vmovntdq ymmword ptr [rcx + 0xe0], ymm4
    add rcx, 0x100
    add rdx, 0x100
    sub r8, 0x100
    cmp r8, 0x100
    jae 0x140008db0
    lea r9, [r8 + 0x1f]
    and r9, 0xffffffffffffffe0
    mov r11, r9
    shr r11, 5
    mov r11d, dword ptr [r10 + r11*4 + 0x2d0f4]
    add r11, r10
    jmp r11
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x100]
    vmovntdq ymmword ptr [rcx + r9 - 0x100], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xe0]
    vmovntdq ymmword ptr [rcx + r9 - 0xe0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xc0]
    vmovntdq ymmword ptr [rcx + r9 - 0xc0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0xa0]
    vmovntdq ymmword ptr [rcx + r9 - 0xa0], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x80]
    vmovntdq ymmword ptr [rcx + r9 - 0x80], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x60]
    vmovntdq ymmword ptr [rcx + r9 - 0x60], ymm1
    vmovdqu ymm1, ymmword ptr [rdx + r9 - 0x40]
    vmovntdq ymmword ptr [rcx + r9 - 0x40], ymm1
    vmovdqu ymmword ptr [rcx + r8 - 0x20], ymm5
    vmovdqu ymmword ptr [rax], ymm0
    sfence 
    vzeroupper 
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov rax, rcx
    lea r10, [rip - 0x8f0a]
    cmp r8, 0xf
    ja 0x140009020
    nop word ptr [rax + rax]
    mov r9d, dword ptr [r10 + r8*4 + 0x2d120]
    add r9, r10
    jmp r9
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    movzx r10d, byte ptr [rdx + 0xe]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    mov byte ptr [rax + 0xe], r10b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xa]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    mov byte ptr [rax + 0xa], r9b
    ret
    movzx ecx, word ptr [rdx]
    mov word ptr [rax], cx
    ret
    nop 
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    movzx r9d, byte ptr [rdx + 6]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    mov byte ptr [rax + 6], r9b
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    ret
    movzx ecx, word ptr [rdx]
    movzx r8d, byte ptr [rdx + 2]
    mov word ptr [rax], cx
    mov byte ptr [rax + 2], r8b
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov byte ptr [rax + 0xc], r9b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, byte ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov byte ptr [rax + 8], cl
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, byte ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov byte ptr [rax + 4], r8b
    ret
    mov rcx, qword ptr [rdx]
    mov qword ptr [rax], rcx
    ret
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rax], cl
    ret
    mov ecx, dword ptr [rdx]
    mov dword ptr [rax], ecx
    ret
    nop 
    cmp r8, 0x20
    ja 0x14000903d
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + r8 - 0x10]
    movdqu xmmword ptr [rcx], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm2
    ret
    lea r9, [rdx + r8]
    cmp rcx, rdx
    cmovbe r9, rcx
    cmp rcx, r9
    jb 0x140009890
    cmp r8, 0x800
    jae 0x140009870
    movdqu xmm0, xmmword ptr [rdx]
    movdqu xmm5, xmmword ptr [rdx + r8 - 0x10]
    cmp r8, 0x80
    jbe 0x14000910c
    mov r9, rcx
    and r9, 0xf
    sub r9, 0x10
    sub rcx, r9
    sub rdx, r9
    add r8, r9
    cmp r8, 0x80
    jbe 0x14000910c
    nop word ptr [rax + rax]
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + 0x10]
    movdqu xmm3, xmmword ptr [rdx + 0x20]
    movdqu xmm4, xmmword ptr [rdx + 0x30]
    movdqa xmmword ptr [rcx], xmm1
    movdqa xmmword ptr [rcx + 0x10], xmm2
    movdqa xmmword ptr [rcx + 0x20], xmm3
    movdqa xmmword ptr [rcx + 0x30], xmm4
    movdqu xmm1, xmmword ptr [rdx + 0x40]
    movdqu xmm2, xmmword ptr [rdx + 0x50]
    movdqu xmm3, xmmword ptr [rdx + 0x60]
    movdqu xmm4, xmmword ptr [rdx + 0x70]
    movdqa xmmword ptr [rcx + 0x40], xmm1
    movdqa xmmword ptr [rcx + 0x50], xmm2
    movdqa xmmword ptr [rcx + 0x60], xmm3
    movdqa xmmword ptr [rcx + 0x70], xmm4
    add rcx, 0x80
    add rdx, 0x80
    sub r8, 0x80
    cmp r8, 0x80
    jae 0x1400090a0
    lea r9, [r8 + 0xf]
    and r9, 0xfffffffffffffff0
    mov r11, r9
    shr r11, 4
    mov r11d, dword ptr [r10 + r11*4 + 0x2d160]
    add r11, r10
    jmp r11
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x80]
    movdqu xmmword ptr [rcx + r9 - 0x80], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x70]
    movdqu xmmword ptr [rcx + r9 - 0x70], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x60]
    movdqu xmmword ptr [rcx + r9 - 0x60], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x50]
    movdqu xmmword ptr [rcx + r9 - 0x50], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x40]
    movdqu xmmword ptr [rcx + r9 - 0x40], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x30]
    movdqu xmmword ptr [rcx + r9 - 0x30], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x20]
    movdqu xmmword ptr [rcx + r9 - 0x20], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm5
    movdqu xmmword ptr [rax], xmm0
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    mov rax, rcx
    lea r10, [rip - 0x91ba]
    cmp r8, 0xf
    ja 0x1400092d0
    nop word ptr [rax + rax]
    mov r9d, dword ptr [r10 + r8*4 + 0x2d190]
    add r9, r10
    jmp r9
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    movzx r10d, byte ptr [rdx + 0xe]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    mov byte ptr [rax + 0xe], r10b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xa]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    mov byte ptr [rax + 0xa], r9b
    ret
    movzx ecx, word ptr [rdx]
    mov word ptr [rax], cx
    ret
    nop 
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    movzx r9d, byte ptr [rdx + 6]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    mov byte ptr [rax + 6], r9b
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, word ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov word ptr [rax + 0xc], r9w
    ret
    movzx ecx, word ptr [rdx]
    movzx r8d, byte ptr [rdx + 2]
    mov word ptr [rax], cx
    mov byte ptr [rax + 2], r8b
    ret
    nop 
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    movzx r9d, byte ptr [rdx + 0xc]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    mov byte ptr [rax + 0xc], r9b
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, word ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov word ptr [rax + 8], cx
    ret
    mov r8, qword ptr [rdx]
    movzx ecx, byte ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov byte ptr [rax + 8], cl
    ret
    mov r8, qword ptr [rdx]
    mov ecx, dword ptr [rdx + 8]
    mov qword ptr [rax], r8
    mov dword ptr [rax + 8], ecx
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, word ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov word ptr [rax + 4], r8w
    ret
    mov ecx, dword ptr [rdx]
    movzx r8d, byte ptr [rdx + 4]
    mov dword ptr [rax], ecx
    mov byte ptr [rax + 4], r8b
    ret
    mov rcx, qword ptr [rdx]
    mov qword ptr [rax], rcx
    ret
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rax], cl
    ret
    mov ecx, dword ptr [rdx]
    mov dword ptr [rax], ecx
    ret
    nop 
    cmp r8, 0x20
    ja 0x1400092ed
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + r8 - 0x10]
    movdqu xmmword ptr [rcx], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm2
    ret
    lea r9, [rdx + r8]
    cmp rcx, rdx
    cmovbe r9, rcx
    cmp rcx, r9
    jb 0x1400099a0
    cmp r8, 0x800
    jae 0x140009980
    movdqu xmm0, xmmword ptr [rdx]
    movdqu xmm5, xmmword ptr [rdx + r8 - 0x10]
    cmp r8, 0x80
    jbe 0x1400093bc
    mov r9, rcx
    and r9, 0xf
    sub r9, 0x10
    sub rcx, r9
    sub rdx, r9
    add r8, r9
    cmp r8, 0x80
    jbe 0x1400093bc
    nop word ptr [rax + rax]
    movdqu xmm1, xmmword ptr [rdx]
    movdqu xmm2, xmmword ptr [rdx + 0x10]
    movdqu xmm3, xmmword ptr [rdx + 0x20]
    movdqu xmm4, xmmword ptr [rdx + 0x30]
    movdqa xmmword ptr [rcx], xmm1
    movdqa xmmword ptr [rcx + 0x10], xmm2
    movdqa xmmword ptr [rcx + 0x20], xmm3
    movdqa xmmword ptr [rcx + 0x30], xmm4
    movdqu xmm1, xmmword ptr [rdx + 0x40]
    movdqu xmm2, xmmword ptr [rdx + 0x50]
    movdqu xmm3, xmmword ptr [rdx + 0x60]
    movdqu xmm4, xmmword ptr [rdx + 0x70]
    movdqa xmmword ptr [rcx + 0x40], xmm1
    movdqa xmmword ptr [rcx + 0x50], xmm2
    movdqa xmmword ptr [rcx + 0x60], xmm3
    movdqa xmmword ptr [rcx + 0x70], xmm4
    add rcx, 0x80
    add rdx, 0x80
    sub r8, 0x80
    cmp r8, 0x80
    jae 0x140009350
    lea r9, [r8 + 0xf]
    and r9, 0xfffffffffffffff0
    mov r11, r9
    shr r11, 4
    mov r11d, dword ptr [r10 + r11*4 + 0x2d1d0]
    add r11, r10
    jmp r11
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x80]
    movdqu xmmword ptr [rcx + r9 - 0x80], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x70]
    movdqu xmmword ptr [rcx + r9 - 0x70], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x60]
    movdqu xmmword ptr [rcx + r9 - 0x60], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x50]
    movdqu xmmword ptr [rcx + r9 - 0x50], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x40]
    movdqu xmmword ptr [rcx + r9 - 0x40], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x30]
    movdqu xmmword ptr [rcx + r9 - 0x30], xmm1
    movdqu xmm1, xmmword ptr [rdx + r9 - 0x20]
    movdqu xmmword ptr [rcx + r9 - 0x20], xmm1
    movdqu xmmword ptr [rcx + r8 - 0x10], xmm5
    movdqu xmmword ptr [rax], xmm0
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov edi, ecx
    lea r15, [rip - 0x946d]
    or r14, 0xffffffffffffffff
    mov r12, r9
    mov rbp, r8
    mov r13, rdx
    mov rax, qword ptr [r15 + rdi*8 + 0x2a2d0]
    nop 
    cmp rax, r14
    je 0x14000953a
    test rax, rax
    jne 0x14000953c
    cmp r8, r9
    je 0x140009532
    mov esi, dword ptr [rbp]
    mov rbx, qword ptr [r15 + rsi*8 + 0x2a2b8]
    nop 
    test rbx, rbx
    je 0x1400094ba
    cmp rbx, r14
    jne 0x140009579
    jmp 0x140009525
    mov r15, qword ptr [r15 + rsi*8 + 0x1e3b8]
    xor edx, edx
    mov rcx, r15
    mov r8d, 0x800
    call qword ptr [rip + 0x13c3d]
    mov rbx, rax
    test rax, rax
    jne 0x140009559
    call qword ptr [rip + 0x13bc7]
    cmp eax, 0x57
    jne 0x140009513
    lea r8d, [rbx + 7]
    mov rcx, r15
    lea rdx, [rip + 0x14f74]
    call 0x14000e9e0
    test eax, eax
    je 0x140009513
    xor r8d, r8d
    xor edx, edx
    mov rcx, r15
    call qword ptr [rip + 0x13c05]
    mov rbx, rax
    test rax, rax
    jne 0x140009559
    mov rax, r14
    lea r15, [rip - 0x951d]
    xchg qword ptr [r15 + rsi*8 + 0x2a2b8], rax
    add rbp, 4
    cmp rbp, r12
    jne 0x14000949e
    xchg qword ptr [r15 + rdi*8 + 0x2a2d0], r14
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    mov rax, rbx
    lea r15, [rip - 0x9563]
    xchg qword ptr [r15 + rsi*8 + 0x2a2b8], rax
    test rax, rax
    je 0x140009579
    mov rcx, rbx
    call qword ptr [rip + 0x13b87]
    mov rdx, r13
    mov rcx, rbx
    call qword ptr [rip + 0x13b83]
    test rax, rax
    je 0x140009532
    mov rcx, rax
    xchg qword ptr [r15 + rdi*8 + 0x2a2d0], rcx
    jmp 0x14000953c
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    lea r9, [rip + 0x14ed8]
    xor ecx, ecx
    lea r8, [rip + 0x14ec7]
    lea rdx, [rip + 0x14ec8]
    call 0x140009448
    test rax, rax
    je 0x1400095d1
    mov rcx, rbx
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x13c9f]
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x13b03]
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    lea r9, [rip + 0x14ea9]
    mov ecx, 1
    lea r8, [rip + 0x14e95]
    lea rdx, [rip + 0x14e96]
    call 0x140009448
    mov ecx, ebx
    test rax, rax
    je 0x14000961a
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x13c56]
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x13ad2]
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    lea r9, [rip + 0x14e71]
    mov ecx, 2
    lea r8, [rip + 0x14e5d]
    lea rdx, [rip + 0x14e5e]
    call 0x140009448
    mov ecx, ebx
    test rax, rax
    je 0x140009662
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x13c0e]
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0x13a7a]
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, rdx
    lea r9, [rip + 0x14e3c]
    mov edi, ecx
    lea rdx, [rip + 0x14e33]
    mov ecx, 3
    lea r8, [rip + 0x14e1f]
    call 0x140009448
    mov rdx, rbx
    mov ecx, edi
    test rax, rax
    je 0x1400096b0
    call qword ptr [rip + 0x13bc2]
    jmp 0x1400096b6
    call qword ptr [rip + 0x13a3a]
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov esi, r8d
    lea r9, [rip + 0x14dfb]
    mov ebx, edx
    lea r8, [rip + 0x14dea]
    mov rdi, rcx
    lea rdx, [rip + 0x14de8]
    mov ecx, 4
    call 0x140009448
    mov edx, ebx
    mov rcx, rdi
    test rax, rax
    je 0x14000970f
    mov r8d, esi
    call qword ptr [rip + 0x13b63]
    jmp 0x140009715
    call qword ptr [rip + 0x139c3]
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    sub rsp, 0x28
    mov qword ptr [rsp + 0x30], rcx
    mov qword ptr [rsp + 0x38], rdx
    mov dword ptr [rsp + 0x40], r8d
    mov rdx, qword ptr [rdx]
    mov rax, rcx
    call 0x1400085a0
    call rax
    call 0x1400085d0
    mov rcx, rax
    mov rdx, qword ptr [rsp + 0x38]
    mov rdx, qword ptr [rdx]
    mov r8d, 2
    call 0x1400085a0
    add rsp, 0x28
    ret
    sub rsp, 0x28
    mov qword ptr [rsp + 0x30], rcx
    mov qword ptr [rsp + 0x38], rdx
    mov dword ptr [rsp + 0x40], r8d
    mov rdx, qword ptr [rdx]
    mov rax, rcx
    call 0x1400085a0
    call rax
    call 0x1400085d0
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    sub rsp, 0x28
    mov qword ptr [rsp + 0x30], rcx
    mov qword ptr [rsp + 0x38], rdx
    mov rdx, qword ptr [rsp + 0x38]
    mov rdx, qword ptr [rdx]
    mov r8d, 2
    call 0x1400085a0
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    sub rsp, 0x28
    mov qword ptr [rsp + 0x30], rcx
    mov qword ptr [rsp + 0x38], rdx
    mov qword ptr [rsp + 0x40], r8
    mov dword ptr [rsp + 0x48], r9d
    mov r8d, r9d
    mov rax, rcx
    call 0x1400085a0
    mov rcx, qword ptr [rsp + 0x40]
    call rax
    call 0x1400085d0
    mov rcx, rax
    mov rdx, qword ptr [rsp + 0x38]
    mov r8d, 2
    call 0x1400085a0
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    push rdi
    push rsi
    mov rdi, rcx
    mov rsi, rdx
    mov rcx, r8
    rep movsb byte ptr [rdi], byte ptr [rsi]
    pop rsi
    pop rdi
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    movups xmm2, xmmword ptr [rdx]
    sub rdx, rcx
    add rcx, r8
    movups xmm0, xmmword ptr [rcx + rdx - 0x10]
    sub rcx, 0x10
    sub r8, 0x10
    test cl, 0xf
    je 0x1400098c3
    mov r9, rcx
    and rcx, 0xfffffffffffffff0
    movups xmm1, xmm0
    movups xmm0, xmmword ptr [rcx + rdx]
    movups xmmword ptr [r9], xmm1
    mov r8, rcx
    sub r8, rax
    mov r9, r8
    shr r9, 7
    je 0x14000993d
    movaps xmmword ptr [rcx], xmm0
    jmp 0x1400098e7
    nop word ptr [rax + rax]
    movaps xmmword ptr [rcx + 0x10], xmm0
    movaps xmmword ptr [rcx], xmm1
    movups xmm0, xmmword ptr [rcx + rdx - 0x10]
    movups xmm1, xmmword ptr [rcx + rdx - 0x20]
    sub rcx, 0x80
    movaps xmmword ptr [rcx + 0x70], xmm0
    movaps xmmword ptr [rcx + 0x60], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x50]
    movups xmm1, xmmword ptr [rcx + rdx + 0x40]
    dec r9
    movaps xmmword ptr [rcx + 0x50], xmm0
    movaps xmmword ptr [rcx + 0x40], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x30]
    movups xmm1, xmmword ptr [rcx + rdx + 0x20]
    movaps xmmword ptr [rcx + 0x30], xmm0
    movaps xmmword ptr [rcx + 0x20], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x10]
    movups xmm1, xmmword ptr [rcx + rdx]
    jne 0x1400098e0
    movaps xmmword ptr [rcx + 0x10], xmm0
    and r8, 0x7f
    movaps xmm0, xmm1
    mov r9, r8
    shr r9, 4
    je 0x140009960
    nop word ptr [rax + rax]
    movups xmmword ptr [rcx], xmm0
    sub rcx, 0x10
    movups xmm0, xmmword ptr [rcx + rdx]
    dec r9
    jne 0x140009950
    and r8, 0xf
    je 0x140009969
    movups xmmword ptr [rax], xmm2
    movups xmmword ptr [rcx], xmm0
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    push rdi
    push rsi
    mov rdi, rcx
    mov rsi, rdx
    mov rcx, r8
    rep movsb byte ptr [rdi], byte ptr [rsi]
    pop rsi
    pop rdi
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    movups xmm2, xmmword ptr [rdx]
    sub rdx, rcx
    add rcx, r8
    movups xmm0, xmmword ptr [rcx + rdx - 0x10]
    sub rcx, 0x10
    sub r8, 0x10
    test cl, 0xf
    je 0x1400099d3
    mov r9, rcx
    and rcx, 0xfffffffffffffff0
    movups xmm1, xmm0
    movups xmm0, xmmword ptr [rcx + rdx]
    movups xmmword ptr [r9], xmm1
    mov r8, rcx
    sub r8, rax
    mov r9, r8
    shr r9, 7
    je 0x140009a4d
    movaps xmmword ptr [rcx], xmm0
    jmp 0x1400099f7
    nop word ptr [rax + rax]
    movaps xmmword ptr [rcx + 0x10], xmm0
    movaps xmmword ptr [rcx], xmm1
    movups xmm0, xmmword ptr [rcx + rdx - 0x10]
    movups xmm1, xmmword ptr [rcx + rdx - 0x20]
    sub rcx, 0x80
    movaps xmmword ptr [rcx + 0x70], xmm0
    movaps xmmword ptr [rcx + 0x60], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x50]
    movups xmm1, xmmword ptr [rcx + rdx + 0x40]
    dec r9
    movaps xmmword ptr [rcx + 0x50], xmm0
    movaps xmmword ptr [rcx + 0x40], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x30]
    movups xmm1, xmmword ptr [rcx + rdx + 0x20]
    movaps xmmword ptr [rcx + 0x30], xmm0
    movaps xmmword ptr [rcx + 0x20], xmm1
    movups xmm0, xmmword ptr [rcx + rdx + 0x10]
    movups xmm1, xmmword ptr [rcx + rdx]
    jne 0x1400099f0
    movaps xmmword ptr [rcx + 0x10], xmm0
    and r8, 0x7f
    movaps xmm0, xmm1
    mov r9, r8
    shr r9, 4
    je 0x140009a70
    nop word ptr [rax + rax]
    movups xmmword ptr [rcx], xmm0
    sub rcx, 0x10
    movups xmm0, xmmword ptr [rcx + rdx]
    dec r9
    jne 0x140009a60
    and r8, 0xf
    je 0x140009a79
    movups xmmword ptr [rax], xmm2
    movups xmmword ptr [rcx], xmm0
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    push rdi
    sub rsp, 0x20
    cmp qword ptr [rcx], 0
    mov rdi, rcx
    jne 0x140009ad3
    call qword ptr [rip + 0x1360f]
    cmp byte ptr [rdi + 0x10], 0
    mov dword ptr [rsp + 0x30], eax
    jne 0x140009ab0
    and qword ptr [rdi + 8], 0
    xor edx, edx
    mov byte ptr [rdi + 0x10], 1
    jmp 0x140009ab4
    mov rdx, qword ptr [rdi + 8]
    lea rcx, [rsp + 0x30]
    call 0x14000efc4
    mov ecx, dword ptr [rsp + 0x30]
    mov rbx, rax
    mov qword ptr [rdi], rax
    call qword ptr [rip + 0x135e2]
    test rbx, rbx
    je 0x140009ae1
    mov rax, qword ptr [rdi]
    mov rbx, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    call 0x14000e8f0
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rsi, qword ptr [rcx]
    xor edi, edi
    mov rbx, rcx
    test rsi, rsi
    jne 0x140009b3f
    call qword ptr [rip + 0x1359e]
    mov dword ptr [rsp + 0x30], eax
    cmp byte ptr [rbx + 0x10], dil
    jne 0x140009b1e
    mov qword ptr [rbx + 8], rdi
    mov byte ptr [rbx + 0x10], 1
    jmp 0x140009b22
    mov rdi, qword ptr [rbx + 8]
    mov rdx, rdi
    lea rcx, [rsp + 0x30]
    call 0x14000efc4
    mov ecx, dword ptr [rsp + 0x30]
    mov rsi, rax
    mov qword ptr [rbx], rax
    call qword ptr [rip + 0x13571]
    mov rbx, qword ptr [rsp + 0x38]
    mov rax, rsi
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    xor ebx, ebx
    mov rdi, rdx
    mov rsi, rcx
    cmp byte ptr [rdx + 0x10], bl
    jne 0x140009b88
    call qword ptr [rip + 0x13532]
    mov ecx, eax
    mov qword ptr [rdi + 8], rbx
    mov byte ptr [rdi + 0x10], 1
    call qword ptr [rip + 0x1352a]
    jmp 0x140009b8c
    mov rbx, qword ptr [rdx + 8]
    lea rax, [rsi + rbx*8]
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rbp
    push rdi
    push r14
    lea rbp, [rsp - 0x4f0]
    sub rsp, 0x5f0
    mov rax, qword ptr [rip + 0x1f43c]
    xor rax, rsp
    mov qword ptr [rbp + 0x4e0], rax
    mov edi, r8d
    mov esi, edx
    mov ebx, ecx
    cmp ecx, -1
    je 0x140009bdf
    call 0x140003c78
    xor edx, edx
    lea rcx, [rsp + 0x70]
    mov r8d, 0x98
    call 0x14001b630
    xor edx, edx
    lea rcx, [rbp + 0x10]
    mov r8d, 0x4d0
    call 0x14001b630
    lea rax, [rsp + 0x70]
    mov qword ptr [rsp + 0x48], rax
    lea rcx, [rbp + 0x10]
    lea rax, [rbp + 0x10]
    mov qword ptr [rsp + 0x50], rax
    call qword ptr [rip + 0x133e9]
    mov r14, qword ptr [rbp + 0x108]
    lea rdx, [rsp + 0x40]
    mov rcx, r14
    xor r8d, r8d
    call qword ptr [rip + 0x133d9]
    test rax, rax
    je 0x140009c72
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rsp + 0x58]
    mov rdx, qword ptr [rsp + 0x40]
    mov r9, rax
    mov qword ptr [rsp + 0x30], rcx
    mov r8, r14
    lea rcx, [rsp + 0x60]
    mov qword ptr [rsp + 0x28], rcx
    lea rcx, [rbp + 0x10]
    mov qword ptr [rsp + 0x20], rcx
    xor ecx, ecx
    call qword ptr [rip + 0x133a6]
    mov rax, qword ptr [rbp + 0x508]
    mov qword ptr [rbp + 0x108], rax
    lea rax, [rbp + 0x508]
    add rax, 8
    mov dword ptr [rsp + 0x70], esi
    mov qword ptr [rbp + 0xa8], rax
    mov rax, qword ptr [rbp + 0x508]
    mov qword ptr [rbp - 0x80], rax
    mov dword ptr [rsp + 0x74], edi
    call qword ptr [rip + 0x133c5]
    xor ecx, ecx
    mov edi, eax
    call qword ptr [rip + 0x13373]
    lea rcx, [rsp + 0x48]
    call qword ptr [rip + 0x13360]
    test eax, eax
    jne 0x140009cd4
    test edi, edi
    jne 0x140009cd4
    cmp ebx, -1
    je 0x140009cd4
    mov ecx, ebx
    call 0x140003c78
    mov rcx, qword ptr [rbp + 0x4e0]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x5f0]
    mov rbx, qword ptr [r11 + 0x28]
    mov rsi, qword ptr [r11 + 0x30]
    mov rsp, r11
    pop r14
    pop rdi
    pop rbp
    ret
    int3 
    mov qword ptr [rip + 0x205fd], rcx
    ret
    mov qword ptr [rsp + 8], rbx
    push rbp
    mov rbp, rsp
    sub rsp, 0x70
    and qword ptr [rbp - 0x40], 0
    cmp dword ptr [rip + 0x20793], 0
    mov byte ptr [rbp - 0x30], 0
    mov byte ptr [rbp - 0x18], 0
    mov byte ptr [rbp - 0x10], 0
    mov byte ptr [rbp - 8], 0
    jne 0x140009d3f
    movups xmm0, xmmword ptr [rip + 0x1f5c2]
    mov byte ptr [rbp - 0x18], 1
    movdqu xmmword ptr [rbp - 0x28], xmm0
    lea rax, [rbp - 0x40]
    mov qword ptr [rsp + 0x28], rax
    mov rax, qword ptr [rbp + 0x30]
    mov qword ptr [rsp + 0x20], rax
    call 0x140009da0
    cmp byte ptr [rbp - 0x18], 2
    jne 0x140009d67
    mov rax, qword ptr [rbp - 0x40]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x10], 0
    je 0x140009d7c
    mov ebx, dword ptr [rbp - 0x14]
    lea rcx, [rbp - 0x40]
    call 0x140009a80
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 8], 0
    je 0x140009d91
    mov ebx, dword ptr [rbp - 0xc]
    lea rcx, [rbp - 0x40]
    call 0x140009a80
    mov dword ptr [rax + 0x24], ebx
    mov rbx, qword ptr [rsp + 0x80]
    add rsp, 0x70
    pop rbp
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x30
    mov rbp, rcx
    mov ebx, r9d
    mov rcx, qword ptr [rsp + 0x68]
    mov rdi, r8
    mov rsi, rdx
    call 0x140009ae8
    test rax, rax
    je 0x140009e16
    mov rax, qword ptr [rax + 0x3b8]
    test rax, rax
    je 0x140009e16
    movabs r10, 0xd6bc1f4834572a70
    mov rcx, qword ptr [rsp + 0x60]
    mov rdx, rsi
    mov qword ptr [rsp + 0x20], rcx
    mov r8, rdi
    mov rcx, rbp
    mov r9d, ebx
    call qword ptr [rip + 0x13477]
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop rdi
    ret
    mov rdx, qword ptr [rsp + 0x68]
    lea rcx, [rip + 0x204de]
    call 0x140009b54
    mov r11, qword ptr [rax]
    mov rax, qword ptr [rip + 0x1f1cf]
    xor r11, rax
    mov ecx, eax
    and ecx, 0x3f
    ror r11, cl
    test r11, r11
    je 0x140009e50
    movabs r10, 0xd6bc1f4834572a70
    mov rax, r11
    jmp 0x140009de5
    mov rax, qword ptr [rsp + 0x60]
    mov r9d, ebx
    mov r8, rdi
    mov qword ptr [rsp + 0x20], rax
    mov rdx, rsi
    mov rcx, rbp
    call 0x140009ebc
    int3 
    sub rsp, 0x38
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009d04
    add rsp, 0x38
    ret
    int3 
    int3 
    sub rsp, 0x38
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009d04
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009ebc
    int3 
    int3 
    sub rsp, 0x28
    mov ecx, 0x17
    call qword ptr [rip + 0x13175]
    test eax, eax
    je 0x140009ed6
    mov ecx, 5
    int 0x29
    mov r8d, 1
    mov edx, 0xc0000417
    lea ecx, [r8 + 1]
    call 0x140009ba0
    call qword ptr [rip + 0x13140]
    mov rcx, rax
    mov edx, 0xc0000417
    add rsp, 0x28
    jmp qword ptr [rip + 0x13135]
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x20
    mov eax, dword ptr [rip + 0x203e5]
    xor ebx, ebx
    mov edi, 3
    test eax, eax
    jne 0x140009f35
    mov eax, 0x200
    jmp 0x140009f3a
    cmp eax, edi
    cmovl eax, edi
    movsxd rcx, eax
    mov edx, 8
    mov dword ptr [rip + 0x203c0], eax
    call 0x14000f1d8
    xor ecx, ecx
    mov qword ptr [rip + 0x203ba], rax
    call 0x14000f250
    cmp qword ptr [rip + 0x203ae], rbx
    jne 0x140009f93
    mov edx, 8
    mov dword ptr [rip + 0x20399], edi
    mov rcx, rdi
    call 0x14000f1d8
    xor ecx, ecx
    mov qword ptr [rip + 0x20390], rax
    call 0x14000f250
    cmp qword ptr [rip + 0x20384], rbx
    jne 0x140009f93
    or eax, 0xffffffff
    jmp 0x14000a008
    mov rbp, rbx
    lea rsi, [rip + 0x1f0fb]
    lea r14, [rip + 0x1f0dc]
    lea rcx, [r14 + 0x30]
    xor r8d, r8d
    mov edx, 0xfa0
    call 0x14000f5f0
    mov rax, qword ptr [rip + 0x20354]
    lea r8, [rip + 0x206ed]
    mov rdx, rbp
    sar rdx, 6
    mov qword ptr [rbx + rax], r14
    mov rax, rbp
    and eax, 0x3f
    lea rcx, [rax + rax*8]
    mov rax, qword ptr [r8 + rdx*8]
    mov rcx, qword ptr [rax + rcx*8 + 0x28]
    add rcx, 2
    cmp rcx, 2
    ja 0x140009ff1
    mov dword ptr [rsi], 0xfffffffe
    inc rbp
    add r14, 0x58
    add rbx, 8
    add rsi, 0x58
    sub rdi, 1
    jne 0x140009fa4
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop r14
    ret
    int3 
    mov eax, ecx
    lea rcx, [rip + 0x1f053]
    imul rax, rax, 0x58
    add rax, rcx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    call 0x14000fc08
    call 0x14000f814
    xor ebx, ebx
    mov rcx, qword ptr [rip + 0x202bf]
    mov rcx, qword ptr [rbx + rcx]
    call 0x14000fc10
    mov rax, qword ptr [rip + 0x202af]
    mov rcx, qword ptr [rbx + rax]
    add rcx, 0x30
    call qword ptr [rip + 0x13061]
    add rbx, 8
    cmp rbx, 0x18
    jne 0x14000a04a
    mov rcx, qword ptr [rip + 0x20290]
    call 0x14000f250
    and qword ptr [rip + 0x20283], 0
    add rsp, 0x20
    pop rbx
    ret
    int3 
    add rcx, 0x30
    jmp qword ptr [rip + 0x13021]
    int3 
    add rcx, 0x30
    jmp qword ptr [rip + 0x1301d]
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov rcx, qword ptr [rdx]
    call 0x14000a094
    nop 
    mov rcx, rdi
    call 0x14000af48
    mov edi, eax
    mov rcx, qword ptr [rbx]
    call 0x14000a0a0
    mov eax, edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r14
    push r15
    lea rbp, [rsp - 0x3d0]
    sub rsp, 0x4d0
    mov rax, qword ptr [rip + 0x1eef3]
    xor rax, rsp
    mov qword ptr [rbp + 0x3c0], rax
    mov rax, qword ptr [rbp + 0x430]
    xor r12d, r12d
    mov rdi, r8
    mov rsi, rdx
    mov r15, rcx
    test r9, r9
    jne 0x14000a15b
    mov byte ptr [rax + 0x30], 1
    xor r9d, r9d
    mov qword ptr [rsp + 0x28], rax
    xor r8d, r8d
    xor edx, edx
    mov dword ptr [rax + 0x2c], 0x16
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], r12
    call 0x140009da0
    or eax, 0xffffffff
    jmp 0x14000a25f
    test rdi, rdi
    je 0x14000a165
    test rsi, rsi
    je 0x14000a12f
    mov r14, r15
    mov dword ptr [rsp + 0x49], r12d
    mov word ptr [rsp + 0x4d], r12w
    mov byte ptr [rsp + 0x4f], r12b
    mov qword ptr [rsp + 0x30], rsi
    mov qword ptr [rsp + 0x38], rdi
    mov qword ptr [rsp + 0x40], r12
    and r14d, 2
    jne 0x14000a197
    mov byte ptr [rsp + 0x48], r12b
    test rsi, rsi
    jne 0x14000a19c
    mov byte ptr [rsp + 0x48], 1
    mov qword ptr [rsp + 0x58], rax
    lea rcx, [rsp + 0x50]
    lea rax, [rsp + 0x30]
    mov dword ptr [rsp + 0x70], r12d
    mov qword ptr [rbp + 0x3b0], rax
    xorps xmm0, xmm0
    mov rax, qword ptr [rbp + 0x438]
    mov qword ptr [rsp + 0x68], rax
    mov byte ptr [rsp + 0x74], r12b
    mov qword ptr [rsp + 0x78], r12
    mov dword ptr [rbp - 0x80], r12d
    mov word ptr [rbp - 0x78], r12w
    mov dword ptr [rbp - 0x68], r12d
    mov byte ptr [rbp - 0x64], r12b
    movdqa xmmword ptr [rbp + 0x3a0], xmm0
    mov qword ptr [rsp + 0x50], r15
    mov qword ptr [rsp + 0x60], r9
    mov dword ptr [rbp + 0x3b8], r12d
    call 0x14000b4f8
    movsxd rbx, eax
    test rsi, rsi
    je 0x14000a251
    test r15b, 1
    je 0x14000a230
    test rdi, rdi
    jne 0x14000a21b
    test eax, eax
    je 0x14000a21b
    or ebx, 0xffffffff
    jmp 0x14000a251
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rdi
    jne 0x14000a24d
    test ebx, ebx
    js 0x14000a251
    cmp rbx, rdi
    jbe 0x14000a251
    jmp 0x14000a216
    test r14, r14
    je 0x14000a280
    test rdi, rdi
    je 0x14000a251
    test eax, eax
    jns 0x14000a243
    mov byte ptr [rsi], r12b
    jmp 0x14000a251
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rdi
    je 0x14000a294
    mov byte ptr [rsi + rax], r12b
    mov rcx, qword ptr [rbp + 0x3a8]
    call 0x14000f250
    mov eax, ebx
    mov rcx, qword ptr [rbp + 0x3c0]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0x4d0
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    test rdi, rdi
    je 0x14000a216
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rdi
    jne 0x14000a24d
    mov ebx, 0xfffffffe
    mov byte ptr [rsi + rdi - 1], r12b
    jmp 0x14000a251
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    movabs rax, 0x7fffffffffffffff
    mov rbp, rcx
    cmp rdx, rax
    jbe 0x14000a2d3
    mov byte ptr [r8 + 0x30], 1
    xor al, al
    mov dword ptr [r8 + 0x2c], 0xc
    jmp 0x14000a32f
    xor edi, edi
    lea rsi, [rdx + rdx]
    cmp qword ptr [rcx + 0x408], rdi
    jne 0x14000a2eb
    cmp rsi, 0x400
    jbe 0x14000a2f4
    cmp rsi, qword ptr [rcx + 0x400]
    ja 0x14000a2f8
    mov al, 1
    jmp 0x14000a32f
    mov rcx, rsi
    call 0x14000fec8
    mov rbx, rax
    test rax, rax
    je 0x14000a325
    mov rcx, qword ptr [rbp + 0x408]
    call 0x14000f250
    mov qword ptr [rbp + 0x408], rbx
    mov dil, 1
    mov qword ptr [rbp + 0x400], rsi
    xor ecx, ecx
    call 0x14000f250
    mov al, dil
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov r12, qword ptr [rdx]
    mov ebp, r8d
    mov rbx, rdx
    mov r13, rcx
    test r12, r12
    jne 0x14000a383
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    jmp 0x14000a3b5
    test ebp, ebp
    je 0x14000a3cd
    lea eax, [r8 - 2]
    cmp eax, 0x22
    jbe 0x14000a3cd
    mov byte ptr [rcx + 0x30], 1
    xor r9d, r9d
    mov dword ptr [rcx + 0x2c], 0x16
    xor r8d, r8d
    mov qword ptr [rsp + 0x28], r13
    xor ecx, ecx
    and qword ptr [rsp + 0x20], 0
    xor edx, edx
    call 0x140009da0
    mov rcx, qword ptr [rbx + 8]
    test rcx, rcx
    je 0x14000a540
    mov rax, qword ptr [rbx]
    mov qword ptr [rcx], rax
    jmp 0x14000a540
    mov sil, byte ptr [r12]
    lea rcx, [r12 + 1]
    xor r14d, r14d
    movzx eax, r9b
    mov edi, eax
    mov qword ptr [rdx], rcx
    lea r15d, [r14 + 2]
    or edi, r15d
    cmp sil, 0x2d
    cmovne edi, eax
    je 0x14000a3f8
    cmp sil, 0x2b
    jne 0x14000a401
    mov sil, byte ptr [rcx]
    inc rcx
    mov qword ptr [rdx], rcx
    test ebp, 0xffffffef
    jne 0x14000a495
    lea eax, [rsi - 0x30]
    cmp al, 9
    ja 0x14000a41d
    movsx eax, sil
    add eax, -0x30
    jmp 0x14000a43b
    lea eax, [rsi - 0x61]
    cmp al, 0x19
    ja 0x14000a42d
    movsx eax, sil
    add eax, -0x57
    jmp 0x14000a43b
    lea eax, [rsi - 0x41]
    cmp al, 0x19
    ja 0x14000a489
    movsx eax, sil
    add eax, -0x37
    test eax, eax
    jne 0x14000a489
    mov dl, byte ptr [rcx]
    lea r8, [rcx + 1]
    mov qword ptr [rbx], r8
    lea eax, [rdx - 0x58]
    test al, 0xdf
    je 0x14000a478
    test ebp, ebp
    mov qword ptr [rbx], rcx
    mov eax, 8
    cmovne eax, ebp
    mov ebp, eax
    test dl, dl
    je 0x14000a495
    cmp byte ptr [rcx], dl
    je 0x14000a495
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    jmp 0x14000a495
    mov sil, byte ptr [r8]
    lea rax, [r8 + 1]
    mov qword ptr [rbx], rax
    mov eax, 0x10
    jmp 0x14000a48e
    mov eax, 0xa
    test ebp, ebp
    cmovne eax, ebp
    mov ebp, eax
    mov r8, qword ptr [rbx]
    xor edx, edx
    or eax, 0xffffffff
    div ebp
    mov r9d, eax
    lea ecx, [rsi - 0x30]
    cmp cl, 9
    ja 0x14000a4b3
    movsx ecx, sil
    add ecx, -0x30
    jmp 0x14000a4d6
    lea eax, [rsi - 0x61]
    cmp al, 0x19
    ja 0x14000a4c3
    movsx ecx, sil
    add ecx, -0x57
    jmp 0x14000a4d6
    lea eax, [rsi - 0x41]
    cmp al, 0x19
    ja 0x14000a4d3
    movsx ecx, sil
    add ecx, -0x37
    jmp 0x14000a4d6
    or ecx, 0xffffffff
    cmp ecx, ebp
    jae 0x14000a50a
    mov sil, byte ptr [r8]
    mov eax, r14d
    imul eax, ebp
    lea edx, [rax + rcx]
    xor ecx, ecx
    cmp edx, eax
    setb cl
    xor eax, eax
    cmp r14d, r9d
    mov r14d, edx
    seta al
    or ecx, eax
    shl ecx, 2
    or ecx, 8
    or edi, ecx
    inc r8
    mov qword ptr [rbx], r8
    jmp 0x14000a4a2
    lea rax, [r8 - 1]
    mov qword ptr [rbx], rax
    test sil, sil
    je 0x14000a52b
    cmp byte ptr [rax], sil
    je 0x14000a52b
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    test dil, 8
    jne 0x14000a547
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rbx], r12
    test rax, rax
    je 0x14000a540
    mov qword ptr [rax], r12
    xor eax, eax
    jmp 0x14000a5da
    mov r8d, 0x80000000
    lea r9d, [r8 - 1]
    test dil, 4
    je 0x14000a560
    mov eax, 1
    mov ecx, edi
    jmp 0x14000a57e
    test dil, 1
    je 0x14000a5c0
    test r15b, dil
    je 0x14000a572
    cmp r14d, r8d
    jbe 0x14000a5c5
    jmp 0x14000a577
    cmp r14d, r9d
    jbe 0x14000a5c8
    mov ecx, 1
    mov eax, edi
    and edi, r15d
    mov byte ptr [r13 + 0x30], 1
    mov dword ptr [r13 + 0x2c], 0x22
    test eax, ecx
    jne 0x14000a598
    or r14d, 0xffffffff
    jmp 0x14000a5c8
    mov rdx, qword ptr [rbx + 8]
    test edi, edi
    je 0x14000a5b0
    test rdx, rdx
    je 0x14000a5ab
    mov rcx, qword ptr [rbx]
    mov qword ptr [rdx], rcx
    mov eax, r8d
    jmp 0x14000a5da
    test rdx, rdx
    je 0x14000a5bb
    mov rcx, qword ptr [rbx]
    mov qword ptr [rdx], rcx
    mov eax, r9d
    jmp 0x14000a5da
    test r15b, dil
    je 0x14000a5c8
    neg r14d
    mov rax, qword ptr [rbx + 8]
    test rax, rax
    je 0x14000a5d7
    mov rcx, qword ptr [rbx]
    mov qword ptr [rax], rcx
    mov eax, r14d
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov r8d, dword ptr [rcx + 0x34]
    mov bpl, dl
    mov rbx, rcx
    mov r14d, 8
    cmp r8d, 5
    jg 0x14000a6f4
    je 0x14000a65a
    test r8d, r8d
    je 0x14000a74b
    sub r8d, 1
    je 0x14000a6cb
    sub r8d, 1
    je 0x14000a6a3
    sub r8d, 1
    je 0x14000a74b
    cmp r8d, 1
    jne 0x14000a717
    mov edx, dword ptr [rcx + 0x28]
    mov rdi, r14
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov rsi, qword ptr [rcx]
    mov eax, edx
    shr eax, 4
    test al, 1
    je 0x14000a68d
    test rsi, rsi
    jns 0x14000a68d
    neg rsi
    or edx, 0x40
    mov dword ptr [rbx + 0x28], edx
    cmp dword ptr [rbx + 0x30], 0
    jge 0x14000a777
    mov dword ptr [rbx + 0x30], 1
    jmp 0x14000a78e
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 2
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000a6c6
    movsx rsi, word ptr [rcx]
    jmp 0x14000a676
    movzx esi, word ptr [rcx]
    jmp 0x14000a676
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 1
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test dil, al
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000a6ef
    movsx rsi, byte ptr [rcx]
    jmp 0x14000a676
    movzx esi, byte ptr [rcx]
    jmp 0x14000a676
    sub r8d, 6
    je 0x14000a65a
    sub r8d, 1
    je 0x14000a65a
    sub r8d, 2
    je 0x14000a65a
    jmp 0x14000a646
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x140009da0
    xor al, al
    jmp 0x14000a7e0
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 4
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000a770
    movsxd rsi, dword ptr [rcx]
    jmp 0x14000a676
    mov esi, dword ptr [rcx]
    jmp 0x14000a676
    mov r8, qword ptr [rbx + 8]
    lea rcx, [rbx + 0x50]
    and edx, 0xfffffff7
    mov dword ptr [rbx + 0x28], edx
    movsxd rdx, dword ptr [rbx + 0x30]
    call 0x14000a29c
    test rsi, rsi
    jne 0x14000a797
    and dword ptr [rbx + 0x28], 0xffffffdf
    mov byte ptr [rbx + 0x4c], 0
    mov r8b, bpl
    mov rcx, rbx
    cmp rdi, r14
    jne 0x14000a7b0
    mov rdx, rsi
    call 0x14000ada4
    jmp 0x14000a7b7
    mov edx, esi
    call 0x14000ac04
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 7
    test al, 1
    je 0x14000a7de
    cmp dword ptr [rbx + 0x48], 0
    je 0x14000a7d0
    mov rax, qword ptr [rbx + 0x40]
    cmp byte ptr [rax], 0x30
    je 0x14000a7de
    dec qword ptr [rbx + 0x40]
    mov rcx, qword ptr [rbx + 0x40]
    mov byte ptr [rcx], 0x30
    inc dword ptr [rbx + 0x48]
    mov al, 1
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov r8d, dword ptr [rcx + 0x34]
    mov bpl, dl
    mov rbx, rcx
    mov r14d, 8
    cmp r8d, 5
    jg 0x14000a8f8
    je 0x14000a85e
    test r8d, r8d
    je 0x14000a94f
    sub r8d, 1
    je 0x14000a8cf
    sub r8d, 1
    je 0x14000a8a7
    sub r8d, 1
    je 0x14000a94f
    cmp r8d, 1
    jne 0x14000a91b
    mov edx, dword ptr [rcx + 0x28]
    mov rdi, r14
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov rsi, qword ptr [rcx]
    mov eax, edx
    shr eax, 4
    test al, 1
    je 0x14000a891
    test rsi, rsi
    jns 0x14000a891
    neg rsi
    or edx, 0x40
    mov dword ptr [rbx + 0x28], edx
    cmp dword ptr [rbx + 0x30], 0
    jge 0x14000a97b
    mov dword ptr [rbx + 0x30], 1
    jmp 0x14000a992
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 2
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000a8ca
    movsx rsi, word ptr [rcx]
    jmp 0x14000a87a
    movzx esi, word ptr [rcx]
    jmp 0x14000a87a
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 1
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test dil, al
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000a8f3
    movsx rsi, byte ptr [rcx]
    jmp 0x14000a87a
    movzx esi, byte ptr [rcx]
    jmp 0x14000a87a
    sub r8d, 6
    je 0x14000a85e
    sub r8d, 1
    je 0x14000a85e
    sub r8d, 2
    je 0x14000a85e
    jmp 0x14000a84a
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x140009da0
    xor al, al
    jmp 0x14000a9e4
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 4
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000a974
    movsxd rsi, dword ptr [rcx]
    jmp 0x14000a87a
    mov esi, dword ptr [rcx]
    jmp 0x14000a87a
    mov r8, qword ptr [rbx + 8]
    lea rcx, [rbx + 0x50]
    and edx, 0xfffffff7
    mov dword ptr [rbx + 0x28], edx
    movsxd rdx, dword ptr [rbx + 0x30]
    call 0x14000a29c
    test rsi, rsi
    jne 0x14000a99b
    and dword ptr [rbx + 0x28], 0xffffffdf
    mov byte ptr [rbx + 0x4c], 0
    mov r8b, bpl
    mov rcx, rbx
    cmp rdi, r14
    jne 0x14000a9b4
    mov rdx, rsi
    call 0x14000ae14
    jmp 0x14000a9bb
    mov edx, esi
    call 0x14000ac74
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 7
    test al, 1
    je 0x14000a9e2
    cmp dword ptr [rbx + 0x48], 0
    je 0x14000a9d4
    mov rax, qword ptr [rbx + 0x40]
    cmp byte ptr [rax], 0x30
    je 0x14000a9e2
    dec qword ptr [rbx + 0x40]
    mov rcx, qword ptr [rbx + 0x40]
    mov byte ptr [rcx], 0x30
    inc dword ptr [rbx + 0x48]
    mov al, 1
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov r8d, dword ptr [rcx + 0x34]
    mov bpl, dl
    mov rbx, rcx
    mov r14d, 8
    cmp r8d, 5
    jg 0x14000aafc
    je 0x14000aa62
    test r8d, r8d
    je 0x14000ab53
    sub r8d, 1
    je 0x14000aad3
    sub r8d, 1
    je 0x14000aaab
    sub r8d, 1
    je 0x14000ab53
    cmp r8d, 1
    jne 0x14000ab1f
    mov edx, dword ptr [rcx + 0x28]
    mov rdi, r14
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov rsi, qword ptr [rcx]
    mov eax, edx
    shr eax, 4
    test al, 1
    je 0x14000aa95
    test rsi, rsi
    jns 0x14000aa95
    neg rsi
    or edx, 0x40
    mov dword ptr [rbx + 0x28], edx
    cmp dword ptr [rbx + 0x30], 0
    jge 0x14000ab7f
    mov dword ptr [rbx + 0x30], 1
    jmp 0x14000ab96
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 2
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000aace
    movsx rsi, word ptr [rcx]
    jmp 0x14000aa7e
    movzx esi, word ptr [rcx]
    jmp 0x14000aa7e
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 1
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test dil, al
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000aaf7
    movsx rsi, byte ptr [rcx]
    jmp 0x14000aa7e
    movzx esi, byte ptr [rcx]
    jmp 0x14000aa7e
    sub r8d, 6
    je 0x14000aa62
    sub r8d, 1
    je 0x14000aa62
    sub r8d, 2
    je 0x14000aa62
    jmp 0x14000aa4e
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x140009da0
    xor al, al
    jmp 0x14000abe8
    mov edx, dword ptr [rcx + 0x28]
    mov edi, 4
    mov rcx, qword ptr [rcx + 0x18]
    mov eax, edx
    shr eax, 4
    test al, 1
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    je 0x14000ab78
    movsxd rsi, dword ptr [rcx]
    jmp 0x14000aa7e
    mov esi, dword ptr [rcx]
    jmp 0x14000aa7e
    mov r8, qword ptr [rbx + 8]
    lea rcx, [rbx + 0x50]
    and edx, 0xfffffff7
    mov dword ptr [rbx + 0x28], edx
    movsxd rdx, dword ptr [rbx + 0x30]
    call 0x14000a29c
    test rsi, rsi
    jne 0x14000ab9f
    and dword ptr [rbx + 0x28], 0xffffffdf
    mov byte ptr [rbx + 0x4c], 0
    mov r8b, bpl
    mov rcx, rbx
    cmp rdi, r14
    jne 0x14000abb8
    mov rdx, rsi
    call 0x14000aec4
    jmp 0x14000abbf
    mov edx, esi
    call 0x14000ad20
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 7
    test al, 1
    je 0x14000abe6
    cmp dword ptr [rbx + 0x48], 0
    je 0x14000abd8
    mov rax, qword ptr [rbx + 0x40]
    cmp byte ptr [rax], 0x30
    je 0x14000abe6
    dec qword ptr [rbx + 0x40]
    mov rcx, qword ptr [rbx + 0x40]
    mov byte ptr [rcx], 0x30
    inc dword ptr [rbx + 0x48]
    mov al, 1
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    int3 
    lea r8, [rcx + 0x50]
    mov r9d, edx
    mov rax, qword ptr [r8 + 0x408]
    test rax, rax
    jne 0x14000ac1e
    mov eax, 0x200
    jmp 0x14000ac2b
    mov r8, rax
    mov rax, qword ptr [rcx + 0x450]
    shr rax, 1
    lea rdx, [r8 - 1]
    add rdx, rax
    mov qword ptr [rcx + 0x40], rdx
    mov r8, rdx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jg 0x14000ac45
    test r9d, r9d
    je 0x14000ac62
    dec eax
    mov dword ptr [rcx + 0x30], eax
    mov al, r9b
    and al, 7
    shr r9d, 3
    add al, 0x30
    mov byte ptr [r8], al
    dec qword ptr [rcx + 0x40]
    mov r8, qword ptr [rcx + 0x40]
    jmp 0x14000ac39
    sub edx, dword ptr [rcx + 0x40]
    lea rax, [r8 + 1]
    mov dword ptr [rcx + 0x48], edx
    mov qword ptr [rcx + 0x40], rax
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov rax, qword ptr [rcx + 0x458]
    mov r9, rcx
    add rcx, 0x50
    mov bl, r8b
    mov r11d, edx
    test rax, rax
    jne 0x14000ac99
    mov eax, 0x200
    jmp 0x14000aca6
    mov rcx, rax
    mov rax, qword ptr [r9 + 0x450]
    shr rax, 1
    lea r8, [rcx - 1]
    add r8, rax
    mov qword ptr [r9 + 0x40], r8
    mov r10, r8
    mov eax, dword ptr [r9 + 0x30]
    test eax, eax
    jg 0x14000acc1
    test r11d, r11d
    je 0x14000ad08
    dec eax
    mov dword ptr [r9 + 0x30], eax
    mov eax, 0xcccccccd
    mul r11d
    shr edx, 3
    mov al, dl
    shl al, 2
    lea ecx, [rax + rdx]
    add cl, cl
    sub r11b, cl
    add r11b, 0x30
    mov al, r11b
    mov cl, r11b
    mov r11d, edx
    cmp al, 0x39
    jle 0x14000acfb
    mov al, bl
    xor al, 1
    shl al, 5
    add al, 7
    add al, cl
    mov byte ptr [r10], al
    dec qword ptr [r9 + 0x40]
    mov r10, qword ptr [r9 + 0x40]
    jmp 0x14000acb4
    sub r8d, dword ptr [r9 + 0x40]
    lea rax, [r10 + 1]
    mov rbx, qword ptr [rsp + 8]
    mov dword ptr [r9 + 0x48], r8d
    mov qword ptr [r9 + 0x40], rax
    ret
    int3 
    int3 
    lea r9, [rcx + 0x50]
    mov r11b, r8b
    mov rax, qword ptr [r9 + 0x408]
    mov r10d, edx
    test rax, rax
    jne 0x14000ad3d
    mov eax, 0x200
    jmp 0x14000ad4a
    mov r9, rax
    mov rax, qword ptr [rcx + 0x450]
    shr rax, 1
    lea rdx, [r9 - 1]
    add rdx, rax
    mov qword ptr [rcx + 0x40], rdx
    mov r8, rdx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jg 0x14000ad64
    test r10d, r10d
    je 0x14000ad95
    dec eax
    mov dword ptr [rcx + 0x30], eax
    mov al, r10b
    and al, 0xf
    shr r10d, 4
    add al, 0x30
    mov r9b, al
    cmp al, 0x39
    jbe 0x14000ad88
    mov al, r11b
    xor al, 1
    shl al, 5
    add al, 7
    add al, r9b
    mov byte ptr [r8], al
    dec qword ptr [rcx + 0x40]
    mov r8, qword ptr [rcx + 0x40]
    jmp 0x14000ad58
    sub edx, dword ptr [rcx + 0x40]
    lea rax, [r8 + 1]
    mov dword ptr [rcx + 0x48], edx
    mov qword ptr [rcx + 0x40], rax
    ret
    lea r8, [rcx + 0x50]
    mov r9, rdx
    mov rax, qword ptr [r8 + 0x408]
    test rax, rax
    jne 0x14000adbe
    mov eax, 0x200
    jmp 0x14000adcb
    mov r8, rax
    mov rax, qword ptr [rcx + 0x450]
    shr rax, 1
    lea rdx, [r8 - 1]
    add rdx, rax
    mov qword ptr [rcx + 0x40], rdx
    mov r8, rdx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jg 0x14000ade5
    test r9, r9
    je 0x14000ae02
    dec eax
    mov dword ptr [rcx + 0x30], eax
    mov al, r9b
    and al, 7
    shr r9, 3
    add al, 0x30
    mov byte ptr [r8], al
    dec qword ptr [rcx + 0x40]
    mov r8, qword ptr [rcx + 0x40]
    jmp 0x14000add9
    sub edx, dword ptr [rcx + 0x40]
    lea rax, [r8 + 1]
    mov dword ptr [rcx + 0x48], edx
    mov qword ptr [rcx + 0x40], rax
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov rax, qword ptr [rcx + 0x458]
    mov r9, rcx
    add rcx, 0x50
    mov bl, r8b
    mov r11, rdx
    test rax, rax
    jne 0x14000ae39
    mov eax, 0x200
    jmp 0x14000ae46
    mov rcx, rax
    mov rax, qword ptr [r9 + 0x450]
    shr rax, 1
    lea r8, [rcx - 1]
    add r8, rax
    mov qword ptr [r9 + 0x40], r8
    mov r10, r8
    mov eax, dword ptr [r9 + 0x30]
    test eax, eax
    jg 0x14000ae61
    test r11, r11
    je 0x14000aeae
    dec eax
    mov dword ptr [r9 + 0x30], eax
    movabs rax, 0xcccccccccccccccd
    mul r11
    shr rdx, 3
    mov al, dl
    shl al, 2
    lea ecx, [rax + rdx]
    add cl, cl
    sub r11b, cl
    add r11b, 0x30
    mov al, r11b
    mov cl, r11b
    mov r11, rdx
    cmp al, 0x39
    jle 0x14000aea1
    mov al, bl
    xor al, 1
    shl al, 5
    add al, 7
    add al, cl
    mov byte ptr [r10], al
    dec qword ptr [r9 + 0x40]
    mov r10, qword ptr [r9 + 0x40]
    jmp 0x14000ae54
    sub r8d, dword ptr [r9 + 0x40]
    lea rax, [r10 + 1]
    mov rbx, qword ptr [rsp + 8]
    mov dword ptr [r9 + 0x48], r8d
    mov qword ptr [r9 + 0x40], rax
    ret
    lea r9, [rcx + 0x50]
    mov r11b, r8b
    mov rax, qword ptr [r9 + 0x408]
    mov r10, rdx
    test rax, rax
    jne 0x14000aee1
    mov eax, 0x200
    jmp 0x14000aeee
    mov r9, rax
    mov rax, qword ptr [rcx + 0x450]
    shr rax, 1
    lea rdx, [r9 - 1]
    add rdx, rax
    mov qword ptr [rcx + 0x40], rdx
    mov r8, rdx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jg 0x14000af08
    test r10, r10
    je 0x14000af39
    dec eax
    mov dword ptr [rcx + 0x30], eax
    mov al, r10b
    and al, 0xf
    shr r10, 4
    add al, 0x30
    mov r9b, al
    cmp al, 0x39
    jbe 0x14000af2c
    mov al, r11b
    xor al, 1
    shl al, 5
    add al, 7
    add al, r9b
    mov byte ptr [r8], al
    dec qword ptr [rcx + 0x40]
    mov r8, qword ptr [rcx + 0x40]
    jmp 0x14000aefc
    sub edx, dword ptr [rcx + 0x40]
    lea rax, [r8 + 1]
    mov dword ptr [rcx + 0x48], edx
    mov qword ptr [rcx + 0x40], rax
    ret
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push rbp
    push r14
    push r15
    lea rbp, [rax - 0x3b8]
    sub rsp, 0x4a0
    mov rax, qword ptr [rip + 0x1e08f]
    xor rax, rsp
    mov qword ptr [rbp + 0x390], rax
    mov rax, qword ptr [rcx]
    mov rbx, rcx
    mov r14, qword ptr [rcx + 8]
    mov r15, qword ptr [rax]
    mov rcx, r15
    call 0x1400114f0
    mov rcx, qword ptr [rbx + 0x18]
    xorps xmm0, xmm0
    mov r9, qword ptr [rbx]
    mov sil, al
    mov rdx, qword ptr [rbx + 0x20]
    mov r11, qword ptr [rcx]
    mov r9, qword ptr [r9]
    mov rdi, qword ptr [rdx]
    mov rcx, qword ptr [rbx + 0x10]
    mov r10, qword ptr [rcx]
    mov rcx, qword ptr [rbx + 8]
    and dword ptr [rsp + 0x40], 0
    and dword ptr [rsp + 0x48], 0
    and dword ptr [rsp + 0x4c], 0
    and dword ptr [rsp + 0x50], 0
    and word ptr [rsp + 0x58], 0
    and dword ptr [rsp + 0x68], 0
    and dword ptr [rbp + 0x388], 0
    mov qword ptr [rsp + 0x28], rcx
    lea rcx, [rsp + 0x20]
    mov byte ptr [rsp + 0x44], 0
    mov byte ptr [rsp + 0x6c], 0
    movdqa xmmword ptr [rbp + 0x370], xmm0
    mov qword ptr [rbp + 0x380], r9
    mov qword ptr [rsp + 0x20], r10
    mov qword ptr [rsp + 0x30], r11
    mov qword ptr [rsp + 0x38], rdi
    call 0x14000b160
    mov rcx, qword ptr [rbp + 0x378]
    mov ebx, eax
    call 0x14000f250
    and qword ptr [rbp + 0x378], 0
    mov r8, r14
    mov rdx, r15
    mov cl, sil
    call 0x1400115b8
    mov eax, ebx
    mov rcx, qword ptr [rbp + 0x390]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x4a0]
    mov rbx, qword ptr [r11 + 0x28]
    mov rsi, qword ptr [r11 + 0x30]
    mov rdi, qword ptr [r11 + 0x38]
    mov rsp, r11
    pop r15
    pop r14
    pop rbp
    ret
    mov rax, qword ptr [rdx]
    mov rdx, qword ptr [rax + 0xf8]
    mov rax, qword ptr [rdx]
    mov r9b, byte ptr [rax]
    mov al, byte ptr [rcx]
    test al, al
    je 0x14000b08e
    mov dl, al
    mov al, dl
    cmp dl, r9b
    je 0x14000b08e
    inc rcx
    mov al, byte ptr [rcx]
    mov dl, al
    test al, al
    jne 0x14000b07c
    inc rcx
    test al, al
    je 0x14000b0cd
    jmp 0x14000b0a0
    sub al, 0x45
    test al, 0xdf
    je 0x14000b0a6
    inc rcx
    mov al, byte ptr [rcx]
    test al, al
    jne 0x14000b097
    mov r8, rcx
    dec rcx
    mov al, byte ptr [rcx]
    cmp al, 0x30
    je 0x14000b0a9
    cmp al, r9b
    lea rdx, [rcx - 1]
    cmovne rdx, rcx
    sub r8, rdx
    mov al, byte ptr [r8 + rdx]
    inc rdx
    mov byte ptr [rdx], al
    test al, al
    jne 0x14000b0c0
    ret
    int3 
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 0x10], rbx
    mov qword ptr [r11 + 0x18], rbp
    mov qword ptr [r11 + 0x20], rsi
    push rdi
    sub rsp, 0x30
    mov rbp, qword ptr [rcx + 8]
    mov rsi, rcx
    mov rax, qword ptr [rcx + 0x10]
    mov rdi, rdx
    lea rcx, [r11 + 8]
    dec rax
    mov qword ptr [r11 - 0x10], rcx
    lea rdx, [r11 - 0x18]
    mov rbx, qword ptr [rbp + 0x2c]
    mov r9b, 1
    mov r8d, 0xa
    mov qword ptr [r11 + 8], rax
    mov rcx, rbp
    mov qword ptr [r11 - 0x18], rax
    call 0x14000a344
    mov dword ptr [rdi], eax
    xor ecx, ecx
    mov rax, qword ptr [rsi + 8]
    cmp byte ptr [rax + 0x30], cl
    je 0x14000b131
    cmp dword ptr [rax + 0x2c], 0x22
    je 0x14000b142
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, qword ptr [rsi + 0x10]
    jb 0x14000b142
    mov qword ptr [rsi + 0x10], rax
    mov cl, 1
    mov rsi, qword ptr [rsp + 0x58]
    mov al, cl
    mov qword ptr [rbp + 0x2c], rbx
    mov rbx, qword ptr [rsp + 0x48]
    mov rbp, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov rax, qword ptr [rcx + 8]
    mov rbx, rcx
    mov rcx, qword ptr [rcx + 0x460]
    or esi, 0xffffffff
    xor ebp, ebp
    test rcx, rcx
    jne 0x14000b1a1
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    jmp 0x14000b4d8
    call 0x14000ccb8
    test al, al
    je 0x14000b310
    mov rcx, qword ptr [rbx + 0x10]
    test rcx, rcx
    jne 0x14000b1e9
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x140009da0
    or eax, 0xffffffff
    jmp 0x14000b312
    mov eax, dword ptr [rbx + 0x468]
    inc eax
    mov dword ptr [rbx + 0x468], eax
    cmp eax, 2
    je 0x14000b491
    lea r14, [rip + 0x132f9]
    mov dword ptr [rbx + 0x48], ebp
    mov byte ptr [rbx + 0x24], bpl
    mov r8b, byte ptr [rcx]
    inc rcx
    jmp 0x14000b46d
    cmp dword ptr [rbx + 0x20], ebp
    jl 0x14000b47e
    lea eax, [r8 - 0x20]
    cmp al, 0x5a
    ja 0x14000b23c
    movsx rax, r8b
    sub rax, 0x20
    and eax, 0x7f
    mov cl, byte ptr [r14 + rax*2 + 1]
    jmp 0x14000b23f
    mov cl, bpl
    movzx eax, byte ptr [rbx + 0x24]
    movzx ecx, cl
    lea rdx, [rax + rcx*8]
    and edx, 0x7f
    movzx eax, byte ptr [r14 + rdx*2]
    mov byte ptr [rbx + 0x24], al
    cmp al, 8
    jae 0x14000b4c5
    mov ecx, eax
    test al, al
    je 0x14000b393
    sub ecx, 1
    je 0x14000b37c
    sub ecx, 1
    je 0x14000b32d
    sub ecx, 1
    je 0x14000b2dc
    sub ecx, 1
    je 0x14000b2d4
    sub ecx, 1
    je 0x14000b2a6
    sub ecx, 1
    je 0x14000b29c
    cmp ecx, 1
    jne 0x14000b310
    mov rcx, rbx
    call 0x14000bf0c
    jmp 0x14000b308
    mov rcx, rbx
    call 0x14000bbfc
    jmp 0x14000b308
    cmp r8b, 0x2a
    je 0x14000b2ba
    lea rdx, [rbx + 0x30]
    mov rcx, rbx
    call 0x14000b0d0
    jmp 0x14000b308
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    test eax, eax
    mov ecx, eax
    cmovs ecx, esi
    mov dword ptr [rbx + 0x30], ecx
    jmp 0x14000b306
    mov dword ptr [rbx + 0x30], ebp
    jmp 0x14000b462
    cmp r8b, 0x2a
    je 0x14000b2e8
    lea rdx, [rbx + 0x2c]
    jmp 0x14000b2b0
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    mov dword ptr [rbx + 0x2c], eax
    test eax, eax
    jns 0x14000b306
    or dword ptr [rbx + 0x28], 4
    neg eax
    mov dword ptr [rbx + 0x2c], eax
    mov al, 1
    test al, al
    jne 0x14000b462
    mov eax, esi
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    cmp r8b, 0x20
    je 0x14000b373
    cmp r8b, 0x23
    je 0x14000b36a
    cmp r8b, 0x2b
    je 0x14000b361
    cmp r8b, 0x2d
    je 0x14000b358
    cmp r8b, 0x30
    jne 0x14000b462
    or dword ptr [rbx + 0x28], 8
    jmp 0x14000b462
    or dword ptr [rbx + 0x28], 4
    jmp 0x14000b462
    or dword ptr [rbx + 0x28], 1
    jmp 0x14000b462
    or dword ptr [rbx + 0x28], 0x20
    jmp 0x14000b462
    or dword ptr [rbx + 0x28], 2
    jmp 0x14000b462
    mov qword ptr [rbx + 0x28], rbp
    mov byte ptr [rbx + 0x38], bpl
    mov dword ptr [rbx + 0x30], esi
    mov dword ptr [rbx + 0x34], ebp
    mov byte ptr [rbx + 0x4c], bpl
    jmp 0x14000b462
    mov rdi, qword ptr [rbx + 8]
    mov byte ptr [rbx + 0x4c], bpl
    cmp byte ptr [rdi + 0x28], bpl
    jne 0x14000b3a9
    mov rcx, rdi
    call 0x14000cc40
    movsx r8, byte ptr [rbx + 0x39]
    mov r9, r8
    cmp r8d, esi
    jl 0x14000b41f
    mov rax, qword ptr [rdi + 0x18]
    mov rcx, qword ptr [rax]
    mov eax, 0x8000
    test word ptr [rcx + r8*2], ax
    je 0x14000b41f
    mov rax, qword ptr [rbx + 0x460]
    mov r8, qword ptr [rbx + 8]
    mov edx, dword ptr [rax + 0x14]
    nop 
    shr edx, 0xc
    test dl, 1
    je 0x14000b3ed
    mov rax, qword ptr [rbx + 0x460]
    cmp qword ptr [rax + 8], rbp
    je 0x14000b400
    mov rdx, qword ptr [rbx + 0x460]
    mov ecx, r9d
    call 0x14001148c
    cmp eax, esi
    je 0x14000b405
    inc dword ptr [rbx + 0x20]
    jmp 0x14000b408
    mov dword ptr [rbx + 0x20], esi
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    inc rax
    mov qword ptr [rbx + 0x10], rax
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    je 0x14000b499
    mov rax, qword ptr [rbx + 0x460]
    mov rdx, qword ptr [rbx + 8]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000b443
    mov rax, qword ptr [rbx + 0x460]
    cmp qword ptr [rax + 8], rbp
    je 0x14000b45a
    movsx ecx, r8b
    mov r8, rdx
    mov rdx, qword ptr [rbx + 0x460]
    call 0x14001148c
    cmp eax, esi
    je 0x14000b45f
    inc dword ptr [rbx + 0x20]
    jmp 0x14000b462
    mov dword ptr [rbx + 0x20], esi
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    lea rcx, [rax + 1]
    mov qword ptr [rbx + 0x10], rcx
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    jne 0x14000b219
    inc dword ptr [rbx + 0x468]
    cmp dword ptr [rbx + 0x468], 2
    jne 0x14000b207
    mov eax, dword ptr [rbx + 0x20]
    jmp 0x14000b312
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x140009da0
    mov rax, qword ptr [rbx + 8]
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], rbp
    xor edx, edx
    xor ecx, ecx
    call 0x140009da0
    jmp 0x14000b310
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov rax, qword ptr [rcx + 8]
    or esi, 0xffffffff
    xor ebp, ebp
    mov rbx, rcx
    cmp qword ptr [rcx + 0x460], rbp
    jne 0x14000b536
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    jmp 0x14000b85d
    mov rcx, qword ptr [rcx + 0x10]
    test rcx, rcx
    jne 0x14000b56d
    mov byte ptr [rax + 0x30], 1
    xor r9d, r9d
    mov dword ptr [rax + 0x2c], 0x16
    xor r8d, r8d
    mov rax, qword ptr [rbx + 8]
    xor edx, edx
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x140009da0
    or eax, 0xffffffff
    jmp 0x14000b803
    mov eax, dword ptr [rbx + 0x468]
    inc eax
    mov dword ptr [rbx + 0x468], eax
    cmp eax, 2
    je 0x14000b800
    lea r14, [rip + 0x13075]
    mov dword ptr [rbx + 0x48], ebp
    mov byte ptr [rbx + 0x24], bpl
    mov dl, byte ptr [rcx]
    inc rcx
    jmp 0x14000b7d3
    cmp dword ptr [rbx + 0x20], ebp
    jl 0x14000b7e2
    lea eax, [rdx - 0x20]
    cmp al, 0x5a
    ja 0x14000b5be
    movsx rax, dl
    sub rax, 0x20
    and eax, 0x7f
    mov cl, byte ptr [r14 + rax*2 + 1]
    jmp 0x14000b5c1
    mov cl, bpl
    movzx eax, cl
    lea rcx, [rax + rax*8]
    movzx eax, byte ptr [rbx + 0x24]
    add rcx, rax
    and ecx, 0x7f
    movzx eax, byte ptr [r14 + rcx*2]
    mov byte ptr [rbx + 0x24], al
    cmp al, 8
    jae 0x14000b84a
    mov ecx, eax
    test al, al
    je 0x14000b6fd
    sub ecx, 1
    je 0x14000b6e6
    sub ecx, 1
    je 0x14000b69c
    sub ecx, 1
    je 0x14000b664
    sub ecx, 1
    je 0x14000b65c
    sub ecx, 1
    je 0x14000b62f
    sub ecx, 1
    je 0x14000b625
    cmp ecx, 1
    jne 0x14000b876
    mov rcx, rbx
    call 0x14000c344
    jmp 0x14000b68f
    mov rcx, rbx
    call 0x14000bd84
    jmp 0x14000b68f
    cmp dl, 0x2a
    je 0x14000b642
    lea rdx, [rbx + 0x30]
    mov rcx, rbx
    call 0x14000b0d0
    jmp 0x14000b68f
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    test eax, eax
    mov ecx, eax
    cmovs ecx, esi
    mov dword ptr [rbx + 0x30], ecx
    jmp 0x14000b68d
    mov dword ptr [rbx + 0x30], ebp
    jmp 0x14000b7c9
    cmp dl, 0x2a
    je 0x14000b66f
    lea rdx, [rbx + 0x2c]
    jmp 0x14000b638
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    mov dword ptr [rbx + 0x2c], eax
    test eax, eax
    jns 0x14000b68d
    or dword ptr [rbx + 0x28], 4
    neg eax
    mov dword ptr [rbx + 0x2c], eax
    mov al, 1
    test al, al
    je 0x14000b876
    jmp 0x14000b7c9
    cmp dl, 0x20
    je 0x14000b6dd
    cmp dl, 0x23
    je 0x14000b6d4
    cmp dl, 0x2b
    je 0x14000b6cb
    cmp dl, 0x2d
    je 0x14000b6c2
    cmp dl, 0x30
    jne 0x14000b7c9
    or dword ptr [rbx + 0x28], 8
    jmp 0x14000b7c9
    or dword ptr [rbx + 0x28], 4
    jmp 0x14000b7c9
    or dword ptr [rbx + 0x28], 1
    jmp 0x14000b7c9
    or dword ptr [rbx + 0x28], 0x20
    jmp 0x14000b7c9
    or dword ptr [rbx + 0x28], 2
    jmp 0x14000b7c9
    mov qword ptr [rbx + 0x28], rbp
    mov byte ptr [rbx + 0x38], bpl
    mov dword ptr [rbx + 0x30], esi
    mov dword ptr [rbx + 0x34], ebp
    mov byte ptr [rbx + 0x4c], bpl
    jmp 0x14000b7c9
    mov rdi, qword ptr [rbx + 8]
    mov byte ptr [rbx + 0x4c], bpl
    cmp byte ptr [rdi + 0x28], bpl
    jne 0x14000b713
    mov rcx, rdi
    call 0x14000cc40
    movsx r8, byte ptr [rbx + 0x39]
    cmp r8d, esi
    jl 0x14000b78a
    mov rax, qword ptr [rdi + 0x18]
    mov rcx, qword ptr [rax]
    mov eax, 0x8000
    test word ptr [rcx + r8*2], ax
    je 0x14000b78a
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000b751
    cmp byte ptr [rcx + 0x18], bpl
    je 0x14000b74c
    inc dword ptr [rbx + 0x20]
    jmp 0x14000b76f
    mov dword ptr [rbx + 0x20], esi
    jmp 0x14000b76f
    inc dword ptr [rbx + 0x20]
    inc qword ptr [rcx + 0x10]
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], r8b
    mov rax, qword ptr [rbx + 0x460]
    inc qword ptr [rax]
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    inc rax
    mov qword ptr [rbx + 0x10], rax
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    je 0x14000b81e
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000b7ab
    cmp byte ptr [rcx + 0x18], bpl
    je 0x14000b7a6
    inc dword ptr [rbx + 0x20]
    jmp 0x14000b7c9
    mov dword ptr [rbx + 0x20], esi
    jmp 0x14000b7c9
    inc dword ptr [rbx + 0x20]
    inc qword ptr [rcx + 0x10]
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], r8b
    mov rax, qword ptr [rbx + 0x460]
    inc qword ptr [rax]
    mov rax, qword ptr [rbx + 0x10]
    mov dl, byte ptr [rax]
    lea rcx, [rax + 1]
    mov qword ptr [rbx + 0x10], rcx
    mov byte ptr [rbx + 0x39], dl
    test dl, dl
    jne 0x14000b59c
    mov al, byte ptr [rbx + 0x24]
    test al, al
    je 0x14000b7ed
    cmp al, 7
    jne 0x14000b84a
    inc dword ptr [rbx + 0x468]
    cmp dword ptr [rbx + 0x468], 2
    jne 0x14000b58b
    mov eax, dword ptr [rbx + 0x20]
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x140009da0
    mov rax, qword ptr [rbx + 8]
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], rbp
    xor edx, edx
    xor ecx, ecx
    call 0x140009da0
    mov eax, esi
    jmp 0x14000b803
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov rax, qword ptr [rcx + 8]
    or esi, 0xffffffff
    xor ebp, ebp
    mov rbx, rcx
    cmp qword ptr [rcx + 0x460], rbp
    jne 0x14000b8ba
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    jmp 0x14000bbdf
    mov rcx, qword ptr [rcx + 0x10]
    test rcx, rcx
    jne 0x14000b8f1
    mov byte ptr [rax + 0x30], 1
    xor r9d, r9d
    mov dword ptr [rax + 0x2c], 0x16
    xor r8d, r8d
    mov rax, qword ptr [rbx + 8]
    xor edx, edx
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x140009da0
    or eax, 0xffffffff
    jmp 0x14000bb85
    mov eax, dword ptr [rbx + 0x468]
    inc eax
    mov dword ptr [rbx + 0x468], eax
    cmp eax, 2
    je 0x14000bb82
    lea r14, [rip + 0x12bf1]
    mov dword ptr [rbx + 0x48], ebp
    mov byte ptr [rbx + 0x24], bpl
    mov r8b, byte ptr [rcx]
    inc rcx
    jmp 0x14000bb5e
    cmp dword ptr [rbx + 0x20], ebp
    jl 0x14000bb6f
    lea eax, [r8 - 0x20]
    cmp al, 0x5a
    ja 0x14000b944
    movsx rax, r8b
    sub rax, 0x20
    and eax, 0x7f
    mov cl, byte ptr [r14 + rax*2 + 1]
    jmp 0x14000b947
    mov cl, bpl
    movzx eax, byte ptr [rbx + 0x24]
    movzx ecx, cl
    lea rdx, [rax + rcx*8]
    and edx, 0x7f
    movzx eax, byte ptr [r14 + rdx*2]
    mov byte ptr [rbx + 0x24], al
    cmp al, 8
    jae 0x14000bbcc
    mov ecx, eax
    test al, al
    je 0x14000ba87
    sub ecx, 1
    je 0x14000ba70
    sub ecx, 1
    je 0x14000ba21
    sub ecx, 1
    je 0x14000b9e8
    sub ecx, 1
    je 0x14000b9e0
    sub ecx, 1
    je 0x14000b9b2
    sub ecx, 1
    je 0x14000b9a8
    cmp ecx, 1
    jne 0x14000bbf8
    mov rcx, rbx
    call 0x14000c344
    jmp 0x14000ba14
    mov rcx, rbx
    call 0x14000bd84
    jmp 0x14000ba14
    cmp r8b, 0x2a
    je 0x14000b9c6
    lea rdx, [rbx + 0x30]
    mov rcx, rbx
    call 0x14000b0d0
    jmp 0x14000ba14
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    test eax, eax
    mov ecx, eax
    cmovs ecx, esi
    mov dword ptr [rbx + 0x30], ecx
    jmp 0x14000ba12
    mov dword ptr [rbx + 0x30], ebp
    jmp 0x14000bb53
    cmp r8b, 0x2a
    je 0x14000b9f4
    lea rdx, [rbx + 0x2c]
    jmp 0x14000b9bc
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov eax, dword ptr [rcx]
    mov dword ptr [rbx + 0x2c], eax
    test eax, eax
    jns 0x14000ba12
    or dword ptr [rbx + 0x28], 4
    neg eax
    mov dword ptr [rbx + 0x2c], eax
    mov al, 1
    test al, al
    je 0x14000bbf8
    jmp 0x14000bb53
    cmp r8b, 0x20
    je 0x14000ba67
    cmp r8b, 0x23
    je 0x14000ba5e
    cmp r8b, 0x2b
    je 0x14000ba55
    cmp r8b, 0x2d
    je 0x14000ba4c
    cmp r8b, 0x30
    jne 0x14000bb53
    or dword ptr [rbx + 0x28], 8
    jmp 0x14000bb53
    or dword ptr [rbx + 0x28], 4
    jmp 0x14000bb53
    or dword ptr [rbx + 0x28], 1
    jmp 0x14000bb53
    or dword ptr [rbx + 0x28], 0x20
    jmp 0x14000bb53
    or dword ptr [rbx + 0x28], 2
    jmp 0x14000bb53
    mov qword ptr [rbx + 0x28], rbp
    mov byte ptr [rbx + 0x38], bpl
    mov dword ptr [rbx + 0x30], esi
    mov dword ptr [rbx + 0x34], ebp
    mov byte ptr [rbx + 0x4c], bpl
    jmp 0x14000bb53
    mov rdi, qword ptr [rbx + 8]
    mov byte ptr [rbx + 0x4c], bpl
    cmp byte ptr [rdi + 0x28], bpl
    jne 0x14000ba9d
    mov rcx, rdi
    call 0x14000cc40
    movsx r8, byte ptr [rbx + 0x39]
    cmp r8d, esi
    jl 0x14000bb14
    mov rax, qword ptr [rdi + 0x18]
    mov rcx, qword ptr [rax]
    mov eax, 0x8000
    test word ptr [rcx + r8*2], ax
    je 0x14000bb14
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000badb
    cmp byte ptr [rcx + 0x18], bpl
    je 0x14000bad6
    inc dword ptr [rbx + 0x20]
    jmp 0x14000baf9
    mov dword ptr [rbx + 0x20], esi
    jmp 0x14000baf9
    inc dword ptr [rbx + 0x20]
    inc qword ptr [rcx + 0x10]
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], r8b
    mov rax, qword ptr [rbx + 0x460]
    inc qword ptr [rax]
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    inc rax
    mov qword ptr [rbx + 0x10], rax
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    je 0x14000bba0
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000bb35
    cmp byte ptr [rcx + 0x18], bpl
    je 0x14000bb30
    inc dword ptr [rbx + 0x20]
    jmp 0x14000bb53
    mov dword ptr [rbx + 0x20], esi
    jmp 0x14000bb53
    inc dword ptr [rbx + 0x20]
    inc qword ptr [rcx + 0x10]
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], r8b
    mov rax, qword ptr [rbx + 0x460]
    inc qword ptr [rax]
    mov rax, qword ptr [rbx + 0x10]
    mov r8b, byte ptr [rax]
    lea rcx, [rax + 1]
    mov qword ptr [rbx + 0x10], rcx
    mov byte ptr [rbx + 0x39], r8b
    test r8b, r8b
    jne 0x14000b921
    inc dword ptr [rbx + 0x468]
    cmp dword ptr [rbx + 0x468], 2
    jne 0x14000b90f
    mov eax, dword ptr [rbx + 0x20]
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x20], rbp
    call 0x140009da0
    mov rax, qword ptr [rbx + 8]
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], rbp
    xor edx, edx
    xor ecx, ecx
    call 0x140009da0
    mov eax, esi
    jmp 0x14000bb85
    sub rsp, 0x38
    mov al, byte ptr [rcx + 0x39]
    cmp al, 0x46
    jne 0x14000bc1d
    test byte ptr [rcx], 8
    jne 0x14000bd7c
    mov byte ptr [rcx + 0x24], 7
    add rsp, 0x38
    jmp 0x14000bf0c
    cmp al, 0x4e
    jne 0x14000bc62
    test byte ptr [rcx], 8
    jne 0x14000bd7c
    mov byte ptr [rcx + 0x24], 8
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x140009da0
    xor al, al
    jmp 0x14000bd7e
    cmp dword ptr [rcx + 0x34], 0
    jne 0x14000bc2e
    cmp al, 0x49
    je 0x14000bd20
    cmp al, 0x4c
    je 0x14000bd17
    cmp al, 0x54
    je 0x14000bd0e
    cmp al, 0x68
    je 0x14000bcf0
    cmp al, 0x6a
    je 0x14000bce4
    cmp al, 0x6c
    je 0x14000bcc0
    cmp al, 0x74
    je 0x14000bcb4
    cmp al, 0x77
    je 0x14000bca8
    cmp al, 0x7a
    jne 0x14000bd7c
    mov dword ptr [rcx + 0x34], 6
    jmp 0x14000bd7c
    mov dword ptr [rcx + 0x34], 0xc
    jmp 0x14000bd7c
    mov dword ptr [rcx + 0x34], 7
    jmp 0x14000bd7c
    mov rax, qword ptr [rcx + 0x10]
    cmp byte ptr [rax], 0x6c
    jne 0x14000bcd7
    inc rax
    mov qword ptr [rcx + 0x10], rax
    mov eax, 4
    jmp 0x14000bcdc
    mov eax, 3
    mov dword ptr [rcx + 0x34], eax
    jmp 0x14000bd7c
    mov dword ptr [rcx + 0x34], 5
    jmp 0x14000bd7c
    mov rax, qword ptr [rcx + 0x10]
    cmp byte ptr [rax], 0x68
    jne 0x14000bd07
    inc rax
    mov qword ptr [rcx + 0x10], rax
    mov eax, 1
    jmp 0x14000bcdc
    mov eax, 2
    jmp 0x14000bcdc
    mov dword ptr [rcx + 0x34], 0xd
    jmp 0x14000bd7c
    mov dword ptr [rcx + 0x34], 8
    jmp 0x14000bd7c
    mov r8, qword ptr [rcx + 0x10]
    mov al, byte ptr [r8]
    cmp al, 0x33
    jne 0x14000bd43
    cmp byte ptr [r8 + 1], 0x32
    jne 0x14000bd43
    lea rax, [r8 + 2]
    mov dword ptr [rcx + 0x34], 0xa
    mov qword ptr [rcx + 0x10], rax
    jmp 0x14000bd7c
    cmp al, 0x36
    jne 0x14000bd5f
    cmp byte ptr [r8 + 1], 0x34
    jne 0x14000bd7c
    lea rax, [r8 + 2]
    mov dword ptr [rcx + 0x34], 0xb
    mov qword ptr [rcx + 0x10], rax
    jmp 0x14000bd7c
    sub al, 0x58
    cmp al, 0x20
    ja 0x14000bd7c
    movabs rdx, 0x120821001
    bt rdx, rax
    jae 0x14000bd7c
    mov dword ptr [rcx + 0x34], 9
    mov al, 1
    add rsp, 0x38
    ret
    int3 
    sub rsp, 0x38
    mov al, byte ptr [rcx + 0x39]
    cmp al, 0x46
    jne 0x14000bda5
    test byte ptr [rcx], 8
    jne 0x14000bf04
    mov byte ptr [rcx + 0x24], 7
    add rsp, 0x38
    jmp 0x14000c344
    cmp al, 0x4e
    jne 0x14000bdea
    test byte ptr [rcx], 8
    jne 0x14000bf04
    mov byte ptr [rcx + 0x24], 8
    mov rax, qword ptr [rcx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rcx + 8]
    xor ecx, ecx
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x140009da0
    xor al, al
    jmp 0x14000bf06
    cmp dword ptr [rcx + 0x34], 0
    jne 0x14000bdb6
    cmp al, 0x49
    je 0x14000bea8
    cmp al, 0x4c
    je 0x14000be9f
    cmp al, 0x54
    je 0x14000be96
    cmp al, 0x68
    je 0x14000be78
    cmp al, 0x6a
    je 0x14000be6c
    cmp al, 0x6c
    je 0x14000be48
    cmp al, 0x74
    je 0x14000be3c
    cmp al, 0x77
    je 0x14000be30
    cmp al, 0x7a
    jne 0x14000bf04
    mov dword ptr [rcx + 0x34], 6
    jmp 0x14000bf04
    mov dword ptr [rcx + 0x34], 0xc
    jmp 0x14000bf04
    mov dword ptr [rcx + 0x34], 7
    jmp 0x14000bf04
    mov rax, qword ptr [rcx + 0x10]
    cmp byte ptr [rax], 0x6c
    jne 0x14000be5f
    inc rax
    mov qword ptr [rcx + 0x10], rax
    mov eax, 4
    jmp 0x14000be64
    mov eax, 3
    mov dword ptr [rcx + 0x34], eax
    jmp 0x14000bf04
    mov dword ptr [rcx + 0x34], 5
    jmp 0x14000bf04
    mov rax, qword ptr [rcx + 0x10]
    cmp byte ptr [rax], 0x68
    jne 0x14000be8f
    inc rax
    mov qword ptr [rcx + 0x10], rax
    mov eax, 1
    jmp 0x14000be64
    mov eax, 2
    jmp 0x14000be64
    mov dword ptr [rcx + 0x34], 0xd
    jmp 0x14000bf04
    mov dword ptr [rcx + 0x34], 8
    jmp 0x14000bf04
    mov r8, qword ptr [rcx + 0x10]
    mov al, byte ptr [r8]
    cmp al, 0x33
    jne 0x14000becb
    cmp byte ptr [r8 + 1], 0x32
    jne 0x14000becb
    lea rax, [r8 + 2]
    mov dword ptr [rcx + 0x34], 0xa
    mov qword ptr [rcx + 0x10], rax
    jmp 0x14000bf04
    cmp al, 0x36
    jne 0x14000bee7
    cmp byte ptr [r8 + 1], 0x34
    jne 0x14000bf04
    lea rax, [r8 + 2]
    mov dword ptr [rcx + 0x34], 0xb
    mov qword ptr [rcx + 0x10], rax
    jmp 0x14000bf04
    sub al, 0x58
    cmp al, 0x20
    ja 0x14000bf04
    movabs rdx, 0x120821001
    bt rdx, rax
    jae 0x14000bf04
    mov dword ptr [rcx + 0x34], 9
    mov al, 1
    add rsp, 0x38
    ret
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rbp
    push rdi
    push r12
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x50
    mov rax, qword ptr [rip + 0x1d0d4]
    xor rax, rsp
    mov qword ptr [rbp - 0x10], rax
    movsx edx, byte ptr [rcx + 0x39]
    mov rbx, rcx
    mov edi, 0x78
    cmp edx, 0x64
    jg 0x14000bfae
    je 0x14000bfd5
    cmp edx, 0x53
    jg 0x14000bf7c
    je 0x14000c018
    sub edx, 0x41
    je 0x14000bf72
    sub edx, 2
    je 0x14000bf98
    sub edx, 2
    je 0x14000bf72
    sub edx, 1
    je 0x14000bf72
    cmp edx, 1
    jne 0x14000c038
    call 0x14000c7c4
    jmp 0x14000c034
    cmp edx, 0x58
    je 0x14000c02d
    cmp edx, 0x5a
    je 0x14000bfa4
    cmp edx, 0x61
    je 0x14000bf72
    cmp edx, 0x63
    jne 0x14000c038
    xor edx, edx
    call 0x14000ca18
    jmp 0x14000c034
    call 0x14000c748
    jmp 0x14000c034
    cmp edx, 0x6f
    jg 0x14000c001
    je 0x14000bfe2
    sub edx, 0x65
    je 0x14000bf72
    sub edx, 1
    je 0x14000bf72
    sub edx, 1
    je 0x14000bf72
    sub edx, 2
    je 0x14000bfd5
    cmp edx, 5
    jne 0x14000c038
    call 0x14000caec
    jmp 0x14000c034
    or dword ptr [rcx + 0x28], 0x10
    xor edx, edx
    call 0x14000a7fc
    jmp 0x14000c034
    mov ecx, dword ptr [rcx + 0x28]
    mov eax, ecx
    shr eax, 5
    test al, 1
    je 0x14000bff5
    bts ecx, 7
    mov dword ptr [rbx + 0x28], ecx
    xor edx, edx
    mov rcx, rbx
    call 0x14000a5f8
    jmp 0x14000c034
    cmp edx, 0x70
    je 0x14000c01f
    cmp edx, 0x73
    je 0x14000c018
    cmp edx, 0x75
    je 0x14000bfd9
    cmp edx, edi
    jne 0x14000c038
    xor edx, edx
    jmp 0x14000c02f
    call 0x14000cba4
    jmp 0x14000c034
    mov dword ptr [rcx + 0x30], 0x10
    mov dword ptr [rcx + 0x34], 0xb
    mov dl, 1
    call 0x14000aa00
    test al, al
    jne 0x14000c03f
    xor al, al
    jmp 0x14000c31e
    cmp byte ptr [rbx + 0x38], 0
    jne 0x14000c31c
    mov edx, dword ptr [rbx + 0x28]
    xor eax, eax
    mov word ptr [rbp - 0x20], ax
    xor esi, esi
    mov byte ptr [rbp - 0x1e], al
    mov eax, edx
    shr eax, 4
    test al, 1
    je 0x14000c08b
    mov eax, edx
    shr eax, 6
    test al, 1
    je 0x14000c06f
    mov byte ptr [rbp - 0x20], 0x2d
    jmp 0x14000c086
    test dl, 1
    je 0x14000c07a
    mov byte ptr [rbp - 0x20], 0x2b
    jmp 0x14000c086
    mov eax, edx
    shr eax, 1
    test al, 1
    je 0x14000c08b
    mov byte ptr [rbp - 0x20], 0x20
    mov esi, 1
    mov cl, byte ptr [rbx + 0x39]
    lea eax, [rcx - 0x58]
    test al, 0xdf
    jne 0x14000c0a3
    mov eax, edx
    shr eax, 5
    test al, 1
    je 0x14000c0a3
    mov r8b, 1
    jmp 0x14000c0a6
    xor r8b, r8b
    lea eax, [rcx - 0x41]
    test al, 0xdf
    sete al
    test r8b, r8b
    jne 0x14000c0b7
    test al, al
    je 0x14000c0d2
    mov byte ptr [rbp + rsi - 0x20], 0x30
    cmp cl, 0x58
    je 0x14000c0c6
    cmp cl, 0x41
    jne 0x14000c0c9
    mov dil, 0x58
    mov byte ptr [rbp + rsi - 0x1f], dil
    add rsi, 2
    mov r15d, dword ptr [rbx + 0x2c]
    sub r15d, esi
    sub r15d, dword ptr [rbx + 0x48]
    test dl, 0xc
    jne 0x14000c142
    mov r14, qword ptr [rbx + 8]
    xor edi, edi
    test r15d, r15d
    jle 0x14000c142
    mov rax, qword ptr [rbx + 0x460]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000c10e
    mov rax, qword ptr [rbx + 0x460]
    cmp qword ptr [rax + 8], 0
    je 0x14000c127
    mov rdx, qword ptr [rbx + 0x460]
    mov r8, r14
    mov ecx, 0x20
    call 0x14001148c
    cmp eax, -1
    je 0x14000c13e
    mov ecx, dword ptr [rbx + 0x20]
    lea eax, [rcx + 1]
    mov dword ptr [rbx + 0x20], eax
    cmp ecx, -2
    je 0x14000c142
    inc edi
    cmp edi, r15d
    jl 0x14000c0ed
    jmp 0x14000c142
    or dword ptr [rbx + 0x20], 0xffffffff
    mov rdx, qword ptr [rbx + 8]
    lea r14, [rbx + 0x460]
    mov rax, qword ptr [r14]
    lea rdi, [rbx + 0x20]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000c16e
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    jne 0x14000c16e
    add dword ptr [rdi], esi
    jmp 0x14000c185
    mov qword ptr [rsp + 0x20], rdx
    mov r9, rdi
    lea rdx, [rbp - 0x20]
    mov r8d, esi
    mov rcx, r14
    call 0x14000cdf8
    mov ecx, dword ptr [rbx + 0x28]
    mov eax, ecx
    shr eax, 3
    test al, 1
    je 0x14000c1ea
    shr ecx, 2
    test cl, 1
    jne 0x14000c1ea
    mov r12, qword ptr [rbx + 8]
    xor esi, esi
    test r15d, r15d
    jle 0x14000c1ea
    mov rax, qword ptr [r14]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000c1bd
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    je 0x14000c1d2
    mov rdx, qword ptr [r14]
    mov r8, r12
    mov ecx, 0x30
    call 0x14001148c
    cmp eax, -1
    je 0x14000c1e7
    mov ecx, dword ptr [rdi]
    lea eax, [rcx + 1]
    mov dword ptr [rdi], eax
    cmp ecx, -2
    je 0x14000c1ea
    inc esi
    cmp esi, r15d
    jl 0x14000c1a4
    jmp 0x14000c1ea
    or dword ptr [rdi], 0xffffffff
    cmp byte ptr [rbx + 0x4c], 0
    je 0x14000c27f
    cmp dword ptr [rbx + 0x48], 0
    jle 0x14000c27f
    mov r12, qword ptr [rbx + 0x40]
    xor esi, esi
    mov rax, qword ptr [rbx + 8]
    lea rdx, [rbp - 0x1c]
    movzx r9d, word ptr [r12]
    lea rcx, [rbp - 0x20]
    and dword ptr [rbp - 0x20], 0
    lea r12, [r12 + 2]
    mov r8d, 6
    mov qword ptr [rsp + 0x20], rax
    call 0x140011124
    test eax, eax
    jne 0x14000c27a
    mov r8d, dword ptr [rbp - 0x20]
    test r8d, r8d
    je 0x14000c27a
    mov rax, qword ptr [r14]
    mov rdx, qword ptr [rbx + 8]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000c25d
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    jne 0x14000c25d
    add dword ptr [rdi], r8d
    jmp 0x14000c271
    mov qword ptr [rsp + 0x20], rdx
    mov r9, rdi
    lea rdx, [rbp - 0x1c]
    mov rcx, r14
    call 0x14000cdf8
    inc esi
    cmp esi, dword ptr [rbx + 0x48]
    jne 0x14000c204
    jmp 0x14000c2bc
    or dword ptr [rdi], 0xffffffff
    jmp 0x14000c2bc
    mov rax, qword ptr [r14]
    mov rdx, qword ptr [rbx + 8]
    mov r8d, dword ptr [rbx + 0x48]
    mov r10, qword ptr [rbx + 0x40]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000c2a9
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    jne 0x14000c2a9
    add dword ptr [rdi], r8d
    jmp 0x14000c2bc
    mov qword ptr [rsp + 0x20], rdx
    mov r9, rdi
    mov rdx, r10
    mov rcx, r14
    call 0x14000cdf8
    cmp dword ptr [rdi], 0
    jl 0x14000c31c
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 2
    test al, 1
    je 0x14000c31c
    mov rsi, qword ptr [rbx + 8]
    xor ebx, ebx
    test r15d, r15d
    jle 0x14000c31c
    mov rax, qword ptr [r14]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000c2ef
    mov rax, qword ptr [r14]
    cmp qword ptr [rax + 8], 0
    je 0x14000c304
    mov rdx, qword ptr [r14]
    mov r8, rsi
    mov ecx, 0x20
    call 0x14001148c
    cmp eax, -1
    je 0x14000c319
    mov ecx, dword ptr [rdi]
    lea eax, [rcx + 1]
    mov dword ptr [rdi], eax
    cmp ecx, -2
    je 0x14000c31c
    inc ebx
    cmp ebx, r15d
    jl 0x14000c2d6
    jmp 0x14000c31c
    or dword ptr [rdi], 0xffffffff
    mov al, 1
    mov rcx, qword ptr [rbp - 0x10]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x50]
    mov rbx, qword ptr [r11 + 0x38]
    mov rsi, qword ptr [r11 + 0x40]
    mov rsp, r11
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rbp
    ret
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    mov qword ptr [rsp + 0x20], rdi
    push rbp
    push r12
    push r13
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x50
    mov rax, qword ptr [rip + 0x1cc96]
    xor rax, rsp
    mov qword ptr [rbp - 0x10], rax
    mov edi, 0x78
    mov rbx, rcx
    movsx ecx, byte ptr [rcx + 0x39]
    lea r13d, [rdi - 0x77]
    cmp ecx, 0x64
    jg 0x14000c3f9
    je 0x14000c423
    cmp ecx, 0x53
    jg 0x14000c3c1
    je 0x14000c46a
    sub ecx, 0x41
    je 0x14000c3b4
    sub ecx, 2
    je 0x14000c3dd
    sub ecx, 2
    je 0x14000c3b4
    sub ecx, r13d
    je 0x14000c3b4
    cmp ecx, r13d
    jne 0x14000c491
    mov rcx, rbx
    call 0x14000c7c4
    jmp 0x14000c48d
    cmp ecx, 0x58
    je 0x14000c482
    cmp ecx, 0x5a
    je 0x14000c3ec
    cmp ecx, 0x61
    je 0x14000c3b4
    cmp ecx, 0x63
    jne 0x14000c491
    xor edx, edx
    mov rcx, rbx
    call 0x14000ca18
    jmp 0x14000c48d
    mov rcx, rbx
    call 0x14000c748
    jmp 0x14000c48d
    cmp ecx, 0x6f
    jg 0x14000c453
    je 0x14000c433
    sub ecx, 0x65
    je 0x14000c3b4
    sub ecx, r13d
    je 0x14000c3b4
    sub ecx, r13d
    je 0x14000c3b4
    sub ecx, 2
    je 0x14000c423
    cmp ecx, 5
    jne 0x14000c491
    mov rcx, rbx
    call 0x14000caec
    jmp 0x14000c48d
    or dword ptr [rbx + 0x28], 0x10
    xor edx, edx
    mov rcx, rbx
    call 0x14000a7fc
    jmp 0x14000c48d
    mov ecx, dword ptr [rbx + 0x28]
    mov eax, ecx
    shr eax, 5
    test r13b, al
    je 0x14000c447
    bts ecx, 7
    mov dword ptr [rbx + 0x28], ecx
    xor edx, edx
    mov rcx, rbx
    call 0x14000a5f8
    jmp 0x14000c48d
    cmp ecx, 0x70
    je 0x14000c474
    cmp ecx, 0x73
    je 0x14000c46a
    cmp ecx, 0x75
    je 0x14000c427
    cmp ecx, edi
    jne 0x14000c491
    xor edx, edx
    jmp 0x14000c485
    mov rcx, rbx
    call 0x14000cba4
    jmp 0x14000c48d
    mov dword ptr [rbx + 0x30], 0x10
    mov dword ptr [rbx + 0x34], 0xb
    mov dl, r13b
    mov rcx, rbx
    call 0x14000aa00
    test al, al
    jne 0x14000c498
    xor al, al
    jmp 0x14000c71b
    cmp byte ptr [rbx + 0x38], 0
    jne 0x14000c718
    mov ecx, dword ptr [rbx + 0x28]
    xor eax, eax
    mov word ptr [rbp - 0x20], ax
    xor edx, edx
    mov byte ptr [rbp - 0x1e], al
    mov eax, ecx
    shr eax, 4
    test r13b, al
    je 0x14000c4e5
    mov eax, ecx
    shr eax, 6
    test r13b, al
    je 0x14000c4ca
    mov byte ptr [rbp - 0x20], 0x2d
    jmp 0x14000c4e2
    test r13b, cl
    je 0x14000c4d5
    mov byte ptr [rbp - 0x20], 0x2b
    jmp 0x14000c4e2
    mov eax, ecx
    shr eax, 1
    test r13b, al
    je 0x14000c4e5
    mov byte ptr [rbp - 0x20], 0x20
    mov rdx, r13
    mov r8b, byte ptr [rbx + 0x39]
    lea eax, [r8 - 0x58]
    test al, 0xdf
    jne 0x14000c500
    mov eax, ecx
    shr eax, 5
    test r13b, al
    je 0x14000c500
    mov r9b, r13b
    jmp 0x14000c503
    xor r9b, r9b
    lea eax, [r8 - 0x41]
    test al, 0xdf
    sete al
    test r9b, r9b
    jne 0x14000c515
    test al, al
    je 0x14000c532
    mov byte ptr [rbp + rdx - 0x20], 0x30
    cmp r8b, 0x58
    je 0x14000c526
    cmp r8b, 0x41
    jne 0x14000c529
    mov dil, 0x58
    mov byte ptr [rbp + rdx - 0x1f], dil
    add rdx, 2
    mov esi, dword ptr [rbx + 0x2c]
    sub esi, edx
    sub esi, dword ptr [rbx + 0x48]
    test cl, 0xc
    jne 0x14000c5a4
    xor r9d, r9d
    test esi, esi
    jle 0x14000c5a4
    mov r8d, dword ptr [rbx + 0x20]
    mov rcx, qword ptr [rbx + 0x460]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000c570
    cmp byte ptr [rcx + 0x18], 0
    je 0x14000c566
    inc r8d
    jmp 0x14000c56a
    or r8d, 0xffffffff
    mov dword ptr [rbx + 0x20], r8d
    jmp 0x14000c592
    lea eax, [r8 + 1]
    mov dword ptr [rbx + 0x20], eax
    add qword ptr [rcx + 0x10], r13
    mov rax, qword ptr [rbx + 0x460]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], 0x20
    mov rax, qword ptr [rbx + 0x460]
    add qword ptr [rax], r13
    mov r8d, dword ptr [rbx + 0x20]
    cmp r8d, -1
    je 0x14000c5a4
    add r9d, r13d
    cmp r9d, esi
    jl 0x14000c54a
    mov rax, qword ptr [rbx + 8]
    lea rdi, [rbx + 0x20]
    mov r8d, edx
    mov qword ptr [rsp + 0x20], rax
    lea r14, [rbx + 0x460]
    mov r9, rdi
    mov rcx, r14
    lea rdx, [rbp - 0x20]
    call 0x14000cd54
    mov ecx, dword ptr [rbx + 0x28]
    mov eax, ecx
    shr eax, 3
    test r13b, al
    je 0x14000c62d
    shr ecx, 2
    test r13b, cl
    jne 0x14000c62d
    xor r8d, r8d
    test esi, esi
    jle 0x14000c62d
    mov edx, dword ptr [rdi]
    mov rcx, qword ptr [r14]
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000c606
    cmp byte ptr [rcx + 0x18], 0
    je 0x14000c5ff
    inc edx
    jmp 0x14000c602
    or edx, 0xffffffff
    mov dword ptr [rdi], edx
    jmp 0x14000c61e
    lea eax, [rdx + 1]
    mov dword ptr [rdi], eax
    add qword ptr [rcx + 0x10], r13
    mov rax, qword ptr [r14]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], 0x30
    mov rax, qword ptr [r14]
    add qword ptr [rax], r13
    mov edx, dword ptr [rdi]
    cmp edx, -1
    je 0x14000c62d
    add r8d, r13d
    cmp r8d, esi
    jl 0x14000c5e8
    cmp byte ptr [rbx + 0x4c], 0
    je 0x14000c69f
    cmp dword ptr [rbx + 0x48], 0
    jle 0x14000c69f
    mov r12, qword ptr [rbx + 0x40]
    xor r15d, r15d
    mov rax, qword ptr [rbx + 8]
    lea rdx, [rbp - 0x1c]
    movzx r9d, word ptr [r12]
    lea rcx, [rbp - 0x20]
    and dword ptr [rbp - 0x20], 0
    lea r12, [r12 + 2]
    mov r8d, 6
    mov qword ptr [rsp + 0x20], rax
    call 0x140011124
    test eax, eax
    jne 0x14000c69a
    mov r8d, dword ptr [rbp - 0x20]
    test r8d, r8d
    je 0x14000c69a
    mov rax, qword ptr [rbx + 8]
    lea rdx, [rbp - 0x1c]
    mov r9, rdi
    mov qword ptr [rsp + 0x20], rax
    mov rcx, r14
    call 0x14000cd54
    add r15d, r13d
    cmp r15d, dword ptr [rbx + 0x48]
    jne 0x14000c640
    jmp 0x14000c6bb
    or dword ptr [rdi], 0xffffffff
    jmp 0x14000c6bb
    mov rax, qword ptr [rbx + 8]
    mov r9, rdi
    mov r8d, dword ptr [rbx + 0x48]
    mov rcx, r14
    mov rdx, qword ptr [rbx + 0x40]
    mov qword ptr [rsp + 0x20], rax
    call 0x14000cd54
    mov ecx, dword ptr [rdi]
    test ecx, ecx
    js 0x14000c718
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 2
    test r13b, al
    je 0x14000c718
    xor r8d, r8d
    test esi, esi
    jle 0x14000c718
    mov rdx, qword ptr [r14]
    mov rax, qword ptr [rdx + 8]
    cmp qword ptr [rdx + 0x10], rax
    jne 0x14000c6f1
    cmp byte ptr [rdx + 0x18], 0
    je 0x14000c6ea
    inc ecx
    jmp 0x14000c6ed
    or ecx, 0xffffffff
    mov dword ptr [rdi], ecx
    jmp 0x14000c709
    lea eax, [rcx + 1]
    mov dword ptr [rdi], eax
    add qword ptr [rdx + 0x10], r13
    mov rax, qword ptr [r14]
    mov rcx, qword ptr [rax]
    mov byte ptr [rcx], 0x20
    mov rax, qword ptr [r14]
    add qword ptr [rax], r13
    mov ecx, dword ptr [rdi]
    cmp ecx, -1
    je 0x14000c718
    add r8d, r13d
    cmp r8d, esi
    jl 0x14000c6d3
    mov al, r13b
    mov rcx, qword ptr [rbp - 0x10]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x50]
    mov rbx, qword ptr [r11 + 0x38]
    mov rsi, qword ptr [r11 + 0x40]
    mov rdi, qword ptr [r11 + 0x48]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov rdx, qword ptr [rcx + 0x18]
    lea rax, [rdx + 8]
    mov qword ptr [rcx + 0x18], rax
    mov r9, qword ptr [rdx]
    test r9, r9
    je 0x14000c7aa
    mov r10, qword ptr [r9 + 8]
    test r10, r10
    je 0x14000c7aa
    mov edx, dword ptr [rcx + 0x34]
    mov r8b, byte ptr [rcx + 0x39]
    sub edx, 2
    je 0x14000c792
    sub edx, 1
    je 0x14000c78e
    cmp edx, 9
    je 0x14000c78e
    cmp dword ptr [rcx + 0x34], 0xd
    je 0x14000c792
    sub r8b, 0x63
    test r8b, 0xef
    setne al
    jmp 0x14000c794
    mov al, 1
    jmp 0x14000c794
    xor al, al
    mov qword ptr [rcx + 0x40], r10
    test al, al
    movzx edx, word ptr [r9]
    mov eax, edx
    je 0x14000c7ba
    mov byte ptr [rcx + 0x4c], 1
    shr eax, 1
    jmp 0x14000c7be
    lea rdx, [rip + 0x11f5f]
    mov eax, 6
    mov qword ptr [rcx + 0x40], rdx
    mov byte ptr [rcx + 0x4c], 0
    mov dword ptr [rcx + 0x48], eax
    mov al, 1
    ret
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rbp
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    sub rsp, 0x50
    or dword ptr [rcx + 0x28], 0x10
    mov rbx, rcx
    mov eax, dword ptr [rcx + 0x30]
    test eax, eax
    jns 0x14000c7fc
    mov al, byte ptr [rcx + 0x39]
    sub al, 0x41
    and al, 0xdf
    neg al
    sbb eax, eax
    and eax, 0xfffffff9
    add eax, 0xd
    mov dword ptr [rcx + 0x30], eax
    jmp 0x14000c816
    jne 0x14000c816
    cmp byte ptr [rcx + 0x39], 0x67
    je 0x14000c80a
    cmp byte ptr [rcx + 0x39], 0x47
    jne 0x14000c816
    mov dword ptr [rcx + 0x30], 1
    mov eax, 1
    mov r8, qword ptr [rcx + 8]
    lea rdi, [rcx + 0x50]
    add eax, 0x15d
    mov rcx, rdi
    movsxd rdx, eax
    call 0x14000a29c
    mov r8d, 0x200
    test al, al
    jne 0x14000c85c
    cmp qword ptr [rbx + 0x458], 0
    jne 0x14000c847
    mov eax, r8d
    jmp 0x14000c851
    mov rax, qword ptr [rbx + 0x450]
    shr rax, 1
    lea edx, [rax - 0x15d]
    mov dword ptr [rbx + 0x30], edx
    jmp 0x14000c85f
    mov edx, dword ptr [rbx + 0x30]
    mov rax, qword ptr [rdi + 0x408]
    test rax, rax
    cmove rax, rdi
    mov qword ptr [rbx + 0x40], rax
    xor eax, eax
    mov rcx, qword ptr [rbx + 0x18]
    mov qword ptr [rsp + 0x60], rax
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov r10, qword ptr [rbx + 0x458]
    movsd xmm0, qword ptr [rcx]
    mov r11, qword ptr [rbx + 8]
    mov rsi, qword ptr [rbx]
    movsx ebp, byte ptr [rbx + 0x39]
    movsd qword ptr [rsp + 0x60], xmm0
    test r10, r10
    jne 0x14000c8b1
    lea r9, [rdi + 0x200]
    mov rcx, r8
    jmp 0x14000c8d5
    mov r9, qword ptr [rdi + 0x400]
    mov rdi, r10
    mov rcx, qword ptr [rbx + 0x450]
    mov r8, qword ptr [rbx + 0x450]
    shr r9, 1
    add r9, r10
    shr rcx, 1
    shr r8, 1
    mov qword ptr [rsp + 0x48], r11
    mov dword ptr [rsp + 0x40], 1
    mov qword ptr [rsp + 0x38], rsi
    mov dword ptr [rsp + 0x30], edx
    mov rdx, rdi
    mov dword ptr [rsp + 0x28], ebp
    mov qword ptr [rsp + 0x20], rcx
    lea rcx, [rsp + 0x60]
    call 0x140010e3c
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 5
    test al, 1
    je 0x14000c987
    cmp dword ptr [rbx + 0x30], 0
    jne 0x14000c987
    mov rdi, qword ptr [rbx + 8]
    cmp byte ptr [rdi + 0x28], 0
    jne 0x14000c923
    mov rcx, rdi
    call 0x14000cc40
    mov rcx, qword ptr [rbx + 0x40]
    mov r9, qword ptr [rdi + 0x18]
    movzx r8d, byte ptr [rcx]
    mov rdx, qword ptr [r9 + 0x110]
    cmp byte ptr [r8 + rdx], 0x65
    je 0x14000c94e
    mov rax, qword ptr [r9]
    inc rcx
    movzx r8d, byte ptr [rcx]
    test byte ptr [rax + r8*2], 4
    jne 0x14000c940
    movzx eax, r8b
    cmp byte ptr [rax + rdx], 0x78
    jne 0x14000c95c
    mov r8b, byte ptr [rcx + 2]
    mov rax, qword ptr [r9 + 0xf8]
    lea rdx, [rcx + 2]
    cmovne rdx, rcx
    mov rcx, qword ptr [rax]
    mov al, byte ptr [rcx]
    mov byte ptr [rdx], al
    inc rdx
    mov al, byte ptr [rdx]
    mov cl, r8b
    mov byte ptr [rdx], r8b
    inc rdx
    mov r8b, al
    test cl, cl
    jne 0x14000c975
    mov al, byte ptr [rbx + 0x39]
    sub al, 0x47
    test al, 0xdf
    jne 0x14000c9b9
    mov eax, dword ptr [rbx + 0x28]
    shr eax, 5
    test al, 1
    jne 0x14000c9b9
    mov rdi, qword ptr [rbx + 8]
    cmp byte ptr [rdi + 0x28], 0
    jne 0x14000c9ac
    mov rcx, rdi
    call 0x14000cc40
    mov rcx, qword ptr [rbx + 0x40]
    lea rdx, [rdi + 0x18]
    call 0x14000b064
    mov rcx, qword ptr [rbx + 0x40]
    mov al, byte ptr [rcx]
    cmp al, 0x2d
    jne 0x14000c9d0
    or dword ptr [rbx + 0x28], 0x40
    inc rcx
    mov qword ptr [rbx + 0x40], rcx
    mov al, byte ptr [rcx]
    sub al, 0x49
    cmp al, 0x25
    ja 0x14000c9ee
    movabs rdx, 0x2100000021
    bt rdx, rax
    jae 0x14000c9ee
    and dword ptr [rbx + 0x28], 0xfffffff7
    mov byte ptr [rbx + 0x39], 0x73
    or rdx, 0xffffffffffffffff
    inc rdx
    cmp byte ptr [rcx + rdx], 0
    jne 0x14000c9f2
    mov rbp, qword ptr [rsp + 0x70]
    mov al, 1
    mov rsi, qword ptr [rsp + 0x78]
    mov dword ptr [rbx + 0x48], edx
    mov rbx, qword ptr [rsp + 0x68]
    add rsp, 0x50
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x30
    mov dl, byte ptr [rcx + 0x39]
    mov rbx, rcx
    mov ecx, dword ptr [rcx + 0x34]
    sub ecx, 2
    je 0x14000caa2
    sub ecx, 1
    je 0x14000ca4d
    cmp ecx, 9
    je 0x14000ca4d
    cmp dword ptr [rbx + 0x34], 0xd
    je 0x14000caa2
    sub dl, 0x63
    test dl, 0xef
    setne al
    test al, al
    je 0x14000caa2
    mov rcx, qword ptr [rbx + 0x18]
    lea rax, [rcx + 8]
    mov qword ptr [rbx + 0x18], rax
    mov rdx, qword ptr [rbx + 0x458]
    mov rax, qword ptr [rbx + 8]
    movzx r9d, word ptr [rcx]
    test rdx, rdx
    jne 0x14000ca7c
    lea rdx, [rbx + 0x50]
    mov r8d, 0x200
    mov rdi, rdx
    jmp 0x14000ca8a
    mov r8, qword ptr [rbx + 0x450]
    lea rdi, [rbx + 0x50]
    shr r8, 1
    lea rcx, [rbx + 0x48]
    mov qword ptr [rsp + 0x20], rax
    call 0x140011124
    test eax, eax
    je 0x14000cacb
    mov byte ptr [rbx + 0x38], 1
    jmp 0x14000cacb
    mov rcx, qword ptr [rbx + 0x18]
    lea rdi, [rbx + 0x50]
    mov rdx, qword ptr [rdi + 0x408]
    test rdx, rdx
    lea rax, [rcx + 8]
    cmove rdx, rdi
    mov qword ptr [rbx + 0x18], rax
    mov al, byte ptr [rcx]
    mov byte ptr [rdx], al
    mov dword ptr [rbx + 0x48], 1
    mov rcx, qword ptr [rdi + 0x408]
    mov al, 1
    test rcx, rcx
    cmove rcx, rdi
    mov qword ptr [rbx + 0x40], rcx
    mov rbx, qword ptr [rsp + 0x40]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x30
    mov rdx, qword ptr [rcx + 0x18]
    mov rbx, rcx
    lea rax, [rdx + 8]
    mov qword ptr [rcx + 0x18], rax
    mov rdi, qword ptr [rdx]
    call 0x140011474
    test eax, eax
    jne 0x14000cb42
    mov rax, qword ptr [rbx + 8]
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], 0x16
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rsp + 0x28], rax
    and qword ptr [rsp + 0x20], 0
    call 0x140009da0
    xor al, al
    jmp 0x14000cb90
    mov ecx, dword ptr [rbx + 0x34]
    cmp ecx, 5
    jg 0x14000cb6a
    je 0x14000cb83
    test ecx, ecx
    je 0x14000cb9b
    sub ecx, 1
    je 0x14000cb63
    sub ecx, 1
    jne 0x14000cb79
    movzx eax, word ptr [rbx + 0x20]
    mov word ptr [rdi], ax
    jmp 0x14000cb8a
    mov al, byte ptr [rbx + 0x20]
    mov byte ptr [rdi], al
    jmp 0x14000cb8a
    sub ecx, 6
    je 0x14000cb83
    sub ecx, 1
    je 0x14000cb83
    sub ecx, 2
    je 0x14000cb83
    sub ecx, 1
    je 0x14000cb9b
    cmp ecx, 1
    jne 0x14000cb11
    movsxd rax, dword ptr [rbx + 0x20]
    mov qword ptr [rdi], rax
    mov byte ptr [rbx + 0x38], 1
    mov al, 1
    mov rbx, qword ptr [rsp + 0x40]
    add rsp, 0x30
    pop rdi
    ret
    mov eax, dword ptr [rbx + 0x20]
    mov dword ptr [rdi], eax
    jmp 0x14000cb8a
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rdx, qword ptr [rcx + 0x18]
    mov rbx, rcx
    lea rax, [rdx + 8]
    mov qword ptr [rcx + 0x18], rax
    mov eax, 0x7fffffff
    mov rcx, qword ptr [rdx]
    mov r8d, dword ptr [rbx + 0x30]
    cmp r8d, -1
    mov edx, dword ptr [rbx + 0x34]
    mov r9b, byte ptr [rbx + 0x39]
    cmove r8d, eax
    mov qword ptr [rbx + 0x40], rcx
    sub edx, 2
    je 0x14000cc1a
    sub edx, 1
    je 0x14000cbfc
    cmp edx, 9
    je 0x14000cbfc
    cmp dword ptr [rbx + 0x34], 0xd
    je 0x14000cc1a
    sub r9b, 0x63
    test r9b, 0xef
    setne al
    test al, al
    je 0x14000cc1a
    test rcx, rcx
    jne 0x14000cc0c
    lea rcx, [rip + 0x11af8]
    mov qword ptr [rbx + 0x40], rcx
    movsxd rdx, r8d
    mov byte ptr [rbx + 0x4c], 1
    call 0x140010078
    jmp 0x14000cc32
    test rcx, rcx
    jne 0x14000cc2a
    lea rcx, [rip + 0x11aea]
    mov qword ptr [rbx + 0x40], rcx
    movsxd rdx, r8d
    call 0x14000ff28
    mov dword ptr [rbx + 0x48], eax
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov rdi, rcx
    call 0x140009a80
    lea rdx, [rdi + 0x18]
    mov rcx, rax
    mov rsi, rax
    mov r8, qword ptr [rax + 0x90]
    mov qword ptr [rdx], r8
    mov r8, qword ptr [rax + 0x88]
    mov qword ptr [rdi + 0x20], r8
    mov r8, qword ptr [rdi + 8]
    call 0x140010284
    mov r8, qword ptr [rdi + 8]
    lea rdx, [rdi + 0x20]
    mov rcx, rsi
    call 0x1400102f0
    mov eax, dword ptr [rsi + 0x3a8]
    test al, 2
    jne 0x14000cca6
    or eax, 2
    mov dword ptr [rsi + 0x3a8], eax
    mov byte ptr [rdi + 0x28], 2
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    sub rsp, 0x28
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 0xc
    test al, 1
    jne 0x14000cd4c
    call 0x14001144c
    movsxd r9, eax
    lea r10, [rip + 0x1c646]
    lea r11, [rip + 0x1d9cf]
    mov r8, r9
    lea eax, [r9 + 2]
    cmp eax, 1
    jbe 0x14000cd08
    mov rax, r9
    mov rdx, r9
    sar rdx, 6
    and eax, 0x3f
    lea rcx, [rax + rax*8]
    mov rax, qword ptr [r11 + rdx*8]
    lea rdx, [rax + rcx*8]
    jmp 0x14000cd0b
    mov rdx, r10
    cmp byte ptr [rdx + 0x39], 0
    jne 0x14000cd38
    lea eax, [r9 + 2]
    cmp eax, 1
    jbe 0x14000cd31
    mov rax, r8
    sar rax, 6
    and r8d, 0x3f
    mov rax, qword ptr [r11 + rax*8]
    lea rcx, [r8 + r8*8]
    lea r10, [rax + rcx*8]
    test byte ptr [r10 + 0x3d], 1
    je 0x14000cd4c
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    xor al, al
    jmp 0x14000cd4e
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    test r8d, r8d
    je 0x14000cdf6
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x20
    mov r14, rcx
    movsxd rdi, r8d
    mov rcx, qword ptr [rcx]
    mov rbx, r9
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx + 0x10], rax
    jne 0x14000cd9d
    cmp byte ptr [rcx + 0x18], 0
    je 0x14000cd97
    add dword ptr [r9], edi
    jmp 0x14000cddc
    or dword ptr [r9], 0xffffffff
    jmp 0x14000cddc
    sub rax, qword ptr [rcx + 0x10]
    mov rsi, rdi
    mov rcx, qword ptr [rcx]
    cmp rax, rdi
    cmovb rsi, rax
    mov r8, rsi
    call 0x14001af90
    mov rax, qword ptr [r14]
    add qword ptr [rax], rsi
    mov rax, qword ptr [r14]
    add qword ptr [rax + 0x10], rsi
    mov rax, qword ptr [r14]
    cmp byte ptr [rax + 0x18], 0
    je 0x14000cdd0
    add dword ptr [rbx], edi
    jmp 0x14000cddc
    cmp rsi, rdi
    je 0x14000cdda
    or dword ptr [rbx], 0xffffffff
    jmp 0x14000cddc
    add dword ptr [rbx], esi
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop r14
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    mov rsi, qword ptr [rsp + 0x60]
    mov rdi, r9
    movsxd rbp, r8d
    mov r14, rdx
    add rbp, rdx
    mov r15, rcx
    cmp rdx, rbp
    mov rbx, qword ptr [rsi + 0x2c]
    je 0x14000cea7
    mov rax, qword ptr [r15]
    movsx edx, byte ptr [r14]
    mov ecx, dword ptr [rax + 0x14]
    nop 
    shr ecx, 0xc
    test cl, 1
    je 0x14000ce4a
    mov rax, qword ptr [r15]
    cmp qword ptr [rax + 8], 0
    je 0x14000ce95
    mov ecx, edx
    mov r8, rsi
    mov rdx, qword ptr [r15]
    call 0x14001148c
    mov rcx, qword ptr [r15]
    cmp eax, -1
    jne 0x14000ce95
    cmp byte ptr [rsi + 0x30], 0
    je 0x14000cea4
    cmp dword ptr [rsi + 0x2c], 0x2a
    jne 0x14000cea4
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 0xc
    test al, 1
    je 0x14000ce80
    mov rax, qword ptr [r15]
    cmp qword ptr [rax + 8], 0
    je 0x14000ce95
    mov rdx, qword ptr [r15]
    mov r8, rsi
    mov ecx, 0x3f
    call 0x14001148c
    cmp eax, -1
    je 0x14000ce99
    inc dword ptr [rdi]
    jmp 0x14000ce9c
    or dword ptr [rdi], 0xffffffff
    inc r14
    cmp r14, rbp
    jmp 0x14000ce2b
    or dword ptr [rdi], 0xffffffff
    mov rbp, qword ptr [rsp + 0x48]
    mov qword ptr [rsi + 0x2c], rbx
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    push rbp
    push rbx
    push rdi
    lea rbp, [rsp - 0x3f]
    sub rsp, 0xb0
    and qword ptr [rbp - 0x41], 0
    mov byte ptr [rbp - 0x31], 0
    mov byte ptr [rbp - 0x19], 0
    mov byte ptr [rbp - 0x11], 0
    mov byte ptr [rbp - 9], 0
    test r9, r9
    je 0x14000cef4
    movups xmm0, xmmword ptr [r9]
    jmp 0x14000cf04
    cmp dword ptr [rip + 0x1d5b5], 0
    jne 0x14000cf0d
    movups xmm0, xmmword ptr [rip + 0x1c3f4]
    mov byte ptr [rbp - 0x19], 1
    movdqu xmmword ptr [rbp - 0x29], xmm0
    mov rax, qword ptr [rbp + 0x7f]
    mov qword ptr [rbp + 0x77], rax
    mov qword ptr [rbp + 0x6f], r8
    mov qword ptr [rbp + 0x5f], rdx
    mov qword ptr [rbp + 0x67], rcx
    test rdx, rdx
    jne 0x14000cf54
    lea rax, [rbp - 0x41]
    mov byte ptr [rbp - 0x11], 1
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    and qword ptr [rsp + 0x20], 0
    xor r8d, r8d
    xor edx, edx
    mov dword ptr [rbp - 0x15], 0x16
    xor ecx, ecx
    call 0x140009da0
    or edi, 0xffffffff
    jmp 0x14000cfa0
    test r8, r8
    je 0x14000cf26
    lea rax, [rbp + 0x5f]
    mov qword ptr [rbp - 1], rdx
    mov qword ptr [rbp + 0xf], rax
    lea r9, [rbp - 1]
    lea rax, [rbp - 0x41]
    mov qword ptr [rbp + 7], rdx
    mov qword ptr [rbp + 0x17], rax
    lea r8, [rbp + 0xf]
    lea rax, [rbp + 0x67]
    mov qword ptr [rbp + 0x1f], rax
    lea rdx, [rbp + 7]
    lea rax, [rbp + 0x6f]
    mov qword ptr [rbp + 0x27], rax
    lea rcx, [rbp + 0x7f]
    lea rax, [rbp + 0x77]
    mov qword ptr [rbp + 0x2f], rax
    call 0x14000a0ac
    mov edi, eax
    cmp byte ptr [rbp - 0x19], 2
    jne 0x14000cfb1
    mov rcx, qword ptr [rbp - 0x41]
    and dword ptr [rcx + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x11], 0
    je 0x14000cfc6
    mov ebx, dword ptr [rbp - 0x15]
    lea rcx, [rbp - 0x41]
    call 0x140009a80
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 9], 0
    je 0x14000cfdb
    mov ebx, dword ptr [rbp - 0xd]
    lea rcx, [rbp - 0x41]
    call 0x140009a80
    mov dword ptr [rax + 0x24], ebx
    mov eax, edi
    add rsp, 0xb0
    pop rdi
    pop rbx
    pop rbp
    ret
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r14
    push r15
    lea rbp, [rsp - 0x410]
    sub rsp, 0x510
    mov rax, qword ptr [rip + 0x1bff7]
    xor rax, rsp
    mov qword ptr [rbp + 0x400], rax
    mov rax, qword ptr [rbp + 0x470]
    xor r12d, r12d
    mov qword ptr [rsp + 0x50], r12
    mov rbx, r8
    mov byte ptr [rsp + 0x60], r12b
    mov rsi, rdx
    mov byte ptr [rsp + 0x78], r12b
    mov r15, rcx
    mov byte ptr [rbp - 0x80], r12b
    mov byte ptr [rbp - 0x78], r12b
    test rax, rax
    je 0x14000d047
    movups xmm0, xmmword ptr [rax]
    jmp 0x14000d057
    cmp dword ptr [rip + 0x1d462], r12d
    jne 0x14000d062
    movups xmm0, xmmword ptr [rip + 0x1c2a1]
    mov byte ptr [rsp + 0x78], 1
    movdqu xmmword ptr [rsp + 0x68], xmm0
    test r9, r9
    jne 0x14000d099
    lea rax, [rsp + 0x50]
    mov byte ptr [rbp - 0x80], 1
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], r12
    xor edx, edx
    mov dword ptr [rsp + 0x7c], 0x16
    xor ecx, ecx
    call 0x140009da0
    or edi, 0xffffffff
    jmp 0x14000d1d6
    test rbx, rbx
    je 0x14000d0a3
    test rsi, rsi
    je 0x14000d067
    mov r14, r15
    mov dword ptr [rsp + 0x49], r12d
    mov word ptr [rsp + 0x4d], r12w
    mov byte ptr [rsp + 0x4f], r12b
    mov qword ptr [rsp + 0x30], rsi
    mov qword ptr [rsp + 0x38], rbx
    mov qword ptr [rsp + 0x40], r12
    and r14d, 2
    jne 0x14000d0d5
    mov byte ptr [rsp + 0x48], r12b
    test rsi, rsi
    jne 0x14000d0da
    mov byte ptr [rsp + 0x48], 1
    lea rax, [rsp + 0x50]
    mov dword ptr [rbp - 0x50], r12d
    mov qword ptr [rbp - 0x68], rax
    lea rcx, [rbp - 0x70]
    lea rax, [rsp + 0x30]
    mov byte ptr [rbp - 0x4c], r12b
    mov qword ptr [rbp + 0x3f0], rax
    xorps xmm0, xmm0
    mov rax, qword ptr [rbp + 0x478]
    mov qword ptr [rbp - 0x58], rax
    mov qword ptr [rbp - 0x48], r12
    mov dword ptr [rbp - 0x40], r12d
    mov word ptr [rbp - 0x38], r12w
    mov dword ptr [rbp - 0x28], r12d
    mov byte ptr [rbp - 0x24], r12b
    movdqa xmmword ptr [rbp + 0x3e0], xmm0
    mov qword ptr [rbp - 0x70], r15
    mov qword ptr [rbp - 0x60], r9
    mov dword ptr [rbp + 0x3f8], r12d
    call 0x14000b87c
    movsxd rdi, eax
    test rsi, rsi
    je 0x14000d1ca
    test r15b, 1
    je 0x14000d17b
    test rbx, rbx
    jne 0x14000d166
    test eax, eax
    je 0x14000d166
    mov rcx, qword ptr [rbp + 0x3e8]
    call 0x14000f250
    jmp 0x14000d091
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rbx
    jne 0x14000d1c6
    test edi, edi
    js 0x14000d1ca
    cmp rdi, rbx
    jbe 0x14000d1ca
    jmp 0x14000d155
    test r14, r14
    je 0x14000d19f
    test rbx, rbx
    je 0x14000d1ca
    test eax, eax
    jns 0x14000d18e
    mov byte ptr [rsi], r12b
    jmp 0x14000d1ca
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rbx
    jne 0x14000d1c6
    mov byte ptr [rbx + rsi - 1], r12b
    jmp 0x14000d1ca
    test rbx, rbx
    je 0x14000d155
    mov rax, qword ptr [rsp + 0x40]
    cmp rax, rbx
    jne 0x14000d1c6
    mov rcx, qword ptr [rbp + 0x3e8]
    mov byte ptr [rbx + rsi - 1], r12b
    call 0x14000f250
    mov edi, 0xfffffffe
    jmp 0x14000d1d6
    mov byte ptr [rax + rsi], r12b
    mov rcx, qword ptr [rbp + 0x3e8]
    call 0x14000f250
    cmp byte ptr [rsp + 0x78], 2
    jne 0x14000d1e9
    mov rax, qword ptr [rsp + 0x50]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x80], r12b
    je 0x14000d200
    mov ebx, dword ptr [rsp + 0x7c]
    lea rcx, [rsp + 0x50]
    call 0x140009a80
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 0x78], r12b
    je 0x14000d216
    mov ebx, dword ptr [rbp - 0x7c]
    lea rcx, [rsp + 0x50]
    call 0x140009a80
    mov dword ptr [rax + 0x24], ebx
    mov eax, edi
    mov rcx, qword ptr [rbp + 0x400]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0x510
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push rbp
    mov rbp, rsp
    sub rsp, 0x70
    mov rax, qword ptr [rbp + 0x30]
    xor esi, esi
    mov qword ptr [rbp - 0x40], rsi
    mov rbx, rdx
    mov byte ptr [rbp - 0x30], sil
    mov byte ptr [rbp - 0x18], sil
    mov byte ptr [rbp - 0x10], sil
    mov byte ptr [rbp - 8], sil
    test rax, rax
    je 0x14000d27a
    movups xmm0, xmmword ptr [rax]
    jmp 0x14000d289
    cmp dword ptr [rip + 0x1d230], esi
    jne 0x14000d292
    movups xmm0, xmmword ptr [rip + 0x1c06f]
    mov byte ptr [rbp - 0x18], 1
    movdqu xmmword ptr [rbp - 0x28], xmm0
    test r9, r9
    je 0x14000d2cf
    test rbx, rbx
    je 0x14000d2cf
    test r8, r8
    je 0x14000d2cf
    mov rax, qword ptr [rbp + 0x38]
    mov qword ptr [rsp + 0x28], rax
    lea rax, [rbp - 0x40]
    mov qword ptr [rsp + 0x20], rax
    call 0x14000a0ec
    mov edi, eax
    test eax, eax
    jns 0x14000d2c1
    mov byte ptr [rbx], sil
    cmp eax, -2
    jne 0x14000d2fa
    mov dword ptr [rbp - 0x14], 0x22
    jmp 0x14000d2d6
    mov dword ptr [rbp - 0x14], 0x16
    lea rax, [rbp - 0x40]
    mov byte ptr [rbp - 0x10], 1
    mov qword ptr [rsp + 0x28], rax
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], rsi
    xor edx, edx
    xor ecx, ecx
    call 0x140009da0
    or edi, 0xffffffff
    cmp byte ptr [rbp - 0x18], 2
    jne 0x14000d30b
    mov rax, qword ptr [rbp - 0x40]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x10], sil
    je 0x14000d320
    mov ebx, dword ptr [rbp - 0x14]
    lea rcx, [rbp - 0x40]
    call 0x140009a80
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 8], sil
    je 0x14000d335
    mov ebx, dword ptr [rbp - 0xc]
    lea rcx, [rbp - 0x40]
    call 0x140009a80
    mov dword ptr [rax + 0x24], ebx
    lea r11, [rsp + 0x70]
    mov eax, edi
    mov rbx, qword ptr [r11 + 0x10]
    mov rsi, qword ptr [r11 + 0x18]
    mov rdi, qword ptr [r11 + 0x20]
    mov rsp, r11
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rip + 0x1cfc9], rcx
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rcx
    call 0x14000d398
    xor ebx, ebx
    test rax, rax
    je 0x14000d38b
    movabs r10, 0xd1ed0fdf1cd32070
    mov rcx, rdi
    call qword ptr [rip + 0xfef4]
    test eax, eax
    setne bl
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    xor ecx, ecx
    call 0x140011640
    nop 
    mov rax, qword ptr [rip + 0x1bc53]
    mov ecx, eax
    and ecx, 0x3f
    mov rbx, qword ptr [rip + 0x1cf67]
    xor rbx, rax
    ror rbx, cl
    xor ecx, ecx
    call 0x140011694
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    jmp 0x14000fec8
    int3 
    int3 
    int3 
    mov dword ptr [rsp + 0x10], 0
    mov eax, dword ptr [rsp + 0x10]
    jmp 0x14000f250
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rsi, rdx
    mov edi, ecx
    call 0x14000eefc
    xor r9d, r9d
    mov rbx, rax
    test rax, rax
    je 0x14000d434
    mov rcx, qword ptr [rax]
    mov rax, rcx
    lea r8, [rcx + 0xc0]
    cmp rcx, r8
    je 0x14000d434
    cmp dword ptr [rax], edi
    je 0x14000d44b
    add rax, 0x10
    cmp rax, r8
    jne 0x14000d427
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    test rax, rax
    je 0x14000d434
    mov r8, qword ptr [rax + 8]
    test r8, r8
    je 0x14000d434
    cmp r8, 5
    jne 0x14000d469
    mov qword ptr [rax + 8], r9
    lea eax, [r8 - 4]
    jmp 0x14000d436
    cmp r8, 1
    jne 0x14000d474
    or eax, 0xffffffff
    jmp 0x14000d436
    mov rbp, qword ptr [rbx + 8]
    mov qword ptr [rbx + 8], rsi
    cmp dword ptr [rax + 4], 8
    jne 0x14000d54a
    add rcx, 0x30
    lea rdx, [rcx + 0x90]
    jmp 0x14000d49b
    mov qword ptr [rcx + 8], r9
    add rcx, 0x10
    cmp rcx, rdx
    jne 0x14000d493
    cmp dword ptr [rax], 0xc000008d
    mov edi, dword ptr [rbx + 0x10]
    je 0x14000d525
    cmp dword ptr [rax], 0xc000008e
    je 0x14000d51e
    cmp dword ptr [rax], 0xc000008f
    je 0x14000d517
    cmp dword ptr [rax], 0xc0000090
    je 0x14000d510
    cmp dword ptr [rax], 0xc0000091
    je 0x14000d509
    cmp dword ptr [rax], 0xc0000092
    je 0x14000d502
    cmp dword ptr [rax], 0xc0000093
    je 0x14000d4fb
    cmp dword ptr [rax], 0xc00002b4
    je 0x14000d4f4
    cmp dword ptr [rax], 0xc00002b5
    mov edx, edi
    jne 0x14000d52d
    mov edx, 0x8d
    jmp 0x14000d52a
    mov edx, 0x8e
    jmp 0x14000d52a
    mov edx, 0x85
    jmp 0x14000d52a
    mov edx, 0x8a
    jmp 0x14000d52a
    mov edx, 0x84
    jmp 0x14000d52a
    mov edx, 0x81
    jmp 0x14000d52a
    mov edx, 0x86
    jmp 0x14000d52a
    mov edx, 0x83
    jmp 0x14000d52a
    mov edx, 0x82
    mov dword ptr [rbx + 0x10], edx
    movabs r10, 0x8b9c1f4f30d33370
    mov ecx, 8
    mov rax, r8
    call qword ptr [rip + 0xfd33]
    mov dword ptr [rbx + 0x10], edi
    jmp 0x14000d564
    mov qword ptr [rax + 8], r9
    movabs r10, 0xc6c1864950d77370
    mov ecx, dword ptr [rax + 4]
    mov rax, r8
    call qword ptr [rip + 0xfd14]
    mov qword ptr [rbx + 8], rbp
    jmp 0x14000d46f
    int3 
    int3 
    int3 
    mov eax, dword ptr [rip + 0x1cdb2]
    ret
    int3 
    mov dword ptr [rip + 0x1cdaa], ecx
    ret
    int3 
    mov rax, qword ptr [rip + 0x1ba79]
    mov rdx, qword ptr [rip + 0x1cda2]
    mov ecx, eax
    xor rdx, rax
    and ecx, 0x3f
    ror rdx, cl
    test rdx, rdx
    setne al
    ret
    mov qword ptr [rip + 0x1cd89], rcx
    ret
    mov rax, qword ptr [rip + 0x1ba51]
    mov r8, rcx
    mov rdx, qword ptr [rip + 0x1cd77]
    mov ecx, eax
    and ecx, 0x3f
    xor rdx, rax
    ror rdx, cl
    test rdx, rdx
    jne 0x14000d5cc
    xor eax, eax
    ret
    movabs r10, 0xd88807e658547170
    mov rcx, r8
    mov rax, rdx
    jmp qword ptr [rip + 0xfc95]
    int3 
    mov r8, qword ptr [rip + 0x1ba15]
    mov r9, rcx
    mov edx, r8d
    mov ecx, 0x40
    and edx, 0x3f
    sub ecx, edx
    ror r9, cl
    xor r9, r8
    mov qword ptr [rip + 0x1cd28], r9
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov r12, qword ptr [rsp + 0x70]
    mov r13, r9
    mov rbx, r8
    mov r14, rdx
    mov rdi, rcx
    and qword ptr [r12], 0
    mov qword ptr [r9], 1
    test rdx, rdx
    je 0x14000d651
    mov qword ptr [rdx], rbx
    add r14, 8
    xor bpl, bpl
    cmp byte ptr [rdi], 0x22
    mov r15, rdi
    jne 0x14000d66b
    test bpl, bpl
    mov sil, 0x22
    sete bpl
    inc rdi
    jmp 0x14000d6a5
    inc qword ptr [r12]
    test rbx, rbx
    je 0x14000d67b
    mov al, byte ptr [rdi]
    mov byte ptr [rbx], al
    inc rbx
    movsx esi, byte ptr [rdi]
    inc rdi
    mov ecx, esi
    call 0x140012f70
    test eax, eax
    je 0x14000d6a0
    inc qword ptr [r12]
    test rbx, rbx
    je 0x14000d69c
    mov al, byte ptr [rdi]
    mov byte ptr [rbx], al
    inc rbx
    lea rdi, [r15 + 2]
    test sil, sil
    je 0x14000d6c1
    test bpl, bpl
    jne 0x14000d654
    cmp sil, 0x20
    je 0x14000d6b6
    cmp sil, 9
    jne 0x14000d654
    test rbx, rbx
    je 0x14000d6c4
    mov byte ptr [rbx - 1], 0
    jmp 0x14000d6c4
    dec rdi
    xor sil, sil
    mov al, byte ptr [rdi]
    test al, al
    je 0x14000d7a7
    cmp al, 0x20
    je 0x14000d6d9
    cmp al, 9
    jne 0x14000d6e0
    inc rdi
    mov al, byte ptr [rdi]
    jmp 0x14000d6d1
    test al, al
    je 0x14000d7a7
    test r14, r14
    je 0x14000d6f4
    mov qword ptr [r14], rbx
    add r14, 8
    inc qword ptr [r13]
    mov edx, 1
    xor eax, eax
    jmp 0x14000d706
    inc rdi
    inc eax
    mov cl, byte ptr [rdi]
    cmp cl, 0x5c
    je 0x14000d701
    cmp cl, 0x22
    jne 0x14000d743
    test dl, al
    jne 0x14000d72e
    test sil, sil
    je 0x14000d725
    cmp byte ptr [rdi + 1], cl
    jne 0x14000d725
    inc rdi
    jmp 0x14000d72e
    xor edx, edx
    test sil, sil
    sete sil
    shr eax, 1
    jmp 0x14000d743
    dec eax
    test rbx, rbx
    je 0x14000d73f
    mov byte ptr [rbx], 0x5c
    inc rbx
    inc qword ptr [r12]
    test eax, eax
    jne 0x14000d732
    mov al, byte ptr [rdi]
    test al, al
    je 0x14000d793
    test sil, sil
    jne 0x14000d75a
    cmp al, 0x20
    je 0x14000d793
    cmp al, 9
    je 0x14000d793
    test edx, edx
    je 0x14000d78b
    test rbx, rbx
    je 0x14000d768
    mov byte ptr [rbx], al
    inc rbx
    movsx ecx, byte ptr [rdi]
    call 0x140012f70
    test eax, eax
    je 0x14000d787
    inc qword ptr [r12]
    inc rdi
    test rbx, rbx
    je 0x14000d787
    mov al, byte ptr [rdi]
    mov byte ptr [rbx], al
    inc rbx
    inc qword ptr [r12]
    inc rdi
    jmp 0x14000d6f8
    test rbx, rbx
    je 0x14000d79e
    mov byte ptr [rbx], 0
    inc rbx
    inc qword ptr [r12]
    jmp 0x14000d6c7
    test r14, r14
    je 0x14000d7b0
    and qword ptr [r14], 0
    inc qword ptr [r13]
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    movabs rax, 0x1fffffffffffffff
    mov r9, rdx
    cmp rcx, rax
    jae 0x14000d829
    xor edx, edx
    or rax, 0xffffffffffffffff
    div r8
    cmp r9, rax
    jae 0x14000d829
    shl rcx, 3
    imul r9, r8
    mov rax, rcx
    not rax
    cmp rax, r9
    jbe 0x14000d829
    add rcx, r9
    mov edx, 1
    call 0x14000f1d8
    xor ecx, ecx
    mov rbx, rax
    call 0x14000f250
    mov rax, rbx
    jmp 0x14000d82b
    xor eax, eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rbp
    push rsi
    push rdi
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x30
    xor edi, edi
    mov r14d, ecx
    test ecx, ecx
    je 0x14000d9a7
    lea eax, [rcx - 1]
    cmp eax, 1
    jbe 0x14000d872
    call 0x14000f1b8
    lea ebx, [rdi + 0x16]
    mov dword ptr [rax], ebx
    call 0x140009e6c
    mov edi, ebx
    jmp 0x14000d9a7
    call 0x140012bc0
    lea rbx, [rip + 0x1cac2]
    mov r8d, 0x104
    mov rdx, rbx
    xor ecx, ecx
    call 0x1400122a4
    mov rsi, qword ptr [rip + 0x1cc0b]
    mov qword ptr [rip + 0x1cbe4], rbx
    test rsi, rsi
    je 0x14000d8a6
    cmp byte ptr [rsi], dil
    jne 0x14000d8a9
    mov rsi, rbx
    lea rax, [rbp + 0x48]
    mov qword ptr [rbp + 0x40], rdi
    lea r9, [rbp + 0x40]
    mov qword ptr [rsp + 0x20], rax
    xor r8d, r8d
    mov qword ptr [rbp + 0x48], rdi
    xor edx, edx
    mov rcx, rsi
    call 0x14000d60c
    mov r15, qword ptr [rbp + 0x40]
    mov r8d, 1
    mov rdx, qword ptr [rbp + 0x48]
    mov rcx, r15
    call 0x14000d7d4
    mov rbx, rax
    test rax, rax
    jne 0x14000d901
    call 0x14000f1b8
    mov ebx, 0xc
    xor ecx, ecx
    mov dword ptr [rax], ebx
    call 0x14000f250
    jmp 0x14000d86b
    lea r8, [rax + r15*8]
    mov rdx, rbx
    lea rax, [rbp + 0x48]
    mov rcx, rsi
    lea r9, [rbp + 0x40]
    mov qword ptr [rsp + 0x20], rax
    call 0x14000d60c
    cmp r14d, 1
    jne 0x14000d939
    mov eax, dword ptr [rbp + 0x40]
    dec eax
    mov qword ptr [rip + 0x1cb61], rbx
    mov dword ptr [rip + 0x1cb53], eax
    xor ecx, ecx
    jmp 0x14000d9a2
    lea rdx, [rbp + 0x38]
    mov qword ptr [rbp + 0x38], rdi
    mov rcx, rbx
    call 0x140012180
    mov esi, eax
    test eax, eax
    je 0x14000d968
    mov rcx, qword ptr [rbp + 0x38]
    call 0x14000f250
    mov rcx, rbx
    mov qword ptr [rbp + 0x38], rdi
    call 0x14000f250
    mov edi, esi
    jmp 0x14000d9a7
    mov rdx, qword ptr [rbp + 0x38]
    mov rcx, rdi
    mov rax, rdx
    cmp qword ptr [rdx], rdi
    je 0x14000d983
    lea rax, [rax + 8]
    inc rcx
    cmp qword ptr [rax], rdi
    jne 0x14000d977
    mov dword ptr [rip + 0x1caff], ecx
    xor ecx, ecx
    mov qword ptr [rbp + 0x38], rdi
    mov qword ptr [rip + 0x1cafa], rdx
    call 0x14000f250
    mov rcx, rbx
    mov qword ptr [rbp + 0x38], rdi
    call 0x14000f250
    mov rbx, qword ptr [rsp + 0x60]
    mov eax, edi
    add rsp, 0x30
    pop r15
    pop r14
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    xor edi, edi
    cmp qword ptr [rip + 0x1ca79], rdi
    je 0x14000d9d5
    xor eax, eax
    jmp 0x14000da24
    call 0x140012bc0
    call 0x1400130f4
    mov rbx, rax
    test rax, rax
    jne 0x14000d9f3
    xor ecx, ecx
    call 0x14000f250
    or eax, 0xffffffff
    jmp 0x14000da24
    mov rcx, rbx
    call 0x14000da30
    test rax, rax
    jne 0x14000da05
    or edi, 0xffffffff
    jmp 0x14000da13
    mov qword ptr [rip + 0x1ca54], rax
    mov qword ptr [rip + 0x1ca35], rax
    xor ecx, ecx
    call 0x14000f250
    mov rcx, rbx
    call 0x14000f250
    mov eax, edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    mov rsi, rcx
    xor ecx, ecx
    mov r8, rsi
    mov dl, byte ptr [rsi]
    jmp 0x14000da7a
    cmp dl, 0x3d
    lea rax, [rcx + 1]
    cmove rax, rcx
    mov rcx, rax
    or rax, 0xffffffffffffffff
    inc rax
    cmp byte ptr [r8 + rax], 0
    jne 0x14000da67
    inc r8
    add r8, rax
    mov dl, byte ptr [r8]
    test dl, dl
    jne 0x14000da55
    inc rcx
    mov edx, 8
    call 0x14000f1d8
    mov rbx, rax
    test rax, rax
    jne 0x14000da9e
    xor ecx, ecx
    call 0x14000f250
    xor eax, eax
    jmp 0x14000db10
    mov r14, rbx
    mov al, byte ptr [rsi]
    test al, al
    je 0x14000db06
    or rbp, 0xffffffffffffffff
    inc rbp
    cmp byte ptr [rsi + rbp], 0
    jne 0x14000daab
    inc rbp
    cmp al, 0x3d
    je 0x14000daf0
    mov edx, 1
    mov rcx, rbp
    call 0x14000f1d8
    mov rdi, rax
    test rax, rax
    je 0x14000daf5
    mov r8, rsi
    mov rdx, rbp
    mov rcx, rax
    call 0x14000e890
    xor ecx, ecx
    test eax, eax
    jne 0x14000db2b
    mov qword ptr [r14], rdi
    add r14, 8
    call 0x14000f250
    add rsi, rbp
    jmp 0x14000daa1
    mov rcx, rbx
    call 0x14000db40
    xor ecx, ecx
    call 0x14000f250
    jmp 0x14000da93
    xor ecx, ecx
    call 0x14000f250
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    call 0x140009ebc
    int3 
    int3 
    test rcx, rcx
    je 0x14000db80
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rax, qword ptr [rcx]
    mov rbx, rcx
    mov rdi, rcx
    jmp 0x14000db69
    mov rcx, rax
    call 0x14000f250
    lea rdi, [rdi + 8]
    mov rax, qword ptr [rdi]
    test rax, rax
    jne 0x14000db5a
    mov rcx, rbx
    call 0x14000f250
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x40
    mov rdi, qword ptr [rip + 0x1c8b0]
    or r14d, 0xffffffff
    test rdi, rdi
    jne 0x14000dc45
    mov eax, r14d
    mov rbx, qword ptr [rsp + 0x50]
    mov rsi, qword ptr [rsp + 0x58]
    mov rdi, qword ptr [rsp + 0x60]
    add rsp, 0x40
    pop r14
    ret
    and qword ptr [rsp + 0x38], 0
    mov r9d, r14d
    and qword ptr [rsp + 0x30], 0
    mov r8, rax
    and dword ptr [rsp + 0x28], 0
    xor edx, edx
    and qword ptr [rsp + 0x20], 0
    xor ecx, ecx
    call 0x140013014
    movsxd rsi, eax
    test eax, eax
    je 0x14000dbad
    mov edx, 1
    mov rcx, rsi
    call 0x14000f1d8
    mov rbx, rax
    test rax, rax
    je 0x14000dc56
    and qword ptr [rsp + 0x38], 0
    mov r9d, r14d
    and qword ptr [rsp + 0x30], 0
    xor edx, edx
    mov r8, qword ptr [rdi]
    xor ecx, ecx
    mov dword ptr [rsp + 0x28], esi
    mov qword ptr [rsp + 0x20], rax
    call 0x140013014
    mov rcx, rbx
    test eax, eax
    je 0x14000dc58
    xor edx, edx
    call 0x140013644
    xor ecx, ecx
    call 0x14000f250
    add rdi, 8
    mov rax, qword ptr [rdi]
    test rax, rax
    jne 0x14000dbc6
    jmp 0x14000dbb0
    xor ecx, ecx
    call 0x14000f250
    jmp 0x14000dbad
    int3 
    int3 
    sub rsp, 0x28
    mov rcx, qword ptr [rcx]
    cmp rcx, qword ptr [rip + 0x1c7ee]
    je 0x14000dc79
    call 0x14000db40
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    mov rcx, qword ptr [rcx]
    cmp rcx, qword ptr [rip + 0x1c7ca]
    je 0x14000dc95
    call 0x14000db40
    add rsp, 0x28
    ret
    int3 
    int3 
    sub rsp, 0x28
    mov rax, qword ptr [rip + 0x1c7a1]
    test rax, rax
    jne 0x14000dcd2
    cmp qword ptr [rip + 0x1c79d], rax
    jne 0x14000dcb9
    xor eax, eax
    jmp 0x14000dcd2
    call 0x14000d9bc
    test eax, eax
    je 0x14000dccb
    call 0x14000db84
    test eax, eax
    jne 0x14000dcb5
    mov rax, qword ptr [rip + 0x1c776]
    add rsp, 0x28
    ret
    int3 
    sub rsp, 0x38
    mov qword ptr [rsp + 0x20], 0xfffffffffffffffe
    lea rcx, [rip + 0x1c75c]
    call 0x14000dc64
    nop 
    lea rcx, [rip + 0x1c757]
    call 0x14000dc80
    nop 
    mov rcx, qword ptr [rip + 0x1c75a]
    call 0x14000db40
    mov rcx, qword ptr [rip + 0x1c746]
    add rsp, 0x38
    jmp 0x14000db40
    int3 
    sub rsp, 0x28
    mov rax, qword ptr [rip + 0x1c739]
    test rax, rax
    jne 0x14000dd65
    mov rax, qword ptr [rip + 0x1c715]
    test rax, rax
    jne 0x14000dd5e
    cmp qword ptr [rip + 0x1c711], rax
    jne 0x14000dd45
    xor eax, eax
    jmp 0x14000dd5e
    call 0x14000d9bc
    test eax, eax
    je 0x14000dd57
    call 0x14000db84
    test eax, eax
    jne 0x14000dd41
    mov rax, qword ptr [rip + 0x1c6ea]
    mov qword ptr [rip + 0x1c6fb], rax
    add rsp, 0x28
    ret
    int3 
    int3 
    jmp 0x14000d9bc
    int3 
    int3 
    int3 
    cmp rcx, rdx
    je 0x14000ddb4
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rdx
    mov rbx, rcx
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x14000dda1
    movabs r10, 0x85f13e9656da4870
    call qword ptr [rip + 0xf4d7]
    add rbx, 8
    cmp rbx, rdi
    jne 0x14000dd89
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rdx
    mov rbx, rcx
    cmp rcx, rdx
    je 0x14000ddf2
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x14000dde9
    movabs r10, 0xd30527475e523070
    call qword ptr [rip + 0xf493]
    test eax, eax
    jne 0x14000ddf4
    add rbx, 8
    cmp rbx, rdi
    jmp 0x14000ddcb
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rcx, rdi
    call 0x14000de38
    nop 
    mov ecx, dword ptr [rbx]
    call 0x140011694
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    push rbx
    sub rsp, 0x30
    mov rbx, rcx
    cmp byte ptr [rip + 0x1c630], 0
    jne 0x14000def7
    mov eax, 1
    xchg dword ptr [rip + 0x1c60f], eax
    mov rax, qword ptr [rcx]
    mov ecx, dword ptr [rax]
    test ecx, ecx
    jne 0x14000dea0
    mov rax, qword ptr [rip + 0x1b197]
    mov rdx, qword ptr [rip + 0x1c600]
    cmp rdx, rax
    je 0x14000de97
    mov ecx, eax
    and ecx, 0x3f
    xor rax, rdx
    ror rax, cl
    movabs r10, 0x99012e4578d92870
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call qword ptr [rip + 0xf3e1]
    lea rcx, [rip + 0x1c622]
    jmp 0x14000deac
    cmp ecx, 1
    jne 0x14000deb2
    lea rcx, [rip + 0x1c62c]
    call 0x14000e638
    nop 
    mov rax, qword ptr [rbx]
    cmp dword ptr [rax], 0
    jne 0x14000decd
    lea rdx, [rip + 0xf44f]
    lea rcx, [rip + 0xf428]
    call 0x14000dd74
    lea rdx, [rip + 0xf44c]
    lea rcx, [rip + 0xf43d]
    call 0x14000dd74
    mov rax, qword ptr [rbx + 8]
    cmp dword ptr [rax], 0
    jne 0x14000def7
    mov byte ptr [rip + 0x1c588], 1
    mov rax, qword ptr [rbx + 0x10]
    mov byte ptr [rax], 1
    add rsp, 0x30
    pop rbx
    ret
    call 0x14000e864
    nop 
    int3 
    mov dword ptr [rsp + 0x18], r8d
    mov dword ptr [rsp + 0x10], edx
    push rbp
    mov rbp, rsp
    sub rsp, 0x50
    mov qword ptr [rbp - 0x20], 0xfffffffffffffffe
    mov qword ptr [rsp + 0x60], rbx
    mov ebx, ecx
    test r8d, r8d
    jne 0x14000df73
    xor ecx, ecx
    call qword ptr [rip + 0xf14f]
    test rax, rax
    je 0x14000df73
    mov ecx, 0x5a4d
    cmp word ptr [rax], cx
    jne 0x14000df73
    movsxd rcx, dword ptr [rax + 0x3c]
    add rcx, rax
    cmp dword ptr [rcx], 0x4550
    jne 0x14000df73
    mov eax, 0x20b
    cmp word ptr [rcx + 0x18], ax
    jne 0x14000df73
    cmp dword ptr [rcx + 0x84], 0xe
    jbe 0x14000df73
    cmp dword ptr [rcx + 0xf8], 0
    je 0x14000df73
    mov ecx, ebx
    call 0x14000e024
    mov byte ptr [rbp + 0x28], 0
    lea rax, [rbp + 0x18]
    mov qword ptr [rbp - 0x18], rax
    lea rax, [rbp + 0x20]
    mov qword ptr [rbp - 0x10], rax
    lea rax, [rbp + 0x28]
    mov qword ptr [rbp - 8], rax
    mov eax, 2
    mov dword ptr [rbp - 0x2c], eax
    mov dword ptr [rbp - 0x28], eax
    lea r9, [rbp - 0x2c]
    lea r8, [rbp - 0x18]
    lea rdx, [rbp - 0x28]
    lea rcx, [rbp - 0x30]
    call 0x14000de00
    nop 
    cmp dword ptr [rbp + 0x20], 0
    je 0x14000dfc1
    mov rbx, qword ptr [rsp + 0x60]
    add rsp, 0x50
    pop rbp
    ret
    mov ecx, ebx
    call 0x14000dfcc
    int3 
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    call 0x14000e000
    test al, al
    je 0x14000dfee
    call qword ptr [rip + 0xf04d]
    mov rcx, rax
    mov edx, ebx
    call qword ptr [rip + 0xf04a]
    mov ecx, ebx
    call 0x14000e024
    mov ecx, ebx
    call qword ptr [rip + 0xf133]
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call 0x140013680
    cmp eax, 1
    je 0x14000e01a
    call 0x14001364c
    test al, al
    sete al
    jmp 0x14000e01c
    xor al, al
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x30
    mov qword ptr [rsp + 0x20], 0xfffffffffffffffe
    mov ebx, ecx
    and qword ptr [rsp + 0x48], 0
    lea r8, [rsp + 0x48]
    lea rdx, [rip + 0x10829]
    xor ecx, ecx
    call qword ptr [rip + 0xf0e9]
    mov rcx, qword ptr [rsp + 0x48]
    test eax, eax
    je 0x14000e081
    lea rdx, [rip + 0x10829]
    call qword ptr [rip + 0xf0a3]
    test rax, rax
    je 0x14000e07c
    movabs r10, 0xa201879b5e5a7b70
    mov ecx, ebx
    call qword ptr [rip + 0xf1fc]
    mov rcx, qword ptr [rsp + 0x48]
    test rcx, rcx
    je 0x14000e08d
    call qword ptr [rip + 0xf074]
    nop 
    add rsp, 0x30
    pop rbx
    ret
    int3 
    mov qword ptr [rip + 0x1c3d5], rcx
    ret
    mov edx, 2
    xor ecx, ecx
    lea r8d, [rdx - 1]
    jmp 0x14000df04
    xor edx, edx
    xor ecx, ecx
    lea r8d, [rdx + 1]
    jmp 0x14000df04
    int3 
    int3 
    int3 
    xor r8d, r8d
    lea edx, [r8 + 2]
    jmp 0x14000df04
    sub rsp, 0x28
    mov r8, qword ptr [rip + 0x1af2d]
    mov rdx, rcx
    cmp qword ptr [rip + 0x1c393], r8
    jne 0x14000e100
    mov ecx, r8d
    mov eax, 0x40
    and ecx, 0x3f
    sub eax, ecx
    mov cl, al
    ror rdx, cl
    xor rdx, r8
    mov qword ptr [rip + 0x1c375], rdx
    add rsp, 0x28
    ret
    call 0x14000e864
    int3 
    int3 
    int3 
    xor r8d, r8d
    xor edx, edx
    jmp 0x14000df04
    int3 
    int3 
    sub rsp, 0x28
    lea eax, [rcx - 0x4000]
    test eax, 0xffff3fff
    jne 0x14000e137
    cmp ecx, 0xc000
    je 0x14000e137
    xchg dword ptr [rip + 0x1cc05], ecx
    xor eax, eax
    jmp 0x14000e14c
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    mov eax, 0x16
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call qword ptr [rip + 0xefe2]
    mov qword ptr [rip + 0x1c33b], rax
    call qword ptr [rip + 0xefdd]
    mov qword ptr [rip + 0x1c336], rax
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    lea rax, [rip + 0x1c305]
    ret
    lea rax, [rip + 0x1c305]
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x30
    mov rdi, r9
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    lea rbx, [rip + 0x1c33e]
    lea rsi, [rip + 0x1afe7]
    mov qword ptr [rsp + 0x20], rbx
    lea rax, [rip + 0x1c333]
    cmp rbx, rax
    je 0x14000e1e3
    cmp qword ptr [rbx], rsi
    je 0x14000e1dd
    mov rdx, rsi
    mov rcx, rbx
    call 0x1400141d8
    mov qword ptr [rbx], rax
    add rbx, 8
    jmp 0x14000e1b9
    mov ecx, dword ptr [rdi]
    call 0x140011694
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    mov eax, 1
    xchg dword ptr [rip + 0x1c2a9], eax
    ret
    mov r11, rsp
    sub rsp, 0x28
    mov eax, 4
    lea r9, [r11 + 0x10]
    lea r8, [r11 + 8]
    mov dword ptr [rsp + 0x38], eax
    lea rdx, [r11 + 0x18]
    mov dword ptr [rsp + 0x40], eax
    lea rcx, [r11 + 8]
    call 0x14000e18c
    add rsp, 0x28
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    call 0x14000ed84
    mov r8d, dword ptr [rax + 0x3a8]
    mov edx, r8d
    and dl, 2
    neg dl
    sbb ecx, ecx
    cmp ebx, -1
    je 0x14000e291
    test ebx, ebx
    je 0x14000e298
    cmp ebx, 1
    je 0x14000e284
    cmp ebx, 2
    je 0x14000e27e
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    or eax, 0xffffffff
    jmp 0x14000e29b
    and r8d, 0xfffffffd
    jmp 0x14000e288
    or r8d, 2
    mov dword ptr [rax + 0x3a8], r8d
    jmp 0x14000e298
    or dword ptr [rip + 0x1b6b8], 0xffffffff
    lea eax, [rcx + 2]
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov eax, dword ptr [rip + 0x1c20a]
    nop 
    ret
    sub rsp, 0x28
    cmp ecx, 1
    jbe 0x14000e2ca
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    or eax, 0xffffffff
    jmp 0x14000e2d2
    xchg dword ptr [rip + 0x1c1e4], ecx
    mov eax, ecx
    add rsp, 0x28
    ret
    int3 
    lea rax, [rip + 0x1c1d9]
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rcx, rdi
    call 0x14000e358
    mov edi, eax
    mov ecx, dword ptr [rbx]
    call 0x140011694
    mov eax, edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rcx, rdi
    call 0x14000e508
    mov edi, eax
    mov ecx, dword ptr [rbx]
    call 0x140011694
    mov eax, edi
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    mov rax, qword ptr [rcx]
    xor ebp, ebp
    mov r15, rcx
    mov rdx, qword ptr [rax]
    test rdx, rdx
    je 0x14000e4ec
    mov r10, qword ptr [rip + 0x1ac75]
    mov ecx, r10d
    mov rsi, r10
    xor rsi, qword ptr [rdx]
    and ecx, 0x3f
    mov r9, r10
    ror rsi, cl
    xor r9, qword ptr [rdx + 8]
    mov rbx, r10
    xor rbx, qword ptr [rdx + 0x10]
    ror r9, cl
    ror rbx, cl
    cmp r9, rbx
    jne 0x14000e45e
    sub rbx, rsi
    mov eax, 0x200
    sar rbx, 3
    cmp rbx, rax
    mov rdi, rbx
    cmova rdi, rax
    lea eax, [rbp + 0x20]
    add rdi, rbx
    cmove rdi, rax
    cmp rdi, rbx
    jb 0x14000e3fa
    lea r8d, [rbp + 8]
    mov rdx, rdi
    mov rcx, rsi
    call 0x140014240
    xor ecx, ecx
    mov r14, rax
    call 0x14000f250
    test r14, r14
    jne 0x14000e422
    lea rdi, [rbx + 4]
    mov r8d, 8
    mov rdx, rdi
    mov rcx, rsi
    call 0x140014240
    xor ecx, ecx
    mov r14, rax
    call 0x14000f250
    test r14, r14
    je 0x14000e4ec
    mov r10, qword ptr [rip + 0x1abd7]
    lea r9, [r14 + rbx*8]
    lea rbx, [r14 + rdi*8]
    mov rsi, r14
    mov rcx, rbx
    sub rcx, r9
    add rcx, 7
    shr rcx, 3
    cmp r9, rbx
    cmova rcx, rbp
    test rcx, rcx
    je 0x14000e45e
    mov rax, r10
    mov rdi, r9
    rep stosq qword ptr [rdi], rax
    mov r10, qword ptr [rip + 0x1aba2]
    mov r8d, 0x40
    lea rdi, [r9 + 8]
    mov ecx, r8d
    mov eax, r10d
    and eax, 0x3f
    sub ecx, eax
    mov rax, qword ptr [r15 + 8]
    mov rdx, qword ptr [rax]
    mov eax, r8d
    ror rdx, cl
    xor rdx, r10
    mov qword ptr [r9], rdx
    mov rdx, qword ptr [rip + 0x1ab73]
    mov ecx, edx
    and ecx, 0x3f
    sub eax, ecx
    mov cl, al
    mov rax, qword ptr [r15]
    ror rsi, cl
    xor rsi, rdx
    mov rcx, qword ptr [rax]
    mov qword ptr [rcx], rsi
    mov ecx, r8d
    mov rdx, qword ptr [rip + 0x1ab51]
    mov eax, edx
    and eax, 0x3f
    sub ecx, eax
    mov rax, qword ptr [r15]
    ror rdi, cl
    xor rdi, rdx
    mov rdx, qword ptr [rax]
    mov qword ptr [rdx + 8], rdi
    mov rdx, qword ptr [rip + 0x1ab33]
    mov eax, edx
    and eax, 0x3f
    sub r8d, eax
    mov rax, qword ptr [r15]
    mov cl, r8b
    ror rbx, cl
    xor rbx, rdx
    mov rcx, qword ptr [rax]
    xor eax, eax
    mov qword ptr [rcx + 0x10], rbx
    jmp 0x14000e4ef
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    mov rax, qword ptr [rcx]
    mov rsi, rcx
    mov rdx, qword ptr [rax]
    test rdx, rdx
    jne 0x14000e536
    or eax, 0xffffffff
    jmp 0x14000e60f
    mov r8, qword ptr [rip + 0x1aac3]
    mov ecx, r8d
    mov rdi, r8
    xor rdi, qword ptr [rdx]
    and ecx, 0x3f
    ror rdi, cl
    mov rbx, r8
    xor rbx, qword ptr [rdx + 8]
    ror rbx, cl
    lea rax, [rdi - 1]
    cmp rax, -3
    ja 0x14000e60d
    mov ecx, r8d
    mov r14, r8
    and ecx, 0x3f
    mov r15, rdi
    mov rbp, rbx
    sub rbx, 8
    cmp rbx, rdi
    jb 0x14000e5db
    mov rax, qword ptr [rbx]
    cmp rax, r14
    je 0x14000e573
    xor rax, r8
    mov qword ptr [rbx], r14
    ror rax, cl
    movabs r10, 0x85f13e9656da4870
    call qword ptr [rip + 0xecdb]
    mov r8, qword ptr [rip + 0x1aa5c]
    mov rax, qword ptr [rsi]
    mov ecx, r8d
    and ecx, 0x3f
    mov r9, r8
    mov rdx, qword ptr [rax]
    mov rax, r8
    xor r9, qword ptr [rdx]
    xor rax, qword ptr [rdx + 8]
    ror r9, cl
    ror rax, cl
    cmp r9, r15
    jne 0x14000e5cd
    cmp rax, rbp
    je 0x14000e573
    mov r15, r9
    mov rdi, r9
    mov rbp, rax
    mov rbx, rax
    jmp 0x14000e573
    cmp rdi, -1
    je 0x14000e5f0
    mov rcx, rdi
    call 0x14000f250
    mov r8, qword ptr [rip + 0x1aa10]
    mov rax, qword ptr [rsi]
    mov rcx, qword ptr [rax]
    mov qword ptr [rcx], r8
    mov rax, qword ptr [rsi]
    mov rcx, qword ptr [rax]
    mov qword ptr [rcx + 8], r8
    mov rax, qword ptr [rsi]
    mov rcx, qword ptr [rax]
    mov qword ptr [rcx + 0x10], r8
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    mov rdx, rcx
    lea rcx, [rip + 0x1be8e]
    jmp 0x14000e6a4
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 8], rcx
    sub rsp, 0x38
    mov qword ptr [r11 - 0x10], 0xfffffffffffffffe
    lea rax, [r11 + 8]
    mov qword ptr [r11 - 0x18], rax
    mov eax, 2
    mov dword ptr [rsp + 0x50], eax
    mov dword ptr [rsp + 0x58], eax
    lea r9, [r11 + 0x18]
    lea r8, [r11 - 0x18]
    lea rdx, [r11 + 0x20]
    lea rcx, [r11 + 0x10]
    call 0x14000e31c
    nop 
    add rsp, 0x38
    ret
    int3 
    test rcx, rcx
    jne 0x14000e685
    or eax, 0xffffffff
    ret
    mov rax, qword ptr [rcx + 0x10]
    cmp qword ptr [rcx], rax
    jne 0x14000e6a0
    mov rax, qword ptr [rip + 0x1a96b]
    mov qword ptr [rcx], rax
    mov qword ptr [rcx + 8], rax
    mov qword ptr [rcx + 0x10], rax
    xor eax, eax
    ret
    int3 
    mov qword ptr [rsp + 0x10], rdx
    mov qword ptr [rsp + 8], rcx
    push rbp
    mov rbp, rsp
    sub rsp, 0x40
    lea rax, [rbp + 0x10]
    mov qword ptr [rbp - 0x18], rax
    lea r9, [rbp + 0x28]
    lea rax, [rbp + 0x18]
    mov qword ptr [rbp - 0x10], rax
    lea r8, [rbp - 0x18]
    mov eax, 2
    lea rdx, [rbp - 0x20]
    lea rcx, [rbp + 0x20]
    mov dword ptr [rbp + 0x28], eax
    mov dword ptr [rbp - 0x20], eax
    call 0x14000e2e0
    add rsp, 0x40
    pop rbp
    ret
    lea rax, [rip + 0x1aaad]
    mov qword ptr [rip + 0x1bdf6], rax
    mov al, 1
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    lea rcx, [rip + 0x1bdb5]
    call 0x14000e67c
    lea rcx, [rip + 0x1bdc1]
    call 0x14000e67c
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    sub rsp, 0x28
    call 0x14000dcd8
    mov al, 1
    add rsp, 0x28
    ret
    push rbx
    sub rsp, 0x20
    mov rbx, qword ptr [rip + 0x1a8bf]
    mov rcx, rbx
    call 0x140009cfc
    mov rcx, rbx
    call 0x14000d350
    mov rcx, rbx
    call 0x140014454
    mov rcx, rbx
    call 0x14000d5a0
    mov rcx, rbx
    call 0x14000e094
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    xor ecx, ecx
    jmp 0x140005120
    int3 
    push rbx
    sub rsp, 0x20
    mov rcx, qword ptr [rip + 0x1c59f]
    or eax, 0xffffffff
    lock xadd dword ptr [rcx], eax
    cmp eax, 1
    jne 0x14000e7b4
    mov rcx, qword ptr [rip + 0x1c58c]
    lea rbx, [rip + 0x1abcd]
    cmp rcx, rbx
    je 0x14000e7b4
    call 0x14000f250
    mov qword ptr [rip + 0x1c574], rbx
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    sub rsp, 0x28
    mov rcx, qword ptr [rip + 0x1c301]
    call 0x14000f250
    mov rcx, qword ptr [rip + 0x1c2fd]
    and qword ptr [rip + 0x1c2ed], 0
    call 0x14000f250
    mov rcx, qword ptr [rip + 0x1bca9]
    and qword ptr [rip + 0x1c2e1], 0
    call 0x14000f250
    mov rcx, qword ptr [rip + 0x1bc9d]
    and qword ptr [rip + 0x1bc8d], 0
    call 0x14000f250
    and qword ptr [rip + 0x1bc88], 0
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    lea rdx, [rip + 0x101a1]
    lea rcx, [rip + 0x1009a]
    jmp 0x140014300
    int3 
    sub rsp, 0x28
    test cl, cl
    je 0x14000e84a
    cmp qword ptr [rip + 0x1bad4], 0
    je 0x14000e843
    call 0x14000fc08
    mov al, 1
    add rsp, 0x28
    ret
    lea rdx, [rip + 0x1016f]
    lea rcx, [rip + 0x10068]
    add rsp, 0x28
    jmp 0x140014394
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call 0x14000ed84
    mov rax, qword ptr [rax + 0x18]
    test rax, rax
    je 0x14000e888
    movabs r10, 0x85f13e9656da4870
    call qword ptr [rip + 0xe9f2]
    jmp 0x14000e888
    call 0x14000e8f0
    nop 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    xor ebx, ebx
    test rcx, rcx
    je 0x14000e8a9
    test rdx, rdx
    je 0x14000e8a9
    test r8, r8
    jne 0x14000e8c2
    mov byte ptr [rcx], bl
    call 0x14000f1b8
    mov ebx, 0x16
    mov dword ptr [rax], ebx
    call 0x140009e6c
    mov eax, ebx
    add rsp, 0x20
    pop rbx
    ret
    mov r9, rcx
    sub r8, rcx
    mov al, byte ptr [r8 + r9]
    mov byte ptr [r9], al
    inc r9
    test al, al
    je 0x14000e8ba
    sub rdx, 1
    jne 0x14000e8c8
    test rdx, rdx
    jne 0x14000e8ba
    mov byte ptr [rcx], bl
    call 0x14000f1b8
    mov ebx, 0x22
    jmp 0x14000e8b3
    int3 
    sub rsp, 0x28
    call 0x140014424
    test rax, rax
    je 0x14000e908
    mov ecx, 0x16
    call 0x140014474
    test byte ptr [rip + 0x1a879], 2
    je 0x14000e93b
    mov ecx, 0x17
    call qword ptr [rip + 0xe724]
    test eax, eax
    je 0x14000e927
    mov ecx, 7
    int 0x29
    mov r8d, 1
    mov edx, 0x40000015
    lea ecx, [r8 + 2]
    call 0x140009ba0
    mov ecx, 3
    call 0x14000e0bc
    int3 
    int3 
    int3 
    jmp 0x14000f1d8
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    nop word ptr [rax + rax]
    sub rdx, rcx
    test r8, r8
    je 0x14000e9d2
    test ecx, 7
    je 0x14000e98d
    movzx eax, byte ptr [rcx]
    cmp al, byte ptr [rdx + rcx]
    jne 0x14000e9d5
    inc rcx
    dec r8
    je 0x14000e9d2
    test al, al
    je 0x14000e9d2
    test rcx, 7
    jne 0x14000e970
    movabs r11, 0x8080808080808080
    movabs r10, 0xfefefefefefefeff
    lea eax, [rdx + rcx]
    and eax, 0xfff
    cmp eax, 0xff8
    ja 0x14000e970
    mov rax, qword ptr [rcx]
    cmp rax, qword ptr [rdx + rcx]
    jne 0x14000e970
    add rcx, 8
    sub r8, 8
    jbe 0x14000e9d2
    lea r9, [r10 + rax]
    not rax
    and rax, r9
    test r11, rax
    je 0x14000e9a1
    xor eax, eax
    ret
    sbb rax, rax
    or rax, 1
    ret
    int3 
    int3 
    int3 
    test r8, r8
    jne 0x14000e9fd
    xor eax, eax
    ret
    movzx eax, word ptr [rcx]
    test ax, ax
    je 0x14000ea03
    cmp ax, word ptr [rdx]
    jne 0x14000ea03
    add rcx, 2
    add rdx, 2
    sub r8, 1
    jne 0x14000e9e8
    movzx eax, word ptr [rcx]
    movzx ecx, word ptr [rdx]
    sub eax, ecx
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rax, qword ptr [rdi]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rcx + 0x88]
    lock inc dword ptr [rax]
    mov ecx, dword ptr [rbx]
    call 0x140011694
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rcx, qword ptr [rdi]
    xor edx, edx
    mov rcx, qword ptr [rcx]
    call 0x14000ed1c
    nop 
    mov ecx, dword ptr [rbx]
    call 0x140011694
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rax, qword ptr [rdi + 8]
    mov rdx, qword ptr [rax]
    mov rcx, qword ptr [rdi]
    mov rdx, qword ptr [rdx]
    mov rcx, qword ptr [rcx]
    call 0x14000ed1c
    nop 
    mov ecx, dword ptr [rbx]
    call 0x140011694
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rdi, r8
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rax, qword ptr [rdi]
    mov rcx, qword ptr [rax]
    mov rcx, qword ptr [rcx + 0x88]
    test rcx, rcx
    je 0x14000eb21
    or eax, 0xffffffff
    lock xadd dword ptr [rcx], eax
    cmp eax, 1
    jne 0x14000eb21
    lea rax, [rip + 0x1a85a]
    cmp rcx, rax
    je 0x14000eb21
    call 0x14000f250
    nop 
    mov ecx, dword ptr [rbx]
    call 0x140011694
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    push rbp
    mov rbp, rsp
    sub rsp, 0x50
    mov qword ptr [rbp - 0x28], rcx
    lea rax, [rbp - 0x28]
    mov qword ptr [rbp - 0x18], rax
    lea r9, [rbp + 0x20]
    mov edx, 1
    lea r8, [rbp - 0x18]
    mov eax, 5
    mov dword ptr [rbp + 0x20], eax
    mov dword ptr [rbp + 0x28], eax
    lea rax, [rbp - 0x28]
    mov qword ptr [rbp - 0x10], rax
    lea rax, [rbp - 0x20]
    mov qword ptr [rbp - 8], rax
    mov eax, 4
    mov dword ptr [rbp - 0x30], eax
    mov dword ptr [rbp - 0x2c], eax
    lea rax, [rip + 0x1b96d]
    mov qword ptr [rbp - 0x20], rax
    mov dword ptr [rcx + 0x28], edx
    lea rcx, [rip + 0xfb8f]
    mov rax, qword ptr [rbp - 0x28]
    mov qword ptr [rax], rcx
    lea rcx, [rip + 0x1a7d1]
    mov rax, qword ptr [rbp - 0x28]
    mov dword ptr [rax + 0x3a8], edx
    mov rax, qword ptr [rbp - 0x28]
    mov qword ptr [rax + 0x88], rcx
    lea ecx, [rdx + 0x42]
    mov rax, qword ptr [rbp - 0x28]
    lea rdx, [rbp + 0x28]
    mov word ptr [rax + 0xbc], cx
    mov rax, qword ptr [rbp - 0x28]
    mov word ptr [rax + 0x1c2], cx
    lea rcx, [rbp + 0x18]
    mov rax, qword ptr [rbp - 0x28]
    and qword ptr [rax + 0x3a0], 0
    call 0x14000ea0c
    lea r9, [rbp - 0x30]
    lea r8, [rbp - 0x10]
    lea rdx, [rbp - 0x2c]
    lea rcx, [rbp + 0x18]
    call 0x14000ea8c
    add rsp, 0x50
    pop rbp
    ret
    int3 
    int3 
    int3 
    test rcx, rcx
    je 0x14000ec23
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    call 0x14000ec24
    mov rcx, rbx
    call 0x14000f250
    add rsp, 0x20
    pop rbx
    ret
    push rbp
    mov rbp, rsp
    sub rsp, 0x40
    lea rax, [rbp - 0x18]
    mov qword ptr [rbp - 0x18], rcx
    mov qword ptr [rbp - 0x10], rax
    lea rdx, [rip + 0xfae0]
    mov eax, 5
    mov dword ptr [rbp + 0x20], eax
    mov dword ptr [rbp + 0x28], eax
    lea rax, [rbp - 0x18]
    mov qword ptr [rbp - 8], rax
    mov eax, 4
    mov dword ptr [rbp - 0x20], eax
    mov dword ptr [rbp - 0x1c], eax
    mov rax, qword ptr [rcx]
    cmp rax, rdx
    je 0x14000ec72
    mov rcx, rax
    call 0x14000f250
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x70]
    call 0x14000f250
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x58]
    call 0x14000f250
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x60]
    call 0x14000f250
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x68]
    call 0x14000f250
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x48]
    call 0x14000f250
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x50]
    call 0x14000f250
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x78]
    call 0x14000f250
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x80]
    call 0x14000f250
    mov rcx, qword ptr [rbp - 0x18]
    mov rcx, qword ptr [rcx + 0x3c0]
    call 0x14000f250
    lea r9, [rbp + 0x20]
    lea r8, [rbp - 0x10]
    lea rdx, [rbp + 0x28]
    lea rcx, [rbp + 0x18]
    call 0x14000ead4
    lea r9, [rbp - 0x20]
    lea r8, [rbp - 8]
    lea rdx, [rbp - 0x1c]
    lea rcx, [rbp + 0x18]
    call 0x14000ea4c
    add rsp, 0x40
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rcx
    mov rbx, rdx
    mov rcx, qword ptr [rcx + 0x90]
    test rcx, rcx
    je 0x14000ed64
    call 0x1400140c0
    mov rcx, qword ptr [rdi + 0x90]
    cmp rcx, qword ptr [rip + 0x1b7a5]
    je 0x14000ed64
    lea rax, [rip + 0x1a44c]
    cmp rcx, rax
    je 0x14000ed64
    cmp dword ptr [rcx + 0x10], 0
    jne 0x14000ed64
    call 0x140013ec0
    mov qword ptr [rdi + 0x90], rbx
    test rbx, rbx
    je 0x14000ed78
    mov rcx, rbx
    call 0x140013e34
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    call qword ptr [rip + 0xe30f]
    mov ecx, dword ptr [rip + 0x1a3f1]
    xor esi, esi
    mov ebx, eax
    cmp ecx, -1
    je 0x14000edc5
    call 0x14000f5e0
    mov rdi, rax
    test rax, rax
    je 0x14000edbf
    cmp rax, -1
    cmove rdi, rsi
    jmp 0x14000ee31
    mov ecx, dword ptr [rip + 0x1a3cb]
    or rdx, 0xffffffffffffffff
    call 0x14000f5e8
    test eax, eax
    jne 0x14000edd7
    mov rdi, rsi
    jmp 0x14000ee31
    mov edx, 0x3c8
    mov ecx, 1
    call 0x14000f1d8
    mov ecx, dword ptr [rip + 0x1a3a4]
    mov rdi, rax
    test rax, rax
    jne 0x14000ee04
    xor edx, edx
    call 0x14000f5e8
    xor ecx, ecx
    call 0x14000f250
    jmp 0x14000edd2
    mov rdx, rdi
    call 0x14000f5e8
    test eax, eax
    jne 0x14000ee22
    mov ecx, dword ptr [rip + 0x1a37a]
    xor edx, edx
    call 0x14000f5e8
    mov rcx, rdi
    jmp 0x14000edfd
    mov rcx, rdi
    call 0x14000eb34
    xor ecx, ecx
    call 0x14000f250
    mov ecx, ebx
    call qword ptr [rip + 0xe277]
    test rdi, rdi
    je 0x14000ee51
    mov rbx, qword ptr [rsp + 0x30]
    mov rax, rdi
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    call 0x14000e8f0
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ecx, dword ptr [rip + 0x1a32c]
    cmp ecx, -1
    je 0x14000ee84
    call 0x14000f5e0
    mov rbx, rax
    test rax, rax
    je 0x14000ee7e
    cmp rax, -1
    je 0x14000eef4
    jmp 0x14000eeeb
    mov ecx, dword ptr [rip + 0x1a30c]
    or rdx, 0xffffffffffffffff
    call 0x14000f5e8
    test eax, eax
    je 0x14000eef4
    mov edx, 0x3c8
    mov ecx, 1
    call 0x14000f1d8
    mov ecx, dword ptr [rip + 0x1a2ea]
    mov rbx, rax
    test rax, rax
    jne 0x14000eebe
    xor edx, edx
    call 0x14000f5e8
    xor ecx, ecx
    call 0x14000f250
    jmp 0x14000eef4
    mov rdx, rbx
    call 0x14000f5e8
    test eax, eax
    jne 0x14000eedc
    mov ecx, dword ptr [rip + 0x1a2c0]
    xor edx, edx
    call 0x14000f5e8
    mov rcx, rbx
    jmp 0x14000eeb7
    mov rcx, rbx
    call 0x14000eb34
    xor ecx, ecx
    call 0x14000f250
    mov rax, rbx
    add rsp, 0x20
    pop rbx
    ret
    call 0x14000e8f0
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    call qword ptr [rip + 0xe197]
    mov ecx, dword ptr [rip + 0x1a279]
    xor esi, esi
    mov ebx, eax
    cmp ecx, -1
    je 0x14000ef3d
    call 0x14000f5e0
    mov rdi, rax
    test rax, rax
    je 0x14000ef37
    cmp rax, -1
    cmove rdi, rsi
    jmp 0x14000efa9
    mov ecx, dword ptr [rip + 0x1a253]
    or rdx, 0xffffffffffffffff
    call 0x14000f5e8
    test eax, eax
    jne 0x14000ef4f
    mov rdi, rsi
    jmp 0x14000efa9
    mov edx, 0x3c8
    mov ecx, 1
    call 0x14000f1d8
    mov ecx, dword ptr [rip + 0x1a22c]
    mov rdi, rax
    test rax, rax
    jne 0x14000ef7c
    xor edx, edx
    call 0x14000f5e8
    xor ecx, ecx
    call 0x14000f250
    jmp 0x14000ef4a
    mov rdx, rdi
    call 0x14000f5e8
    test eax, eax
    jne 0x14000ef9a
    mov ecx, dword ptr [rip + 0x1a202]
    xor edx, edx
    call 0x14000f5e8
    mov rcx, rdi
    jmp 0x14000ef75
    mov rcx, rdi
    call 0x14000eb34
    xor ecx, ecx
    call 0x14000f250
    mov ecx, ebx
    call qword ptr [rip + 0xe0ff]
    mov rbx, qword ptr [rsp + 0x30]
    mov rax, rdi
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov ecx, dword ptr [rip + 0x1a1b7]
    xor ebx, ebx
    mov rsi, rdx
    cmp ecx, -1
    je 0x14000effe
    call 0x14000f5e0
    mov rdi, rax
    test rax, rax
    je 0x14000eff8
    cmp rax, -1
    je 0x14000f06f
    jmp 0x14000f065
    mov ecx, dword ptr [rip + 0x1a192]
    or rdx, 0xffffffffffffffff
    call 0x14000f5e8
    test eax, eax
    je 0x14000f06f
    mov edx, 0x3c8
    mov ecx, 1
    call 0x14000f1d8
    mov ecx, dword ptr [rip + 0x1a170]
    mov rdi, rax
    test rax, rax
    jne 0x14000f038
    xor edx, edx
    call 0x14000f5e8
    xor ecx, ecx
    call 0x14000f250
    jmp 0x14000f06f
    mov rdx, rdi
    call 0x14000f5e8
    test eax, eax
    jne 0x14000f056
    mov ecx, dword ptr [rip + 0x1a146]
    xor edx, edx
    call 0x14000f5e8
    mov rcx, rdi
    jmp 0x14000f031
    mov rcx, rdi
    call 0x14000eb34
    xor ecx, ecx
    call 0x14000f250
    imul rbx, rsi, 0x3c8
    add rbx, rdi
    mov rsi, qword ptr [rsp + 0x38]
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    sub rsp, 0x28
    lea rcx, [rip - 0x48b]
    call 0x14000f5d0
    mov dword ptr [rip + 0x1a0f6], eax
    cmp eax, -1
    jne 0x14000f0a3
    xor al, al
    jmp 0x14000f0b8
    call 0x14000eefc
    test rax, rax
    jne 0x14000f0b6
    xor ecx, ecx
    call 0x14000f0c0
    jmp 0x14000f09f
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    mov ecx, dword ptr [rip + 0x1a0c6]
    cmp ecx, -1
    je 0x14000f0db
    call 0x14000f5d8
    or dword ptr [rip + 0x1a0b5], 0xffffffff
    mov al, 1
    add rsp, 0x28
    ret
    int3 
    int3 
    xor eax, eax
    lea r9, [rip + 0xff53]
    mov rdx, r9
    lea r8d, [rax + 8]
    cmp ecx, dword ptr [rdx]
    je 0x14000f123
    inc eax
    add rdx, r8
    cmp eax, 0x2d
    jb 0x14000f0f4
    lea eax, [rcx - 0x13]
    cmp eax, 0x11
    ja 0x14000f110
    mov eax, 0xd
    ret
    add ecx, 0xffffff44
    mov eax, 0x16
    cmp ecx, 0xe
    cmovbe eax, r8d
    ret
    mov eax, dword ptr [r9 + rax*8 + 4]
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, ecx
    call 0x14000eefc
    test rax, rax
    jne 0x14000f147
    lea rax, [rip + 0x1a1cb]
    jmp 0x14000f14b
    add rax, 0x24
    mov ecx, ebx
    mov dword ptr [rax], ebx
    call 0x14000f0e4
    mov ebx, eax
    call 0x14000eefc
    lea rcx, [rip + 0x1a1aa]
    test rax, rax
    je 0x14000f16b
    lea rcx, [rax + 0x20]
    mov dword ptr [rcx], ebx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rdx
    mov byte ptr [rdx + 0x38], 1
    mov dword ptr [rdx + 0x34], ecx
    call 0x14000f0e4
    mov dword ptr [rbx + 0x2c], eax
    mov byte ptr [rbx + 0x30], 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    sub rsp, 0x28
    call 0x14000eefc
    test rax, rax
    jne 0x14000f1af
    lea rax, [rip + 0x1a163]
    jmp 0x14000f1b3
    add rax, 0x24
    add rsp, 0x28
    ret
    sub rsp, 0x28
    call 0x14000eefc
    test rax, rax
    jne 0x14000f1cf
    lea rax, [rip + 0x1a13f]
    jmp 0x14000f1d3
    add rax, 0x20
    add rsp, 0x28
    ret
    push rbx
    sub rsp, 0x20
    mov r8, rdx
    mov rbx, rcx
    test rcx, rcx
    je 0x14000f1f7
    xor edx, edx
    lea rax, [rdx - 0x20]
    div rbx
    cmp rax, r8
    jb 0x14000f23a
    imul rbx, r8
    mov eax, 1
    test rbx, rbx
    cmove rbx, rax
    jmp 0x14000f21e
    call 0x14000e2a4
    test eax, eax
    je 0x14000f23a
    mov rcx, rbx
    call 0x14000d358
    test eax, eax
    je 0x14000f23a
    mov rcx, qword ptr [rip + 0x1bb23]
    mov r8, rbx
    mov edx, 8
    call qword ptr [rip + 0xdf1d]
    test rax, rax
    je 0x14000f209
    jmp 0x14000f247
    call 0x14000f1b8
    mov dword ptr [rax], 0xc
    xor eax, eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    test rcx, rcx
    je 0x14000f28b
    push rbx
    sub rsp, 0x20
    mov r8, rcx
    xor edx, edx
    mov rcx, qword ptr [rip + 0x1bae2]
    call qword ptr [rip + 0xdeec]
    test eax, eax
    jne 0x14000f286
    call qword ptr [rip + 0xde32]
    mov ecx, eax
    call 0x14000f0e4
    mov ebx, eax
    call 0x14000f1b8
    mov dword ptr [rax], ebx
    add rsp, 0x20
    pop rbx
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x20
    mov r15d, ecx
    lea r14, [rip - 0xf2b2]
    or rdi, 0xffffffffffffffff
    mov r12, r9
    mov rbp, r8
    mov r13, rdx
    mov r10, qword ptr [r14 + r15*8 + 0x2a5b0]
    nop 
    mov r11, qword ptr [rip + 0x19d31]
    xor r10, r11
    mov ecx, r11d
    and ecx, 0x3f
    ror r10, cl
    cmp r10, rdi
    je 0x14000f3cf
    test r10, r10
    je 0x14000f2f1
    mov rax, r10
    jmp 0x14000f3d1
    cmp r8, r12
    je 0x14000f3b4
    mov esi, dword ptr [rbp]
    mov rbx, qword ptr [r14 + rsi*8 + 0x2a500]
    nop 
    test rbx, rbx
    je 0x14000f319
    cmp rbx, rdi
    jne 0x14000f40e
    jmp 0x14000f3a0
    mov r14, qword ptr [r14 + rsi*8 + 0x1f1b0]
    xor edx, edx
    mov rcx, r14
    mov r8d, 0x800
    call qword ptr [rip + 0xddde]
    mov rbx, rax
    test rax, rax
    jne 0x14000f3ee
    call qword ptr [rip + 0xdd64]
    cmp eax, 0x57
    jne 0x14000f38e
    lea ebx, [rax - 0x50]
    mov rcx, r14
    mov r8d, ebx
    lea rdx, [rip + 0xf10f]
    call 0x14000e9e0
    test eax, eax
    je 0x14000f38e
    mov r8d, ebx
    lea rdx, [rip + 0x1038c]
    mov rcx, r14
    call 0x14000e9e0
    test eax, eax
    je 0x14000f38e
    xor r8d, r8d
    xor edx, edx
    mov rcx, r14
    call qword ptr [rip + 0xdd8a]
    mov rbx, rax
    test rax, rax
    jne 0x14000f3ee
    mov rax, rdi
    lea r14, [rip - 0xf398]
    xchg qword ptr [r14 + rsi*8 + 0x2a500], rax
    add rbp, 4
    cmp rbp, r12
    jne 0x14000f2fa
    mov r11, qword ptr [rip + 0x19c4c]
    mov eax, r11d
    mov ecx, 0x40
    and eax, 0x3f
    sub ecx, eax
    ror rdi, cl
    xor rdi, r11
    xchg qword ptr [r14 + r15*8 + 0x2a5b0], rdi
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    add rsp, 0x20
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    mov rax, rbx
    lea r14, [rip - 0xf3f8]
    xchg qword ptr [r14 + rsi*8 + 0x2a500], rax
    test rax, rax
    je 0x14000f40e
    mov rcx, rbx
    call qword ptr [rip + 0xdcf2]
    mov rdx, r13
    mov rcx, rbx
    call qword ptr [rip + 0xdcee]
    test rax, rax
    je 0x14000f3ad
    mov r8, qword ptr [rip + 0x19bda]
    mov edx, 0x40
    mov ecx, r8d
    and ecx, 0x3f
    sub edx, ecx
    mov cl, dl
    mov rdx, rax
    ror rdx, cl
    xor rdx, r8
    xchg qword ptr [r14 + r15*8 + 0x2a5b0], rdx
    jmp 0x14000f3d1
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    lea r9, [rip + 0x10320]
    mov ecx, 0x19
    lea r8, [rip + 0x10310]
    lea rdx, [rip + 0x1030d]
    call 0x14000f28c
    test rax, rax
    je 0x14000f495
    movabs r10, 0xbdc017da34d1c070
    mov rdx, rbx
    mov rcx, 0xfffffffffffffffa
    add rsp, 0x20
    pop rbx
    jmp qword ptr [rip + 0xdde3]
    mov eax, 0xc0000225
    add rsp, 0x20
    pop rbx
    ret
    sub rsp, 0x28
    lea r9, [rip + 0x10261]
    xor ecx, ecx
    lea r8, [rip + 0x10254]
    lea rdx, [rip + 0x10255]
    call 0x14000f28c
    test rax, rax
    je 0x14000f4da
    movabs r10, 0xd30527475e523070
    add rsp, 0x28
    jmp qword ptr [rip + 0xdd9e]
    mov eax, 1
    add rsp, 0x28
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x50
    mov ebx, r9d
    mov rdi, r8
    mov esi, edx
    lea r9, [rip + 0x10221]
    mov rbp, rcx
    lea r8, [rip + 0x1020f]
    lea rdx, [rip + 0x10210]
    mov ecx, 1
    call 0x14000f28c
    mov r11, rax
    test rax, rax
    je 0x14000f589
    movabs r10, 0xab8817f47a550870
    mov rdx, qword ptr [rsp + 0xa0]
    mov r9d, ebx
    mov rcx, qword ptr [rsp + 0x98]
    mov r8, rdi
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x40], rdx
    mov edx, esi
    mov qword ptr [rsp + 0x38], rcx
    mov rcx, qword ptr [rsp + 0x90]
    mov qword ptr [rsp + 0x30], rcx
    mov ecx, dword ptr [rsp + 0x88]
    mov dword ptr [rsp + 0x28], ecx
    mov rcx, rbp
    mov qword ptr [rsp + 0x20], rax
    mov rax, r11
    call qword ptr [rip + 0xdcf1]
    jmp 0x14000f5bb
    xor edx, edx
    mov rcx, rbp
    call 0x14000f74c
    mov ecx, eax
    mov r9d, ebx
    mov eax, dword ptr [rsp + 0x88]
    mov r8, rdi
    mov dword ptr [rsp + 0x28], eax
    mov edx, esi
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x20], rax
    call qword ptr [rip + 0xdbc5]
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x50
    pop rdi
    ret
    jmp qword ptr [rip + 0xdb89]
    int3 
    jmp qword ptr [rip + 0xdb99]
    int3 
    jmp qword ptr [rip + 0xdb81]
    int3 
    jmp qword ptr [rip + 0xdb81]
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov esi, r8d
    lea r9, [rip + 0x10137]
    mov ebx, edx
    lea r8, [rip + 0x10126]
    mov rdi, rcx
    lea rdx, [rip + 0xeebc]
    mov ecx, 0xf
    call 0x14000f28c
    test rax, rax
    je 0x14000f645
    movabs r10, 0x82a03e5032d2da70
    mov r8d, esi
    mov edx, ebx
    mov rcx, rdi
    call qword ptr [rip + 0xdc35]
    jmp 0x14000f650
    mov edx, ebx
    mov rcx, rdi
    call qword ptr [rip + 0xda88]
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x50
    mov ebx, r9d
    mov rdi, r8
    mov esi, edx
    lea r9, [rip + 0x100c5]
    mov rbp, rcx
    lea r8, [rip + 0x100b3]
    lea rdx, [rip + 0x100b4]
    mov ecx, 0x11
    call 0x14000f28c
    mov r11, rax
    test rax, rax
    je 0x14000f705
    movabs r10, 0xe3a11f625057e270
    mov rdx, qword ptr [rsp + 0xa0]
    mov r9d, ebx
    mov rcx, qword ptr [rsp + 0x98]
    mov r8, rdi
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x40], rdx
    mov edx, esi
    mov qword ptr [rsp + 0x38], rcx
    mov rcx, qword ptr [rsp + 0x90]
    mov qword ptr [rsp + 0x30], rcx
    mov ecx, dword ptr [rsp + 0x88]
    mov dword ptr [rsp + 0x28], ecx
    mov rcx, rbp
    mov qword ptr [rsp + 0x20], rax
    mov rax, r11
    call qword ptr [rip + 0xdb75]
    jmp 0x14000f737
    xor edx, edx
    mov rcx, rbp
    call 0x14000f74c
    mov ecx, eax
    mov r9d, ebx
    mov eax, dword ptr [rsp + 0x88]
    mov r8, rdi
    mov dword ptr [rsp + 0x28], eax
    mov edx, esi
    mov rax, qword ptr [rsp + 0x80]
    mov qword ptr [rsp + 0x20], rax
    call qword ptr [rip + 0xda51]
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x50
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov edi, edx
    lea r9, [rip + 0x10001]
    mov rbx, rcx
    lea rdx, [rip + 0xfff7]
    mov ecx, 0x13
    lea r8, [rip + 0xffe3]
    call 0x14000f28c
    test rax, rax
    je 0x14000f796
    movabs r10, 0xeadd062354d83270
    mov edx, edi
    mov rcx, rbx
    call qword ptr [rip + 0xdae4]
    jmp 0x14000f79e
    mov rcx, rbx
    call 0x1400146f0
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rdi
    mov rax, qword ptr [rip + 0x19848]
    lea rdi, [rip + 0x1adf1]
    mov ecx, 0x1f
    rep stosq qword ptr [rdi], rax
    mov rdi, qword ptr [rsp + 8]
    mov al, 1
    ret
    int3 
    push rbx
    sub rsp, 0x20
    test cl, cl
    jne 0x14000f809
    lea rbx, [rip + 0x1ad1f]
    mov rcx, qword ptr [rbx]
    test rcx, rcx
    je 0x14000f7f9
    cmp rcx, -1
    je 0x14000f7f5
    call qword ptr [rip + 0xd90b]
    and qword ptr [rbx], 0
    add rbx, 8
    lea rax, [rip + 0x1ada4]
    cmp rbx, rax
    jne 0x14000f7e1
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    push rdi
    sub rsp, 0x30
    and dword ptr [rsp + 0x20], 0
    mov ecx, 8
    call 0x140011640
    nop 
    mov ebx, 3
    mov dword ptr [rsp + 0x24], ebx
    cmp ebx, dword ptr [rip + 0x1aacb]
    je 0x14000f8ad
    movsxd rdi, ebx
    mov rax, qword ptr [rip + 0x1aac7]
    mov rcx, qword ptr [rax + rdi*8]
    test rcx, rcx
    jne 0x14000f854
    jmp 0x14000f8a9
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 0xd
    and al, 1
    je 0x14000f878
    mov rcx, qword ptr [rip + 0x1aaaa]
    mov rcx, qword ptr [rcx + rdi*8]
    call 0x1400148b8
    cmp eax, -1
    je 0x14000f878
    inc dword ptr [rsp + 0x20]
    mov rax, qword ptr [rip + 0x1aa91]
    mov rcx, qword ptr [rax + rdi*8]
    add rcx, 0x30
    call qword ptr [rip + 0xd843]
    mov rcx, qword ptr [rip + 0x1aa7c]
    mov rcx, qword ptr [rcx + rdi*8]
    call 0x14000f250
    mov rax, qword ptr [rip + 0x1aa6c]
    and qword ptr [rax + rdi*8], 0
    inc ebx
    jmp 0x14000f833
    mov ecx, 8
    call 0x140011694
    mov eax, dword ptr [rsp + 0x20]
    mov rbx, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rdi, r9
    mov rbx, r8
    mov rcx, qword ptr [rdx]
    call 0x14000a094
    nop 
    mov rdx, qword ptr [rbx + 8]
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    test rcx, rcx
    je 0x14000f951
    mov ecx, dword ptr [rcx + 0x14]
    nop 
    mov eax, ecx
    shr eax, 0xd
    and al, 1
    je 0x14000f951
    mov eax, ecx
    and al, 3
    cmp al, 2
    jne 0x14000f90f
    test cl, 0xc0
    jne 0x14000f919
    bt ecx, 0xb
    jb 0x14000f919
    inc dword ptr [rdx]
    jmp 0x14000f951
    mov rax, qword ptr [rbx + 0x10]
    cmp byte ptr [rax], 0
    jne 0x14000f932
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 1
    and al, 1
    je 0x14000f951
    mov rcx, qword ptr [rbx]
    mov rcx, qword ptr [rcx]
    call 0x14000fb34
    cmp eax, -1
    je 0x14000f94a
    mov rax, qword ptr [rbx + 8]
    inc dword ptr [rax]
    jmp 0x14000f951
    mov rax, qword ptr [rbx + 0x18]
    or dword ptr [rax], 0xffffffff
    mov rcx, qword ptr [rdi]
    call 0x14000a0a0
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rsi
    push rdi
    push r14
    sub rsp, 0x60
    mov rdi, r9
    mov rsi, r8
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rbx, qword ptr [rip + 0x1a985]
    movsxd rax, dword ptr [rip + 0x1a976]
    lea r14, [rbx + rax*8]
    mov qword ptr [rsp + 0x38], rbx
    cmp rbx, r14
    je 0x14000fa2d
    mov rax, qword ptr [rbx]
    mov qword ptr [rsp + 0x20], rax
    mov rdx, qword ptr [rsi]
    test rax, rax
    je 0x14000f9d6
    mov ecx, dword ptr [rax + 0x14]
    nop 
    mov eax, ecx
    shr eax, 0xd
    and al, 1
    je 0x14000f9d6
    mov eax, ecx
    and al, 3
    cmp al, 2
    jne 0x14000f9ce
    test cl, 0xc0
    jne 0x14000f9dc
    bt ecx, 0xb
    jb 0x14000f9dc
    inc dword ptr [rdx]
    add rbx, 8
    jmp 0x14000f996
    mov rdx, qword ptr [rsi + 0x10]
    mov rcx, qword ptr [rsi + 8]
    mov rax, qword ptr [rsi]
    lea r8, [rsp + 0x20]
    mov qword ptr [rsp + 0x40], r8
    mov qword ptr [rsp + 0x48], rax
    mov qword ptr [rsp + 0x50], rcx
    mov qword ptr [rsp + 0x58], rdx
    mov rax, qword ptr [rsp + 0x20]
    mov qword ptr [rsp + 0x28], rax
    mov qword ptr [rsp + 0x30], rax
    lea r9, [rsp + 0x28]
    lea r8, [rsp + 0x40]
    lea rdx, [rsp + 0x30]
    lea rcx, [rsp + 0x88]
    call 0x14000f8c8
    jmp 0x14000f9d6
    mov ecx, dword ptr [rdi]
    call 0x140011694
    mov rbx, qword ptr [rsp + 0x80]
    add rsp, 0x60
    pop r14
    pop rdi
    pop rsi
    ret
    int3 
    int3 
    int3 
    mov byte ptr [rsp + 8], cl
    push rbp
    mov rbp, rsp
    sub rsp, 0x40
    and dword ptr [rbp + 0x28], 0
    lea rax, [rbp + 0x28]
    and dword ptr [rbp + 0x20], 0
    lea r9, [rbp - 0x20]
    mov qword ptr [rbp - 0x18], rax
    lea r8, [rbp - 0x18]
    lea rax, [rbp + 0x10]
    mov qword ptr [rbp - 0x10], rax
    lea rdx, [rbp - 0x1c]
    lea rax, [rbp + 0x20]
    mov qword ptr [rbp - 8], rax
    lea rcx, [rbp + 0x18]
    mov eax, 8
    mov dword ptr [rbp - 0x20], eax
    mov dword ptr [rbp - 0x1c], eax
    call 0x14000f964
    cmp byte ptr [rbp + 0x10], 0
    mov eax, dword ptr [rbp + 0x20]
    cmovne eax, dword ptr [rbp + 0x28]
    add rsp, 0x40
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rbx, rcx
    mov rbp, rdx
    mov ecx, dword ptr [rcx + 0x14]
    mov eax, ecx
    and al, 3
    nop 
    cmp al, 2
    jne 0x14000fb1d
    test cl, 0xc0
    je 0x14000fb1d
    mov edi, dword ptr [rbx]
    sub edi, dword ptr [rbx + 8]
    and dword ptr [rbx + 0x10], 0
    mov rsi, qword ptr [rbx + 8]
    mov qword ptr [rbx], rsi
    test edi, edi
    jle 0x14000fb1d
    mov rcx, rbx
    call 0x14001144c
    mov r9, rbp
    mov r8d, edi
    mov rdx, rsi
    mov ecx, eax
    call 0x140015278
    cmp edi, eax
    je 0x14000fb0d
    lock or dword ptr [rbx + 0x14], 0x10
    or eax, 0xffffffff
    jmp 0x14000fb1f
    mov eax, dword ptr [rbx + 0x14]
    nop 
    shr eax, 2
    test al, 1
    je 0x14000fb1d
    lock and dword ptr [rbx + 0x14], 0xfffffffd
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rdi
    push rbp
    mov rbp, rsp
    sub rsp, 0x60
    and qword ptr [rbp - 0x40], 0
    mov rbx, rcx
    cmp dword ptr [rip + 0x1a95b], 0
    mov byte ptr [rbp - 0x30], 0
    mov byte ptr [rbp - 0x18], 0
    mov byte ptr [rbp - 0x10], 0
    mov byte ptr [rbp - 8], 0
    jne 0x14000fb77
    movups xmm0, xmmword ptr [rip + 0x1978a]
    mov byte ptr [rbp - 0x18], 1
    movdqu xmmword ptr [rbp - 0x28], xmm0
    test rbx, rbx
    jne 0x14000fb87
    xor ecx, ecx
    call 0x14000fa48
    mov edi, eax
    jmp 0x14000fbb9
    lea rdx, [rbp - 0x40]
    call 0x14000faa8
    test eax, eax
    je 0x14000fb99
    or edi, 0xffffffff
    jmp 0x14000fbb9
    mov eax, dword ptr [rbx + 0x14]
    nop 
    shr eax, 0xb
    test al, 1
    je 0x14000fbb7
    mov rcx, rbx
    call 0x14001144c
    mov ecx, eax
    call 0x1400149dc
    test eax, eax
    jne 0x14000fb94
    xor edi, edi
    cmp byte ptr [rbp - 0x18], 2
    jne 0x14000fbca
    mov rax, qword ptr [rbp - 0x40]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x10], 0
    je 0x14000fbdf
    mov ebx, dword ptr [rbp - 0x14]
    lea rcx, [rbp - 0x40]
    call 0x140009a80
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 8], 0
    je 0x14000fbf4
    mov ebx, dword ptr [rbp - 0xc]
    lea rcx, [rbp - 0x40]
    call 0x140009a80
    mov dword ptr [rax + 0x24], ebx
    mov rbx, qword ptr [rsp + 0x70]
    mov eax, edi
    mov rdi, qword ptr [rsp + 0x78]
    add rsp, 0x60
    pop rbp
    ret
    int3 
    int3 
    mov cl, 1
    jmp 0x14000fa48
    int3 
    push rbx
    sub rsp, 0x20
    mov eax, dword ptr [rcx + 0x14]
    mov rbx, rcx
    shr eax, 0xd
    nop 
    test al, 1
    je 0x14000fc4c
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 6
    test al, 1
    je 0x14000fc4c
    mov rcx, qword ptr [rcx + 8]
    call 0x14000f250
    lock and dword ptr [rbx + 0x14], 0xfffffebf
    xor eax, eax
    mov qword ptr [rbx + 8], rax
    mov qword ptr [rbx], rax
    mov dword ptr [rbx + 0x10], eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x90
    lea rcx, [rax - 0x78]
    call qword ptr [rip + 0xd3fe]
    xor r14d, r14d
    cmp word ptr [rsp + 0x62], r14w
    je 0x14000fd23
    mov rax, qword ptr [rsp + 0x68]
    test rax, rax
    je 0x14000fd23
    movsxd rbx, dword ptr [rax]
    lea rsi, [rax + 4]
    mov edi, 0x2000
    add rbx, rsi
    cmp dword ptr [rax], edi
    cmovl edi, dword ptr [rax]
    mov ecx, edi
    call 0x1400137a8
    cmp edi, dword ptr [rip + 0x1adf8]
    cmovg edi, dword ptr [rip + 0x1adf1]
    test edi, edi
    je 0x14000fd23
    mov ebp, r14d
    cmp qword ptr [rbx], -1
    je 0x14000fd13
    cmp qword ptr [rbx], -2
    je 0x14000fd13
    test byte ptr [rsi], 1
    je 0x14000fd13
    test byte ptr [rsi], 8
    jne 0x14000fce9
    mov rcx, qword ptr [rbx]
    call qword ptr [rip + 0xd4ab]
    test eax, eax
    je 0x14000fd13
    mov rax, rbp
    lea r8, [rip + 0x1a9bd]
    mov rcx, rbp
    sar rcx, 6
    and eax, 0x3f
    mov rcx, qword ptr [r8 + rcx*8]
    lea rdx, [rax + rax*8]
    mov rax, qword ptr [rbx]
    mov qword ptr [rcx + rdx*8 + 0x28], rax
    mov al, byte ptr [rsi]
    mov byte ptr [rcx + rdx*8 + 0x38], al
    inc rbp
    inc rsi
    add rbx, 8
    sub rdi, 1
    jne 0x14000fcc6
    lea r11, [rsp + 0x90]
    mov rbx, qword ptr [r11 + 0x10]
    mov rbp, qword ptr [r11 + 0x18]
    mov rsi, qword ptr [r11 + 0x20]
    mov rdi, qword ptr [r11 + 0x28]
    mov rsp, r11
    pop r14
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x20
    xor esi, esi
    xor r14d, r14d
    movsxd rcx, esi
    lea rdi, [rip + 0x1a944]
    mov rax, rcx
    and ecx, 0x3f
    sar rax, 6
    lea rbx, [rcx + rcx*8]
    mov rdi, qword ptr [rdi + rax*8]
    mov rax, qword ptr [rdi + rbx*8 + 0x28]
    add rax, 2
    cmp rax, 1
    jbe 0x14000fd97
    or byte ptr [rdi + rbx*8 + 0x38], 0x80
    jmp 0x14000fe22
    mov byte ptr [rdi + rbx*8 + 0x38], 0x81
    mov ecx, esi
    test esi, esi
    je 0x14000fdb8
    sub ecx, 1
    je 0x14000fdb1
    cmp ecx, 1
    mov ecx, 0xfffffff4
    jmp 0x14000fdbd
    mov ecx, 0xfffffff5
    jmp 0x14000fdbd
    mov ecx, 0xfffffff6
    call qword ptr [rip + 0xd355]
    mov rbp, rax
    lea rcx, [rax + 1]
    cmp rcx, 1
    jbe 0x14000fdfd
    mov rcx, rax
    call qword ptr [rip + 0xd3b7]
    test eax, eax
    je 0x14000fdfd
    movzx eax, al
    mov qword ptr [rdi + rbx*8 + 0x28], rbp
    cmp eax, 2
    jne 0x14000fdf1
    or byte ptr [rdi + rbx*8 + 0x38], 0x40
    jmp 0x14000fe22
    cmp eax, 3
    jne 0x14000fe22
    or byte ptr [rdi + rbx*8 + 0x38], 8
    jmp 0x14000fe22
    or byte ptr [rdi + rbx*8 + 0x38], 0x40
    mov qword ptr [rdi + rbx*8 + 0x28], 0xfffffffffffffffe
    mov rax, qword ptr [rip + 0x1a4fe]
    test rax, rax
    je 0x14000fe22
    mov rax, qword ptr [r14 + rax]
    mov dword ptr [rax + 0x18], 0xfffffffe
    inc esi
    add r14, 8
    cmp esi, 3
    jne 0x14000fd62
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    mov rdi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop r14
    ret
    push rbx
    sub rsp, 0x20
    mov ecx, 7
    call 0x140011640
    xor ebx, ebx
    xor ecx, ecx
    call 0x1400137a8
    test eax, eax
    jne 0x14000fe75
    call 0x14000fc54
    call 0x14000fd44
    mov bl, 1
    mov ecx, 7
    call 0x140011694
    mov al, bl
    add rsp, 0x20
    pop rbx
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    xor ebx, ebx
    lea rdi, [rip + 0x1a815]
    mov rcx, qword ptr [rbx + rdi]
    test rcx, rcx
    je 0x14000feae
    call 0x140013758
    and qword ptr [rbx + rdi], 0
    add rbx, 8
    cmp rbx, 0x400
    jb 0x14000fe94
    mov rbx, qword ptr [rsp + 0x30]
    mov al, 1
    add rsp, 0x20
    pop rdi
    ret
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    cmp rcx, -0x20
    ja 0x14000ff13
    test rcx, rcx
    mov eax, 1
    cmove rbx, rax
    jmp 0x14000fefa
    call 0x14000e2a4
    test eax, eax
    je 0x14000ff13
    mov rcx, rbx
    call 0x14000d358
    test eax, eax
    je 0x14000ff13
    mov rcx, qword ptr [rip + 0x1ae47]
    mov r8, rbx
    xor edx, edx
    call qword ptr [rip + 0xd244]
    test rax, rax
    je 0x14000fee5
    jmp 0x14000ff20
    call 0x14000f1b8
    mov dword ptr [rax], 0xc
    xor eax, eax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    mov eax, dword ptr [rip + 0x1912a]
    mov r9, rcx
    cmp eax, 5
    jl 0x14000ffcd
    mov r8, rcx
    mov eax, 0x20
    and r8d, 0x1f
    sub rax, r8
    neg r8
    sbb r10, r10
    and r10, rax
    mov rax, r9
    cmp rdx, r10
    cmovb r10, rdx
    add rcx, r10
    cmp r9, rcx
    je 0x14000ff71
    cmp byte ptr [rax], 0
    je 0x14000ff71
    inc rax
    cmp rax, rcx
    jne 0x14000ff64
    mov rcx, rax
    sub rcx, r9
    cmp rcx, r10
    jne 0x140010074
    mov r8, rdx
    mov rcx, rax
    sub r8, r10
    and r8, 0xffffffffffffffe0
    add r8, rax
    cmp rax, r8
    je 0x14000ffb1
    vpxor xmm1, xmm1, xmm1
    vpcmpeqb ymm1, ymm1, ymmword ptr [rcx]
    vpmovmskb eax, ymm1
    test eax, eax
    vzeroupper 
    jne 0x14000ffb1
    add rcx, 0x20
    cmp rcx, r8
    jne 0x14000ff95
    lea rax, [r9 + rdx]
    jmp 0x14000ffc3
    cmp byte ptr [rcx], 0
    je 0x140010071
    inc rcx
    cmp rcx, rax
    jne 0x14000ffb7
    jmp 0x140010071
    cmp eax, 1
    jl 0x14001005b
    and ecx, 0xf
    mov eax, 0x10
    sub rax, rcx
    neg rcx
    sbb r10, r10
    and r10, rax
    mov rax, r9
    cmp rdx, r10
    cmovb r10, rdx
    lea rcx, [r10 + r9]
    cmp r9, rcx
    je 0x14001000a
    cmp byte ptr [rax], 0
    je 0x14001000a
    inc rax
    cmp rax, rcx
    jne 0x14000fffd
    mov rcx, rax
    sub rcx, r9
    cmp rcx, r10
    jne 0x140010074
    mov r8, rdx
    mov rcx, rax
    sub r8, r10
    xorps xmm1, xmm1
    and r8, 0xfffffffffffffff0
    add r8, rax
    cmp rax, r8
    je 0x140010046
    movdqa xmm0, xmm1
    pcmpeqb xmm0, xmmword ptr [rcx]
    pmovmskb eax, xmm0
    test eax, eax
    jne 0x140010046
    add rcx, 0x10
    cmp rcx, r8
    jne 0x14001002d
    lea rax, [r9 + rdx]
    jmp 0x140010054
    cmp byte ptr [rcx], 0
    je 0x140010071
    inc rcx
    cmp rcx, rax
    jne 0x14001004c
    jmp 0x140010071
    lea rax, [rcx + rdx]
    cmp r9, rax
    je 0x140010071
    cmp byte ptr [rcx], 0
    je 0x140010071
    inc rcx
    cmp rcx, rax
    jne 0x140010064
    sub rcx, r9
    mov rax, rcx
    ret
    mov eax, dword ptr [rip + 0x18fda]
    mov r10, rdx
    mov r8, rcx
    cmp eax, 5
    jl 0x140010159
    test r8b, 1
    je 0x1400100bc
    lea rax, [rcx + rdx*2]
    mov rdx, rcx
    cmp rcx, rax
    je 0x140010244
    xor ecx, ecx
    cmp word ptr [rdx], cx
    je 0x140010244
    add rdx, 2
    cmp rdx, rax
    jne 0x1400100a5
    jmp 0x140010244
    and ecx, 0x1f
    mov eax, 0x20
    sub rax, rcx
    mov rdx, r8
    neg rcx
    sbb r11, r11
    and r11, rax
    shr r11, 1
    cmp r10, r11
    cmovb r11, r10
    xor ecx, ecx
    lea rax, [r8 + r11*2]
    cmp r8, rax
    je 0x1400100f6
    cmp word ptr [rdx], cx
    je 0x1400100f6
    add rdx, 2
    cmp rdx, rax
    jne 0x1400100e8
    sub rdx, r8
    sar rdx, 1
    cmp rdx, r11
    jne 0x14001024a
    lea r9, [r8 + rdx*2]
    mov rax, r10
    sub rax, r11
    and rax, 0xffffffffffffffe0
    add rax, rdx
    lea rdx, [r8 + rax*2]
    cmp r9, rdx
    je 0x14001013c
    vpxor xmm1, xmm1, xmm1
    vpcmpeqw ymm1, ymm1, ymmword ptr [r9]
    vpmovmskb eax, ymm1
    test eax, eax
    vzeroupper 
    jne 0x14001013c
    add r9, 0x20
    cmp r9, rdx
    jne 0x14001011f
    lea rax, [r8 + r10*2]
    jmp 0x14001014c
    cmp word ptr [r9], cx
    je 0x140010151
    add r9, 2
    cmp r9, rax
    jne 0x140010142
    mov rdx, r9
    jmp 0x140010244
    cmp eax, 1
    jl 0x140010228
    test r8b, 1
    je 0x140010191
    lea rax, [rcx + rdx*2]
    mov rdx, r8
    cmp r8, rax
    je 0x140010244
    xor ecx, ecx
    cmp word ptr [rdx], cx
    je 0x140010244
    add rdx, 2
    cmp rdx, rax
    jne 0x14001017a
    jmp 0x140010244
    and ecx, 0xf
    mov eax, 0x10
    sub rax, rcx
    mov rdx, r8
    neg rcx
    sbb r11, r11
    and r11, rax
    shr r11, 1
    cmp r10, r11
    cmovb r11, r10
    xor ecx, ecx
    lea rax, [r8 + r11*2]
    cmp r8, rax
    je 0x1400101cb
    cmp word ptr [rdx], cx
    je 0x1400101cb
    add rdx, 2
    cmp rdx, rax
    jne 0x1400101bd
    sub rdx, r8
    sar rdx, 1
    cmp rdx, r11
    jne 0x14001024a
    mov rax, r10
    lea r9, [r8 + rdx*2]
    sub rax, r11
    xorps xmm1, xmm1
    and rax, 0xfffffffffffffff0
    add rax, rdx
    lea rdx, [r8 + rax*2]
    jmp 0x140010205
    movdqa xmm0, xmm1
    pcmpeqw xmm0, xmmword ptr [r9]
    pmovmskb eax, xmm0
    test eax, eax
    jne 0x14001020a
    add r9, 0x10
    cmp r9, rdx
    jne 0x1400101f0
    lea rax, [r8 + r10*2]
    jmp 0x14001021e
    cmp word ptr [r9], cx
    je 0x140010151
    add r9, 2
    cmp r9, rax
    jne 0x140010210
    jmp 0x140010151
    lea rax, [rcx + rdx*2]
    mov rdx, r8
    cmp r8, rax
    je 0x140010244
    xor ecx, ecx
    cmp word ptr [rdx], cx
    je 0x140010244
    add rdx, 2
    cmp rdx, rax
    jne 0x140010236
    sub rdx, r8
    sar rdx, 1
    mov rax, rdx
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rax, qword ptr [rip + 0x1a293]
    mov rbx, rdx
    cmp qword ptr [rdx], rax
    je 0x14001027b
    mov eax, dword ptr [rcx + 0x3a8]
    test dword ptr [rip + 0x196df], eax
    jne 0x14001027b
    call 0x140014168
    mov qword ptr [rbx], rax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    lea rax, [rip + 0x1a25f]
    mov rbx, rdx
    mov rax, qword ptr [rax + r8*8]
    cmp qword ptr [rdx], rax
    je 0x1400102b3
    mov eax, dword ptr [rcx + 0x3a8]
    test dword ptr [rip + 0x196a7], eax
    jne 0x1400102b3
    call 0x140014168
    mov qword ptr [rbx], rax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rax, qword ptr [rip + 0x1aa5f]
    mov rbx, rdx
    cmp qword ptr [rdx], rax
    je 0x1400102e7
    mov eax, dword ptr [rcx + 0x3a8]
    test dword ptr [rip + 0x19673], eax
    jne 0x1400102e7
    call 0x140012c20
    mov qword ptr [rbx], rax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    lea rax, [rip + 0x1aa2b]
    mov rbx, rdx
    mov rax, qword ptr [rax + r8*8]
    cmp qword ptr [rdx], rax
    je 0x14001031f
    mov eax, dword ptr [rcx + 0x3a8]
    test dword ptr [rip + 0x1963b], eax
    jne 0x14001031f
    call 0x140012c20
    mov qword ptr [rbx], rax
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x50
    mov eax, dword ptr [rsp + 0xa8]
    xor r11d, r11d
    test eax, eax
    mov byte ptr [rdx], r11b
    mov edi, r11d
    mov r10, r9
    cmovns edi, eax
    mov rbx, rdx
    mov r14, rcx
    lea eax, [rdi + 0xb]
    movsxd r9, eax
    cmp r8, r9
    ja 0x1400103a0
    mov rcx, qword ptr [rsp + 0xc8]
    lea ebx, [r11 + 0x22]
    mov qword ptr [rsp + 0x28], rcx
    xor r9d, r9d
    xor r8d, r8d
    mov qword ptr [rsp + 0x20], r11
    xor edx, edx
    mov byte ptr [rcx + 0x30], 1
    mov dword ptr [rcx + 0x2c], ebx
    xor ecx, ecx
    call 0x140009da0
    mov eax, ebx
    jmp 0x1400106a1
    mov rax, qword ptr [rcx]
    mov ecx, 0x7ff
    shr rax, 0x34
    and rax, rcx
    cmp rax, rcx
    jne 0x140010439
    mov rax, qword ptr [rsp + 0xc8]
    mov r9, r10
    mov qword ptr [rsp + 0x48], rax
    mov rcx, r14
    mov eax, dword ptr [rsp + 0xc0]
    mov dword ptr [rsp + 0x40], eax
    mov eax, dword ptr [rsp + 0xb8]
    mov dword ptr [rsp + 0x38], eax
    mov rax, qword ptr [rsp + 0xa0]
    mov byte ptr [rsp + 0x30], r11b
    mov dword ptr [rsp + 0x28], edi
    mov qword ptr [rsp + 0x20], rax
    call 0x1400106c0
    test eax, eax
    je 0x140010408
    mov byte ptr [rbx], 0
    jmp 0x1400106a1
    mov edx, 0x65
    mov rcx, rbx
    call 0x14001ad5c
    test rax, rax
    je 0x14001069f
    mov cl, byte ptr [rsp + 0xb0]
    xor cl, 1
    shl cl, 5
    add cl, 0x50
    mov byte ptr [rax], cl
    mov byte ptr [rax + 3], 0
    jmp 0x14001069f
    mov eax, 0x2d
    cmp qword ptr [r14], r11
    jge 0x140010448
    mov byte ptr [rdx], al
    inc rbx
    mov al, byte ptr [rsp + 0xb0]
    lea r12, [rbx + 1]
    xor al, 1
    mov r15d, 0x3ff
    movzx r13d, al
    mov r8d, 0x30
    mov ebp, r13d
    movabs rax, 0x7ff0000000000000
    shl ebp, 5
    movabs r9, 0xfffffffffffff
    add ebp, 7
    test qword ptr [r14], rax
    jne 0x14001049f
    mov byte ptr [rbx], r8b
    mov rax, qword ptr [r14]
    and rax, r9
    neg rax
    sbb r15, r15
    and r15d, 0x3fe
    jmp 0x1400104a2
    mov byte ptr [rbx], 0x31
    lea rsi, [r12 + 1]
    test edi, edi
    jne 0x1400104b0
    mov al, r11b
    jmp 0x1400104e7
    mov rbx, qword ptr [rsp + 0xc8]
    cmp byte ptr [rbx + 0x28], r11b
    jne 0x1400104d7
    mov rcx, rbx
    call 0x14000cc40
    xor r11d, r11d
    movabs r9, 0xfffffffffffff
    lea r8d, [r11 + 0x30]
    mov rax, qword ptr [rbx + 0x18]
    mov rcx, qword ptr [rax + 0xf8]
    mov rax, qword ptr [rcx]
    mov al, byte ptr [rax]
    mov byte ptr [r12], al
    test qword ptr [r14], r9
    jbe 0x14001057e
    movzx edx, r8w
    movabs r10, 0xf000000000000
    movzx ecx, dx
    test edi, edi
    jle 0x140010535
    mov rax, qword ptr [r14]
    and rax, r10
    and rax, r9
    shr rax, cl
    add ax, r8w
    cmp ax, 0x39
    jbe 0x140010522
    add ax, bp
    mov byte ptr [rsi], al
    dec edi
    inc rsi
    shr r10, 4
    add dx, -4
    jns 0x140010502
    jmp 0x14001057e
    mov r9d, dword ptr [rsp + 0xc0]
    movzx r8d, cx
    mov rcx, r14
    mov rdx, r10
    call 0x140010d24
    xor r11d, r11d
    test al, al
    je 0x14001059f
    lea rcx, [rsi - 1]
    mov dl, byte ptr [rcx]
    lea eax, [rdx - 0x46]
    test al, 0xdf
    jne 0x140010568
    mov byte ptr [rcx], 0x30
    dec rcx
    jmp 0x140010557
    cmp rcx, r12
    je 0x14001057b
    cmp dl, 0x39
    jne 0x140010575
    add dl, bpl
    inc dl
    mov byte ptr [rcx], dl
    jmp 0x14001057e
    inc byte ptr [rcx - 1]
    test edi, edi
    jle 0x14001059f
    mov r8d, edi
    mov rcx, rsi
    mov ebx, edi
    mov edi, 0x30
    mov dl, dil
    call 0x14001b630
    add rsi, rbx
    xor r11d, r11d
    jmp 0x1400105a4
    mov edi, 0x30
    cmp byte ptr [r12], r11b
    cmove rsi, r12
    shl r13b, 5
    add r13b, 0x50
    mov byte ptr [rsi], r13b
    lea r9, [rsi + 2]
    mov rax, qword ptr [r14]
    shr rax, 0x34
    and eax, 0x7ff
    mov ecx, eax
    sub rcx, r15
    mov rdx, rcx
    jns 0x1400105d7
    mov rcx, r15
    sub rcx, rax
    test rdx, rdx
    mov eax, 0x2b
    mov r8, r9
    lea edx, [rax + 2]
    cmovs eax, edx
    mov byte ptr [rsi + 1], al
    mov byte ptr [r9], dil
    cmp rcx, 0x3e8
    jl 0x14001062b
    movabs rax, 0x20c49ba5e353f7cf
    lea r8, [r9 + 1]
    imul rcx
    sar rdx, 7
    mov rax, rdx
    shr rax, 0x3f
    add rdx, rax
    lea eax, [rdi + rdx]
    mov byte ptr [r9], al
    imul rax, rdx, -0x3e8
    add rcx, rax
    cmp r8, r9
    jne 0x140010631
    cmp rcx, 0x64
    jl 0x140010664
    movabs rax, 0xa3d70a3d70a3d70b
    imul rcx
    add rdx, rcx
    sar rdx, 6
    mov rax, rdx
    shr rax, 0x3f
    add rdx, rax
    lea eax, [rdi + rdx]
    mov byte ptr [r8], al
    inc r8
    imul rax, rdx, -0x64
    add rcx, rax
    cmp r8, r9
    jne 0x14001066a
    cmp rcx, 0xa
    jl 0x140010695
    movabs rax, 0x6666666666666667
    imul rcx
    sar rdx, 2
    mov rax, rdx
    shr rax, 0x3f
    add rdx, rax
    lea eax, [rdi + rdx]
    mov byte ptr [r8], al
    inc r8
    imul rax, rdx, -0xa
    add rcx, rax
    add cl, dil
    mov byte ptr [r8], cl
    mov byte ptr [r8 + 1], r11b
    xor eax, eax
    lea r11, [rsp + 0x50]
    mov rbx, qword ptr [r11 + 0x30]
    mov rbp, qword ptr [r11 + 0x40]
    mov rsi, qword ptr [r11 + 0x48]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 8], rbx
    mov qword ptr [r11 + 0x10], rbp
    mov qword ptr [r11 + 0x18], rsi
    mov qword ptr [r11 + 0x20], rdi
    push r14
    sub rsp, 0x50
    mov rax, qword ptr [rsp + 0x80]
    mov rsi, r8
    mov ebp, dword ptr [rsp + 0x88]
    mov rdi, rdx
    mov rcx, qword ptr [rcx]
    mov r8d, 1
    mov qword ptr [r11 - 0x30], rax
    mov qword ptr [r11 - 0x38], r9
    lea r9, [r11 - 0x18]
    lea edx, [rbp + 1]
    call 0x140015d1c
    mov r14, qword ptr [rsp + 0xa8]
    lea r8d, [rbp + 1]
    xor r9d, r9d
    mov qword ptr [rsp + 0x30], r14
    cmp dword ptr [rsp + 0x40], 0x2d
    mov r10d, eax
    mov eax, dword ptr [rsp + 0xa0]
    mov rdx, rsi
    sete r9b
    mov dword ptr [rsp + 0x28], eax
    xor ecx, ecx
    mov dword ptr [rsp + 0x20], r10d
    test ebp, ebp
    setg cl
    sub rdx, rcx
    sub rdx, r9
    cmp rsi, -1
    cmove rdx, rsi
    add rcx, r9
    add rcx, rdi
    lea r9, [rsp + 0x40]
    call 0x140015770
    test eax, eax
    je 0x14001076c
    mov byte ptr [rdi], 0
    jmp 0x1400107a1
    mov r9b, byte ptr [rsp + 0x90]
    lea rax, [rsp + 0x40]
    mov qword ptr [rsp + 0x38], r14
    mov r8d, ebp
    mov byte ptr [rsp + 0x30], 0
    mov rdx, rsi
    mov qword ptr [rsp + 0x28], rax
    mov rcx, rdi
    mov eax, dword ptr [rsp + 0x98]
    mov dword ptr [rsp + 0x20], eax
    call 0x1400107bc
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    mov rdi, qword ptr [rsp + 0x78]
    add rsp, 0x50
    pop r14
    ret
    mov r11, rsp
    mov qword ptr [r11 + 8], rbx
    mov qword ptr [r11 + 0x10], rbp
    mov qword ptr [r11 + 0x18], rsi
    mov qword ptr [r11 + 0x20], rdi
    push r13
    push r14
    push r15
    sub rsp, 0x30
    xor eax, eax
    movsxd rbp, r8d
    test r8d, r8d
    mov r13b, r9b
    mov r15, rdx
    mov rdi, rcx
    cmovg eax, ebp
    add eax, 9
    cdqe 
    cmp rdx, rax
    ja 0x140010844
    mov rcx, qword ptr [rsp + 0x88]
    mov ebx, 0x22
    mov qword ptr [r11 - 0x20], rcx
    xor r9d, r9d
    and qword ptr [r11 - 0x28], 0
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rcx + 0x30], 1
    mov dword ptr [rcx + 0x2c], ebx
    xor ecx, ecx
    call 0x140009da0
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    mov rdi, qword ptr [rsp + 0x68]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    ret
    cmp byte ptr [rsp + 0x80], 0
    mov rsi, qword ptr [rsp + 0x78]
    je 0x14001087d
    xor edx, edx
    cmp dword ptr [rsi], 0x2d
    sete dl
    add rdx, rdi
    test r8d, r8d
    jle 0x14001087d
    or r8, 0xffffffffffffffff
    inc r8
    cmp byte ptr [rdx + r8], 0
    jne 0x140010867
    inc r8
    lea rcx, [rdx + 1]
    call 0x14001af90
    cmp dword ptr [rsi], 0x2d
    mov rbx, rdi
    jne 0x14001088c
    mov byte ptr [rdi], 0x2d
    lea rbx, [rdi + 1]
    test ebp, ebp
    jle 0x1400108c1
    mov al, byte ptr [rbx + 1]
    mov r14, qword ptr [rsp + 0x88]
    mov byte ptr [rbx], al
    inc rbx
    cmp byte ptr [r14 + 0x28], 0
    jne 0x1400108af
    mov rcx, r14
    call 0x14000cc40
    mov rax, qword ptr [r14 + 0x18]
    mov rcx, qword ptr [rax + 0xf8]
    mov rax, qword ptr [rcx]
    mov cl, byte ptr [rax]
    mov byte ptr [rbx], cl
    movzx ecx, byte ptr [rsp + 0x80]
    lea r8, [rip + 0xef9c]
    xor rcx, 1
    add rbx, rbp
    add rbx, rcx
    sub rdi, rbx
    mov rcx, rbx
    cmp r15, -1
    lea rdx, [r15 + rdi]
    cmove rdx, r15
    call 0x14000e890
    test eax, eax
    jne 0x140010987
    lea rcx, [rbx + 2]
    test r13b, r13b
    je 0x140010905
    mov byte ptr [rbx], 0x45
    mov rax, qword ptr [rsi + 8]
    cmp byte ptr [rax], 0x30
    je 0x140010965
    mov r8d, dword ptr [rsi + 4]
    sub r8d, 1
    jns 0x14001091f
    neg r8d
    mov byte ptr [rbx + 1], 0x2d
    cmp r8d, 0x64
    jl 0x140010940
    mov eax, 0x51eb851f
    imul r8d
    sar edx, 5
    mov eax, edx
    shr eax, 0x1f
    add edx, eax
    add byte ptr [rbx + 2], dl
    imul eax, edx, -0x64
    add r8d, eax
    cmp r8d, 0xa
    jl 0x140010961
    mov eax, 0x66666667
    imul r8d
    sar edx, 2
    mov eax, edx
    shr eax, 0x1f
    add edx, eax
    add byte ptr [rbx + 3], dl
    imul eax, edx, -0xa
    add r8d, eax
    add byte ptr [rbx + 4], r8b
    cmp dword ptr [rsp + 0x70], 2
    jne 0x140010980
    cmp byte ptr [rcx], 0x30
    jne 0x140010980
    lea rdx, [rcx + 1]
    mov r8d, 3
    call 0x14001af90
    xor eax, eax
    jmp 0x140010825
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009ebc
    int3 
    int3 
    int3 
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 8], rbx
    mov qword ptr [r11 + 0x10], rbp
    mov qword ptr [r11 + 0x18], rsi
    push rdi
    sub rsp, 0x50
    mov rax, qword ptr [rsp + 0x80]
    mov rdi, r8
    mov esi, dword ptr [rsp + 0x88]
    mov rbx, rdx
    mov rcx, qword ptr [rcx]
    xorps xmm0, xmm0
    mov qword ptr [r11 - 0x30], rax
    xor r8d, r8d
    mov qword ptr [r11 - 0x38], r9
    mov edx, esi
    lea r9, [r11 - 0x18]
    movups xmmword ptr [rsp + 0x40], xmm0
    call 0x140015d1c
    mov r8d, dword ptr [rsp + 0x44]
    xor r9d, r9d
    cmp dword ptr [rsp + 0x40], 0x2d
    mov r10d, eax
    mov eax, dword ptr [rsp + 0x90]
    mov rdx, rdi
    mov rbp, qword ptr [rsp + 0x98]
    sete r9b
    sub rdx, r9
    mov qword ptr [rsp + 0x30], rbp
    add r8d, esi
    mov dword ptr [rsp + 0x28], eax
    cmp rdi, -1
    mov dword ptr [rsp + 0x20], r10d
    lea rcx, [r9 + rbx]
    cmove rdx, rdi
    lea r9, [rsp + 0x40]
    call 0x140015770
    test eax, eax
    je 0x140010a43
    mov byte ptr [rbx], 0
    jmp 0x140010a60
    mov qword ptr [rsp + 0x28], rbp
    lea r9, [rsp + 0x40]
    mov r8d, esi
    mov byte ptr [rsp + 0x20], 0
    mov rdx, rdi
    mov rcx, rbx
    call 0x140010a78
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x50
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    cmp byte ptr [rsp + 0x60], 0
    mov rbx, rcx
    movsxd rcx, dword ptr [r9 + 4]
    mov r14, r9
    mov ebp, r8d
    je 0x140010abf
    lea eax, [rcx - 1]
    cmp eax, r8d
    jne 0x140010abf
    xor eax, eax
    cmp dword ptr [r9], 0x2d
    sete al
    add rax, rbx
    mov word ptr [rcx + rax - 1], 0x30
    cmp dword ptr [r9], 0x2d
    jne 0x140010acb
    mov byte ptr [rbx], 0x2d
    inc rbx
    movsxd rax, dword ptr [r9 + 4]
    or rdi, 0xffffffffffffffff
    test eax, eax
    jg 0x140010b20
    jne 0x140010ae6
    mov rax, qword ptr [r9 + 8]
    cmp byte ptr [rax], 0x30
    jne 0x140010ae6
    mov al, 1
    jmp 0x140010ae8
    xor al, al
    cmp byte ptr [rsp + 0x60], 0
    je 0x140010af9
    test al, al
    je 0x140010af9
    lea rsi, [rbx + 1]
    jmp 0x140010b18
    lea rsi, [rbx + 1]
    mov r8, rdi
    inc r8
    cmp byte ptr [rbx + r8], 0
    jne 0x140010b00
    inc r8
    mov rdx, rbx
    mov rcx, rsi
    call 0x14001af90
    mov byte ptr [rbx], 0x30
    mov rbx, rsi
    jmp 0x140010b23
    add rbx, rax
    test ebp, ebp
    jle 0x140010bb3
    lea rsi, [rbx + 1]
    mov r8, rdi
    inc r8
    cmp byte ptr [rbx + r8], 0
    jne 0x140010b32
    inc r8
    mov rdx, rbx
    mov rcx, rsi
    call 0x14001af90
    mov r15, qword ptr [rsp + 0x68]
    cmp byte ptr [r15 + 0x28], 0
    jne 0x140010b5e
    mov rcx, r15
    call 0x14000cc40
    mov rax, qword ptr [r15 + 0x18]
    mov rcx, qword ptr [rax + 0xf8]
    mov rax, qword ptr [rcx]
    mov cl, byte ptr [rax]
    mov byte ptr [rbx], cl
    mov eax, dword ptr [r14 + 4]
    test eax, eax
    jns 0x140010bb3
    neg eax
    cmp byte ptr [rsp + 0x60], 0
    jne 0x140010b85
    cmp eax, ebp
    jge 0x140010b87
    mov ebp, eax
    movsxd rbx, ebp
    inc rdi
    cmp byte ptr [rsi + rdi], 0
    jne 0x140010b8a
    lea r8, [rdi + 1]
    mov rdx, rsi
    lea rcx, [rbx + rsi]
    call 0x14001af90
    mov r8, rbx
    mov edx, 0x30
    mov rcx, rsi
    call 0x14001b630
    mov rbx, qword ptr [rsp + 0x40]
    xor eax, eax
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    int3 
    int3 
    mov r11, rsp
    mov qword ptr [r11 + 8], rbx
    mov qword ptr [r11 + 0x10], rbp
    mov qword ptr [r11 + 0x18], rdi
    mov qword ptr [r11 + 0x20], r14
    push r15
    sub rsp, 0x50
    mov rax, qword ptr [rsp + 0x80]
    mov rbp, r8
    mov rcx, qword ptr [rcx]
    mov rdi, rdx
    mov edx, dword ptr [rsp + 0x88]
    xorps xmm0, xmm0
    mov qword ptr [r11 - 0x30], rax
    xor r8d, r8d
    mov qword ptr [r11 - 0x38], r9
    lea r9, [r11 - 0x18]
    movups xmmword ptr [rsp + 0x40], xmm0
    call 0x140015d1c
    mov r15d, dword ptr [rsp + 0x44]
    xor r8d, r8d
    cmp dword ptr [rsp + 0x40], 0x2d
    mov r9d, eax
    mov eax, dword ptr [rsp + 0xa0]
    mov rdx, rbp
    mov r14, qword ptr [rsp + 0xa8]
    sete r8b
    sub rdx, r8
    mov qword ptr [rsp + 0x30], r14
    mov dword ptr [rsp + 0x28], eax
    dec r15d
    mov dword ptr [rsp + 0x20], r9d
    cmp rbp, -1
    lea rbx, [r8 + rdi]
    mov r8d, dword ptr [rsp + 0x88]
    cmove rdx, rbp
    lea r9, [rsp + 0x40]
    mov rcx, rbx
    call 0x140015770
    test eax, eax
    je 0x140010c84
    mov byte ptr [rdi], 0
    jmp 0x140010d07
    mov eax, dword ptr [rsp + 0x44]
    dec eax
    cmp eax, -4
    jl 0x140010ccd
    cmp eax, dword ptr [rsp + 0x88]
    jge 0x140010ccd
    cmp r15d, eax
    jge 0x140010ca9
    mov al, byte ptr [rbx]
    inc rbx
    test al, al
    jne 0x140010c9d
    mov byte ptr [rbx - 2], al
    mov r8d, dword ptr [rsp + 0x88]
    lea r9, [rsp + 0x40]
    mov qword ptr [rsp + 0x28], r14
    mov rdx, rbp
    mov rcx, rdi
    mov byte ptr [rsp + 0x20], 1
    call 0x140010a78
    jmp 0x140010d07
    mov r9b, byte ptr [rsp + 0x90]
    lea rax, [rsp + 0x40]
    mov r8d, dword ptr [rsp + 0x88]
    mov rdx, rbp
    mov qword ptr [rsp + 0x38], r14
    mov rcx, rdi
    mov byte ptr [rsp + 0x30], 1
    mov qword ptr [rsp + 0x28], rax
    mov eax, dword ptr [rsp + 0x98]
    mov dword ptr [rsp + 0x20], eax
    call 0x1400107bc
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rdi, qword ptr [rsp + 0x70]
    mov r14, qword ptr [rsp + 0x78]
    add rsp, 0x50
    pop r15
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r12
    push r14
    push r15
    sub rsp, 0x20
    mov rbx, qword ptr [rcx]
    movabs r12, 0xfffffffffffff
    and rbx, rdx
    movsx r14d, r8w
    and rbx, r12
    mov rdi, rcx
    mov ecx, r14d
    xor r15d, r15d
    shr rbx, cl
    mov rbp, rdx
    test r9d, r9d
    jne 0x140010d78
    cmp bx, 8
    setae al
    jmp 0x140010e1b
    call 0x140017034
    test eax, eax
    jne 0x140010df3
    mov r8, qword ptr [rdi]
    mov ecx, r14d
    mov rax, r8
    and rax, rbp
    and rax, r12
    shr rax, cl
    cmp ax, 8
    jbe 0x140010da0
    mov edx, 1
    jmp 0x140010def
    jae 0x140010da7
    mov dl, r15b
    jmp 0x140010def
    mov edx, 1
    mov eax, edx
    shl rax, cl
    sub rax, rdx
    and rax, r8
    test r12, rax
    jne 0x140010def
    cmp r14d, 0x30
    je 0x140010ddb
    shr r8, 4
    movabs rax, 0xffffffffffff
    and r8, rbp
    and r8, rax
    shr r8, cl
    jmp 0x140010dec
    movabs rax, 0x7ff0000000000000
    test rax, r8
    setne r8b
    and dl, r8b
    mov al, dl
    jmp 0x140010e1b
    cmp eax, 0x200
    jne 0x140010e06
    test bx, bx
    je 0x140010da2
    cmp qword ptr [rdi], r15
    jl 0x140010da2
    jmp 0x140010d99
    cmp eax, 0x100
    jne 0x140010e19
    test bx, bx
    je 0x140010da2
    cmp qword ptr [rdi], r15
    jge 0x140010da2
    jmp 0x140010d99
    xor al, al
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x20
    pop r15
    pop r14
    pop r12
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x50
    mov r11, r8
    mov r10, rdx
    mov rdi, rcx
    test rdx, rdx
    jne 0x140010e8c
    mov rcx, qword ptr [rsp + 0xa8]
    lea ebx, [rdx + 0x16]
    mov qword ptr [rsp + 0x28], rcx
    mov byte ptr [rcx + 0x30], 1
    mov dword ptr [rcx + 0x2c], ebx
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009da0
    mov eax, ebx
    jmp 0x1400110fb
    test r11, r11
    jne 0x140010eac
    mov rax, qword ptr [rsp + 0xa8]
    mov ebx, 0x16
    mov qword ptr [rsp + 0x28], rax
    mov byte ptr [rax + 0x30], 1
    mov dword ptr [rax + 0x2c], ebx
    jmp 0x140010e70
    test r9, r9
    je 0x140010e91
    mov r8, qword ptr [rsp + 0x80]
    test r8, r8
    je 0x140010e91
    mov ecx, dword ptr [rsp + 0x88]
    cmp ecx, 0x41
    je 0x140010ed7
    lea eax, [rcx - 0x45]
    cmp eax, 2
    jbe 0x140010ed7
    xor sil, sil
    jmp 0x140010eda
    mov sil, 1
    mov rbx, qword ptr [rsp + 0x98]
    test bl, 8
    jne 0x140010fd1
    mov rdx, qword ptr [rdi]
    mov rax, rdx
    shr rax, 0x34
    and eax, 0x7ff
    cmp rax, 0x7ff
    jne 0x140010fd1
    movabs rcx, 0xfffffffffffff
    mov rax, rdx
    mov r8d, 0xc
    and rax, rcx
    jne 0x140010f22
    xor ecx, ecx
    jmp 0x140010f4f
    movabs rcx, 0x8000000000000
    test rdx, rdx
    jns 0x140010f3b
    cmp rax, rcx
    jne 0x140010f3b
    mov rcx, r8
    jmp 0x140010f4f
    mov rax, rdx
    and rax, rcx
    neg rax
    sbb rcx, rcx
    and rcx, 0xfffffffffffffffc
    add rcx, 8
    shr rdx, 0x3f
    lea rax, [rdx + 4]
    cmp r11, rax
    jae 0x140010f62
    mov byte ptr [r10], 0
    jmp 0x140010fc9
    or r8, 0xffffffffffffffff
    test dl, dl
    je 0x140010f7d
    mov byte ptr [r10], 0x2d
    inc r10
    mov byte ptr [r10], 0
    cmp r11, r8
    je 0x140010f7d
    dec r11
    movzx edx, sil
    lea rbx, [rip + 0xe818]
    xor edx, 1
    add edx, edx
    mov eax, edx
    add rax, rcx
    mov r9, qword ptr [rbx + rax*8]
    inc r8
    cmp byte ptr [r9 + r8], 0
    jne 0x140010f96
    xor eax, eax
    cmp r11, r8
    setbe al
    lea r8d, [rdx + rax]
    mov rdx, r11
    add r8, rcx
    mov rcx, r10
    mov r8, qword ptr [rbx + r8*8]
    call 0x14000e890
    test eax, eax
    jne 0x14001110b
    xor r8d, r8d
    mov eax, r8d
    jmp 0x1400110fb
    mov rdx, rbx
    and bl, 0x20
    shr rdx, 4
    and edx, 1
    or edx, 2
    neg bl
    sbb ebx, ebx
    and ebx, dword ptr [rsp + 0xa0]
    sub ecx, 0x41
    je 0x1400110c3
    sub ecx, 4
    je 0x140011089
    sub ecx, 1
    je 0x140011058
    sub ecx, 1
    je 0x14001101b
    sub ecx, 0x1a
    je 0x1400110c3
    sub ecx, 4
    je 0x140011089
    cmp ecx, 1
    je 0x140011058
    mov rax, qword ptr [rsp + 0xa8]
    mov rcx, rdi
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rsp + 0x90]
    mov dword ptr [rsp + 0x40], ebx
    mov dword ptr [rsp + 0x38], edx
    mov rdx, r10
    mov byte ptr [rsp + 0x30], sil
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], r8
    mov r8, r11
    call 0x140010bd0
    jmp 0x1400110fb
    mov rax, qword ptr [rsp + 0xa8]
    mov rdx, r10
    mov qword ptr [rsp + 0x38], rax
    mov rcx, rdi
    mov eax, dword ptr [rsp + 0x90]
    mov dword ptr [rsp + 0x30], ebx
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], r8
    mov r8, r11
    call 0x1400109a0
    jmp 0x1400110fb
    mov rax, qword ptr [rsp + 0xa8]
    mov rcx, rdi
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rsp + 0x90]
    mov dword ptr [rsp + 0x40], ebx
    mov dword ptr [rsp + 0x38], edx
    mov rdx, r10
    mov byte ptr [rsp + 0x30], sil
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], r8
    mov r8, r11
    call 0x1400106c0
    jmp 0x1400110fb
    mov rax, qword ptr [rsp + 0xa8]
    mov rcx, rdi
    mov qword ptr [rsp + 0x48], rax
    mov eax, dword ptr [rsp + 0x90]
    mov dword ptr [rsp + 0x40], ebx
    mov dword ptr [rsp + 0x38], edx
    mov rdx, r10
    mov byte ptr [rsp + 0x30], sil
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], r8
    mov r8, r11
    call 0x140010328
    mov rbx, qword ptr [rsp + 0x60]
    mov rsi, qword ptr [rsp + 0x68]
    add rsp, 0x50
    pop rdi
    ret
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009ebc
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    mov word ptr [rsp + 0x20], r9w
    push rsi
    push rdi
    push r14
    sub rsp, 0x40
    xor ebx, ebx
    mov rbp, r8
    mov r14, rdx
    mov rsi, rcx
    test rdx, rdx
    jne 0x140011161
    test r8, r8
    je 0x140011161
    test rcx, rcx
    je 0x14001127e
    mov dword ptr [rcx], ebx
    jmp 0x14001127e
    test rsi, rsi
    je 0x140011169
    or dword ptr [rcx], 0xffffffff
    mov rdi, qword ptr [rsp + 0x80]
    cmp rbp, 0x7fffffff
    jbe 0x140011184
    mov esi, 0x16
    jmp 0x1400112ad
    cmp byte ptr [rdi + 0x28], bl
    jne 0x140011197
    mov rcx, rdi
    call 0x14000cc40
    movzx r9d, word ptr [rsp + 0x78]
    mov rax, qword ptr [rdi + 0x18]
    mov ecx, dword ptr [rax + 0xc]
    cmp ecx, 0xfde9
    jne 0x1400111db
    movzx edx, r9w
    lea r8, [rsp + 0x68]
    mov r9, rdi
    mov qword ptr [rsp + 0x68], rbx
    mov rcx, r14
    call 0x140017048
    test rsi, rsi
    je 0x1400111c6
    mov dword ptr [rsi], eax
    cmp eax, 4
    jle 0x14001127e
    cmp byte ptr [rdi + 0x30], bl
    je 0x1400111d7
    mov ebx, dword ptr [rdi + 0x2c]
    mov eax, ebx
    jmp 0x140011212
    cmp qword ptr [rax + 0x138], rbx
    jne 0x14001123f
    mov eax, 0xff
    cmp r9w, ax
    jbe 0x140011225
    test r14, r14
    je 0x140011206
    test rbp, rbp
    je 0x140011206
    mov r8, rbp
    xor edx, edx
    mov rcx, r14
    call 0x14001b630
    mov eax, 0x2a
    mov dword ptr [rdi + 0x2c], eax
    mov byte ptr [rdi + 0x30], 1
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x70]
    add rsp, 0x40
    pop r14
    pop rdi
    pop rsi
    ret
    test r14, r14
    je 0x140011232
    test rbp, rbp
    je 0x1400112a8
    mov byte ptr [r14], r9b
    test rsi, rsi
    je 0x14001127e
    mov dword ptr [rsi], 1
    jmp 0x14001127e
    lea rax, [rsp + 0x68]
    mov dword ptr [rsp + 0x68], ebx
    mov qword ptr [rsp + 0x38], rax
    lea r8, [rsp + 0x78]
    mov qword ptr [rsp + 0x30], rbx
    mov r9d, 1
    mov dword ptr [rsp + 0x28], ebp
    xor edx, edx
    mov qword ptr [rsp + 0x20], r14
    call 0x140013014
    test eax, eax
    je 0x140011282
    cmp dword ptr [rsp + 0x68], ebx
    jne 0x140011206
    test rsi, rsi
    je 0x14001127e
    mov dword ptr [rsi], eax
    xor eax, eax
    jmp 0x140011212
    call qword ptr [rip + 0xbe20]
    cmp eax, 0x7a
    jne 0x140011206
    test r14, r14
    je 0x1400112a8
    test rbp, rbp
    je 0x1400112a8
    mov r8, rbp
    xor edx, edx
    mov rcx, r14
    call 0x14001b630
    mov esi, 0x22
    mov dword ptr [rdi + 0x2c], esi
    xor r9d, r9d
    mov qword ptr [rsp + 0x28], rdi
    xor r8d, r8d
    xor edx, edx
    mov byte ptr [rdi + 0x30], 1
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rbx
    call 0x140009da0
    mov eax, esi
    jmp 0x140011212
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    xor r14d, r14d
    mov rbx, r9
    mov rbp, r8
    mov rsi, rdx
    mov rdi, rcx
    test rdx, rdx
    je 0x140011428
    test r8, r8
    je 0x140011428
    cmp byte ptr [rdx], r14b
    jne 0x140011325
    test rcx, rcx
    je 0x14001142f
    mov word ptr [rcx], r14w
    jmp 0x14001142f
    cmp byte ptr [r9 + 0x28], r14b
    jne 0x140011333
    mov rcx, rbx
    call 0x14000cc40
    mov rdx, qword ptr [rbx + 0x18]
    mov r10d, dword ptr [rdx + 0xc]
    cmp r10d, 0xfde9
    jne 0x14001136b
    lea r9, [rip + 0x1976d]
    mov qword ptr [rsp + 0x20], rbx
    mov r8, rbp
    mov rdx, rsi
    mov rcx, rdi
    call 0x1400170ec
    or ecx, 0xffffffff
    test eax, eax
    cmovs eax, ecx
    jmp 0x140011431
    cmp qword ptr [rdx + 0x138], r14
    jne 0x140011388
    test rdi, rdi
    je 0x140011421
    movzx eax, byte ptr [rsi]
    mov word ptr [rdi], ax
    jmp 0x140011421
    movzx ecx, byte ptr [rsi]
    mov rax, qword ptr [rdx]
    cmp word ptr [rax + rcx*2], r14w
    jge 0x1400113f6
    mov r9d, dword ptr [rdx + 8]
    cmp r9d, 1
    jle 0x1400113ca
    cmp ebp, r9d
    jl 0x1400113ca
    mov eax, r14d
    test rdi, rdi
    mov r8, rsi
    mov edx, 9
    setne al
    mov ecx, r10d
    mov dword ptr [rsp + 0x28], eax
    mov qword ptr [rsp + 0x20], rdi
    call 0x140012f84
    test eax, eax
    jne 0x1400113dd
    mov rax, qword ptr [rbx + 0x18]
    movsxd rcx, dword ptr [rax + 8]
    cmp rbp, rcx
    jb 0x1400113e6
    cmp byte ptr [rsi + 1], r14b
    je 0x1400113e6
    mov rax, qword ptr [rbx + 0x18]
    mov eax, dword ptr [rax + 8]
    jmp 0x140011431
    mov byte ptr [rbx + 0x30], 1
    or eax, 0xffffffff
    mov dword ptr [rbx + 0x2c], 0x2a
    jmp 0x140011431
    mov eax, r14d
    mov r9d, 1
    test rdi, rdi
    mov r8, rsi
    mov ecx, r10d
    setne al
    mov dword ptr [rsp + 0x28], eax
    lea edx, [r9 + 8]
    mov qword ptr [rsp + 0x20], rdi
    call 0x140012f84
    test eax, eax
    je 0x1400113e6
    mov eax, 1
    jmp 0x140011431
    mov qword ptr [rip + 0x19689], r14
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    sub rsp, 0x28
    test rcx, rcx
    jne 0x14001146a
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    or eax, 0xffffffff
    jmp 0x14001146e
    mov eax, dword ptr [rcx + 0x18]
    nop 
    add rsp, 0x28
    ret
    int3 
    mov rcx, qword ptr [rip + 0x17b85]
    xor eax, eax
    or rcx, 1
    cmp qword ptr [rip + 0x19638], rcx
    sete al
    ret
    sub dword ptr [rdx + 0x10], 1
    js 0x140017448
    mov rax, qword ptr [rdx]
    mov byte ptr [rax], cl
    inc qword ptr [rdx]
    movzx eax, cl
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov ecx, 2
    call 0x14000a024
    cmp rbx, rax
    je 0x1400114e5
    mov ecx, 1
    call 0x14000a024
    cmp rbx, rax
    jne 0x1400114e1
    mov rcx, rbx
    call 0x14001144c
    mov ecx, eax
    call 0x140017514
    test eax, eax
    setne al
    jmp 0x1400114e7
    xor al, al
    jmp 0x1400114e7
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, rcx
    call 0x1400114a4
    test al, al
    je 0x1400115aa
    mov ecx, 1
    call 0x14000a024
    cmp rbx, rax
    jne 0x140011522
    lea rdi, [rip + 0x195a8]
    jmp 0x140011538
    mov ecx, 2
    call 0x14000a024
    cmp rbx, rax
    jne 0x1400115aa
    lea rdi, [rip + 0x19598]
    inc dword ptr [rip + 0x18dda]
    mov eax, dword ptr [rbx + 0x14]
    nop 
    test eax, 0x4c0
    jne 0x1400115aa
    lock or dword ptr [rbx + 0x14], 0x282
    cmp qword ptr [rdi], 0
    jne 0x14001156b
    mov ecx, 0x1000
    call 0x14000fec8
    xor ecx, ecx
    mov qword ptr [rdi], rax
    call 0x14000f250
    mov rcx, qword ptr [rdi]
    test rcx, rcx
    jne 0x140011590
    lea rcx, [rbx + 0x1c]
    mov dword ptr [rbx + 0x10], 2
    mov qword ptr [rbx + 8], rcx
    mov qword ptr [rbx], rcx
    mov dword ptr [rbx + 0x20], 2
    mov al, 1
    jmp 0x1400115ac
    mov qword ptr [rbx + 8], rcx
    mov rax, qword ptr [rdi]
    mov qword ptr [rbx], rax
    mov dword ptr [rbx + 0x10], 0x1000
    mov dword ptr [rbx + 0x20], 0x1000
    jmp 0x14001158c
    xor al, al
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    test cl, cl
    je 0x1400115f4
    push rbx
    sub rsp, 0x20
    mov eax, dword ptr [rdx + 0x14]
    mov rbx, rdx
    shr eax, 9
    nop 
    test al, 1
    je 0x1400115ef
    mov rdx, r8
    mov rcx, rbx
    call 0x14000faa8
    lock and dword ptr [rbx + 0x14], 0xfffffd7f
    and dword ptr [rbx + 0x20], 0
    and qword ptr [rbx + 8], 0
    and qword ptr [rbx], 0
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    xor ebx, ebx
    lea rdx, [rip + 0x194d9]
    xor r8d, r8d
    lea rcx, [rbx + rbx*4]
    lea rcx, [rdx + rcx*8]
    mov edx, 0xfa0
    call 0x14000f5f0
    test eax, eax
    je 0x140011631
    inc dword ptr [rip + 0x196ea]
    inc ebx
    cmp ebx, 0xe
    jb 0x140011600
    mov al, 1
    jmp 0x14001163a
    xor ecx, ecx
    call 0x14001165c
    xor al, al
    add rsp, 0x20
    pop rbx
    ret
    movsxd rax, ecx
    lea rcx, [rax + rax*4]
    lea rax, [rip + 0x19492]
    lea rcx, [rax + rcx*8]
    jmp qword ptr [rip + 0xba67]
    int3 
    int3 
    int3 
    push rbx
    sub rsp, 0x20
    mov ebx, dword ptr [rip + 0x196a8]
    jmp 0x140011687
    lea rax, [rip + 0x1946f]
    dec ebx
    lea rcx, [rbx + rbx*4]
    lea rcx, [rax + rcx*8]
    call qword ptr [rip + 0xba4f]
    dec dword ptr [rip + 0x19689]
    test ebx, ebx
    jne 0x14001166a
    mov al, 1
    add rsp, 0x20
    pop rbx
    ret
    int3 
    movsxd rax, ecx
    lea rcx, [rax + rax*4]
    lea rax, [rip + 0x1943e]
    lea rcx, [rax + rcx*8]
    jmp qword ptr [rip + 0xba1b]
    int3 
    int3 
    int3 
    cmp rcx, rdx
    jae 0x1400116b9
    or eax, 0xffffffff
    ret
    xor eax, eax
    cmp rcx, rdx
    seta al
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x30
    xor r14d, r14d
    mov ebp, r9d
    mov rbx, rdx
    mov rdi, rcx
    test rcx, rcx
    jne 0x140011712
    cmp byte ptr [rdx + 0x28], r14b
    je 0x140011701
    mov rcx, qword ptr [rdx + 0x10]
    call 0x14000f250
    mov byte ptr [rbx + 0x28], r14b
    mov qword ptr [rbx + 0x10], r14
    mov qword ptr [rbx + 0x18], r14
    mov qword ptr [rbx + 0x20], r14
    jmp 0x140011820
    cmp byte ptr [rcx], r14b
    jne 0x14001176c
    cmp qword ptr [rdx + 0x18], r14
    jne 0x140011762
    cmp byte ptr [rdx + 0x28], r14b
    je 0x140011730
    mov rcx, qword ptr [rdx + 0x10]
    call 0x14000f250
    mov byte ptr [rbx + 0x28], r14b
    mov ecx, 2
    call 0x14000fec8
    mov qword ptr [rbx + 0x10], rax
    mov rdx, r14
    neg rax
    sbb eax, eax
    not eax
    and eax, 0xc
    sete dl
    test eax, eax
    sete cl
    mov byte ptr [rbx + 0x28], cl
    mov qword ptr [rbx + 0x18], rdx
    test eax, eax
    jne 0x140011822
    mov rax, qword ptr [rbx + 0x10]
    mov word ptr [rax], r14w
    jmp 0x140011709
    or r9d, 0xffffffff
    mov dword ptr [rsp + 0x28], r14d
    mov r8, rdi
    mov qword ptr [rsp + 0x20], r14
    mov ecx, ebp
    lea edx, [r9 + 0xa]
    call 0x140012f84
    movsxd rsi, eax
    test eax, eax
    jne 0x1400117a5
    call qword ptr [rip + 0xb913]
    mov ecx, eax
    call 0x14000f12c
    call 0x14000f1b8
    mov eax, dword ptr [rax]
    jmp 0x140011822
    mov rdx, qword ptr [rbx + 0x18]
    cmp rsi, rdx
    jbe 0x1400117ef
    cmp byte ptr [rbx + 0x28], r14b
    je 0x1400117c1
    mov rcx, qword ptr [rbx + 0x10]
    call 0x14000f250
    mov byte ptr [rbx + 0x28], r14b
    lea rcx, [rsi + rsi]
    call 0x14000fec8
    mov qword ptr [rbx + 0x10], rax
    mov rdx, r14
    neg rax
    sbb eax, eax
    not eax
    and eax, 0xc
    cmove rdx, rsi
    test eax, eax
    sete cl
    mov byte ptr [rbx + 0x28], cl
    mov qword ptr [rbx + 0x18], rdx
    test eax, eax
    jne 0x140011822
    mov rax, qword ptr [rbx + 0x10]
    or r9d, 0xffffffff
    mov dword ptr [rsp + 0x28], edx
    mov r8, rdi
    mov ecx, ebp
    mov qword ptr [rsp + 0x20], rax
    lea edx, [r9 + 0xa]
    call 0x140012f84
    cdqe 
    test rax, rax
    je 0x14001178f
    dec rax
    mov qword ptr [rbx + 0x20], rax
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    mov rdi, qword ptr [rsp + 0x58]
    add rsp, 0x30
    pop r14
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x40
    xor r14d, r14d
    mov ebp, r9d
    mov rbx, rdx
    mov rdi, rcx
    test rcx, rcx
    jne 0x14001188e
    cmp byte ptr [rdx + 0x28], r14b
    je 0x14001187d
    mov rcx, qword ptr [rdx + 0x10]
    call 0x14000f250
    mov byte ptr [rbx + 0x28], r14b
    mov qword ptr [rbx + 0x10], r14
    mov qword ptr [rbx + 0x18], r14
    mov qword ptr [rbx + 0x20], r14
    jmp 0x1400119ae
    cmp word ptr [rcx], r14w
    jne 0x1400118e8
    cmp qword ptr [rdx + 0x18], r14
    jne 0x1400118df
    cmp byte ptr [rdx + 0x28], r14b
    je 0x1400118ad
    mov rcx, qword ptr [rdx + 0x10]
    call 0x14000f250
    mov byte ptr [rbx + 0x28], r14b
    mov ecx, 1
    call 0x14000fec8
    mov qword ptr [rbx + 0x10], rax
    mov rdx, r14
    neg rax
    sbb eax, eax
    not eax
    and eax, 0xc
    sete dl
    test eax, eax
    sete cl
    mov byte ptr [rbx + 0x28], cl
    mov qword ptr [rbx + 0x18], rdx
    test eax, eax
    jne 0x1400119b0
    mov rax, qword ptr [rbx + 0x10]
    mov byte ptr [rax], r14b
    jmp 0x140011885
    mov qword ptr [rsp + 0x38], r14
    or r9d, 0xffffffff
    mov qword ptr [rsp + 0x30], r14
    mov r8, rdi
    mov dword ptr [rsp + 0x28], r14d
    xor edx, edx
    mov ecx, ebp
    mov qword ptr [rsp + 0x20], r14
    call 0x140013014
    movsxd rsi, eax
    test eax, eax
    jne 0x14001192c
    call qword ptr [rip + 0xb78f]
    mov ecx, eax
    call 0x14000f12c
    call 0x14000f1b8
    mov eax, dword ptr [rax]
    jmp 0x1400119b0
    mov rdx, qword ptr [rbx + 0x18]
    cmp rsi, rdx
    jbe 0x140011975
    cmp byte ptr [rbx + 0x28], r14b
    je 0x140011948
    mov rcx, qword ptr [rbx + 0x10]
    call 0x14000f250
    mov byte ptr [rbx + 0x28], r14b
    mov rcx, rsi
    call 0x14000fec8
    mov qword ptr [rbx + 0x10], rax
    mov rdx, r14
    neg rax
    sbb eax, eax
    not eax
    and eax, 0xc
    cmove rdx, rsi
    test eax, eax
    sete cl
    mov byte ptr [rbx + 0x28], cl
    mov qword ptr [rbx + 0x18], rdx
    test eax, eax
    jne 0x1400119b0
    mov rax, qword ptr [rbx + 0x10]
    or r9d, 0xffffffff
    mov qword ptr [rsp + 0x38], r14
    mov r8, rdi
    mov qword ptr [rsp + 0x30], r14
    mov ecx, ebp
    mov dword ptr [rsp + 0x28], edx
    xor edx, edx
    mov qword ptr [rsp + 0x20], rax
    call 0x140013014
    cdqe 
    test rax, rax
    je 0x140011913
    dec rax
    mov qword ptr [rbx + 0x20], rax
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    mov rdi, qword ptr [rsp + 0x68]
    add rsp, 0x40
    pop r14
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x50
    xor r15d, r15d
    mov r13, rdx
    mov rbx, rcx
    test rdx, rdx
    jne 0x140011a08
    call 0x14000f1b8
    lea ebx, [r13 + 0x16]
    mov dword ptr [rax], ebx
    call 0x140009e6c
    mov eax, ebx
    jmp 0x140011bdf
    xorps xmm0, xmm0
    mov qword ptr [rdx], r15
    mov rax, qword ptr [rcx]
    movdqu xmmword ptr [rbp - 0x20], xmm0
    mov qword ptr [rbp - 0x10], r15
    test rax, rax
    je 0x140011ac0
    lea rdx, [rbp + 0x48]
    mov word ptr [rbp + 0x48], 0x3f2a
    mov rcx, rax
    mov byte ptr [rbp + 0x4a], r15b
    call 0x140017b20
    mov rcx, qword ptr [rbx]
    test rax, rax
    jne 0x140011a7d
    lea r9, [rbp - 0x20]
    xor r8d, r8d
    xor edx, edx
    call 0x140011c10
    mov esi, eax
    test eax, eax
    je 0x140011a8f
    mov rdi, qword ptr [rbp - 0x20]
    mov rbx, rdi
    cmp rdi, qword ptr [rbp - 0x18]
    je 0x140011b43
    mov rcx, qword ptr [rbx]
    call 0x14000f250
    add rbx, 8
    cmp rbx, qword ptr [rbp - 0x18]
    jne 0x140011a66
    jmp 0x140011b43
    lea r8, [rbp - 0x20]
    mov rdx, rax
    call 0x140011d94
    mov esi, eax
    test eax, eax
    jne 0x140011a98
    add rbx, 8
    mov rax, qword ptr [rbx]
    jmp 0x140011a1a
    mov rdi, qword ptr [rbp - 0x20]
    mov rbx, rdi
    cmp rdi, qword ptr [rbp - 0x18]
    je 0x140011b43
    mov rcx, qword ptr [rbx]
    call 0x14000f250
    add rbx, 8
    cmp rbx, qword ptr [rbp - 0x18]
    jne 0x140011aa9
    jmp 0x140011b43
    mov rdi, qword ptr [rbp - 0x20]
    or r12, 0xffffffffffffffff
    mov rsi, qword ptr [rbp - 0x18]
    mov rdx, r15
    mov r14, rsi
    mov qword ptr [rbp + 0x50], rdx
    sub r14, rdi
    mov rax, rdi
    sar r14, 3
    inc r14
    cmp rdi, rsi
    je 0x140011b0a
    mov r8, qword ptr [rax]
    mov rcx, r12
    inc rcx
    cmp byte ptr [r8 + rcx], r15b
    jne 0x140011aee
    inc rdx
    add rax, 8
    add rdx, rcx
    cmp rax, rsi
    jne 0x140011ae8
    mov qword ptr [rbp + 0x50], rdx
    mov r8d, 1
    mov rcx, r14
    call 0x14000d7d4
    mov rbx, rax
    test rax, rax
    jne 0x140011b52
    xor ecx, ecx
    call 0x14000f250
    mov rbx, rdi
    cmp rdi, rsi
    je 0x140011b40
    mov rcx, qword ptr [rbx]
    call 0x14000f250
    add rbx, 8
    cmp rbx, rsi
    jne 0x140011b2f
    mov esi, r12d
    mov rcx, rdi
    call 0x14000f250
    mov eax, esi
    jmp 0x140011bdf
    lea rcx, [rax + r14*8]
    mov r14, rdi
    mov qword ptr [rbp + 0x58], rcx
    mov r12, rcx
    cmp rdi, rsi
    je 0x140011bb1
    sub rax, rdi
    mov qword ptr [rbp + 0x48], rax
    mov r8, qword ptr [r14]
    or r15, 0xffffffffffffffff
    inc r15
    cmp byte ptr [r8 + r15], 0
    jne 0x140011b73
    mov rdx, rcx
    inc r15
    sub rdx, r12
    mov r9, r15
    add rdx, qword ptr [rbp + 0x50]
    mov rcx, r12
    call 0x140017990
    test eax, eax
    jne 0x140011bf7
    mov rax, qword ptr [rbp + 0x48]
    mov rcx, qword ptr [rbp + 0x58]
    mov qword ptr [rax + r14], r12
    add r12, r15
    add r14, 8
    cmp r14, rsi
    jne 0x140011b6c
    xor ecx, ecx
    mov qword ptr [r13], rbx
    call 0x14000f250
    mov rbx, rdi
    cmp rdi, rsi
    je 0x140011bd5
    mov rcx, qword ptr [rbx]
    call 0x14000f250
    add rbx, 8
    cmp rbx, rsi
    jne 0x140011bc4
    mov rcx, rdi
    call 0x14000f250
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x90]
    add rsp, 0x50
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009ebc
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    or rbp, 0xffffffffffffffff
    mov rsi, r9
    xor edi, edi
    mov r14, r8
    mov r13, rdx
    mov r12, rcx
    inc rbp
    cmp byte ptr [rcx + rbp], dil
    jne 0x140011c3e
    mov edx, 1
    mov rax, r14
    add rbp, rdx
    not rax
    cmp rbp, rax
    jbe 0x140011c7a
    lea eax, [rdx + 0xb]
    mov rbx, qword ptr [rsp + 0x60]
    mov rbp, qword ptr [rsp + 0x68]
    mov rsi, qword ptr [rsp + 0x70]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    lea r15, [r8 + 1]
    add r15, rbp
    mov rcx, r15
    call 0x14000f1d8
    mov rbx, rax
    test r14, r14
    je 0x140011caa
    mov r9, r14
    mov r8, r13
    mov rdx, r15
    mov rcx, rax
    call 0x140017990
    test eax, eax
    jne 0x140011d7f
    sub r15, r14
    lea rcx, [rbx + r14]
    mov rdx, r15
    mov r9, rbp
    mov r8, r12
    call 0x140017990
    test eax, eax
    jne 0x140011d7f
    mov r14, qword ptr [rsi + 0x10]
    lea r15d, [rax + 8]
    cmp qword ptr [rsi + 8], r14
    jne 0x140011d66
    cmp qword ptr [rsi], rdi
    jne 0x140011d09
    mov edx, r15d
    lea ecx, [rax + 4]
    call 0x14000f1d8
    xor ecx, ecx
    mov qword ptr [rsi], rax
    call 0x14000f250
    mov rax, qword ptr [rsi]
    test rax, rax
    je 0x140011d3d
    mov qword ptr [rsi + 8], rax
    add rax, 0x20
    mov qword ptr [rsi + 0x10], rax
    jmp 0x140011d66
    sub r14, qword ptr [rsi]
    movabs rax, 0x7fffffffffffffff
    sar r14, 3
    cmp r14, rax
    ja 0x140011d3d
    mov rcx, qword ptr [rsi]
    lea rbp, [r14 + r14]
    mov rdx, rbp
    mov r8, r15
    call 0x140014240
    test rax, rax
    jne 0x140011d4c
    xor ecx, ecx
    call 0x14000f250
    mov rcx, rbx
    mov edi, 0xc
    call 0x14000f250
    jmp 0x140011d71
    lea rcx, [rax + r14*8]
    mov qword ptr [rsi], rax
    mov qword ptr [rsi + 8], rcx
    lea rcx, [rax + rbp*8]
    mov qword ptr [rsi + 0x10], rcx
    xor ecx, ecx
    call 0x14000f250
    mov rcx, qword ptr [rsi + 8]
    mov qword ptr [rcx], rbx
    add qword ptr [rsi + 8], r15
    xor ecx, ecx
    call 0x14000f250
    mov eax, edi
    jmp 0x140011c5d
    xor r9d, r9d
    mov qword ptr [rsp + 0x20], rdi
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009ebc
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    lea rbp, [rsp - 0x240]
    sub rsp, 0x340
    mov rax, qword ptr [rip + 0x1724b]
    xor rax, rsp
    mov qword ptr [rbp + 0x230], rax
    mov r12, r8
    mov rdi, rcx
    movabs rbx, 0x200000000801
    cmp rdx, rcx
    je 0x140011df6
    mov al, byte ptr [rdx]
    sub al, 0x2f
    cmp al, 0x2d
    ja 0x140011de6
    movsx rax, al
    bt rbx, rax
    jb 0x140011df6
    mov rcx, rdi
    call 0x140017ee8
    mov rdx, rax
    cmp rax, rdi
    jne 0x140011dd4
    mov r8b, byte ptr [rdx]
    cmp r8b, 0x3a
    jne 0x140011e1d
    lea rax, [rdi + 1]
    cmp rdx, rax
    je 0x140011e1d
    mov r9, r12
    xor r8d, r8d
    xor edx, edx
    mov rcx, rdi
    call 0x140011c10
    jmp 0x1400120c0
    sub r8b, 0x2f
    xor r14d, r14d
    cmp r8b, 0x2d
    ja 0x140011e36
    movsx rax, r8b
    bt rbx, rax
    mov al, 1
    jb 0x140011e39
    mov al, r14b
    sub rdx, rdi
    mov qword ptr [rsp + 0x40], r14
    inc rdx
    mov qword ptr [rsp + 0x48], r14
    neg al
    mov qword ptr [rsp + 0x50], r14
    lea rcx, [rsp + 0x70]
    mov qword ptr [rsp + 0x58], r14
    sbb r13, r13
    mov qword ptr [rsp + 0x60], r14
    and r13, rdx
    mov byte ptr [rsp + 0x68], r14b
    xor edx, edx
    mov qword ptr [rsp + 0x38], r13
    call 0x1400120e4
    mov rax, qword ptr [rsp + 0x78]
    mov ecx, 0xfde9
    cmp dword ptr [rax + 0xc], ecx
    jne 0x140011e9c
    cmp byte ptr [rbp - 0x78], r14b
    je 0x140011e97
    mov rax, qword ptr [rsp + 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, ecx
    jmp 0x140011ed4
    call 0x14000f4a0
    test eax, eax
    jne 0x140011ebf
    cmp byte ptr [rbp - 0x78], r14b
    je 0x140011eb7
    mov rax, qword ptr [rsp + 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, 1
    jmp 0x140011ed4
    cmp byte ptr [rbp - 0x78], r14b
    je 0x140011ed1
    mov rax, qword ptr [rsp + 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, r14d
    lea r8, [rsp + 0x30]
    mov rcx, rdi
    lea rdx, [rsp + 0x40]
    call 0x1400116c4
    mov rcx, qword ptr [rsp + 0x50]
    lea r8, [rbp - 0x20]
    test eax, eax
    mov dword ptr [rsp + 0x28], r14d
    mov qword ptr [rsp + 0x20], r14
    cmovne rcx, r14
    xor r9d, r9d
    xor edx, edx
    call qword ptr [rip + 0xb296]
    mov rbx, rax
    cmp rax, -1
    jne 0x140011f3d
    mov r9, r12
    xor r8d, r8d
    xor edx, edx
    mov rcx, rdi
    call 0x140011c10
    mov ebx, eax
    cmp byte ptr [rsp + 0x68], r14b
    je 0x140011f36
    mov rcx, qword ptr [rsp + 0x50]
    call 0x14000f250
    mov eax, ebx
    jmp 0x1400120c0
    mov rsi, qword ptr [r12 + 8]
    sub rsi, qword ptr [r12]
    sar rsi, 3
    xor edx, edx
    mov qword ptr [rbp - 0x50], r14
    lea rcx, [rbp - 0x70]
    mov qword ptr [rbp - 0x48], r14
    mov qword ptr [rbp - 0x40], r14
    mov qword ptr [rbp - 0x38], r14
    mov qword ptr [rbp - 0x30], r14
    mov byte ptr [rbp - 0x28], r14b
    call 0x1400120e4
    mov rax, qword ptr [rbp - 0x68]
    mov ecx, 0xfde9
    cmp dword ptr [rax + 0xc], ecx
    jne 0x140011f91
    cmp byte ptr [rbp - 0x58], r14b
    je 0x140011f8c
    mov rax, qword ptr [rbp - 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, ecx
    jmp 0x140011fc7
    call 0x14000f4a0
    test eax, eax
    jne 0x140011fb3
    cmp byte ptr [rbp - 0x58], r14b
    je 0x140011fab
    mov rax, qword ptr [rbp - 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, 1
    jmp 0x140011fc7
    cmp byte ptr [rbp - 0x58], r14b
    je 0x140011fc4
    mov rax, qword ptr [rbp - 0x70]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, r14d
    lea r8, [rsp + 0x30]
    lea rdx, [rbp - 0x50]
    lea rcx, [rbp + 0xc]
    call 0x140011840
    mov r14, qword ptr [rbp - 0x40]
    xor edx, edx
    test eax, eax
    mov rcx, r14
    cmovne rcx, rdx
    cmp byte ptr [rcx], 0x2e
    jne 0x14001200c
    mov al, byte ptr [rcx + 1]
    test al, al
    jne 0x140012003
    cmp byte ptr [rbp - 0x28], dl
    je 0x140012033
    mov rcx, r14
    call 0x14000f250
    jmp 0x140012033
    cmp al, 0x2e
    jne 0x14001200c
    cmp byte ptr [rcx + 2], dl
    je 0x140011ff4
    mov r9, r12
    mov r8, r13
    mov rdx, rdi
    call 0x140011c10
    mov r13d, eax
    test eax, eax
    jne 0x140012095
    cmp byte ptr [rbp - 0x28], al
    je 0x14001202e
    mov rcx, r14
    call 0x14000f250
    mov r13, qword ptr [rsp + 0x38]
    lea rdx, [rbp - 0x20]
    mov rcx, rbx
    call qword ptr [rip + 0xb168]
    xor r14d, r14d
    test eax, eax
    jne 0x140011f4a
    mov rax, qword ptr [r12]
    mov rdx, qword ptr [r12 + 8]
    sub rdx, rax
    sar rdx, 3
    cmp rsi, rdx
    je 0x140012077
    sub rdx, rsi
    lea rcx, [rax + rsi*8]
    lea r9, [rip - 0x9be]
    lea r8d, [r14 + 8]
    call 0x140017580
    mov rcx, rbx
    call qword ptr [rip + 0xb118]
    cmp byte ptr [rsp + 0x68], r14b
    je 0x140012091
    mov rcx, qword ptr [rsp + 0x50]
    call 0x14000f250
    xor eax, eax
    jmp 0x1400120c0
    cmp byte ptr [rbp - 0x28], 0
    je 0x1400120a3
    mov rcx, r14
    call 0x14000f250
    mov rcx, rbx
    call qword ptr [rip + 0xb0ec]
    cmp byte ptr [rsp + 0x68], 0
    je 0x1400120bd
    mov rcx, qword ptr [rsp + 0x50]
    call 0x14000f250
    mov eax, r13d
    mov rcx, qword ptr [rbp + 0x230]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0x340
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov byte ptr [rcx + 0x18], 0
    mov rdi, rcx
    lea rsi, [rcx + 8]
    test rdx, rdx
    je 0x140012108
    movups xmm0, xmmword ptr [rdx]
    jmp 0x140012118
    cmp dword ptr [rip + 0x183a1], 0
    jne 0x14001211e
    movups xmm0, xmmword ptr [rip + 0x171e0]
    movdqu xmmword ptr [rsi], xmm0
    jmp 0x14001216c
    call 0x14000ed84
    mov qword ptr [rdi], rax
    mov rdx, rsi
    mov rcx, qword ptr [rax + 0x90]
    mov qword ptr [rsi], rcx
    mov rcx, qword ptr [rax + 0x88]
    mov qword ptr [rdi + 0x10], rcx
    mov rcx, rax
    call 0x140010250
    mov rcx, qword ptr [rdi]
    lea rdx, [rdi + 0x10]
    call 0x1400102bc
    mov rcx, qword ptr [rdi]
    mov eax, dword ptr [rcx + 0x3a8]
    test al, 2
    jne 0x14001216c
    or eax, 2
    mov dword ptr [rcx + 0x3a8], eax
    mov byte ptr [rdi + 0x18], 1
    mov rbx, qword ptr [rsp + 0x30]
    mov rax, rdi
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    jmp 0x1400119cc
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x40
    xor ebp, ebp
    mov esi, r9d
    mov rbx, rdx
    mov rdi, rcx
    test rcx, rcx
    jne 0x1400121c7
    cmp byte ptr [rdx + 0x28], bpl
    je 0x1400121b6
    mov byte ptr [rdx + 0x28], bpl
    mov qword ptr [rdx + 0x10], rbp
    mov qword ptr [rdx + 0x18], rbp
    mov qword ptr [rdx + 0x20], rbp
    jmp 0x14001228a
    cmp word ptr [rcx], bp
    jne 0x140012200
    cmp qword ptr [rdx + 0x18], rbp
    jne 0x1400121f7
    cmp byte ptr [rdx + 0x28], bpl
    je 0x1400121dc
    mov byte ptr [rdx + 0x28], bpl
    call 0x14000f1b8
    mov ecx, 0x22
    mov dword ptr [rax], ecx
    mov eax, ecx
    mov byte ptr [rbx + 0x28], bpl
    mov qword ptr [rbx + 0x18], rbp
    jmp 0x14001228c
    mov rax, qword ptr [rdx + 0x10]
    mov byte ptr [rax], bpl
    jmp 0x1400121be
    mov qword ptr [rsp + 0x38], rbp
    or r9d, 0xffffffff
    mov qword ptr [rsp + 0x30], rbp
    mov r8, rdi
    mov dword ptr [rsp + 0x28], ebp
    xor edx, edx
    mov ecx, esi
    mov qword ptr [rsp + 0x20], rbp
    call 0x140013014
    movsxd rdx, eax
    test eax, eax
    jne 0x140012240
    call qword ptr [rip + 0xae78]
    mov ecx, eax
    call 0x14000f12c
    call 0x14000f1b8
    mov eax, dword ptr [rax]
    jmp 0x14001228c
    mov rcx, qword ptr [rbx + 0x18]
    cmp rdx, rcx
    jbe 0x140012255
    cmp byte ptr [rbx + 0x28], bpl
    je 0x1400121dc
    mov byte ptr [rbx + 0x28], bpl
    jmp 0x1400121dc
    mov rax, qword ptr [rbx + 0x10]
    or r9d, 0xffffffff
    mov qword ptr [rsp + 0x38], rbp
    mov r8, rdi
    mov qword ptr [rsp + 0x30], rbp
    xor edx, edx
    mov dword ptr [rsp + 0x28], ecx
    mov ecx, esi
    mov qword ptr [rsp + 0x20], rax
    call 0x140013014
    cdqe 
    test rax, rax
    je 0x14001222a
    dec rax
    mov qword ptr [rbx + 0x20], rax
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rdi
    push rbp
    lea rbp, [rsp - 0x1a0]
    sub rsp, 0x2a0
    mov rax, qword ptr [rip + 0x16d3b]
    xor rax, rsp
    mov qword ptr [rbp + 0x190], rax
    mov edi, r8d
    mov rbx, rdx
    mov r8d, 0x105
    lea rdx, [rbp - 0x80]
    call qword ptr [rip + 0xae43]
    test eax, eax
    jne 0x1400122fd
    call qword ptr [rip + 0xadb9]
    mov ecx, eax
    call 0x14000f12c
    xor eax, eax
    jmp 0x1400123a1
    and qword ptr [rsp + 0x68], 0
    lea rcx, [rsp + 0x28]
    mov rax, rdi
    mov qword ptr [rsp + 0x48], rbx
    xor edx, edx
    mov qword ptr [rsp + 0x50], rax
    mov qword ptr [rsp + 0x60], rax
    mov qword ptr [rsp + 0x58], rbx
    mov byte ptr [rsp + 0x70], 0
    call 0x1400120e4
    mov rax, qword ptr [rsp + 0x30]
    mov r9d, 0xfde9
    cmp dword ptr [rax + 0xc], r9d
    jne 0x140012351
    cmp byte ptr [rsp + 0x40], 0
    je 0x14001238a
    mov rax, qword ptr [rsp + 0x28]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    jmp 0x14001238a
    call 0x14000f4a0
    test eax, eax
    jne 0x140012374
    cmp byte ptr [rsp + 0x40], al
    je 0x14001236c
    mov rax, qword ptr [rsp + 0x28]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov r9d, 1
    jmp 0x14001238a
    cmp byte ptr [rsp + 0x40], 0
    je 0x140012387
    mov rax, qword ptr [rsp + 0x28]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    xor r9d, r9d
    lea r8, [rsp + 0x20]
    lea rdx, [rsp + 0x48]
    lea rcx, [rbp - 0x80]
    call 0x140012188
    mov eax, dword ptr [rsp + 0x68]
    mov rcx, qword ptr [rbp + 0x190]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x2a0]
    mov rbx, qword ptr [r11 + 0x18]
    mov rdi, qword ptr [r11 + 0x20]
    mov rsp, r11
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x40
    mov rdi, r9
    mov rbx, r8
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rcx + 0x88]
    add rax, 0x18
    mov qword ptr [rsp + 0x58], rax
    mov rcx, qword ptr [rip + 0x18916]
    mov qword ptr [rsp + 0x20], rcx
    test rcx, rcx
    je 0x14001247b
    test rax, rax
    je 0x14001246e
    mov r8d, 2
    mov r9d, r8d
    lea edx, [r8 + 0x7e]
    movups xmm0, xmmword ptr [rax]
    movups xmmword ptr [rcx], xmm0
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x60], xmm0
    add rcx, rdx
    movups xmm1, xmmword ptr [rax + 0x70]
    movups xmmword ptr [rcx - 0x10], xmm1
    add rax, rdx
    sub r9, 1
    jne 0x14001241e
    mov al, byte ptr [rax]
    mov byte ptr [rcx], al
    jmp 0x140012495
    xor edx, edx
    mov r8d, 0x101
    call 0x14001b630
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    mov r8d, 2
    lea edx, [r8 + 0x7e]
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rcx + 0x88]
    add rax, 0x119
    mov qword ptr [rsp + 0x28], rax
    mov rcx, qword ptr [rip + 0x1886c]
    mov qword ptr [rsp + 0x30], rcx
    test rcx, rcx
    je 0x14001251c
    test rax, rax
    je 0x14001250f
    movups xmm0, xmmword ptr [rax]
    movups xmmword ptr [rcx], xmm0
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x60], xmm0
    add rcx, rdx
    movups xmm1, xmmword ptr [rax + 0x70]
    movups xmmword ptr [rcx - 0x10], xmm1
    add rax, rdx
    sub r8, 1
    jne 0x1400124c3
    jmp 0x14001252c
    xor edx, edx
    mov r8d, 0x100
    call 0x14001b630
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    mov rax, qword ptr [rbx + 8]
    mov rcx, qword ptr [rax]
    mov rdx, qword ptr [rcx]
    or eax, 0xffffffff
    lock xadd dword ptr [rdx], eax
    cmp eax, 1
    jne 0x14001255d
    mov rax, qword ptr [rbx + 8]
    mov rcx, qword ptr [rax]
    lea rax, [rip + 0x16e20]
    cmp qword ptr [rcx], rax
    je 0x14001255d
    mov rcx, qword ptr [rcx]
    call 0x14000f250
    mov rax, qword ptr [rbx]
    mov rdx, qword ptr [rax]
    mov rax, qword ptr [rbx + 8]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rdx + 0x88]
    mov qword ptr [rcx], rax
    mov rax, qword ptr [rbx]
    mov rcx, qword ptr [rax]
    mov rax, qword ptr [rcx + 0x88]
    lock inc dword ptr [rax]
    mov ecx, dword ptr [rdi]
    call 0x140011694
    mov rbx, qword ptr [rsp + 0x50]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    int3 
    push rbx
    sub rsp, 0x40
    mov ebx, ecx
    xor edx, edx
    lea rcx, [rsp + 0x20]
    call 0x1400120e4
    and dword ptr [rip + 0x1877d], 0
    cmp ebx, -2
    jne 0x1400125ca
    mov dword ptr [rip + 0x1876e], 1
    call qword ptr [rip + 0xabf8]
    jmp 0x1400125df
    cmp ebx, -3
    jne 0x1400125e3
    mov dword ptr [rip + 0x18757], 1
    call qword ptr [rip + 0xabd9]
    mov ebx, eax
    jmp 0x1400125fa
    cmp ebx, -4
    jne 0x1400125fa
    mov rax, qword ptr [rsp + 0x28]
    mov dword ptr [rip + 0x18739], 1
    mov ebx, dword ptr [rax + 0xc]
    cmp byte ptr [rsp + 0x38], 0
    je 0x14001260d
    mov rcx, qword ptr [rsp + 0x20]
    and dword ptr [rcx + 0x3a8], 0xfffffffd
    mov eax, ebx
    add rsp, 0x40
    pop rbx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, rcx
    xor edx, edx
    add rcx, 0x18
    mov r8d, 0x101
    call 0x14001b630
    xor edx, edx
    lea rdi, [rbx + 0xc]
    movzx eax, dx
    lea r9, [rip + 0x16d2a]
    mov qword ptr [rbx + 4], rdx
    mov r8, rbx
    mov qword ptr [rbx + 0x220], rdx
    lea ecx, [rdx + 6]
    rep stosw word ptr [rdi], ax
    lea rax, [rip + 0x16d27]
    mov edi, edx
    sub r8, rax
    lea rcx, [rdi + r9]
    inc rdi
    mov al, byte ptr [rcx + 0x18]
    mov byte ptr [r8 + rcx + 0x30], al
    cmp rdi, 0x101
    jl 0x140012666
    lea rax, [rip + 0x16e04]
    sub rbx, rax
    lea rcx, [rdx + r9]
    inc rdx
    mov al, byte ptr [rcx + 0x119]
    mov byte ptr [rbx + rcx + 0x232], al
    cmp rdx, 0x100
    jl 0x140012688
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rdi
    push rbp
    lea rbp, [rsp - 0x680]
    sub rsp, 0x780
    mov rax, qword ptr [rip + 0x1692f]
    xor rax, rsp
    mov qword ptr [rbp + 0x670], rax
    mov rdi, rcx
    mov ecx, dword ptr [rcx + 4]
    cmp ecx, 0xfde9
    je 0x140012834
    lea rdx, [rsp + 0x50]
    call qword ptr [rip + 0xaad0]
    test eax, eax
    je 0x140012834
    xor eax, eax
    lea rcx, [rsp + 0x70]
    mov ebx, 0x100
    mov byte ptr [rcx], al
    inc eax
    inc rcx
    cmp eax, ebx
    jb 0x14001270c
    mov al, byte ptr [rsp + 0x56]
    lea rdx, [rsp + 0x56]
    mov byte ptr [rsp + 0x70], 0x20
    jmp 0x140012747
    movzx r8d, byte ptr [rdx + 1]
    movzx ecx, al
    jmp 0x14001273c
    cmp ecx, ebx
    jae 0x140012741
    mov byte ptr [rsp + rcx + 0x70], 0x20
    inc ecx
    cmp ecx, r8d
    jbe 0x140012731
    add rdx, 2
    mov al, byte ptr [rdx]
    test al, al
    jne 0x140012727
    mov eax, dword ptr [rdi + 4]
    lea r8, [rsp + 0x70]
    and dword ptr [rsp + 0x30], 0
    mov r9d, ebx
    mov dword ptr [rsp + 0x28], eax
    mov edx, 1
    lea rax, [rbp + 0x270]
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rax
    call 0x140013ca4
    and dword ptr [rsp + 0x40], 0
    lea r9, [rsp + 0x70]
    mov eax, dword ptr [rdi + 4]
    mov r8d, ebx
    mov rdx, qword ptr [rdi + 0x220]
    xor ecx, ecx
    mov dword ptr [rsp + 0x38], eax
    lea rax, [rbp + 0x70]
    mov dword ptr [rsp + 0x30], ebx
    mov qword ptr [rsp + 0x28], rax
    mov dword ptr [rsp + 0x20], ebx
    call 0x1400182b8
    and dword ptr [rsp + 0x40], 0
    lea r9, [rsp + 0x70]
    mov eax, dword ptr [rdi + 4]
    mov r8d, 0x200
    mov rdx, qword ptr [rdi + 0x220]
    xor ecx, ecx
    mov dword ptr [rsp + 0x38], eax
    lea rax, [rbp + 0x170]
    mov dword ptr [rsp + 0x30], ebx
    mov qword ptr [rsp + 0x28], rax
    mov dword ptr [rsp + 0x20], ebx
    call 0x1400182b8
    lea r8, [rbp + 0x70]
    sub r8, rdi
    lea r9, [rbp + 0x170]
    sub r9, rdi
    lea rdx, [rbp + 0x270]
    lea rax, [rdi + 0x19]
    test byte ptr [rdx], 1
    je 0x14001280e
    or byte ptr [rax], 0x10
    mov cl, byte ptr [r8 + rax - 0x19]
    jmp 0x14001281f
    test byte ptr [rdx], 2
    je 0x14001281d
    or byte ptr [rax], 0x20
    mov cl, byte ptr [r9 + rax - 0x19]
    jmp 0x14001281f
    xor cl, cl
    mov byte ptr [rax + 0x100], cl
    add rdx, 2
    inc rax
    sub rbx, 1
    jne 0x1400127ff
    jmp 0x140012873
    xor edx, edx
    lea rcx, [rdi + 0x19]
    mov ebx, 0x100
    lea r8d, [rdx - 0x61]
    lea eax, [r8 + 0x20]
    cmp eax, 0x19
    ja 0x140012854
    or byte ptr [rcx], 0x10
    lea eax, [rdx + 0x20]
    jmp 0x140012864
    cmp r8d, 0x19
    ja 0x140012862
    or byte ptr [rcx], 0x20
    lea eax, [rdx - 0x20]
    jmp 0x140012864
    xor al, al
    mov byte ptr [rcx + 0x100], al
    inc edx
    inc rcx
    cmp edx, ebx
    jb 0x14001283f
    mov rcx, qword ptr [rbp + 0x670]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x780]
    mov rbx, qword ptr [r11 + 0x18]
    mov rdi, qword ptr [r11 + 0x20]
    mov rsp, r11
    pop rbp
    ret
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rsi
    mov qword ptr [rax + 0x20], r9
    mov qword ptr [rax + 0x18], r8
    push rbp
    push rdi
    push r14
    lea rbp, [rax - 0x188]
    sub rsp, 0x270
    mov r14b, dl
    mov ebx, ecx
    mov rdx, r9
    mov rcx, r8
    call 0x140012b08
    mov ecx, ebx
    call 0x140012598
    mov rcx, qword ptr [rbp + 0x1a0]
    mov edi, eax
    mov r8, qword ptr [rcx + 0x88]
    cmp eax, dword ptr [r8 + 4]
    jne 0x1400128f1
    xor eax, eax
    jmp 0x140012aef
    mov ecx, 0x228
    call 0x14000fec8
    mov rbx, rax
    test rax, rax
    jne 0x140012912
    xor ecx, ecx
    call 0x14000f250
    or eax, 0xffffffff
    jmp 0x140012aef
    mov rax, qword ptr [rbp + 0x1a0]
    lea rcx, [rsp + 0x40]
    mov edx, 4
    mov r8d, edx
    mov rax, qword ptr [rax + 0x88]
    lea r9d, [rdx + 0x7c]
    movups xmm0, xmmword ptr [rax]
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx], xmm0
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm1, xmmword ptr [rax + 0x70]
    add rax, r9
    movups xmmword ptr [rcx + 0x60], xmm0
    add rcx, r9
    movups xmmword ptr [rcx - 0x10], xmm1
    sub r8, 1
    jne 0x140012931
    movups xmm0, xmmword ptr [rax]
    movups xmm1, xmmword ptr [rax + 0x10]
    mov rax, qword ptr [rax + 0x20]
    movups xmmword ptr [rcx], xmm0
    movups xmmword ptr [rcx + 0x10], xmm1
    mov qword ptr [rcx + 0x20], rax
    mov rcx, rbx
    lea rax, [rsp + 0x40]
    movups xmm0, xmmword ptr [rax]
    movups xmm1, xmmword ptr [rax + 0x10]
    movups xmmword ptr [rcx], xmm0
    movups xmm0, xmmword ptr [rax + 0x20]
    movups xmmword ptr [rcx + 0x10], xmm1
    movups xmm1, xmmword ptr [rax + 0x30]
    movups xmmword ptr [rcx + 0x20], xmm0
    movups xmm0, xmmword ptr [rax + 0x40]
    movups xmmword ptr [rcx + 0x30], xmm1
    movups xmm1, xmmword ptr [rax + 0x50]
    movups xmmword ptr [rcx + 0x40], xmm0
    movups xmm0, xmmword ptr [rax + 0x60]
    movups xmmword ptr [rcx + 0x50], xmm1
    movups xmm1, xmmword ptr [rax + 0x70]
    add rax, r9
    movups xmmword ptr [rcx + 0x60], xmm0
    add rcx, r9
    movups xmmword ptr [rcx - 0x10], xmm1
    sub rdx, 1
    jne 0x140012999
    movups xmm0, xmmword ptr [rax]
    movups xmm1, xmmword ptr [rax + 0x10]
    mov rax, qword ptr [rax + 0x20]
    movups xmmword ptr [rcx], xmm0
    movups xmmword ptr [rcx + 0x10], xmm1
    mov qword ptr [rcx + 0x20], rax
    mov ecx, edi
    and dword ptr [rbx], edx
    mov rdx, rbx
    call 0x140012c3c
    or edi, 0xffffffff
    mov esi, eax
    cmp eax, edi
    jne 0x140012a28
    call 0x14000f1b8
    mov rcx, rbx
    mov dword ptr [rax], 0x16
    call 0x14000f250
    mov eax, edi
    jmp 0x140012aef
    test r14b, r14b
    jne 0x140012a32
    call 0x14000e1fc
    mov rax, qword ptr [rbp + 0x1a0]
    mov rcx, qword ptr [rax + 0x88]
    mov eax, edi
    lock xadd dword ptr [rcx], eax
    add eax, edi
    jne 0x140012a69
    mov rax, qword ptr [rbp + 0x1a0]
    mov rcx, qword ptr [rax + 0x88]
    lea rax, [rip + 0x16911]
    cmp rcx, rax
    je 0x140012a69
    call 0x14000f250
    mov dword ptr [rbx], 1
    mov rax, qword ptr [rbp + 0x1a0]
    mov qword ptr [rax + 0x88], rbx
    mov rax, qword ptr [rbp + 0x1a0]
    mov ecx, dword ptr [rax + 0x3a8]
    test dword ptr [rip + 0x16ec0], ecx
    jne 0x140012ae6
    lea rax, [rbp + 0x1a0]
    mov qword ptr [rsp + 0x30], rax
    lea r9, [rsp + 0x24]
    lea rax, [rbp + 0x1a8]
    mov qword ptr [rsp + 0x38], rax
    lea r8, [rsp + 0x30]
    mov eax, 5
    lea rdx, [rsp + 0x28]
    lea rcx, [rsp + 0x20]
    mov dword ptr [rsp + 0x24], eax
    mov dword ptr [rsp + 0x28], eax
    call 0x1400123c8
    test r14b, r14b
    je 0x140012ae6
    mov rax, qword ptr [rbp + 0x1a8]
    mov rcx, qword ptr [rax]
    mov qword ptr [rip + 0x1681a], rcx
    xor ecx, ecx
    call 0x14000f250
    mov eax, esi
    lea r11, [rsp + 0x270]
    mov rbx, qword ptr [r11 + 0x20]
    mov rsi, qword ptr [r11 + 0x28]
    mov rsp, r11
    pop r14
    pop rdi
    pop rbp
    ret
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rsi, rdx
    mov rdi, rcx
    mov eax, dword ptr [rip + 0x16e2d]
    test dword ptr [rcx + 0x3a8], eax
    je 0x140012b3e
    cmp qword ptr [rcx + 0x90], 0
    je 0x140012b3e
    mov rbx, qword ptr [rcx + 0x88]
    jmp 0x140012ba2
    mov ecx, 5
    call 0x140011640
    nop 
    mov rbx, qword ptr [rdi + 0x88]
    mov qword ptr [rsp + 0x30], rbx
    cmp rbx, qword ptr [rsi]
    je 0x140012b98
    test rbx, rbx
    je 0x140012b81
    or eax, 0xffffffff
    lock xadd dword ptr [rbx], eax
    cmp eax, 1
    jne 0x140012b81
    lea rax, [rip + 0x167fe]
    mov rcx, qword ptr [rsp + 0x30]
    cmp rcx, rax
    je 0x140012b81
    call 0x14000f250
    mov rax, qword ptr [rsi]
    mov qword ptr [rdi + 0x88], rax
    mov qword ptr [rsp + 0x30], rax
    lock inc dword ptr [rax]
    mov rbx, qword ptr [rsp + 0x30]
    mov ecx, 5
    call 0x140011694
    test rbx, rbx
    je 0x140012bba
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    call 0x14000e8f0
    nop 
    sub rsp, 0x28
    cmp byte ptr [rip + 0x18169], 0
    jne 0x140012c19
    lea rcx, [rip + 0x16adc]
    mov qword ptr [rip + 0x18145], rcx
    lea rax, [rip + 0x1678e]
    lea rcx, [rip + 0x169b7]
    mov qword ptr [rip + 0x18138], rax
    mov qword ptr [rip + 0x18121], rcx
    call 0x14000ee58
    lea r9, [rip + 0x18125]
    mov r8, rax
    mov dl, 1
    mov ecx, 0xfffffffd
    call 0x140012898
    mov byte ptr [rip + 0x1811b], 1
    mov al, 1
    add rsp, 0x28
    ret
    sub rsp, 0x28
    call 0x14000ed84
    lea rdx, [rip + 0x180f8]
    mov rcx, rax
    add rsp, 0x28
    jmp 0x140012b08
    mov qword ptr [rsp + 0x18], rbx
    mov qword ptr [rsp + 0x20], rbp
    push rsi
    push rdi
    push r12
    push r14
    push r15
    sub rsp, 0x40
    mov rax, qword ptr [rip + 0x163a7]
    xor rax, rsp
    mov qword ptr [rsp + 0x38], rax
    mov rsi, rdx
    call 0x140012598
    xor ebx, ebx
    mov edi, eax
    test eax, eax
    je 0x140012ec9
    lea r12, [rip + 0x16b44]
    mov r14d, ebx
    mov rax, r12
    lea ebp, [rbx + 1]
    cmp dword ptr [rax], edi
    je 0x140012dd3
    add r14d, ebp
    add rax, 0x30
    cmp r14d, 5
    jb 0x140012c85
    cmp edi, 0xfde8
    je 0x140012dcb
    movzx ecx, di
    call qword ptr [rip + 0xa501]
    test eax, eax
    je 0x140012dcb
    mov eax, 0xfde9
    cmp edi, eax
    jne 0x140012ce6
    mov qword ptr [rsi + 4], rax
    mov qword ptr [rsi + 0x220], rbx
    mov dword ptr [rsi + 0x18], ebx
    mov word ptr [rsi + 0x1c], bx
    lea rdi, [rsi + 0xc]
    movzx eax, bx
    mov ecx, 6
    rep stosw word ptr [rdi], ax
    jmp 0x140012ebf
    lea rdx, [rsp + 0x20]
    mov ecx, edi
    call qword ptr [rip + 0xa4d5]
    test eax, eax
    je 0x140012dbf
    lea rcx, [rsi + 0x18]
    xor edx, edx
    mov r8d, 0x101
    call 0x14001b630
    cmp dword ptr [rsp + 0x20], 2
    mov dword ptr [rsi + 4], edi
    mov qword ptr [rsi + 0x220], rbx
    jne 0x140012db5
    lea rcx, [rsp + 0x26]
    cmp byte ptr [rsp + 0x26], bl
    je 0x140012d58
    cmp byte ptr [rcx + 1], bl
    je 0x140012d58
    movzx eax, byte ptr [rcx + 1]
    movzx edx, byte ptr [rcx]
    cmp edx, eax
    ja 0x140012d50
    sub eax, edx
    lea edi, [rdx + 1]
    lea edx, [rax + rbp]
    or byte ptr [rdi + rsi + 0x18], 4
    add edi, ebp
    sub rdx, rbp
    jne 0x140012d44
    add rcx, 2
    cmp byte ptr [rcx], bl
    jne 0x140012d2c
    lea rax, [rsi + 0x1a]
    mov ecx, 0xfe
    or byte ptr [rax], 8
    add rax, rbp
    sub rcx, rbp
    jne 0x140012d61
    mov ecx, dword ptr [rsi + 4]
    sub ecx, 0x3a4
    je 0x140012da5
    sub ecx, 4
    je 0x140012d9c
    sub ecx, 0xd
    je 0x140012d93
    cmp ecx, ebp
    je 0x140012d8a
    mov rax, rbx
    jmp 0x140012dac
    mov rax, qword ptr [rip + 0xcaff]
    jmp 0x140012dac
    mov rax, qword ptr [rip + 0xcaee]
    jmp 0x140012dac
    mov rax, qword ptr [rip + 0xcadd]
    jmp 0x140012dac
    mov rax, qword ptr [rip + 0xcacc]
    mov qword ptr [rsi + 0x220], rax
    jmp 0x140012db7
    mov ebp, ebx
    mov dword ptr [rsi + 8], ebp
    jmp 0x140012cd2
    cmp dword ptr [rip + 0x17f6b], ebx
    jne 0x140012ec9
    or eax, 0xffffffff
    jmp 0x140012ed3
    lea rcx, [rsi + 0x18]
    xor edx, edx
    mov r8d, 0x101
    call 0x14001b630
    mov eax, r14d
    lea r9, [r12 + 0x10]
    lea r11, [rip + 0x169bd]
    mov r14d, 4
    lea r15, [rax + rax*2]
    shl r15, 4
    add r9, r15
    mov rdx, r9
    cmp byte ptr [r9], bl
    je 0x140012e4a
    cmp byte ptr [rdx + 1], bl
    je 0x140012e4a
    movzx r8d, byte ptr [rdx]
    movzx eax, byte ptr [rdx + 1]
    cmp r8d, eax
    ja 0x140012e42
    lea r10d, [r8 + 1]
    cmp r10d, 0x101
    jae 0x140012e42
    mov al, byte ptr [r11]
    add r8d, ebp
    or byte ptr [r10 + rsi + 0x18], al
    add r10d, ebp
    movzx eax, byte ptr [rdx + 1]
    cmp r8d, eax
    jbe 0x140012e22
    add rdx, 2
    cmp byte ptr [rdx], bl
    jne 0x140012e0c
    add r9, 8
    add r11, rbp
    sub r14, rbp
    jne 0x140012e04
    mov dword ptr [rsi + 4], edi
    mov dword ptr [rsi + 8], ebp
    sub edi, 0x3a4
    je 0x140012e8d
    sub edi, 4
    je 0x140012e84
    sub edi, 0xd
    je 0x140012e7b
    cmp edi, ebp
    jne 0x140012e94
    mov rbx, qword ptr [rip + 0xca17]
    jmp 0x140012e94
    mov rbx, qword ptr [rip + 0xca06]
    jmp 0x140012e94
    mov rbx, qword ptr [rip + 0xc9f5]
    jmp 0x140012e94
    mov rbx, qword ptr [rip + 0xc9e4]
    lea rdi, [r12 + 4]
    mov qword ptr [rsi + 0x220], rbx
    add rdi, r15
    lea rdx, [rsi + 0xc]
    mov ecx, 6
    movzx eax, word ptr [rdi]
    lea rdi, [rdi + 2]
    mov word ptr [rdx], ax
    lea rdx, [rdx + 2]
    sub rcx, rbp
    jne 0x140012eac
    mov rcx, rsi
    call 0x1400126b0
    jmp 0x140012ed1
    mov rcx, rsi
    call 0x140012618
    xor eax, eax
    mov rcx, qword ptr [rsp + 0x38]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x40]
    mov rbx, qword ptr [r11 + 0x40]
    mov rbp, qword ptr [r11 + 0x48]
    mov rsp, r11
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x40
    mov ebx, edx
    mov edi, r9d
    mov rdx, rcx
    mov esi, r8d
    lea rcx, [rsp + 0x20]
    call 0x1400120e4
    mov rax, qword ptr [rsp + 0x30]
    movzx edx, bl
    test byte ptr [rdx + rax + 0x19], dil
    jne 0x140012f47
    test esi, esi
    je 0x140012f43
    mov rax, qword ptr [rsp + 0x28]
    mov rcx, qword ptr [rax]
    movzx eax, word ptr [rcx + rdx*2]
    test esi, eax
    jne 0x140012f47
    xor eax, eax
    jmp 0x140012f4c
    mov eax, 1
    cmp byte ptr [rsp + 0x38], 0
    je 0x140012f5f
    mov rcx, qword ptr [rsp + 0x20]
    and dword ptr [rcx + 0x3a8], 0xfffffffd
    mov rbx, qword ptr [rsp + 0x50]
    mov rsi, qword ptr [rsp + 0x58]
    add rsp, 0x40
    pop rdi
    ret
    int3 
    mov edx, ecx
    mov r9d, 4
    xor ecx, ecx
    xor r8d, r8d
    jmp 0x140012efc
    int3 
    int3 
    mov eax, 0xdeac
    cmp ecx, eax
    ja 0x140012fdc
    je 0x140012fd3
    mov eax, 0xc433
    cmp ecx, eax
    ja 0x140012fb7
    je 0x140012fd3
    mov eax, ecx
    sub eax, 0x2a
    je 0x140012fd3
    sub eax, 0xc402
    je 0x140012fd3
    sub eax, 1
    je 0x140012fd3
    sub eax, 1
    je 0x140012fd3
    cmp eax, 3
    jmp 0x140012fd1
    mov eax, ecx
    sub eax, 0xc435
    je 0x140012fd3
    sub eax, 0x1263
    je 0x14001300f
    sub eax, 0x812
    je 0x140012fd3
    cmp eax, 1
    jne 0x140012fd5
    xor edx, edx
    jmp qword ptr [rip + 0xa1f4]
    mov eax, ecx
    sub eax, 0xdead
    je 0x140012fd3
    sub eax, 1
    je 0x140012fd3
    sub eax, 1
    je 0x140012fd3
    sub eax, 1
    je 0x140012fd3
    sub eax, 1
    je 0x140012fd3
    sub eax, 1
    je 0x140012fd3
    sub eax, 1
    je 0x140012fd3
    sub eax, 0x1f35
    je 0x140012fd3
    cmp eax, 1
    jne 0x140012fd5
    and edx, 8
    jmp 0x140012fd5
    mov qword ptr [rsp + 8], rbx
    push rdi
    lea eax, [rcx - 0xfde8]
    mov r11d, r9d
    cmp eax, 1
    mov rbx, r8
    mov eax, 0xdeac
    setbe r10b
    xor edi, edi
    cmp ecx, eax
    ja 0x140013079
    je 0x1400130b2
    mov eax, 0xc433
    cmp ecx, eax
    ja 0x140013062
    je 0x1400130b2
    mov eax, ecx
    sub eax, 0x2a
    je 0x1400130b2
    sub eax, 0xc402
    je 0x1400130b2
    sub eax, 1
    je 0x1400130b2
    sub eax, 1
    je 0x1400130b2
    cmp eax, 3
    jmp 0x1400130aa
    mov eax, ecx
    sub eax, 0xc435
    je 0x1400130b2
    sub eax, 0x1263
    je 0x1400130b2
    sub eax, 0x812
    jmp 0x1400130a5
    mov eax, ecx
    sub eax, 0xdead
    je 0x1400130b2
    sub eax, 1
    je 0x1400130b2
    sub eax, 1
    je 0x1400130b2
    sub eax, 1
    je 0x1400130b2
    sub eax, 1
    je 0x1400130b2
    sub eax, 1
    je 0x1400130b2
    sub eax, 1
    je 0x1400130b2
    sub eax, 0x1f35
    je 0x1400130b2
    cmp eax, 1
    je 0x1400130b2
    btr edx, 7
    jmp 0x1400130b4
    mov edx, edi
    mov rax, qword ptr [rsp + 0x48]
    test r10b, r10b
    mov r9, qword ptr [rsp + 0x40]
    mov r8, rax
    cmovne r8, rdi
    cmovne r9, rdi
    je 0x1400130d5
    test rax, rax
    je 0x1400130d5
    mov dword ptr [rax], edi
    mov qword ptr [rsp + 0x48], r8
    mov r8, rbx
    mov qword ptr [rsp + 0x40], r9
    mov r9d, r11d
    mov rbx, qword ptr [rsp + 0x10]
    pop rdi
    jmp qword ptr [rip + 0xa0e6]
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rbp
    mov qword ptr [rax + 0x18], rsi
    mov qword ptr [rax + 0x20], rdi
    push r14
    sub rsp, 0x40
    call qword ptr [rip + 0xa0cd]
    xor esi, esi
    mov rbx, rax
    test rax, rax
    jne 0x140013124
    xor eax, eax
    jmp 0x1400131e7
    mov rbp, rbx
    cmp word ptr [rax], si
    je 0x140013149
    or rax, 0xffffffffffffffff
    inc rax
    cmp word ptr [rbp + rax*2], si
    jne 0x140013130
    lea rbp, [rbp + rax*2]
    add rbp, 2
    cmp word ptr [rbp], si
    jne 0x14001312c
    mov qword ptr [rsp + 0x38], rsi
    sub rbp, rbx
    mov qword ptr [rsp + 0x30], rsi
    add rbp, 2
    sar rbp, 1
    mov r8, rbx
    mov r9d, ebp
    mov dword ptr [rsp + 0x28], esi
    xor edx, edx
    mov qword ptr [rsp + 0x20], rsi
    xor ecx, ecx
    call 0x140013014
    movsxd r14, eax
    test eax, eax
    jne 0x140013187
    mov rcx, rbx
    call qword ptr [rip + 0xa063]
    jmp 0x14001311d
    mov rcx, r14
    call 0x14000fec8
    mov rdi, rax
    test rax, rax
    jne 0x1400131a0
    xor ecx, ecx
    call 0x14000f250
    jmp 0x14001317c
    mov qword ptr [rsp + 0x38], rsi
    mov r9d, ebp
    mov qword ptr [rsp + 0x30], rsi
    mov r8, rbx
    mov dword ptr [rsp + 0x28], r14d
    xor edx, edx
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rdi
    call 0x140013014
    test eax, eax
    jne 0x1400131d1
    mov rcx, rdi
    call 0x14000f250
    jmp 0x1400131db
    xor ecx, ecx
    call 0x14000f250
    mov rsi, rdi
    mov rcx, rbx
    call qword ptr [rip + 0xa004]
    mov rax, rsi
    mov rbx, qword ptr [rsp + 0x50]
    mov rbp, qword ptr [rsp + 0x58]
    mov rsi, qword ptr [rsp + 0x60]
    mov rdi, qword ptr [rsp + 0x68]
    add rsp, 0x40
    pop r14
    ret
    int3 
    int3 
    mov qword ptr [rsp + 0x18], rbx
    mov dword ptr [rsp + 0x10], edx
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    xor esi, esi
    mov ebx, edx
    mov r15, rcx
    test rcx, rcx
    jne 0x140013238
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    jmp 0x14001352b
    mov edx, 0x3d
    mov rdi, r15
    call 0x14001ae98
    mov r13, rax
    test rax, rax
    je 0x140013518
    cmp rax, r15
    je 0x140013518
    mov r14, qword ptr [rip + 0x171e7]
    cmp r14, qword ptr [rip + 0x171f8]
    mov bpl, byte ptr [rax + 1]
    mov byte ptr [rsp + 0x70], bpl
    jne 0x140013285
    mov rcx, r14
    call 0x14001355c
    mov r14, rax
    mov qword ptr [rip + 0x171c3], rax
    mov r12d, 1
    test r14, r14
    jne 0x14001335e
    test ebx, ebx
    je 0x1400132ed
    cmp qword ptr [rip + 0x171b1], rsi
    je 0x1400132ed
    call 0x14000dc9c
    test rax, rax
    jne 0x1400132c9
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    or rbp, 0xffffffffffffffff
    mov rcx, r15
    call 0x14000f250
    mov eax, ebp
    jmp 0x14001352f
    mov r14, qword ptr [rip + 0x17178]
    cmp r14, qword ptr [rip + 0x17189]
    jne 0x140013355
    mov rcx, r14
    call 0x14001355c
    mov r14, rax
    mov qword ptr [rip + 0x1715d], rax
    jmp 0x140013355
    test bpl, bpl
    je 0x14001340e
    mov edx, 8
    mov rcx, r12
    call 0x14000f1d8
    xor ecx, ecx
    mov qword ptr [rip + 0x1713c], rax
    call 0x14000f250
    mov r14, qword ptr [rip + 0x17130]
    test r14, r14
    je 0x1400132b6
    cmp qword ptr [rip + 0x1712c], rsi
    jne 0x140013355
    mov edx, 8
    mov rcx, r12
    call 0x14000f1d8
    xor ecx, ecx
    mov qword ptr [rip + 0x17114], rax
    call 0x14000f250
    cmp qword ptr [rip + 0x17108], rsi
    je 0x1400132b6
    mov r14, qword ptr [rip + 0x170f3]
    test r14, r14
    je 0x1400132b6
    mov rax, qword ptr [r14]
    mov r12, r13
    sub r12, r15
    mov rbx, r14
    test rax, rax
    je 0x1400133a3
    mov r8, r12
    mov rdx, rax
    mov rcx, r15
    call 0x140018368
    test eax, eax
    jne 0x140013391
    mov rax, qword ptr [rbx]
    cmp byte ptr [r12 + rax], 0x3d
    je 0x14001339a
    cmp byte ptr [r12 + rax], sil
    je 0x14001339a
    add rbx, 8
    mov rax, qword ptr [rbx]
    jmp 0x14001336a
    sub rbx, r14
    sar rbx, 3
    jmp 0x1400133ad
    sub rbx, r14
    sar rbx, 3
    neg rbx
    test rbx, rbx
    js 0x140013409
    cmp qword ptr [r14], rsi
    je 0x140013409
    mov rcx, qword ptr [r14 + rbx*8]
    call 0x14000f250
    test bpl, bpl
    je 0x1400133da
    mov qword ptr [r14 + rbx*8], r15
    jmp 0x140013469
    mov rax, qword ptr [r14 + rbx*8 + 8]
    mov qword ptr [r14 + rbx*8], rax
    inc rbx
    cmp qword ptr [r14 + rbx*8], rsi
    jne 0x1400133ce
    mov r8d, 8
    mov rdx, rbx
    mov rcx, r14
    call 0x140014240
    xor ecx, ecx
    mov rbx, rax
    call 0x14000f250
    test rbx, rbx
    je 0x14001346c
    mov qword ptr [rip + 0x17041], rbx
    jmp 0x14001346c
    test bpl, bpl
    jne 0x140013415
    mov ebp, esi
    jmp 0x1400132ba
    neg rbx
    lea rdx, [rbx + 2]
    cmp rdx, rbx
    jb 0x1400132b6
    movabs rax, 0x1fffffffffffffff
    cmp rdx, rax
    jae 0x1400132b6
    mov r8d, 8
    mov rcx, r14
    call 0x140014240
    xor ecx, ecx
    mov r14, rax
    call 0x14000f250
    test r14, r14
    je 0x1400132b6
    mov qword ptr [r14 + rbx*8], r15
    mov qword ptr [r14 + rbx*8 + 8], rsi
    mov qword ptr [rip + 0x16fdf], r14
    mov rdi, rsi
    cmp dword ptr [rsp + 0x78], esi
    je 0x14001350c
    or rbp, 0xffffffffffffffff
    mov r14, rbp
    inc r14
    cmp byte ptr [r15 + r14], sil
    jne 0x14001347d
    mov edx, 1
    lea rcx, [r14 + 2]
    call 0x14000f1d8
    mov rbx, rax
    test rax, rax
    jne 0x1400134a5
    xor ecx, ecx
    call 0x14000f250
    jmp 0x1400134f8
    mov r8, r15
    lea rdx, [r14 + 2]
    mov rcx, rbx
    call 0x14000e890
    test eax, eax
    jne 0x140013547
    mov rax, rbx
    lea rcx, [r13 + 1]
    sub rax, r15
    add rcx, rax
    neg byte ptr [rsp + 0x70]
    sbb rdx, rdx
    mov byte ptr [rax + r13], sil
    and rdx, rcx
    mov rcx, rbx
    call 0x140018480
    test eax, eax
    jne 0x140013504
    call 0x14000f1b8
    mov rcx, rbx
    mov dword ptr [rax], 0x2a
    call 0x14000f250
    mov esi, ebp
    mov rcx, rdi
    call 0x14000f250
    mov eax, esi
    jmp 0x14001352f
    mov rcx, rbx
    call 0x14000f250
    mov rcx, rdi
    call 0x14000f250
    xor eax, eax
    jmp 0x14001352f
    call 0x14000f1b8
    mov rcx, r15
    mov dword ptr [rax], 0x16
    call 0x14000f250
    or rax, 0xffffffffffffffff
    mov rbx, qword ptr [rsp + 0x80]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    xor r9d, r9d
    mov qword ptr [rsp + 0x20], rsi
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009ebc
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x30
    mov rdi, rcx
    test rcx, rcx
    jne 0x140013591
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    mov rdi, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop r14
    ret
    xor ecx, ecx
    mov rax, rdi
    cmp qword ptr [rdi], rcx
    je 0x1400135a8
    inc rcx
    lea rax, [rax + 8]
    cmp qword ptr [rax], 0
    jne 0x14001359b
    inc rcx
    mov edx, 8
    call 0x14000f1d8
    mov rbx, rax
    test rax, rax
    je 0x14001363b
    mov rax, qword ptr [rdi]
    test rax, rax
    je 0x140013616
    mov r14, rbx
    sub r14, rdi
    or rsi, 0xffffffffffffffff
    inc rsi
    cmp byte ptr [rax + rsi], 0
    jne 0x1400135cf
    mov edx, 1
    lea rcx, [rsi + 1]
    call 0x14000f1d8
    xor ecx, ecx
    mov qword ptr [r14 + rdi], rax
    call 0x14000f250
    mov rcx, qword ptr [r14 + rdi]
    test rcx, rcx
    je 0x14001363b
    mov r8, qword ptr [rdi]
    lea rdx, [rsi + 1]
    call 0x14000e890
    test eax, eax
    jne 0x140013625
    add rdi, 8
    mov rax, qword ptr [rdi]
    test rax, rax
    jne 0x1400135cb
    xor ecx, ecx
    call 0x14000f250
    mov rax, rbx
    jmp 0x14001357b
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009ebc
    int3 
    call 0x14000e8f0
    int3 
    int3 
    int3 
    int3 
    jmp 0x140013204
    int3 
    int3 
    int3 
    mov rax, qword ptr gs:[0x30]
    mov rcx, qword ptr [rax + 0x60]
    mov eax, dword ptr [rcx + 0xbc]
    shr eax, 8
    and al, 1
    ret
    int3 
    int3 
    int3 
    mov rax, qword ptr gs:[0x30]
    mov rcx, qword ptr [rax + 0x60]
    mov rax, qword ptr [rcx + 0x20]
    mov eax, dword ptr [rax + 8]
    shr eax, 0x1f
    ret
    push rbx
    sub rsp, 0x20
    xor ebx, ebx
    mov dword ptr [rsp + 0x30], ebx
    call 0x140013668
    test al, al
    jne 0x14001369f
    lea rcx, [rsp + 0x30]
    call 0x14000f448
    cmp dword ptr [rsp + 0x30], 1
    setne bl
    mov eax, ebx
    add rsp, 0x20
    pop rbx
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov edx, 0x48
    lea ecx, [rdx - 8]
    call 0x14000f1d8
    xor esi, esi
    mov rbx, rax
    test rax, rax
    je 0x140013736
    lea rbp, [rax + 0x1200]
    cmp rax, rbp
    je 0x140013733
    lea rdi, [rax + 0x30]
    lea rcx, [rdi - 0x30]
    xor r8d, r8d
    mov edx, 0xfa0
    call 0x14000f5f0
    or qword ptr [rdi - 8], 0xffffffffffffffff
    lea rcx, [rdi + 0xe]
    and byte ptr [rdi + 0xd], 0xf8
    mov eax, esi
    mov qword ptr [rdi], rsi
    mov dword ptr [rdi + 8], 0xa0a0000
    mov byte ptr [rdi + 0xc], 0xa
    mov byte ptr [rcx], sil
    inc eax
    inc rcx
    cmp eax, 5
    jb 0x140013719
    add rdi, 0x48
    lea rax, [rdi - 0x30]
    cmp rax, rbp
    jne 0x1400136eb
    mov rsi, rbx
    xor ecx, ecx
    call 0x14000f250
    mov rbx, qword ptr [rsp + 0x30]
    mov rax, rsi
    mov rsi, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    test rcx, rcx
    je 0x1400137a7
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    lea rsi, [rcx + 0x1200]
    mov rbx, rcx
    mov rdi, rcx
    cmp rcx, rsi
    je 0x140013790
    mov rcx, rdi
    call qword ptr [rip + 0x9949]
    add rdi, 0x48
    cmp rdi, rsi
    jne 0x14001377e
    mov rcx, rbx
    call 0x14000f250
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r15
    sub rsp, 0x30
    mov esi, ecx
    cmp ecx, 0x2000
    jb 0x1400137f0
    call 0x14000f1b8
    mov ebx, 9
    mov dword ptr [rax], ebx
    call 0x140009e6c
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    mov rdi, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop r15
    ret
    xor edi, edi
    lea ecx, [rdi + 7]
    call 0x140011640
    nop 
    mov ebx, edi
    mov eax, dword ptr [rip + 0x172ad]
    mov qword ptr [rsp + 0x20], rbx
    cmp esi, eax
    jl 0x140013842
    lea r15, [rip + 0x16e9d]
    cmp qword ptr [r15 + rbx*8], rdi
    je 0x14001381b
    jmp 0x14001383d
    call 0x1400136b0
    mov qword ptr [r15 + rbx*8], rax
    test rax, rax
    jne 0x14001382e
    lea edi, [rax + 0xc]
    jmp 0x140013842
    mov eax, dword ptr [rip + 0x1727c]
    add eax, 0x40
    mov dword ptr [rip + 0x17273], eax
    inc rbx
    jmp 0x140013803
    mov ecx, 7
    call 0x140011694
    mov eax, edi
    jmp 0x1400137da
    movsxd rdx, ecx
    lea r8, [rip + 0x16e56]
    mov rax, rdx
    and edx, 0x3f
    sar rax, 6
    lea rcx, [rdx + rdx*8]
    mov rax, qword ptr [r8 + rax*8]
    lea rcx, [rax + rcx*8]
    jmp qword ptr [rip + 0x9849]
    int3 
    movsxd rdx, ecx
    lea r8, [rip + 0x16e2e]
    mov rax, rdx
    and edx, 0x3f
    sar rax, 6
    lea rcx, [rdx + rdx*8]
    mov rax, qword ptr [r8 + rax*8]
    lea rcx, [rax + rcx*8]
    jmp qword ptr [rip + 0x9829]
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    mov qword ptr [rsp + 0x18], rdi
    push r14
    sub rsp, 0x20
    movsxd rbx, ecx
    test ecx, ecx
    js 0x14001392e
    cmp ebx, dword ptr [rip + 0x171ee]
    jae 0x14001392e
    mov rax, rbx
    lea r14, [rip + 0x16de2]
    and eax, 0x3f
    mov rsi, rbx
    shr rsi, 6
    lea rdi, [rax + rax*8]
    mov rax, qword ptr [r14 + rsi*8]
    test byte ptr [rax + rdi*8 + 0x38], 1
    je 0x14001392e
    cmp qword ptr [rax + rdi*8 + 0x28], -1
    je 0x14001392e
    call 0x14000d570
    cmp eax, 1
    jne 0x140013920
    test ebx, ebx
    je 0x140013913
    sub ebx, eax
    je 0x14001390c
    cmp ebx, eax
    jne 0x140013920
    mov ecx, 0xfffffff4
    jmp 0x140013918
    mov ecx, 0xfffffff5
    jmp 0x140013918
    mov ecx, 0xfffffff6
    xor edx, edx
    call qword ptr [rip + 0x98d8]
    mov rax, qword ptr [r14 + rsi*8]
    or qword ptr [rax + rdi*8 + 0x28], 0xffffffffffffffff
    xor eax, eax
    jmp 0x140013944
    call 0x14000f1b8
    mov dword ptr [rax], 9
    call 0x14000f198
    and dword ptr [rax], 0
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    mov rdi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop r14
    ret
    int3 
    int3 
    sub rsp, 0x28
    cmp ecx, -2
    jne 0x14001397a
    call 0x14000f198
    and dword ptr [rax], 0
    call 0x14000f1b8
    mov dword ptr [rax], 9
    jmp 0x1400139c8
    test ecx, ecx
    js 0x1400139b0
    cmp ecx, dword ptr [rip + 0x1712c]
    jae 0x1400139b0
    movsxd rcx, ecx
    lea r8, [rip + 0x16d20]
    mov rax, rcx
    and ecx, 0x3f
    shr rax, 6
    lea rdx, [rcx + rcx*8]
    mov rax, qword ptr [r8 + rax*8]
    test byte ptr [rax + rdx*8 + 0x38], 1
    je 0x1400139b0
    mov rax, qword ptr [rax + rdx*8 + 0x28]
    jmp 0x1400139cc
    call 0x14000f198
    and dword ptr [rax], 0
    call 0x14000f1b8
    mov dword ptr [rax], 9
    call 0x140009e6c
    or rax, 0xffffffffffffffff
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    mov eax, dword ptr [rip + 0x1735e]
    mov ecx, 0x4000
    test eax, eax
    cmove eax, ecx
    mov dword ptr [rip + 0x1734e], eax
    xor eax, eax
    ret
    int3 
    int3 
    int3 
    test rcx, rcx
    je 0x140013af9
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov rcx, qword ptr [rcx + 0x18]
    cmp rcx, qword ptr [rip + 0x15ebc]
    je 0x140013a13
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x20]
    cmp rcx, qword ptr [rip + 0x15eb2]
    je 0x140013a25
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x28]
    cmp rcx, qword ptr [rip + 0x15ea8]
    je 0x140013a37
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x30]
    cmp rcx, qword ptr [rip + 0x15e9e]
    je 0x140013a49
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x38]
    cmp rcx, qword ptr [rip + 0x15e94]
    je 0x140013a5b
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x40]
    cmp rcx, qword ptr [rip + 0x15e8a]
    je 0x140013a6d
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x48]
    cmp rcx, qword ptr [rip + 0x15e80]
    je 0x140013a7f
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x68]
    cmp rcx, qword ptr [rip + 0x15e8e]
    je 0x140013a91
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x70]
    cmp rcx, qword ptr [rip + 0x15e84]
    je 0x140013aa3
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x78]
    cmp rcx, qword ptr [rip + 0x15e7a]
    je 0x140013ab5
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x80]
    cmp rcx, qword ptr [rip + 0x15e6d]
    je 0x140013aca
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x88]
    cmp rcx, qword ptr [rip + 0x15e60]
    je 0x140013adf
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x90]
    cmp rcx, qword ptr [rip + 0x15e53]
    je 0x140013af4
    call 0x14000f250
    add rsp, 0x20
    pop rbx
    ret
    int3 
    int3 
    test rcx, rcx
    je 0x140013b67
    push rbx
    sub rsp, 0x20
    mov rbx, rcx
    mov rcx, qword ptr [rcx]
    cmp rcx, qword ptr [rip + 0x15d9d]
    je 0x140013b1a
    call 0x14000f250
    mov rcx, qword ptr [rbx + 8]
    cmp rcx, qword ptr [rip + 0x15d93]
    je 0x140013b2c
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x10]
    cmp rcx, qword ptr [rip + 0x15d89]
    je 0x140013b3e
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x58]
    cmp rcx, qword ptr [rip + 0x15dbf]
    je 0x140013b50
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x60]
    cmp rcx, qword ptr [rip + 0x15db5]
    je 0x140013b62
    call 0x14000f250
    add rsp, 0x20
    pop rbx
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    lea rdi, [rcx + rdx*8]
    mov rbx, rcx
    cmp rcx, rdi
    je 0x140013b8f
    mov rcx, qword ptr [rbx]
    call 0x14000f250
    add rbx, 8
    cmp rbx, rdi
    jne 0x140013b7e
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    test rcx, rcx
    je 0x140013ca3
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    push rsi
    sub rsp, 0x20
    mov ebp, 7
    mov rbx, rcx
    mov edx, ebp
    call 0x140013b68
    lea rcx, [rbx + 0x38]
    mov edx, ebp
    call 0x140013b68
    lea esi, [rbp + 5]
    mov edx, esi
    lea rcx, [rbx + 0x70]
    call 0x140013b68
    lea rcx, [rbx + 0xd0]
    mov edx, esi
    call 0x140013b68
    lea rcx, [rbx + 0x130]
    lea edx, [rbp - 5]
    call 0x140013b68
    mov rcx, qword ptr [rbx + 0x140]
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x148]
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x150]
    call 0x14000f250
    lea rcx, [rbx + 0x160]
    mov edx, ebp
    call 0x140013b68
    lea rcx, [rbx + 0x198]
    mov edx, ebp
    call 0x140013b68
    lea rcx, [rbx + 0x1d0]
    mov edx, esi
    call 0x140013b68
    lea rcx, [rbx + 0x230]
    mov edx, esi
    call 0x140013b68
    lea rcx, [rbx + 0x290]
    lea edx, [rbp - 5]
    call 0x140013b68
    mov rcx, qword ptr [rbx + 0x2a0]
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x2a8]
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x2b0]
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x2b8]
    call 0x14000f250
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rsi
    ret
    push rbp
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x60
    lea rbp, [rsp + 0x30]
    mov qword ptr [rbp + 0x60], rbx
    mov qword ptr [rbp + 0x68], rsi
    mov qword ptr [rbp + 0x70], rdi
    mov rax, qword ptr [rip + 0x15336]
    xor rax, rbp
    mov qword ptr [rbp + 0x28], rax
    mov r13d, edx
    mov r15d, r9d
    mov rdx, rcx
    mov r12, r8
    lea rcx, [rbp + 8]
    call 0x1400120e4
    mov edi, dword ptr [rbp + 0x88]
    test edi, edi
    jne 0x140013cf7
    mov rax, qword ptr [rbp + 0x10]
    mov edi, dword ptr [rax + 0xc]
    neg dword ptr [rbp + 0x90]
    mov r9d, r15d
    mov r8, r12
    mov ecx, edi
    sbb edx, edx
    and dword ptr [rsp + 0x28], 0
    and qword ptr [rsp + 0x20], 0
    and edx, 8
    inc edx
    call 0x140012f84
    movsxd r14, eax
    test eax, eax
    jne 0x140013d2a
    xor edi, edi
    jmp 0x140013dfa
    mov rsi, r14
    add rsi, rsi
    lea rax, [rsi + 0x10]
    cmp rsi, rax
    sbb rcx, rcx
    and rcx, rax
    je 0x140013de0
    cmp rcx, 0x400
    ja 0x140013d7d
    lea rax, [rcx + 0xf]
    cmp rax, rcx
    ja 0x140013d5f
    movabs rax, 0xffffffffffffff0
    and rax, 0xfffffffffffffff0
    call 0x14001ac40
    sub rsp, rax
    lea rbx, [rsp + 0x30]
    test rbx, rbx
    je 0x140013de2
    mov dword ptr [rbx], 0xcccc
    jmp 0x140013d90
    call 0x14000fec8
    mov rbx, rax
    test rax, rax
    je 0x140013d94
    mov dword ptr [rax], 0xdddd
    add rbx, 0x10
    test rbx, rbx
    je 0x140013de2
    mov r8, rsi
    xor edx, edx
    mov rcx, rbx
    call 0x14001b630
    mov r9d, r15d
    mov dword ptr [rsp + 0x28], r14d
    mov r8, r12
    mov qword ptr [rsp + 0x20], rbx
    mov edx, 1
    mov ecx, edi
    call 0x140012f84
    test eax, eax
    je 0x140013de2
    mov r9, qword ptr [rbp + 0x80]
    mov r8d, eax
    mov rdx, rbx
    mov ecx, r13d
    call qword ptr [rip + 0x9424]
    mov edi, eax
    jmp 0x140013de9
    xor ebx, ebx
    xor edi, edi
    test rbx, rbx
    je 0x140013dfa
    lea rcx, [rbx - 0x10]
    cmp dword ptr [rcx], 0xdddd
    jne 0x140013dfa
    call 0x14000f250
    cmp byte ptr [rbp + 0x20], 0
    je 0x140013e0b
    mov rax, qword ptr [rbp + 8]
    and dword ptr [rax + 0x3a8], 0xfffffffd
    mov eax, edi
    mov rcx, qword ptr [rbp + 0x28]
    xor rcx, rbp
    call 0x1400033b0
    mov rbx, qword ptr [rbp + 0x60]
    mov rsi, qword ptr [rbp + 0x68]
    mov rdi, qword ptr [rbp + 0x70]
    lea rsp, [rbp + 0x30]
    pop r15
    pop r14
    pop r13
    pop r12
    pop rbp
    ret
    int3 
    lock inc dword ptr [rcx + 0x10]
    mov rax, qword ptr [rcx + 0xe0]
    test rax, rax
    je 0x140013e47
    lock inc dword ptr [rax]
    mov rax, qword ptr [rcx + 0xf0]
    test rax, rax
    je 0x140013e56
    lock inc dword ptr [rax]
    mov rax, qword ptr [rcx + 0xe8]
    test rax, rax
    je 0x140013e65
    lock inc dword ptr [rax]
    mov rax, qword ptr [rcx + 0x100]
    test rax, rax
    je 0x140013e74
    lock inc dword ptr [rax]
    lea rax, [rcx + 0x38]
    mov r8d, 6
    lea rdx, [rip + 0x15483]
    cmp qword ptr [rax - 0x10], rdx
    je 0x140013e96
    mov rdx, qword ptr [rax]
    test rdx, rdx
    je 0x140013e96
    lock inc dword ptr [rdx]
    cmp qword ptr [rax - 0x18], 0
    je 0x140013ea9
    mov rdx, qword ptr [rax - 8]
    test rdx, rdx
    je 0x140013ea9
    lock inc dword ptr [rdx]
    add rax, 0x20
    sub r8, 1
    jne 0x140013e7e
    mov rcx, qword ptr [rcx + 0x120]
    jmp 0x140014038
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rax, qword ptr [rcx + 0xf8]
    mov rbx, rcx
    test rax, rax
    je 0x140013f5c
    lea rcx, [rip + 0x159c6]
    cmp rax, rcx
    je 0x140013f5c
    mov rax, qword ptr [rbx + 0xe0]
    test rax, rax
    je 0x140013f5c
    cmp dword ptr [rax], 0
    jne 0x140013f5c
    mov rcx, qword ptr [rbx + 0xf0]
    test rcx, rcx
    je 0x140013f22
    cmp dword ptr [rcx], 0
    jne 0x140013f22
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0xf8]
    call 0x1400139f0
    mov rcx, qword ptr [rbx + 0xe8]
    test rcx, rcx
    je 0x140013f44
    cmp dword ptr [rcx], 0
    jne 0x140013f44
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0xf8]
    call 0x140013afc
    mov rcx, qword ptr [rbx + 0xe0]
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0xf8]
    call 0x14000f250
    mov rax, qword ptr [rbx + 0x100]
    test rax, rax
    je 0x140013faf
    cmp dword ptr [rax], 0
    jne 0x140013faf
    mov rcx, qword ptr [rbx + 0x108]
    sub rcx, 0xfe
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x110]
    mov edi, 0x80
    sub rcx, rdi
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x118]
    sub rcx, rdi
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x100]
    call 0x14000f250
    mov rcx, qword ptr [rbx + 0x120]
    call 0x140014060
    lea rsi, [rbx + 0x128]
    mov ebp, 6
    lea rdi, [rbx + 0x38]
    lea rax, [rip + 0x15336]
    cmp qword ptr [rdi - 0x10], rax
    je 0x140013ff2
    mov rcx, qword ptr [rdi]
    test rcx, rcx
    je 0x140013ff2
    cmp dword ptr [rcx], 0
    jne 0x140013ff2
    call 0x14000f250
    mov rcx, qword ptr [rsi]
    call 0x14000f250
    cmp qword ptr [rdi - 0x18], 0
    je 0x14001400c
    mov rcx, qword ptr [rdi - 8]
    test rcx, rcx
    je 0x14001400c
    cmp dword ptr [rcx], 0
    jne 0x14001400c
    call 0x14000f250
    add rsi, 8
    add rdi, 0x20
    sub rbp, 1
    jne 0x140013fcb
    mov rcx, rbx
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    jmp 0x14000f250
    int3 
    int3 
    test rcx, rcx
    je 0x140014059
    lea rax, [rip + 0xa97c]
    cmp rcx, rax
    je 0x140014059
    mov eax, 1
    lock xadd dword ptr [rcx + 0x15c], eax
    inc eax
    ret
    mov eax, 0x7fffffff
    ret
    int3 
    test rcx, rcx
    je 0x140014096
    push rbx
    sub rsp, 0x20
    lea rax, [rip + 0xa94f]
    mov rbx, rcx
    cmp rcx, rax
    je 0x140014091
    mov eax, dword ptr [rcx + 0x15c]
    nop 
    test eax, eax
    jne 0x140014091
    call 0x140013b9c
    mov rcx, rbx
    call 0x14000f250
    add rsp, 0x20
    pop rbx
    ret
    int3 
    test rcx, rcx
    je 0x1400140b7
    lea rax, [rip + 0xa91c]
    cmp rcx, rax
    je 0x1400140b7
    or eax, 0xffffffff
    lock xadd dword ptr [rcx + 0x15c], eax
    dec eax
    ret
    mov eax, 0x7fffffff
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    test rcx, rcx
    je 0x140014163
    or r9d, 0xffffffff
    lock add dword ptr [rcx + 0x10], r9d
    mov rax, qword ptr [rcx + 0xe0]
    test rax, rax
    je 0x1400140e6
    lock add dword ptr [rax], r9d
    mov rax, qword ptr [rcx + 0xf0]
    test rax, rax
    je 0x1400140f6
    lock add dword ptr [rax], r9d
    mov rax, qword ptr [rcx + 0xe8]
    test rax, rax
    je 0x140014106
    lock add dword ptr [rax], r9d
    mov rax, qword ptr [rcx + 0x100]
    test rax, rax
    je 0x140014116
    lock add dword ptr [rax], r9d
    lea rax, [rcx + 0x38]
    mov r8d, 6
    lea rdx, [rip + 0x151e1]
    cmp qword ptr [rax - 0x10], rdx
    je 0x140014139
    mov rdx, qword ptr [rax]
    test rdx, rdx
    je 0x140014139
    lock add dword ptr [rdx], r9d
    cmp qword ptr [rax - 0x18], 0
    je 0x14001414d
    mov rdx, qword ptr [rax - 8]
    test rdx, rdx
    je 0x14001414d
    lock add dword ptr [rdx], r9d
    add rax, 0x20
    sub r8, 1
    jne 0x140014120
    mov rcx, qword ptr [rcx + 0x120]
    call 0x140014098
    add rsp, 0x28
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    call 0x14000ed84
    lea rdi, [rax + 0x90]
    mov ecx, dword ptr [rax + 0x3a8]
    mov eax, dword ptr [rip + 0x157c6]
    test eax, ecx
    je 0x140014196
    mov rbx, qword ptr [rdi]
    test rbx, rbx
    jne 0x1400141c2
    mov ecx, 4
    call 0x140011640
    nop 
    mov rdx, qword ptr [rip + 0x16348]
    mov rcx, rdi
    call 0x1400141d8
    mov rbx, rax
    mov ecx, 4
    call 0x140011694
    test rbx, rbx
    je 0x1400141d0
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    call 0x14000e8f0
    nop 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rdi, rdx
    test rdx, rdx
    je 0x140014230
    test rcx, rcx
    je 0x140014230
    mov rbx, qword ptr [rcx]
    cmp rbx, rdx
    jne 0x1400141fc
    mov rax, rdi
    jmp 0x140014232
    mov qword ptr [rcx], rdi
    mov rcx, rdi
    call 0x140013e34
    test rbx, rbx
    je 0x1400141f7
    mov rcx, rbx
    call 0x1400140c0
    cmp dword ptr [rbx + 0x10], 0
    jne 0x1400141f7
    lea rax, [rip + 0x14f7f]
    cmp rbx, rax
    je 0x1400141f7
    mov rcx, rbx
    call 0x140013ec0
    jmp 0x1400141f7
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    mov rbp, r8
    mov rbx, rdx
    mov rsi, rcx
    test rdx, rdx
    je 0x14001427f
    xor edx, edx
    lea rax, [rdx - 0x20]
    div rbx
    cmp rax, r8
    jae 0x14001427f
    call 0x14000f1b8
    mov dword ptr [rax], 0xc
    xor eax, eax
    jmp 0x1400142c0
    test rsi, rsi
    je 0x14001428e
    call 0x14001866c
    mov rdi, rax
    jmp 0x140014290
    xor edi, edi
    imul rbx, rbp
    mov rcx, rsi
    mov rdx, rbx
    call 0x1400186a8
    mov rsi, rax
    test rax, rax
    je 0x1400142bd
    cmp rdi, rbx
    jae 0x1400142bd
    sub rbx, rdi
    lea rcx, [rax + rdi]
    mov r8, rbx
    xor edx, edx
    call 0x14001b630
    mov rax, rsi
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    int3 
    sub rsp, 0x28
    call qword ptr [rip + 0x8f26]
    test rax, rax
    mov qword ptr [rip + 0x16a5c], rax
    setne al
    add rsp, 0x28
    ret
    and qword ptr [rip + 0x16a4c], 0
    mov al, 1
    ret
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov rsi, rdx
    mov rdi, rcx
    cmp rcx, rdx
    je 0x140014382
    mov rbx, rcx
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x140014339
    movabs r10, 0xdf949ec45c5ca270
    call qword ptr [rip + 0x8f43]
    test al, al
    je 0x140014342
    add rbx, 0x10
    cmp rbx, rsi
    jne 0x14001431d
    cmp rbx, rsi
    je 0x140014382
    cmp rbx, rdi
    je 0x14001437e
    add rbx, -8
    cmp qword ptr [rbx - 8], 0
    je 0x140014371
    mov rax, qword ptr [rbx]
    test rax, rax
    je 0x140014371
    movabs r10, 0x9799a6753e593b70
    xor ecx, ecx
    call qword ptr [rip + 0x8f07]
    sub rbx, 0x10
    lea rax, [rbx + 8]
    cmp rax, rdi
    jne 0x140014350
    xor al, al
    jmp 0x140014384
    mov al, 1
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    push rdi
    sub rsp, 0x20
    mov rbx, rdx
    mov rdi, rcx
    cmp rcx, rdx
    je 0x1400143cd
    mov rax, qword ptr [rbx - 8]
    test rax, rax
    je 0x1400143c4
    movabs r10, 0x9799a6753e593b70
    xor ecx, ecx
    call qword ptr [rip + 0x8eb4]
    sub rbx, 0x10
    cmp rbx, rdi
    jne 0x1400143a9
    mov rbx, qword ptr [rsp + 0x30]
    mov al, 1
    add rsp, 0x20
    pop rdi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rdi, r9
    mov ecx, dword ptr [rdx]
    call 0x140011640
    nop 
    mov rax, qword ptr [rip + 0x14c03]
    mov ecx, eax
    and ecx, 0x3f
    mov rbx, qword ptr [rip + 0x16957]
    xor rbx, rax
    ror rbx, cl
    mov ecx, dword ptr [rdi]
    call 0x140011694
    mov rax, rbx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    mov r11, rsp
    sub rsp, 0x28
    mov eax, 3
    lea r9, [r11 + 0x10]
    lea r8, [r11 + 8]
    mov dword ptr [rsp + 0x38], eax
    lea rdx, [r11 + 0x18]
    mov dword ptr [rsp + 0x40], eax
    lea rcx, [r11 + 8]
    call 0x1400143dc
    add rsp, 0x28
    ret
    int3 
    int3 
    mov qword ptr [rip + 0x168f5], rcx
    mov qword ptr [rip + 0x168f6], rcx
    mov qword ptr [rip + 0x168f7], rcx
    mov qword ptr [rip + 0x168f8], rcx
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 0x18], rbx
    mov qword ptr [rsp + 0x20], rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x40
    mov ebx, ecx
    xor r15d, r15d
    and dword ptr [rsp + 0x78], r15d
    mov r14b, 1
    mov byte ptr [rsp + 0x70], r14b
    mov edx, ecx
    sub edx, 2
    je 0x1400144cb
    sub edx, 2
    je 0x1400144fb
    sub edx, 2
    je 0x1400144cb
    sub edx, 2
    je 0x1400144fb
    sub edx, 3
    je 0x1400144fb
    sub edx, 4
    je 0x1400144cb
    sub edx, 6
    je 0x1400144cb
    cmp edx, 1
    jne 0x14001454d
    sub ecx, 2
    je 0x140014588
    sub ecx, 4
    je 0x14001456d
    sub ecx, 9
    je 0x14001457f
    sub ecx, 6
    je 0x140014576
    cmp ecx, 1
    je 0x14001456d
    xor edi, edi
    jmp 0x14001458f
    call 0x14000eefc
    mov r15, rax
    test rax, rax
    jne 0x140014525
    or eax, 0xffffffff
    lea r11, [rsp + 0x40]
    mov rbx, qword ptr [r11 + 0x40]
    mov rsi, qword ptr [r11 + 0x48]
    mov rsp, r11
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    mov rax, qword ptr [rax]
    mov rcx, qword ptr [rip + 0xa2b1]
    shl rcx, 4
    add rcx, rax
    jmp 0x140014541
    cmp dword ptr [rax + 4], ebx
    je 0x140014548
    add rax, 0x10
    cmp rax, rcx
    jne 0x140014538
    xor eax, eax
    test rax, rax
    jne 0x14001455f
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    jmp 0x140014508
    lea rdi, [rax + 8]
    xor r14b, r14b
    mov byte ptr [rsp + 0x70], r14b
    jmp 0x14001458f
    lea rdi, [rip + 0x167ec]
    jmp 0x14001458f
    lea rdi, [rip + 0x167db]
    jmp 0x14001458f
    lea rdi, [rip + 0x167e2]
    jmp 0x14001458f
    lea rdi, [rip + 0x167c1]
    xor r13d, r13d
    test r14b, r14b
    je 0x1400145a1
    lea ecx, [r13 + 3]
    call 0x140011640
    nop 
    mov rsi, qword ptr [rdi]
    test r14b, r14b
    je 0x1400145bb
    mov rax, qword ptr [rip + 0x14a50]
    mov ecx, eax
    and ecx, 0x3f
    xor rsi, rax
    ror rsi, cl
    cmp rsi, 1
    je 0x140014650
    test rsi, rsi
    je 0x1400146d4
    mov r12d, 0x910
    cmp ebx, 0xb
    ja 0x14001460e
    bt r12d, ebx
    jae 0x14001460e
    mov r13, qword ptr [r15 + 8]
    mov qword ptr [rsp + 0x30], r13
    and qword ptr [r15 + 8], 0
    cmp ebx, 8
    jne 0x140014644
    call 0x14000ed84
    mov eax, dword ptr [rax + 0x10]
    mov dword ptr [rsp + 0x78], eax
    mov dword ptr [rsp + 0x20], eax
    call 0x14000ed84
    mov dword ptr [rax + 0x10], 0x8c
    cmp ebx, 8
    jne 0x140014644
    mov rax, qword ptr [rip + 0xa1ce]
    shl rax, 4
    add rax, qword ptr [r15]
    mov rcx, qword ptr [rip + 0xa1c8]
    shl rcx, 4
    add rcx, rax
    mov qword ptr [rsp + 0x28], rax
    cmp rax, rcx
    je 0x140014656
    and qword ptr [rax + 8], 0
    add rax, 0x10
    jmp 0x14001462f
    mov rax, qword ptr [rip + 0x149b5]
    mov qword ptr [rdi], rax
    jmp 0x140014656
    mov r12d, 0x910
    test r14b, r14b
    je 0x140014665
    mov ecx, 3
    call 0x140011694
    cmp rsi, 1
    jne 0x140014672
    xor eax, eax
    jmp 0x14001450b
    cmp ebx, 8
    jne 0x14001469a
    call 0x14000ed84
    movabs r10, 0x8b9c1f4f30d33370
    mov edx, dword ptr [rax + 0x10]
    mov ecx, ebx
    mov rax, rsi
    mov r8, qword ptr [rip + 0x8be3]
    call r8
    jmp 0x1400146b2
    movabs r10, 0xc6c1864950d77370
    mov ecx, ebx
    mov rax, rsi
    mov rdx, qword ptr [rip + 0x8bc8]
    call rdx
    cmp ebx, 0xb
    ja 0x14001466b
    bt r12d, ebx
    jae 0x14001466b
    mov qword ptr [r15 + 8], r13
    cmp ebx, 8
    jne 0x14001466b
    call 0x14000ed84
    mov ecx, dword ptr [rsp + 0x78]
    mov dword ptr [rax + 0x10], ecx
    jmp 0x14001466b
    test r14b, r14b
    je 0x1400146e1
    lea ecx, [rsi + 3]
    call 0x140011694
    mov ecx, 3
    call 0x14000e0bc
    nop 
    int3 
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    push r14
    push r15
    sub rsp, 0x20
    mov rbp, rcx
    test rcx, rcx
    je 0x140014757
    xor ebx, ebx
    lea r15, [rip - 0x14719]
    mov edi, 0xe3
    lea eax, [rdi + rbx]
    mov r8d, 0x55
    cdq 
    mov rcx, rbp
    sub eax, edx
    sar eax, 1
    movsxd rsi, eax
    mov r14, rsi
    add r14, r14
    mov rdx, qword ptr [r15 + r14*8 + 0x21950]
    call 0x140018620
    test eax, eax
    je 0x140014772
    jns 0x140014750
    lea edi, [rsi - 1]
    jmp 0x140014753
    lea ebx, [rsi + 1]
    cmp ebx, edi
    jle 0x14001471e
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x20
    pop r15
    pop r14
    pop rdi
    ret
    movsxd rax, dword ptr [r15 + r14*8 + 0x21958]
    test eax, eax
    js 0x140014757
    cmp rax, 0xe4
    jae 0x140014757
    add rax, rax
    mov eax, dword ptr [r15 + rax*8 + 0x1fef0]
    jmp 0x140014759
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 8], rcx
    push rdi
    sub rsp, 0x30
    mov rdi, rdx
    mov rbx, rcx
    test rcx, rcx
    jne 0x1400147dd
    mov byte ptr [rdx + 0x30], 1
    mov dword ptr [rdx + 0x2c], 0x16
    mov qword ptr [rax - 0x10], rdx
    and qword ptr [rax - 0x18], rcx
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    call 0x140009da0
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    mov eax, dword ptr [rcx + 0x14]
    nop 
    shr eax, 0xc
    and al, 1
    je 0x1400147ef
    call 0x140018930
    jmp 0x1400147cf
    call 0x14000a094
    nop 
    mov rdx, rdi
    mov rcx, rbx
    call 0x140014810
    mov edi, eax
    mov rcx, rbx
    call 0x14000a0a0
    mov eax, edi
    jmp 0x1400147d2
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 8], rbx
    mov qword ptr [rax + 0x10], rsi
    push rdi
    sub rsp, 0x30
    mov rdi, rdx
    mov rbx, rcx
    test rcx, rcx
    jne 0x140014850
    mov qword ptr [rax - 0x10], rdx
    xor r9d, r9d
    and qword ptr [rax - 0x18], rcx
    xor r8d, r8d
    mov byte ptr [rdx + 0x30], 1
    mov dword ptr [rdx + 0x2c], 0x16
    xor edx, edx
    call 0x140009da0
    or eax, 0xffffffff
    jmp 0x1400148a5
    mov eax, dword ptr [rcx + 0x14]
    or esi, 0xffffffff
    shr eax, 0xd
    nop 
    test al, 1
    je 0x14001489b
    call 0x14000faa8
    mov rcx, rbx
    mov esi, eax
    call 0x14000fc10
    mov rcx, rbx
    call 0x14001144c
    mov ecx, eax
    mov rdx, rdi
    call 0x14001879c
    test eax, eax
    jns 0x140014888
    or esi, 0xffffffff
    jmp 0x14001489b
    mov rcx, qword ptr [rbx + 0x28]
    test rcx, rcx
    je 0x14001489b
    call 0x14000f250
    and qword ptr [rbx + 0x28], 0
    mov rcx, rbx
    call 0x140018930
    mov eax, esi
    mov rbx, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    add rsp, 0x30
    pop rdi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rdi
    push rbp
    mov rbp, rsp
    sub rsp, 0x60
    and qword ptr [rbp - 0x40], 0
    cmp dword ptr [rip + 0x15bda], 0
    mov byte ptr [rbp - 0x30], 0
    mov byte ptr [rbp - 0x18], 0
    mov byte ptr [rbp - 0x10], 0
    mov byte ptr [rbp - 8], 0
    jne 0x1400148f8
    movups xmm0, xmmword ptr [rip + 0x14a09]
    mov byte ptr [rbp - 0x18], 1
    movdqu xmmword ptr [rbp - 0x28], xmm0
    lea rdx, [rbp - 0x40]
    call 0x140014794
    cmp byte ptr [rbp - 0x18], 2
    mov edi, eax
    jne 0x140014914
    mov rcx, qword ptr [rbp - 0x40]
    and dword ptr [rcx + 0x3a8], 0xfffffffd
    cmp byte ptr [rbp - 0x10], 0
    je 0x140014929
    mov ebx, dword ptr [rbp - 0x14]
    lea rcx, [rbp - 0x40]
    call 0x140009a80
    mov dword ptr [rax + 0x20], ebx
    cmp byte ptr [rbp - 8], 0
    je 0x14001493e
    mov ebx, dword ptr [rbp - 0xc]
    lea rcx, [rbp - 0x40]
    call 0x140009a80
    mov dword ptr [rax + 0x24], ebx
    mov rbx, qword ptr [rsp + 0x70]
    mov eax, edi
    mov rdi, qword ptr [rsp + 0x78]
    add rsp, 0x60
    pop rbp
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x20], r9
    push rdi
    sub rsp, 0x20
    mov rdi, r9
    mov rbx, r8
    mov ecx, dword ptr [rdx]
    call 0x140013850
    nop 
    mov rax, qword ptr [rbx]
    movsxd rcx, dword ptr [rax]
    mov rdx, rcx
    mov rax, rcx
    sar rax, 6
    lea r8, [rip + 0x15d2c]
    and edx, 0x3f
    lea rdx, [rdx + rdx*8]
    mov rax, qword ptr [r8 + rax*8]
    test byte ptr [rax + rdx*8 + 0x38], 1
    je 0x1400149b9
    call 0x14001395c
    mov rcx, rax
    call qword ptr [rip + 0x886c]
    xor ebx, ebx
    test eax, eax
    jne 0x1400149c7
    call qword ptr [rip + 0x86f8]
    mov ebx, eax
    call 0x14000f198
    mov dword ptr [rax], ebx
    call 0x14000f1b8
    mov dword ptr [rax], 9
    or ebx, 0xffffffff
    mov ecx, dword ptr [rdi]
    call 0x140013878
    mov eax, ebx
    mov rbx, qword ptr [rsp + 0x30]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    mov dword ptr [rsp + 8], ecx
    sub rsp, 0x38
    movsxd rdx, ecx
    cmp edx, -2
    jne 0x1400149f9
    call 0x14000f1b8
    mov dword ptr [rax], 9
    jmp 0x140014a65
    test ecx, ecx
    js 0x140014a55
    cmp edx, dword ptr [rip + 0x160ad]
    jae 0x140014a55
    mov rcx, rdx
    lea r8, [rip + 0x15ca1]
    and ecx, 0x3f
    mov rax, rdx
    sar rax, 6
    lea rcx, [rcx + rcx*8]
    mov rax, qword ptr [r8 + rax*8]
    test byte ptr [rax + rcx*8 + 0x38], 1
    je 0x140014a55
    lea rax, [rsp + 0x40]
    mov dword ptr [rsp + 0x50], edx
    mov dword ptr [rsp + 0x58], edx
    lea r9, [rsp + 0x50]
    lea rdx, [rsp + 0x58]
    mov qword ptr [rsp + 0x20], rax
    lea r8, [rsp + 0x20]
    lea rcx, [rsp + 0x48]
    call 0x140014950
    jmp 0x140014a68
    call 0x14000f1b8
    mov dword ptr [rax], 9
    call 0x140009e6c
    or eax, 0xffffffff
    add rsp, 0x38
    ret
    int3 
    int3 
    int3 
    mov rax, rsp
    push rbp
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    lea rbp, [rax - 0x57]
    sub rsp, 0xd0
    mov qword ptr [rbp - 9], 0xfffffffffffffffe
    mov qword ptr [rax + 8], rbx
    mov rax, qword ptr [rip + 0x14564]
    xor rax, rsp
    mov qword ptr [rbp + 0x17], rax
    mov rsi, r8
    mov qword ptr [rbp - 0x41], r8
    movsxd r14, edx
    mov rbx, rcx
    mov rax, qword ptr [rbp + 0x7f]
    mov qword ptr [rbp - 0x59], rax
    mov rax, r14
    mov r13, r14
    sar r13, 6
    mov qword ptr [rbp - 0x39], r13
    lea rcx, [rip - 0x14acd]
    and eax, 0x3f
    lea r15, [rax + rax*8]
    mov rax, qword ptr [rcx + r13*8 + 0x2a6b0]
    mov rax, qword ptr [rax + r15*8 + 0x28]
    mov qword ptr [rbp - 0x19], rax
    mov r12d, r9d
    add r12, r8
    mov qword ptr [rbp - 0x61], r12
    call qword ptr [rip + 0x8723]
    mov dword ptr [rbp - 0x49], eax
    xor edi, edi
    mov r10, qword ptr [rbp - 0x59]
    cmp byte ptr [r10 + 0x28], dil
    jne 0x140014b10
    mov rcx, r10
    call 0x14000cc40
    mov r10, qword ptr [rbp - 0x59]
    mov rcx, qword ptr [r10 + 0x18]
    mov ecx, dword ptr [rcx + 0xc]
    mov dword ptr [rbp - 0x45], ecx
    xor eax, eax
    mov qword ptr [rbx], rax
    mov dword ptr [rbx + 8], eax
    cmp qword ptr [rbp - 0x41], r12
    jae 0x140014ebb
    mov r9, r14
    sar r9, 6
    mov qword ptr [rbp - 0x11], r9
    mov edx, edi
    mov al, byte ptr [rsi]
    mov byte ptr [rbp - 0x71], al
    mov dword ptr [rbp - 0x6d], edi
    mov r12d, 1
    lea r11, [rip - 0x14b4e]
    cmp ecx, 0xfde9
    jne 0x140014cd5
    mov edx, edi
    mov r14, rdi
    lea rcx, [r15*8 + 0x3e]
    add rcx, qword ptr [r11 + r9*8 + 0x2a6b0]
    cmp byte ptr [rcx], dil
    je 0x140014b82
    inc edx
    inc r14
    inc rcx
    cmp r14, 5
    jl 0x140014b6f
    test r14, r14
    jle 0x140014c6b
    mov rax, qword ptr [r11 + r13*8 + 0x2a6b0]
    movzx ecx, byte ptr [rax + r15*8 + 0x3e]
    movsx r12d, byte ptr [rcx + r11 + 0x29960]
    inc r12d
    mov eax, r12d
    sub eax, edx
    mov dword ptr [rbp - 0x51], eax
    mov rdx, qword ptr [rbp - 0x61]
    sub rdx, rsi
    movsxd r8, eax
    cmp r8, rdx
    jg 0x140014e38
    mov rcx, rdi
    lea rdx, [r15*8 + 0x3e]
    add rdx, qword ptr [r11 + r9*8 + 0x2a6b0]
    mov al, byte ptr [rdx]
    mov byte ptr [rbp + rcx - 1], al
    inc rcx
    inc rdx
    cmp rcx, r14
    jl 0x140014bd3
    test r8, r8
    jle 0x140014c03
    lea rcx, [rbp - 1]
    add rcx, r14
    mov rdx, rsi
    call 0x14001af90
    mov r10, qword ptr [rbp - 0x59]
    lea r11, [rip - 0x14c03]
    mov rdx, rdi
    mov rcx, qword ptr [r11 + r13*8 + 0x2a6b0]
    add rcx, rdx
    mov byte ptr [rcx + r15*8 + 0x3e], dil
    inc rdx
    cmp rdx, r14
    jl 0x140014c06
    mov qword ptr [rbp - 0x31], rdi
    lea rax, [rbp - 1]
    mov qword ptr [rbp - 0x29], rax
    mov eax, edi
    cmp r12d, 4
    sete al
    inc eax
    mov r12d, eax
    mov r8d, eax
    mov qword ptr [rsp + 0x20], r10
    lea r9, [rbp - 0x31]
    lea rdx, [rbp - 0x29]
    lea rcx, [rbp - 0x6d]
    call 0x140017130
    cmp rax, -1
    je 0x140014ebb
    mov eax, dword ptr [rbp - 0x51]
    dec eax
    movsxd rcx, eax
    add rsi, rcx
    jmp 0x140014d66
    movzx eax, byte ptr [rsi]
    movsx r13, byte ptr [rax + r11 + 0x29960]
    lea ecx, [r13 + 1]
    mov r8, qword ptr [rbp - 0x61]
    sub r8, rsi
    movsxd rax, ecx
    cmp rax, r8
    jg 0x140014e66
    mov qword ptr [rbp - 0x51], rdi
    mov qword ptr [rbp - 0x21], rsi
    mov eax, edi
    cmp ecx, 4
    sete al
    inc eax
    mov r14d, eax
    mov r8d, eax
    mov qword ptr [rsp + 0x20], r10
    lea r9, [rbp - 0x51]
    lea rdx, [rbp - 0x21]
    lea rcx, [rbp - 0x6d]
    call 0x140017130
    cmp rax, -1
    je 0x140014ebb
    add rsi, r13
    mov r12d, r14d
    mov r13, qword ptr [rbp - 0x39]
    jmp 0x140014d66
    mov r8, qword ptr [r11 + r13*8 + 0x2a6b0]
    mov cl, byte ptr [r8 + r15*8 + 0x3d]
    test cl, 4
    je 0x140014d08
    mov al, byte ptr [r8 + r15*8 + 0x3e]
    mov byte ptr [rbp + 7], al
    mov al, byte ptr [rsi]
    mov byte ptr [rbp + 8], al
    and cl, 0xfb
    mov byte ptr [r8 + r15*8 + 0x3d], cl
    mov r8d, 2
    lea rdx, [rbp + 7]
    jmp 0x140014d51
    movzx r9d, byte ptr [rsi]
    mov rax, qword ptr [r10 + 0x18]
    mov rcx, qword ptr [rax]
    cmp word ptr [rcx + r9*2], di
    jge 0x140014d4b
    lea r14, [rsi + 1]
    cmp r14, qword ptr [rbp - 0x61]
    jae 0x140014e98
    mov r9, r10
    mov r8d, 2
    mov rdx, rsi
    lea rcx, [rbp - 0x6d]
    call 0x1400112d4
    cmp eax, -1
    je 0x140014ebb
    mov rsi, r14
    jmp 0x140014d66
    mov r8, r12
    mov rdx, rsi
    mov r9, r10
    lea rcx, [rbp - 0x6d]
    call 0x1400112d4
    cmp eax, -1
    je 0x140014ebb
    inc rsi
    mov qword ptr [rsp + 0x38], rdi
    mov qword ptr [rsp + 0x30], rdi
    mov dword ptr [rsp + 0x28], 5
    lea rax, [rbp + 0xf]
    mov qword ptr [rsp + 0x20], rax
    mov r9d, r12d
    lea r8, [rbp - 0x6d]
    xor edx, edx
    mov ecx, dword ptr [rbp - 0x49]
    call 0x140013014
    mov r14d, eax
    test eax, eax
    je 0x140014ebb
    mov qword ptr [rsp + 0x20], rdi
    lea r9, [rbp - 0x69]
    mov r8d, eax
    lea rdx, [rbp + 0xf]
    mov r12, qword ptr [rbp - 0x19]
    mov rcx, r12
    call qword ptr [rip + 0x8363]
    test eax, eax
    je 0x140014eb3
    mov edx, esi
    sub edx, dword ptr [rbp - 0x41]
    add edx, dword ptr [rbx + 8]
    mov dword ptr [rbx + 4], edx
    cmp dword ptr [rbp - 0x69], r14d
    jb 0x140014ebb
    cmp byte ptr [rbp - 0x71], 0xa
    jne 0x140014e1e
    mov eax, 0xd
    mov word ptr [rbp - 0x71], ax
    mov qword ptr [rsp + 0x20], rdi
    lea r9, [rbp - 0x69]
    lea r8d, [rax - 0xc]
    lea rdx, [rbp - 0x71]
    mov rcx, r12
    call qword ptr [rip + 0x831d]
    test eax, eax
    je 0x140014eb3
    cmp dword ptr [rbp - 0x69], 1
    jb 0x140014ebb
    inc dword ptr [rbx + 8]
    inc dword ptr [rbx + 4]
    mov edx, dword ptr [rbx + 4]
    cmp rsi, qword ptr [rbp - 0x61]
    jae 0x140014ebb
    mov r10, qword ptr [rbp - 0x59]
    mov r9, qword ptr [rbp - 0x11]
    mov ecx, dword ptr [rbp - 0x45]
    jmp 0x140014b39
    test rdx, rdx
    jle 0x140014e61
    sub rsi, r14
    mov rcx, qword ptr [r11 + r13*8 + 0x2a6b0]
    add rcx, r14
    mov al, byte ptr [rsi + r14]
    mov byte ptr [rcx + r15*8 + 0x3e], al
    inc edi
    inc r14
    movsxd rax, edi
    cmp rax, rdx
    jl 0x140014e40
    add dword ptr [rbx + 4], edx
    jmp 0x140014ebb
    test r8, r8
    jle 0x140014e92
    mov rdx, rdi
    mov r9, qword ptr [rbp - 0x39]
    mov rcx, qword ptr [r11 + r9*8 + 0x2a6b0]
    add rcx, rdx
    mov al, byte ptr [rdx + rsi]
    mov byte ptr [rcx + r15*8 + 0x3e], al
    inc edi
    inc rdx
    movsxd rax, edi
    cmp rax, r8
    jl 0x140014e72
    add dword ptr [rbx + 4], r8d
    jmp 0x140014ebb
    mov byte ptr [r8 + r15*8 + 0x3e], r9b
    mov rax, qword ptr [r11 + r13*8 + 0x2a6b0]
    or byte ptr [rax + r15*8 + 0x3d], 4
    lea eax, [rdx + 1]
    mov dword ptr [rbx + 4], eax
    jmp 0x140014ebb
    call qword ptr [rip + 0x81ef]
    mov dword ptr [rbx], eax
    mov rax, rbx
    mov rcx, qword ptr [rbp + 0x17]
    xor rcx, rsp
    call 0x1400033b0
    mov rbx, qword ptr [rsp + 0x110]
    add rsp, 0xd0
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbp
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rsi
    push rdi
    push r14
    mov eax, 0x1450
    call 0x14001ac40
    sub rsp, rax
    mov rax, qword ptr [rip + 0x140f6]
    xor rax, rsp
    mov qword ptr [rsp + 0x1440], rax
    movsxd r10, edx
    mov rdi, rcx
    mov rax, r10
    mov ebp, r9d
    sar rax, 6
    lea rcx, [rip + 0x15784]
    and r10d, 0x3f
    add rbp, r8
    mov rsi, r8
    mov rax, qword ptr [rcx + rax*8]
    lea rdx, [r10 + r10*8]
    mov r14, qword ptr [rax + rdx*8 + 0x28]
    xor eax, eax
    mov qword ptr [rdi], rax
    mov dword ptr [rdi + 8], eax
    cmp r8, rbp
    jae 0x140014fbf
    lea rbx, [rsp + 0x40]
    cmp rsi, rbp
    jae 0x140014f7e
    mov al, byte ptr [rsi]
    inc rsi
    cmp al, 0xa
    jne 0x140014f6c
    inc dword ptr [rdi + 8]
    mov byte ptr [rbx], 0xd
    inc rbx
    mov byte ptr [rbx], al
    inc rbx
    lea rax, [rsp + 0x143f]
    cmp rbx, rax
    jb 0x140014f55
    and qword ptr [rsp + 0x20], 0
    lea rax, [rsp + 0x40]
    sub ebx, eax
    lea r9, [rsp + 0x30]
    mov r8d, ebx
    lea rdx, [rsp + 0x40]
    mov rcx, r14
    call qword ptr [rip + 0x817f]
    test eax, eax
    je 0x140014fb7
    mov eax, dword ptr [rsp + 0x30]
    add dword ptr [rdi + 4], eax
    cmp eax, ebx
    jb 0x140014fbf
    cmp rsi, rbp
    jb 0x140014f50
    jmp 0x140014fbf
    call qword ptr [rip + 0x80eb]
    mov dword ptr [rdi], eax
    mov rax, rdi
    mov rcx, qword ptr [rsp + 0x1440]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x1450]
    mov rbx, qword ptr [r11 + 0x20]
    mov rbp, qword ptr [r11 + 0x30]
    mov rsp, r11
    pop r14
    pop rdi
    pop rsi
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rsi
    push rdi
    push r14
    mov eax, 0x1450
    call 0x14001ac40
    sub rsp, rax
    mov rax, qword ptr [rip + 0x13ff2]
    xor rax, rsp
    mov qword ptr [rsp + 0x1440], rax
    movsxd r10, edx
    mov rdi, rcx
    mov rax, r10
    mov ebp, r9d
    sar rax, 6
    lea rcx, [rip + 0x15680]
    and r10d, 0x3f
    add rbp, r8
    mov rsi, r8
    mov rax, qword ptr [rcx + rax*8]
    lea rdx, [r10 + r10*8]
    mov r14, qword ptr [rax + rdx*8 + 0x28]
    xor eax, eax
    mov qword ptr [rdi], rax
    mov dword ptr [rdi + 8], eax
    cmp r8, rbp
    jae 0x1400150da
    lea rbx, [rsp + 0x40]
    cmp rsi, rbp
    jae 0x140015093
    movzx eax, word ptr [rsi]
    add rsi, 2
    cmp ax, 0xa
    jne 0x14001507f
    add dword ptr [rdi + 8], 2
    mov ecx, 0xd
    mov word ptr [rbx], cx
    add rbx, 2
    mov word ptr [rbx], ax
    add rbx, 2
    lea rax, [rsp + 0x143e]
    cmp rbx, rax
    jb 0x14001505d
    and qword ptr [rsp + 0x20], 0
    lea rax, [rsp + 0x40]
    sub rbx, rax
    lea r9, [rsp + 0x30]
    sar rbx, 1
    lea rdx, [rsp + 0x40]
    add ebx, ebx
    mov rcx, r14
    mov r8d, ebx
    call qword ptr [rip + 0x8064]
    test eax, eax
    je 0x1400150d2
    mov eax, dword ptr [rsp + 0x30]
    add dword ptr [rdi + 4], eax
    cmp eax, ebx
    jb 0x1400150da
    cmp rsi, rbp
    jb 0x140015058
    jmp 0x1400150da
    call qword ptr [rip + 0x7fd0]
    mov dword ptr [rdi], eax
    mov rax, rdi
    mov rcx, qword ptr [rsp + 0x1440]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x1450]
    mov rbx, qword ptr [r11 + 0x20]
    mov rbp, qword ptr [r11 + 0x30]
    mov rsp, r11
    pop r14
    pop rdi
    pop rsi
    ret
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rsi
    push rdi
    push r12
    push r14
    push r15
    mov eax, 0x1470
    call 0x14001ac40
    sub rsp, rax
    mov rax, qword ptr [rip + 0x13ed2]
    xor rax, rsp
    mov qword ptr [rsp + 0x1460], rax
    movsxd r10, edx
    mov rbx, rcx
    mov rax, r10
    mov r14d, r9d
    sar rax, 6
    lea rcx, [rip + 0x15560]
    and r10d, 0x3f
    add r14, r8
    mov r15, r8
    mov rdi, r8
    mov rax, qword ptr [rcx + rax*8]
    lea rdx, [r10 + r10*8]
    mov r12, qword ptr [rax + rdx*8 + 0x28]
    xor eax, eax
    mov qword ptr [rbx], rax
    cmp r8, r14
    mov dword ptr [rbx + 8], eax
    jae 0x140015249
    lea rax, [rsp + 0x50]
    cmp rdi, r14
    jae 0x1400151b2
    movzx ecx, word ptr [rdi]
    add rdi, 2
    cmp cx, 0xa
    jne 0x14001519e
    mov edx, 0xd
    mov word ptr [rax], dx
    add rax, 2
    mov word ptr [rax], cx
    add rax, 2
    lea rcx, [rsp + 0x6f8]
    cmp rax, rcx
    jb 0x140015180
    and qword ptr [rsp + 0x38], 0
    lea rcx, [rsp + 0x50]
    and qword ptr [rsp + 0x30], 0
    lea r8, [rsp + 0x50]
    sub rax, rcx
    mov dword ptr [rsp + 0x28], 0xd55
    lea rcx, [rsp + 0x700]
    sar rax, 1
    mov qword ptr [rsp + 0x20], rcx
    mov r9d, eax
    mov ecx, 0xfde9
    xor edx, edx
    call 0x140013014
    mov ebp, eax
    test eax, eax
    je 0x140015241
    xor esi, esi
    test eax, eax
    je 0x140015231
    and qword ptr [rsp + 0x20], 0
    lea rdx, [rsp + 0x700]
    mov ecx, esi
    lea r9, [rsp + 0x40]
    mov r8d, ebp
    add rdx, rcx
    mov rcx, r12
    sub r8d, esi
    call qword ptr [rip + 0x7efb]
    test eax, eax
    je 0x140015241
    add esi, dword ptr [rsp + 0x40]
    cmp esi, ebp
    jb 0x1400151fe
    mov eax, edi
    sub eax, r15d
    mov dword ptr [rbx + 4], eax
    cmp rdi, r14
    jmp 0x140015175
    call qword ptr [rip + 0x7e61]
    mov dword ptr [rbx], eax
    mov rax, rbx
    mov rcx, qword ptr [rsp + 0x1460]
    xor rcx, rsp
    call 0x1400033b0
    lea r11, [rsp + 0x1470]
    mov rbx, qword ptr [r11 + 0x30]
    mov rbp, qword ptr [r11 + 0x40]
    mov rsp, r11
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    ret
    mov qword ptr [rsp + 0x18], rbx
    mov qword ptr [rsp + 0x10], rdx
    mov dword ptr [rsp + 8], ecx
    push rsi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov rbx, r9
    mov r13d, r8d
    movsxd rsi, ecx
    cmp esi, -2
    jne 0x1400152ce
    mov byte ptr [r9 + 0x38], 1
    and dword ptr [r9 + 0x34], 0
    mov byte ptr [r9 + 0x30], 1
    mov dword ptr [r9 + 0x2c], 9
    or eax, 0xffffffff
    mov rbx, qword ptr [rsp + 0x70]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rsi
    ret
    test ecx, ecx
    js 0x1400152e1
    cmp esi, dword ptr [rip + 0x157d8]
    jae 0x1400152e1
    mov eax, 1
    jmp 0x1400152e3
    xor eax, eax
    test eax, eax
    jne 0x14001531a
    mov byte ptr [r9 + 0x38], 1
    and dword ptr [r9 + 0x34], 0
    mov byte ptr [r9 + 0x30], 1
    mov dword ptr [r9 + 0x2c], 9
    mov qword ptr [rsp + 0x28], rbx
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009da0
    jmp 0x1400152b8
    mov rax, rsi
    mov r15, rsi
    sar r15, 6
    lea rcx, [rip + 0x15385]
    and eax, 0x3f
    lea r12, [rax + rax*8]
    mov rax, qword ptr [rcx + r15*8]
    test byte ptr [rax + r12*8 + 0x38], 1
    je 0x1400152e7
    mov ecx, esi
    call 0x140013850
    or r14d, 0xffffffff
    lea rax, [rip + 0x15360]
    mov rax, qword ptr [rax + r15*8]
    test byte ptr [rax + r12*8 + 0x38], 1
    jne 0x140015371
    mov byte ptr [rbx + 0x30], 1
    mov dword ptr [rbx + 0x2c], 9
    mov byte ptr [rbx + 0x38], 1
    and dword ptr [rbx + 0x34], 0
    jmp 0x140015386
    mov r9, rbx
    mov r8d, r13d
    mov rdx, qword ptr [rsp + 0x68]
    mov ecx, esi
    call 0x140015398
    mov r14d, eax
    mov ecx, esi
    call 0x140013878
    mov eax, r14d
    jmp 0x1400152bb
    int3 
    int3 
    int3 
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r13
    push r14
    push r15
    mov rbp, rsp
    sub rsp, 0x78
    xor edi, edi
    mov r14d, r8d
    movsxd r15, ecx
    mov rbx, r9
    mov rsi, rdx
    test r8d, r8d
    je 0x14001568b
    test rdx, rdx
    jne 0x1400153ff
    mov byte ptr [r9 + 0x38], 1
    xor r8d, r8d
    mov dword ptr [r9 + 0x34], edi
    xor edx, edx
    mov byte ptr [r9 + 0x30], 1
    xor ecx, ecx
    mov dword ptr [r9 + 0x2c], 0x16
    xor r9d, r9d
    mov qword ptr [rsp + 0x28], rbx
    mov qword ptr [rsp + 0x20], rdi
    call 0x140009da0
    or eax, 0xffffffff
    jmp 0x14001568d
    mov rax, r15
    lea rcx, [rip + 0x152a7]
    and eax, 0x3f
    mov r12, r15
    sar r12, 6
    mov qword ptr [rbp - 0x18], r12
    lea r13, [rax + rax*8]
    mov rcx, qword ptr [rcx + r12*8]
    mov al, byte ptr [rcx + r13*8 + 0x39]
    mov byte ptr [rbp - 0x48], al
    dec al
    cmp al, 1
    ja 0x140015436
    mov eax, r14d
    not eax
    test al, 1
    je 0x1400153c8
    test byte ptr [rcx + r13*8 + 0x38], 0x20
    je 0x14001544c
    xor edx, edx
    mov ecx, r15d
    lea r8d, [rdx + 2]
    call 0x140018bb4
    mov ecx, r15d
    mov qword ptr [rbp - 0x30], rdi
    call 0x140017514
    lea rdx, [rip + 0x15251]
    test eax, eax
    je 0x14001557b
    mov rax, qword ptr [rdx + r12*8]
    cmp byte ptr [rax + r13*8 + 0x38], dil
    jge 0x14001557b
    cmp byte ptr [rbx + 0x28], dil
    jne 0x14001548b
    mov rcx, rbx
    call 0x14000cc40
    lea rdx, [rip + 0x15225]
    mov rax, qword ptr [rbx + 0x18]
    cmp qword ptr [rax + 0x138], rdi
    jne 0x1400154a7
    mov rax, qword ptr [rdx + r12*8]
    cmp byte ptr [rax + r13*8 + 0x39], dil
    je 0x14001557b
    mov rcx, qword ptr [rdx + r12*8]
    lea rdx, [rbp - 0x20]
    mov rcx, qword ptr [rcx + r13*8 + 0x28]
    call qword ptr [rip + 0x7d66]
    test eax, eax
    je 0x140015574
    movsx ecx, byte ptr [rbp - 0x48]
    test ecx, ecx
    je 0x140015551
    sub ecx, 1
    je 0x1400154dc
    cmp ecx, 1
    jne 0x140015615
    lea r12, [rsi + r14]
    mov qword ptr [rbp - 0x40], rdi
    mov r15, rsi
    cmp rsi, r12
    jae 0x140015548
    mov r14d, dword ptr [rbp - 0x3c]
    movzx eax, word ptr [r15]
    movzx ecx, ax
    mov word ptr [rbp - 0x48], ax
    call 0x140018bbc
    movzx ecx, word ptr [rbp - 0x48]
    cmp ax, cx
    jne 0x14001553f
    add r14d, 2
    mov dword ptr [rbp - 0x3c], r14d
    cmp cx, 0xa
    jne 0x140015534
    mov ecx, 0xd
    call 0x140018bbc
    mov ecx, 0xd
    cmp ax, cx
    jne 0x14001553f
    inc r14d
    mov dword ptr [rbp - 0x3c], r14d
    inc edi
    add r15, 2
    cmp r15, r12
    jae 0x140015548
    jmp 0x1400154f0
    call qword ptr [rip + 0x7b63]
    mov dword ptr [rbp - 0x40], eax
    mov r12, qword ptr [rbp - 0x18]
    jmp 0x14001560b
    mov r9d, r14d
    mov qword ptr [rsp + 0x20], rbx
    mov r8, rsi
    lea rcx, [rbp - 0x40]
    mov edx, r15d
    call 0x140014a70
    movsd xmm0, qword ptr [rax]
    mov edi, dword ptr [rax + 8]
    jmp 0x140015610
    lea rdx, [rip + 0x15135]
    mov rcx, qword ptr [rdx + r12*8]
    cmp byte ptr [rcx + r13*8 + 0x38], dil
    jge 0x1400155d8
    movsx ecx, byte ptr [rbp - 0x48]
    test ecx, ecx
    je 0x1400155c4
    sub ecx, 1
    je 0x1400155b0
    cmp ecx, 1
    jne 0x14001561c
    mov r9d, r14d
    lea rcx, [rbp - 0x40]
    mov r8, rsi
    mov edx, r15d
    call 0x140014fec
    jmp 0x140015568
    mov r9d, r14d
    lea rcx, [rbp - 0x40]
    mov r8, rsi
    mov edx, r15d
    call 0x140015108
    jmp 0x140015568
    mov r9d, r14d
    lea rcx, [rbp - 0x40]
    mov r8, rsi
    mov edx, r15d
    call 0x140014ee8
    jmp 0x140015568
    mov rcx, qword ptr [rcx + r13*8 + 0x28]
    lea r9, [rbp - 0x3c]
    xor eax, eax
    mov r8d, r14d
    and qword ptr [rsp + 0x20], rax
    mov rdx, rsi
    mov qword ptr [rbp - 0x40], rax
    mov dword ptr [rbp - 0x38], eax
    call qword ptr [rip + 0x7b25]
    test eax, eax
    jne 0x140015608
    call qword ptr [rip + 0x7aa3]
    mov dword ptr [rbp - 0x40], eax
    mov edi, dword ptr [rbp - 0x38]
    movsd xmm0, qword ptr [rbp - 0x40]
    movsd qword ptr [rbp - 0x30], xmm0
    lea rdx, [rip + 0x15094]
    mov rax, qword ptr [rbp - 0x30]
    shr rax, 0x20
    test eax, eax
    jne 0x140015684
    mov eax, dword ptr [rbp - 0x30]
    test eax, eax
    je 0x14001565b
    cmp eax, 5
    jne 0x14001564b
    mov byte ptr [rbx + 0x30], 1
    mov dword ptr [rbx + 0x2c], 9
    mov byte ptr [rbx + 0x38], 1
    mov dword ptr [rbx + 0x34], eax
    jmp 0x1400153f7
    mov ecx, dword ptr [rbp - 0x30]
    mov rdx, rbx
    call 0x14000f174
    jmp 0x1400153f7
    mov rax, qword ptr [rdx + r12*8]
    test byte ptr [rax + r13*8 + 0x38], 0x40
    je 0x14001566c
    cmp byte ptr [rsi], 0x1a
    je 0x14001568b
    and dword ptr [rbx + 0x34], 0
    mov byte ptr [rbx + 0x30], 1
    mov dword ptr [rbx + 0x2c], 0x1c
    mov byte ptr [rbx + 0x38], 1
    jmp 0x1400153f7
    mov eax, dword ptr [rbp - 0x2c]
    sub eax, edi
    jmp 0x14001568d
    xor eax, eax
    add rsp, 0x78
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x20
    cmp dword ptr [rsp + 0x50], 0
    mov edi, r9d
    mov esi, r8d
    mov rbx, rdx
    mov rbp, rcx
    jne 0x1400156d2
    cmp byte ptr [rdx], 0x35
    setge al
    jmp 0x14001575b
    call 0x140017034
    test eax, eax
    jne 0x14001570b
    cmp byte ptr [rbx], 0x35
    lea ecx, [rax + 1]
    jg 0x1400156ed
    jl 0x140015759
    lea rax, [rbx + 1]
    test edi, edi
    jne 0x1400156f4
    mov al, cl
    jmp 0x14001575b
    add rax, rcx
    mov dl, byte ptr [rax]
    cmp dl, 0x30
    je 0x1400156f1
    test dl, dl
    jne 0x1400156ed
    cmp rbx, rbp
    je 0x140015759
    mov al, byte ptr [rbx - 1]
    and al, cl
    jmp 0x14001575b
    cmp eax, 0x200
    jne 0x140015733
    mov ecx, 1
    test edi, edi
    je 0x14001572a
    jmp 0x140015720
    add rbx, rcx
    mov al, byte ptr [rbx]
    cmp al, 0x30
    je 0x14001571d
    test al, al
    je 0x14001572f
    cmp esi, 0x2d
    jne 0x1400156ed
    xor cl, cl
    jmp 0x1400156ed
    cmp eax, 0x100
    jne 0x140015759
    mov ecx, 1
    test edi, edi
    je 0x140015752
    jmp 0x140015748
    add rbx, rcx
    mov al, byte ptr [rbx]
    cmp al, 0x30
    je 0x140015745
    test al, al
    je 0x14001572f
    cmp esi, 0x2d
    je 0x1400156ed
    jmp 0x14001572f
    xor al, al
    mov rbx, qword ptr [rsp + 0x30]
    mov rbp, qword ptr [rsp + 0x38]
    mov rsi, qword ptr [rsp + 0x40]
    add rsp, 0x20
    pop rdi
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rbp
    mov qword ptr [rsp + 0x18], rsi
    push rdi
    sub rsp, 0x30
    mov rdi, r9
    mov rsi, rcx
    test rcx, rcx
    jne 0x1400157c1
    mov ebx, 0x16
    mov rax, qword ptr [rsp + 0x70]
    xor r9d, r9d
    mov qword ptr [rsp + 0x28], rax
    xor r8d, r8d
    and qword ptr [rsp + 0x20], 0
    xor edx, edx
    xor ecx, ecx
    mov dword ptr [rax + 0x2c], ebx
    mov byte ptr [rax + 0x30], 1
    call 0x140009da0
    mov eax, ebx
    jmp 0x14001586b
    test rdx, rdx
    je 0x14001578f
    xor eax, eax
    mov byte ptr [rcx], 0
    test r8d, r8d
    cmovg eax, r8d
    inc eax
    cdqe 
    cmp rdx, rax
    ja 0x1400157e2
    mov ebx, 0x22
    jmp 0x140015794
    test rdi, rdi
    je 0x14001578f
    mov rcx, qword ptr [r9 + 8]
    lea rbx, [rsi + 1]
    mov rdx, rcx
    mov byte ptr [rsi], 0x30
    jmp 0x14001580c
    mov al, byte ptr [rdx]
    test al, al
    je 0x140015802
    inc rdx
    jmp 0x140015804
    mov al, 0x30
    mov byte ptr [rbx], al
    inc rbx
    dec r8d
    test r8d, r8d
    jg 0x1400157f7
    mov byte ptr [rbx], 0
    js 0x140015841
    mov eax, dword ptr [rsp + 0x68]
    mov r9d, dword ptr [rsp + 0x60]
    mov r8d, dword ptr [rdi]
    mov dword ptr [rsp + 0x20], eax
    call 0x1400156a0
    test al, al
    je 0x140015841
    jmp 0x140015834
    mov byte ptr [rbx], 0x30
    dec rbx
    mov al, byte ptr [rbx]
    cmp al, 0x39
    je 0x140015831
    inc al
    mov byte ptr [rbx], al
    cmp byte ptr [rsi], 0x31
    jne 0x14001584b
    inc dword ptr [rdi + 4]
    jmp 0x140015869
    or r8, 0xffffffffffffffff
    inc r8
    cmp byte ptr [r8 + rsi + 1], 0
    jne 0x14001584f
    inc r8
    lea rdx, [rsi + 1]
    mov rcx, rsi
    call 0x14001af90
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x40]
    mov rbp, qword ptr [rsp + 0x48]
    mov rsi, qword ptr [rsp + 0x50]
    add rsp, 0x30
    pop rdi
    ret
    mov qword ptr [rsp + 0x10], rdx
    push rbx
    push rbp
    push rsi
    push rdi
    push r12
    push r14
    push r15
    sub rsp, 0x220
    mov r10d, dword ptr [rcx]
    mov r15, rdx
    mov rsi, rcx
    test r10d, r10d
    je 0x140015d08
    mov edi, dword ptr [rdx]
    test edi, edi
    je 0x140015d08
    dec r10d
    lea ebp, [rdi - 1]
    test ebp, ebp
    jne 0x1400159bb
    mov r12d, dword ptr [rdx + 4]
    xor ebp, ebp
    cmp r12d, 1
    jne 0x1400158f2
    mov ebx, dword ptr [rcx + 4]
    lea r8, [rsp + 0x44]
    add rcx, 4
    mov dword ptr [rsi], ebp
    xor r9d, r9d
    mov dword ptr [rsp + 0x40], ebp
    mov edx, 0x1cc
    call 0x140016fac
    mov eax, ebx
    jmp 0x140015d0a
    test r10d, r10d
    jne 0x140015934
    mov edi, dword ptr [rcx + 4]
    lea r8, [rsp + 0x44]
    mov dword ptr [rcx], ebp
    xor r9d, r9d
    add rcx, 4
    mov dword ptr [rsp + 0x40], ebp
    mov edx, 0x1cc
    call 0x140016fac
    xor edx, edx
    mov eax, edi
    div r12d
    mov eax, edi
    test edx, edx
    mov dword ptr [rsi + 4], edx
    setne bpl
    xor edx, edx
    div r12d
    mov dword ptr [rsi], ebp
    jmp 0x140015d0a
    mov r15d, 0xffffffff
    mov r14, rbp
    mov rdi, rbp
    cmp r10d, r15d
    je 0x140015980
    mov r9, r12
    nop dword ptr [rax + rax]
    mov r8d, dword ptr [rsi + r10*4 + 4]
    xor edx, edx
    shl rdi, 0x20
    add r10d, r15d
    or r8, rdi
    shl r14, 0x20
    mov rax, r8
    div r9
    xor edx, edx
    mov ecx, eax
    mov rax, r8
    div r9
    add r14, rcx
    mov rdi, rdx
    cmp r10d, r15d
    jne 0x140015950
    xor r9d, r9d
    mov dword ptr [rsp + 0x40], ebp
    lea r8, [rsp + 0x44]
    mov dword ptr [rsi], ebp
    mov edx, 0x1cc
    lea rcx, [rsi + 4]
    call 0x140016fac
    mov rcx, rdi
    mov dword ptr [rsi + 4], edi
    shr rcx, 0x20
    mov rax, r14
    test ecx, ecx
    mov dword ptr [rsi + 8], ecx
    setne bpl
    inc ebp
    mov dword ptr [rsi], ebp
    jmp 0x140015d0a
    cmp ebp, r10d
    ja 0x140015d08
    mov r8d, r10d
    movsxd rdx, r10d
    sub r8d, ebp
    mov r9d, r10d
    movsxd rbx, r8d
    cmp rdx, rbx
    jl 0x140015a21
    add rcx, 4
    lea rax, [rbx*4]
    mov r11, r15
    sub r11, rax
    sub r11, rsi
    lea rcx, [rcx + rdx*4]
    mov eax, dword ptr [rcx]
    cmp dword ptr [r11 + rcx], eax
    jne 0x140015a0a
    dec r9d
    dec rdx
    sub rcx, 4
    cmp rdx, rbx
    jge 0x1400159f1
    jmp 0x140015a21
    mov eax, r9d
    sub eax, r8d
    movsxd rdx, eax
    movsxd rax, r9d
    mov ecx, dword ptr [rsi + rax*4 + 4]
    cmp dword ptr [r15 + rdx*4 + 4], ecx
    jae 0x140015a24
    inc r8d
    test r8d, r8d
    je 0x140015d08
    mov r9d, dword ptr [r15 + rbp*4 + 4]
    lea eax, [rdi - 2]
    mov r11d, dword ptr [r15 + rax*4 + 4]
    xor ebp, ebp
    bsr eax, r9d
    mov dword ptr [rsp + 0x270], r11d
    je 0x140015a68
    mov ebx, 0x1f
    mov r14d, 0x20
    sub ebx, eax
    sub r14d, ebx
    mov dword ptr [rsp + 0x260], r14d
    test ebx, ebx
    je 0x140015ab4
    jmp 0x140015a77
    mov ebx, 0x20
    mov dword ptr [rsp + 0x260], ebp
    mov r14d, ebp
    mov eax, r9d
    mov edx, r11d
    mov ecx, r14d
    shr edx, cl
    mov ecx, ebx
    shl eax, cl
    mov r9d, edx
    shl r11d, cl
    or r9d, eax
    mov dword ptr [rsp + 0x270], r11d
    cmp edi, 2
    jbe 0x140015ab4
    lea eax, [rdi - 3]
    mov ecx, r14d
    mov eax, dword ptr [r15 + rax*4 + 4]
    shr eax, cl
    or r11d, eax
    mov dword ptr [rsp + 0x270], r11d
    lea r12d, [r8 - 1]
    mov qword ptr [rsp + 0x30], rbp
    mov r11, rbp
    test r12d, r12d
    js 0x140015cc9
    mov eax, r14d
    mov r15d, 0xffffffff
    mov qword ptr [rsp + 0x38], rax
    mov eax, r9d
    mov qword ptr [rsp + 0x218], r13
    lea r13d, [r12 + rdi]
    mov qword ptr [rsp + 0x28], rax
    nop dword ptr [rax + rax]
    cmp r13d, r10d
    ja 0x140015afc
    mov edx, dword ptr [rsi + r13*4 + 4]
    jmp 0x140015afe
    mov edx, ebp
    mov dword ptr [rsp + 0x278], edx
    lea eax, [r13 - 1]
    mov ecx, dword ptr [rsi + rax*4 + 4]
    lea eax, [r13 - 2]
    mov r11d, dword ptr [rsi + rax*4 + 4]
    mov qword ptr [rsp + 0x20], rcx
    mov dword ptr [rsp + 0x24], edx
    test ebx, ebx
    je 0x140015b56
    mov rcx, qword ptr [rsp + 0x38]
    mov r8d, r11d
    mov rax, qword ptr [rsp + 0x20]
    shr r8, cl
    mov ecx, ebx
    shl rax, cl
    or r8, rax
    shl r11d, cl
    cmp r13d, 3
    jb 0x140015b5b
    lea eax, [r13 - 3]
    mov ecx, r14d
    mov eax, dword ptr [rsi + rax*4 + 4]
    shr eax, cl
    or r11d, eax
    jmp 0x140015b5b
    mov r8, qword ptr [rsp + 0x20]
    mov rcx, qword ptr [rsp + 0x28]
    xor edx, edx
    mov rax, r8
    div rcx
    xor edx, edx
    mov r9, rax
    mov rax, r8
    div rcx
    mov r8d, edx
    cmp r9, r15
    jbe 0x140015b92
    movabs rax, 0xffffffff00000001
    add rax, r9
    mov r9, r15
    imul rax, rcx
    add r8, rax
    cmp r8, r15
    ja 0x140015bd5
    mov edx, dword ptr [rsp + 0x270]
    mov r14, rcx
    mov eax, edx
    imul rax, r9
    nop word ptr [rax + rax]
    mov rcx, r8
    shl rcx, 0x20
    or rcx, r11
    cmp rax, rcx
    jbe 0x140015bcd
    dec r9
    sub rax, rdx
    add r8, r14
    cmp r8, r15
    jbe 0x140015bb0
    mov r14d, dword ptr [rsp + 0x260]
    test r9, r9
    je 0x140015ca0
    mov r10, rbp
    mov r11d, ebp
    test edi, edi
    je 0x140015c4c
    mov r14, qword ptr [rsp + 0x268]
    mov r15d, dword ptr [rsp + 0x260]
    add r14, 4
    nop dword ptr [rax]
    mov eax, dword ptr [r14]
    lea r14, [r14 + 4]
    imul rax, r9
    add r10, rax
    lea eax, [r11 + r12]
    mov r8d, r10d
    mov ecx, eax
    shr r10, 0x20
    mov eax, dword ptr [rsi + rax*4 + 4]
    mov rdx, r10
    inc r10
    cmp eax, r8d
    cmovae r10, rdx
    sub eax, r8d
    inc r11d
    mov dword ptr [rsi + rcx*4 + 4], eax
    cmp r11d, edi
    jb 0x140015c00
    mov r14d, r15d
    mov dword ptr [rsp + 0x260], r15d
    mov r15d, 0xffffffff
    mov r11, qword ptr [rsp + 0x268]
    mov eax, dword ptr [rsp + 0x278]
    add r11, 4
    cmp rax, r10
    jae 0x140015c9c
    mov r10d, ebp
    test edi, edi
    je 0x140015c99
    mov r8, rbp
    nop 
    lea eax, [r10 + r12]
    inc r10d
    mov ecx, dword ptr [rsi + rax*4 + 4]
    lea rdx, [rsi + rax*4]
    mov eax, dword ptr [r11]
    lea r11, [r11 + 4]
    add r8, rax
    add r8, rcx
    mov dword ptr [rdx + 4], r8d
    shr r8, 0x20
    cmp r10d, edi
    jb 0x140015c70
    dec r9
    lea r10d, [r13 - 1]
    mov r11, qword ptr [rsp + 0x30]
    dec r13d
    shl r11, 0x20
    mov eax, r9d
    add r11, rax
    sub r12d, 1
    mov qword ptr [rsp + 0x30], r11
    jns 0x140015af0
    mov r13, qword ptr [rsp + 0x218]
    inc r10d
    mov ecx, r10d
    cmp r10d, dword ptr [rsi]
    jae 0x140015ce0
    mov eax, ecx
    inc ecx
    mov dword ptr [rsi + rax*4 + 4], ebp
    cmp ecx, dword ptr [rsi]
    jb 0x140015cd4
    mov dword ptr [rsi], r10d
    test r10d, r10d
    je 0x140015d03
    nop dword ptr [rax + rax]
    lea edx, [r10 - 1]
    mov r10d, edx
    cmp dword ptr [rsi + rdx*4 + 4], ebp
    jne 0x140015d03
    mov dword ptr [rsi], edx
    test edx, edx
    jne 0x140015cf0
    mov rax, r11
    jmp 0x140015d0a
    xor eax, eax
    add rsp, 0x220
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    pop rbp
    pop rbx
    ret
    push rbp
    push rbx
    push rsi
    push rdi
    push r12
    push r14
    push r15
    lea rbp, [rsp - 0x6f0]
    sub rsp, 0x7f0
    mov rax, qword ptr [rip + 0x132c3]
    xor rax, rsp
    mov qword ptr [rbp + 0x6e0], rax
    mov r14, qword ptr [rbp + 0x750]
    mov r12, r9
    mov qword ptr [rsp + 0x50], rcx
    mov esi, edx
    lea rcx, [rsp + 0x70]
    mov qword ptr [rbp - 0x78], r14
    mov qword ptr [rbp - 0x68], r9
    mov dword ptr [rsp + 0x64], r8d
    call 0x140018c5c
    mov eax, dword ptr [rsp + 0x70]
    mov r15d, 1
    and eax, 0x1f
    cmp al, 0x1f
    jne 0x140015d87
    mov byte ptr [rsp + 0x78], 0
    jmp 0x140015d96
    lea rcx, [rsp + 0x70]
    call 0x140018cd4
    mov byte ptr [rsp + 0x78], r15b
    mov rbx, qword ptr [rsp + 0x50]
    mov edi, 0x20
    mov eax, edi
    mov qword ptr [r12 + 8], r14
    test rbx, rbx
    lea ecx, [rdi + 0xd]
    cmovs eax, ecx
    xor r8d, r8d
    xor edx, edx
    mov dword ptr [r12], eax
    lea rcx, [rbp - 0x80]
    call 0x140018bf8
    mov rax, rbx
    mov edx, 0x7ff
    shr rax, 0x34
    movabs rcx, 0xfffffffffffff
    and rax, rdx
    jne 0x140015dfe
    test rcx, rbx
    je 0x140015def
    test dword ptr [rbp - 0x80], 0x1000000
    je 0x140015eb2
    and dword ptr [r12 + 4], 0
    lea r8, [rip + 0xdde0]
    jmp 0x140015e5e
    cmp rax, rdx
    jne 0x140015eb2
    mov rax, rbx
    and rax, rcx
    jne 0x140015e14
    mov eax, r15d
    jmp 0x140015e3e
    test rbx, rbx
    jns 0x140015e2f
    movabs rcx, 0x8000000000000
    cmp rax, rcx
    jne 0x140015e2f
    mov eax, 4
    jmp 0x140015e3e
    mov rax, rbx
    shr rax, 0x33
    not eax
    and eax, r15d
    or eax, 2
    mov dword ptr [r12 + 4], r15d
    sub eax, r15d
    je 0x140015e8c
    sub eax, r15d
    je 0x140015e83
    sub eax, r15d
    je 0x140015e7a
    cmp eax, r15d
    jne 0x140015eb2
    lea r8, [rip + 0xdd9a]
    mov rdx, qword ptr [rbp + 0x758]
    mov rcx, r14
    call 0x14000e890
    test eax, eax
    jne 0x140016f94
    jmp 0x140016f5f
    lea r8, [rip + 0xdd6f]
    jmp 0x140015e5e
    lea r8, [rip + 0xdd5e]
    jmp 0x140015e5e
    mov rdx, qword ptr [rbp + 0x758]
    lea r8, [rip + 0xdd46]
    mov rcx, r14
    call 0x14000e890
    test eax, eax
    jne 0x140016f94
    xor r15d, r15d
    jmp 0x140016f5f
    movabs rax, 0x7fffffffffffffff
    lea rcx, [rsp + 0x68]
    and rbx, rax
    xor r8d, r8d
    mov qword ptr [rsp + 0x50], rbx
    xor edx, edx
    mov ebx, 0x8001f
    mov dword ptr [rsp + 0x6c], ebx
    call 0x140018bf8
    mov r8d, dword ptr [rsp + 0x6c]
    lea rcx, [rsp + 0x40]
    mov edx, ebx
    call 0x140018bf8
    movsd xmm0, qword ptr [rsp + 0x50]
    inc esi
    mov r9d, 0x7ff
    movsd qword ptr [rsp + 0x58], xmm0
    mov rdx, qword ptr [rsp + 0x58]
    mov r8, rdx
    mov dword ptr [rsp + 0x60], esi
    shr r8, 0x34
    mov esi, 2
    mov rcx, r8
    and rcx, r9
    mov rax, rcx
    neg rax
    movabs rax, 0x10000000000000
    sbb rbx, rbx
    and rbx, rax
    movabs rax, 0xfffffffffffff
    and rdx, rax
    add rbx, rdx
    neg rcx
    sbb eax, eax
    and r8d, r9d
    lea r12d, [rsi + rax]
    add r12d, r8d
    call 0x140018df0
    call 0x140018d24
    cvttsd2si ecx, xmm0
    mov dword ptr [rbp - 0x5c], ebx
    lea eax, [rcx - 0x7fffffff]
    and eax, 0xfffffffe
    neg eax
    sbb eax, eax
    shr rbx, 0x20
    and eax, ecx
    mov dword ptr [rbp - 0x58], ebx
    mov dword ptr [rsp + 0x30], eax
    mov eax, ebx
    neg eax
    sbb edx, edx
    neg edx
    add edx, r15d
    mov dword ptr [rbp - 0x60], edx
    cmp r12d, 0x434
    jb 0x1400161b1
    xor eax, eax
    mov dword ptr [rbp + 0x348], 0x100000
    mov dword ptr [rbp + 0x344], eax
    mov dword ptr [rbp + 0x340], esi
    test ebx, ebx
    je 0x1400160c3
    xor r8d, r8d
    mov eax, dword ptr [rbp + r8*4 - 0x5c]
    cmp dword ptr [rbp + r8*4 + 0x344], eax
    jne 0x1400160c3
    add r8d, r15d
    cmp r8d, esi
    jne 0x140015fba
    and dword ptr [rsp + 0x40], 0
    lea r11d, [r12 - 0x432]
    mov r8d, r11d
    lea eax, [rdx - 1]
    and r11d, 0x1f
    shr r8d, 5
    mov esi, edi
    mov rbx, r15
    sub esi, r11d
    mov ecx, esi
    shl rbx, cl
    sub ebx, r15d
    bsr eax, dword ptr [rbp + rax*4 - 0x5c]
    mov r12d, ebx
    not r12d
    je 0x140016011
    inc eax
    jmp 0x140016013
    xor eax, eax
    sub edi, eax
    lea eax, [rdx + r8]
    cmp eax, 0x73
    ja 0x1400160a3
    xor r14d, r14d
    cmp r11d, edi
    seta r14b
    add r14d, edx
    add r14d, r8d
    cmp r14d, 0x73
    ja 0x1400160a3
    lea edi, [r8 - 1]
    lea r10d, [r14 - 1]
    cmp r10d, edi
    je 0x14001608d
    mov eax, r10d
    sub eax, r8d
    lea ecx, [rax - 1]
    cmp eax, edx
    jae 0x140016059
    mov r9d, dword ptr [rbp + rax*4 - 0x5c]
    jmp 0x14001605c
    xor r9d, r9d
    cmp ecx, edx
    jae 0x140016066
    mov edx, dword ptr [rbp + rcx*4 - 0x5c]
    jmp 0x140016068
    xor edx, edx
    and edx, r12d
    mov ecx, esi
    shr edx, cl
    and r9d, ebx
    mov ecx, r11d
    shl r9d, cl
    or edx, r9d
    mov dword ptr [rbp + r10*4 - 0x5c], edx
    dec r10d
    cmp r10d, edi
    je 0x14001608d
    mov edx, dword ptr [rbp - 0x60]
    jmp 0x140016045
    xor ecx, ecx
    test r8d, r8d
    je 0x1400160a6
    and dword ptr [rbp + rcx*4 - 0x5c], 0
    add ecx, r15d
    cmp ecx, r8d
    jne 0x140016094
    jmp 0x1400160a6
    xor r14d, r14d
    mov dword ptr [rbp - 0x60], r14d
    mov r12d, r15d
    mov dword ptr [rbp + 0x170], r15d
    mov dword ptr [rbp + 0x174], 4
    jmp 0x1400163e2
    and dword ptr [rsp + 0x40], 0
    lea r11d, [r12 - 0x433]
    mov r8d, r11d
    lea eax, [rdx - 1]
    and r11d, 0x1f
    shr r8d, 5
    mov esi, edi
    mov rbx, r15
    sub esi, r11d
    mov ecx, esi
    shl rbx, cl
    sub ebx, r15d
    bsr eax, dword ptr [rbp + rax*4 - 0x5c]
    mov r12d, ebx
    not r12d
    je 0x1400160ff
    inc eax
    jmp 0x140016101
    xor eax, eax
    sub edi, eax
    lea eax, [rdx + r8]
    cmp eax, 0x73
    ja 0x140016191
    xor r14d, r14d
    cmp r11d, edi
    seta r14b
    add r14d, edx
    add r14d, r8d
    cmp r14d, 0x73
    ja 0x140016191
    lea edi, [r8 - 1]
    lea r10d, [r14 - 1]
    cmp r10d, edi
    je 0x14001617b
    mov eax, r10d
    sub eax, r8d
    lea ecx, [rax - 1]
    cmp eax, edx
    jae 0x140016147
    mov r9d, dword ptr [rbp + rax*4 - 0x5c]
    jmp 0x14001614a
    xor r9d, r9d
    cmp ecx, edx
    jae 0x140016154
    mov edx, dword ptr [rbp + rcx*4 - 0x5c]
    jmp 0x140016156
    xor edx, edx
    and edx, r12d
    mov ecx, esi
    shr edx, cl
    and r9d, ebx
    mov ecx, r11d
    shl r9d, cl
    or edx, r9d
    mov dword ptr [rbp + r10*4 - 0x5c], edx
    dec r10d
    cmp r10d, edi
    je 0x14001617b
    mov edx, dword ptr [rbp - 0x60]
    jmp 0x140016133
    xor ecx, ecx
    test r8d, r8d
    je 0x140016194
    and dword ptr [rbp + rcx*4 - 0x5c], 0
    add ecx, r15d
    cmp ecx, r8d
    jne 0x140016182
    jmp 0x140016194
    xor r14d, r14d
    mov dword ptr [rbp - 0x60], r14d
    mov r12d, r15d
    mov dword ptr [rbp + 0x170], r15d
    mov dword ptr [rbp + 0x174], 2
    jmp 0x1400163e2
    cmp r12d, 0x36
    je 0x1400162ff
    xor eax, eax
    mov dword ptr [rbp + 0x348], 0x100000
    mov dword ptr [rbp + 0x344], eax
    mov dword ptr [rbp + 0x340], esi
    test ebx, ebx
    je 0x1400162ff
    xor r8d, r8d
    mov eax, dword ptr [rbp + r8*4 - 0x5c]
    cmp dword ptr [rbp + r8*4 + 0x344], eax
    jne 0x1400162ff
    add r8d, r15d
    cmp r8d, esi
    jne 0x1400161de
    and dword ptr [rsp + 0x40], 0
    bsr eax, ebx
    je 0x140016207
    inc eax
    jmp 0x140016209
    xor eax, eax
    xor r14d, r14d
    sub edi, eax
    cmp edi, esi
    setb r14b
    or r11d, 0xffffffff
    add r14d, edx
    cmp r14d, 0x73
    jbe 0x1400162ac
    xor r14d, r14d
    mov esi, 0x436
    mov dword ptr [rbp - 0x60], r14d
    sub esi, r12d
    lea rcx, [rbp + 0x344]
    mov edi, esi
    xor edx, edx
    shr edi, 5
    lea rbx, [rdi*4]
    mov r8, rbx
    call 0x14001b630
    and esi, 0x1f
    mov eax, r15d
    mov cl, sil
    shl eax, cl
    mov dword ptr [rbp + rbx + 0x344], eax
    lea r12d, [rdi + 1]
    mov r8d, r12d
    shl r8, 2
    mov dword ptr [rbp + 0x340], r12d
    mov dword ptr [rbp + 0x170], r12d
    test r8, r8
    je 0x1400163e2
    mov ebx, 0x1cc
    lea rcx, [rbp + 0x174]
    cmp r8, rbx
    ja 0x1400163c1
    lea rdx, [rbp + 0x344]
    call 0x14001af90
    jmp 0x1400163db
    lea eax, [r14 - 1]
    cmp eax, r11d
    je 0x140016228
    mov r10d, eax
    lea r8d, [rax - 1]
    cmp eax, edx
    jae 0x1400162cb
    mov r9d, dword ptr [rbp + r10*4 - 0x5c]
    jmp 0x1400162ce
    xor r9d, r9d
    cmp r8d, edx
    jae 0x1400162da
    mov ecx, dword ptr [rbp + r8*4 - 0x5c]
    jmp 0x1400162dc
    xor ecx, ecx
    shr ecx, 0x1e
    lea eax, [r9*4]
    or ecx, eax
    mov eax, r8d
    mov dword ptr [rbp + r10*4 - 0x5c], ecx
    cmp r8d, r11d
    je 0x140016228
    mov edx, dword ptr [rbp - 0x60]
    jmp 0x1400162b9
    neg ebx
    sbb rax, rax
    and dword ptr [rsp + 0x40], 0
    and eax, 4
    bsr eax, dword ptr [rbp + rax - 0x5c]
    je 0x140016317
    inc eax
    jmp 0x140016319
    xor eax, eax
    xor r14d, r14d
    sub edi, eax
    cmp edi, r15d
    setb r14b
    or r11d, 0xffffffff
    add r14d, edx
    cmp r14d, 0x73
    jbe 0x140016376
    xor r14d, r14d
    mov esi, 0x435
    mov dword ptr [rbp - 0x60], r14d
    sub esi, r12d
    lea rcx, [rbp + 0x344]
    mov edi, esi
    xor edx, edx
    shr edi, 5
    lea rbx, [rdi*4]
    mov r8, rbx
    call 0x14001b630
    and esi, 0x1f
    mov eax, r15d
    mov cl, sil
    shl eax, cl
    mov dword ptr [rbp + rbx + 0x344], eax
    jmp 0x140016264
    lea eax, [r14 - 1]
    cmp eax, r11d
    je 0x140016335
    mov r10d, eax
    lea r8d, [rax - 1]
    cmp eax, edx
    jae 0x140016391
    mov r9d, dword ptr [rbp + r10*4 - 0x5c]
    jmp 0x140016394
    xor r9d, r9d
    cmp r8d, edx
    jae 0x1400163a0
    mov ecx, dword ptr [rbp + r8*4 - 0x5c]
    jmp 0x1400163a2
    xor ecx, ecx
    shr ecx, 0x1f
    lea eax, [r9 + r9]
    or ecx, eax
    mov eax, r8d
    mov dword ptr [rbp + r10*4 - 0x5c], ecx
    cmp r8d, r11d
    je 0x140016335
    mov edx, dword ptr [rbp - 0x60]
    jmp 0x14001637f
    mov r8, rbx
    xor edx, edx
    call 0x14001b630
    call 0x14000f1b8
    mov dword ptr [rax], 0x22
    call 0x140009e6c
    mov r12d, dword ptr [rbp + 0x170]
    mov ecx, dword ptr [rsp + 0x30]
    mov eax, 0xcccccccd
    test ecx, ecx
    js 0x1400168db
    mul ecx
    mov eax, edx
    lea rdx, [rip - 0x163fe]
    shr eax, 3
    mov dword ptr [rsp + 0x50], eax
    mov ecx, eax
    mov dword ptr [rsp + 0x38], eax
    test eax, eax
    je 0x140016839
    mov r8d, 0x26
    cmp ecx, r8d
    mov eax, ecx
    cmova eax, r8d
    mov dword ptr [rsp + 0x48], eax
    dec eax
    mov edi, eax
    movzx ecx, byte ptr [rdx + rax*4 + 0x23b22]
    movzx esi, byte ptr [rdx + rax*4 + 0x23b23]
    xor edx, edx
    lea rbx, [rcx*4]
    lea eax, [rsi + rcx]
    mov r8, rbx
    lea rcx, [rbp + 0x344]
    mov dword ptr [rbp + 0x340], eax
    call 0x14001b630
    lea rcx, [rip - 0x16463]
    shl rsi, 2
    movzx eax, word ptr [rcx + rdi*4 + 0x23b20]
    lea rdx, [rcx + 0x23210]
    lea rcx, [rbp + 0x344]
    mov r8, rsi
    add rcx, rbx
    lea rdx, [rdx + rax*4]
    call 0x14001af90
    mov r9d, dword ptr [rbp + 0x340]
    cmp r9d, r15d
    ja 0x1400164f3
    mov eax, dword ptr [rbp + 0x344]
    test eax, eax
    jne 0x1400164aa
    xor r12d, r12d
    jmp 0x1400165c2
    cmp eax, r15d
    je 0x1400165e0
    test r12d, r12d
    je 0x1400165e0
    xor r8d, r8d
    mov r10, rax
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 + 0x174]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 + 0x174], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r12d
    jne 0x1400164c5
    jmp 0x14001659c
    cmp r12d, r15d
    ja 0x140016650
    mov ebx, dword ptr [rbp + 0x174]
    mov r8, r9
    shl r8, 2
    mov r12d, r9d
    mov dword ptr [rbp + 0x170], r9d
    test r8, r8
    je 0x140016558
    mov eax, 0x1cc
    lea rcx, [rbp + 0x174]
    cmp r8, rax
    ja 0x140016537
    lea rdx, [rbp + 0x344]
    call 0x14001af90
    jmp 0x140016551
    mov r8, rax
    xor edx, edx
    call 0x14001b630
    call 0x14000f1b8
    mov dword ptr [rax], 0x22
    call 0x140009e6c
    mov r12d, dword ptr [rbp + 0x170]
    test ebx, ebx
    je 0x1400164a2
    cmp ebx, r15d
    je 0x1400165e0
    test r12d, r12d
    je 0x1400165e0
    xor r8d, r8d
    mov r10, rbx
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 + 0x174]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 + 0x174], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r12d
    jne 0x140016573
    test r8d, r8d
    je 0x1400165d9
    cmp dword ptr [rbp + 0x170], 0x73
    jae 0x1400165cb
    mov eax, dword ptr [rbp + 0x170]
    mov dword ptr [rbp + rax*4 + 0x174], r8d
    mov r12d, dword ptr [rbp + 0x170]
    add r12d, r15d
    mov dword ptr [rbp + 0x170], r12d
    jmp 0x1400165e0
    xor r12d, r12d
    xor al, al
    mov dword ptr [rbp + 0x170], r12d
    jmp 0x1400165e3
    mov r12d, dword ptr [rbp + 0x170]
    mov al, r15b
    test al, al
    jne 0x140016816
    xor r12d, r12d
    mov dword ptr [rbp + 0x170], r12d
    mov rsi, qword ptr [rbp - 0x78]
    mov rbx, rsi
    test r14d, r14d
    je 0x140016d47
    xor r8d, r8d
    xor r9d, r9d
    mov eax, dword ptr [rbp + r9*4 - 0x5c]
    lea rcx, [rax + rax*4]
    mov eax, r8d
    lea r8, [rax + rcx*2]
    mov dword ptr [rbp + r9*4 - 0x5c], r8d
    add r9d, r15d
    shr r8, 0x20
    cmp r9d, r14d
    jne 0x14001660b
    test r8d, r8d
    je 0x140016d47
    cmp dword ptr [rbp - 0x60], 0x73
    jae 0x140016d24
    mov eax, dword ptr [rbp - 0x60]
    mov dword ptr [rbp + rax*4 - 0x5c], r8d
    add dword ptr [rbp - 0x60], r15d
    jmp 0x140016d47
    cmp r9d, r12d
    lea rdx, [rbp + 0x174]
    mov ebx, r12d
    lea rcx, [rbp + 0x344]
    cmovae rcx, rdx
    lea r8, [rbp + 0x344]
    cmovb ebx, r9d
    mov qword ptr [rsp + 0x58], rcx
    setb al
    mov dword ptr [rsp + 0x34], ebx
    lea rdx, [rbp + 0x174]
    cmovae rdx, r8
    test al, al
    mov qword ptr [rsp + 0x40], rdx
    cmovne r9d, r12d
    xor r12d, r12d
    xor r10d, r10d
    mov dword ptr [rbp + 0x510], r12d
    test ebx, ebx
    je 0x1400167c3
    mov esi, dword ptr [rcx + r10*4]
    test esi, esi
    jne 0x1400166d3
    cmp r10d, r12d
    jne 0x1400167b7
    and dword ptr [rbp + r10*4 + 0x514], esi
    lea r12d, [r10 + 1]
    mov dword ptr [rbp + 0x510], r12d
    jmp 0x1400167b7
    xor r11d, r11d
    mov r8d, r10d
    test r9d, r9d
    je 0x1400167a3
    mov ebx, r10d
    neg ebx
    cmp r8d, 0x73
    je 0x14001674d
    mov edi, r8d
    mov ecx, ebx
    cmp r8d, r12d
    jne 0x140016709
    and dword ptr [rbp + rdi*4 + 0x514], 0
    lea eax, [r8 + 1]
    mov dword ptr [rbp + 0x510], eax
    mov eax, r8d
    add r8d, r15d
    add eax, ecx
    mov edx, dword ptr [rdx + rax*4]
    mov eax, r11d
    imul rdx, rsi
    add rdx, rax
    mov eax, dword ptr [rbp + rdi*4 + 0x514]
    add rdx, rax
    lea eax, [r8 + rbx]
    mov r11, rdx
    mov dword ptr [rbp + rdi*4 + 0x514], edx
    mov r12d, dword ptr [rbp + 0x510]
    shr r11, 0x20
    cmp eax, r9d
    je 0x14001674d
    mov rdx, qword ptr [rsp + 0x40]
    jmp 0x1400166e7
    test r11d, r11d
    je 0x14001679f
    cmp r8d, 0x73
    je 0x1400165eb
    lea eax, [r8 + 1]
    mov edx, r8d
    cmp r8d, r12d
    mov r8d, eax
    jne 0x140016779
    and dword ptr [rbp + rdx*4 + 0x514], 0
    mov dword ptr [rbp + 0x510], eax
    mov eax, dword ptr [rbp + rdx*4 + 0x514]
    mov ecx, r11d
    add rcx, rax
    mov dword ptr [rbp + rdx*4 + 0x514], ecx
    mov r12d, dword ptr [rbp + 0x510]
    shr rcx, 0x20
    mov r11d, ecx
    test ecx, ecx
    jne 0x140016752
    mov ebx, dword ptr [rsp + 0x34]
    cmp r8d, 0x73
    je 0x1400165eb
    mov rcx, qword ptr [rsp + 0x58]
    mov rdx, qword ptr [rsp + 0x40]
    add r10d, r15d
    cmp r10d, ebx
    jne 0x1400166aa
    mov r8d, r12d
    shl r8, 2
    mov dword ptr [rbp + 0x170], r12d
    test r8, r8
    je 0x140016816
    mov eax, 0x1cc
    lea rcx, [rbp + 0x174]
    cmp r8, rax
    ja 0x1400167f5
    lea rdx, [rbp + 0x514]
    call 0x14001af90
    jmp 0x14001680f
    mov r8, rax
    xor edx, edx
    call 0x14001b630
    call 0x14000f1b8
    mov dword ptr [rax], 0x22
    call 0x140009e6c
    mov r12d, dword ptr [rbp + 0x170]
    mov ecx, dword ptr [rsp + 0x38]
    lea rdx, [rip - 0x16821]
    sub ecx, dword ptr [rsp + 0x48]
    mov r8d, 0x26
    mov dword ptr [rsp + 0x38], ecx
    jne 0x140016419
    mov eax, dword ptr [rsp + 0x50]
    mov ecx, dword ptr [rsp + 0x30]
    lea eax, [rax + rax*4]
    add eax, eax
    sub ecx, eax
    je 0x1400165f5
    lea eax, [rcx - 1]
    mov eax, dword ptr [rdx + rax*4 + 0x23bb8]
    test eax, eax
    je 0x1400165eb
    cmp eax, r15d
    je 0x1400165f5
    test r12d, r12d
    je 0x1400165f5
    xor r8d, r8d
    mov r10d, eax
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 + 0x174]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 + 0x174], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r12d
    jne 0x140016877
    test r8d, r8d
    je 0x1400168cf
    cmp dword ptr [rbp + 0x170], 0x73
    jae 0x1400165eb
    mov eax, dword ptr [rbp + 0x170]
    mov dword ptr [rbp + rax*4 + 0x174], r8d
    mov r12d, dword ptr [rbp + 0x170]
    add r12d, r15d
    jmp 0x1400165ee
    mov r12d, dword ptr [rbp + 0x170]
    jmp 0x1400165f5
    neg ecx
    lea r8, [rip - 0x168e4]
    mul ecx
    mov dword ptr [rsp + 0x48], ecx
    mov eax, edx
    shr eax, 3
    mov dword ptr [rsp + 0x40], eax
    mov edx, eax
    mov dword ptr [rsp + 0x34], eax
    test eax, eax
    je 0x140016c96
    mov ecx, 0x26
    cmp edx, ecx
    mov eax, edx
    cmova eax, ecx
    xor edx, edx
    mov dword ptr [rsp + 0x50], eax
    dec eax
    mov edi, eax
    movzx ecx, byte ptr [r8 + rax*4 + 0x23b22]
    movzx esi, byte ptr [r8 + rax*4 + 0x23b23]
    lea rbx, [rcx*4]
    lea eax, [rsi + rcx]
    mov r8, rbx
    lea rcx, [rbp + 0x344]
    mov dword ptr [rbp + 0x340], eax
    call 0x14001b630
    lea rcx, [rip - 0x16950]
    shl rsi, 2
    movzx eax, word ptr [rcx + rdi*4 + 0x23b20]
    lea rdx, [rcx + 0x23210]
    lea rcx, [rbp + 0x344]
    mov r8, rsi
    add rcx, rbx
    lea rdx, [rdx + rax*4]
    call 0x14001af90
    mov r9d, dword ptr [rbp + 0x340]
    cmp r9d, r15d
    ja 0x1400169da
    mov eax, dword ptr [rbp + 0x344]
    test eax, eax
    jne 0x140016997
    xor r14d, r14d
    jmp 0x140016a8b
    cmp eax, r15d
    je 0x140016aa0
    test r14d, r14d
    je 0x140016aa0
    xor r8d, r8d
    mov r10, rax
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 - 0x5c]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 - 0x5c], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r14d
    jne 0x1400169b2
    jmp 0x140016a71
    cmp r14d, r15d
    ja 0x140016abb
    mov ebx, dword ptr [rbp - 0x5c]
    mov r8, r9
    shl r8, 2
    mov r14d, r9d
    mov dword ptr [rbp - 0x60], r9d
    test r8, r8
    je 0x140016a33
    mov eax, 0x1cc
    lea rcx, [rbp - 0x5c]
    cmp r8, rax
    ja 0x140016a15
    lea rdx, [rbp + 0x344]
    call 0x14001af90
    jmp 0x140016a2f
    mov r8, rax
    xor edx, edx
    call 0x14001b630
    call 0x14000f1b8
    mov dword ptr [rax], 0x22
    call 0x140009e6c
    mov r14d, dword ptr [rbp - 0x60]
    test ebx, ebx
    je 0x14001698f
    cmp ebx, r15d
    je 0x140016aa0
    test r14d, r14d
    je 0x140016aa0
    xor r8d, r8d
    mov r10, rbx
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 - 0x5c]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 - 0x5c], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r14d
    jne 0x140016a4e
    test r8d, r8d
    je 0x140016a9c
    cmp dword ptr [rbp - 0x60], 0x73
    jae 0x140016a91
    mov eax, dword ptr [rbp - 0x60]
    mov dword ptr [rbp + rax*4 - 0x5c], r8d
    mov r14d, dword ptr [rbp - 0x60]
    add r14d, r15d
    mov dword ptr [rbp - 0x60], r14d
    jmp 0x140016aa0
    xor r14d, r14d
    xor al, al
    mov dword ptr [rbp - 0x60], r14d
    jmp 0x140016aa3
    mov r14d, dword ptr [rbp - 0x60]
    mov al, r15b
    test al, al
    jne 0x140016c70
    mov rsi, qword ptr [rbp - 0x78]
    and dword ptr [rbp - 0x60], 0
    mov rbx, rsi
    jmp 0x140016d47
    cmp r9d, r14d
    lea rdx, [rbp - 0x5c]
    mov r11d, r14d
    lea rcx, [rbp + 0x344]
    cmovae rcx, rdx
    lea r8, [rbp + 0x344]
    cmovb r11d, r9d
    mov qword ptr [rbp - 0x70], rcx
    setb al
    mov dword ptr [rsp + 0x38], r11d
    lea rdx, [rbp - 0x5c]
    cmovae rdx, r8
    test al, al
    mov qword ptr [rsp + 0x58], rdx
    cmovne r9d, r14d
    xor r14d, r14d
    xor r10d, r10d
    mov dword ptr [rbp + 0x510], r14d
    test r11d, r11d
    je 0x140016c26
    mov esi, dword ptr [rcx + r10*4]
    test esi, esi
    jne 0x140016b39
    cmp r10d, r14d
    jne 0x140016c1a
    and dword ptr [rbp + r10*4 + 0x514], esi
    lea r14d, [r10 + 1]
    mov dword ptr [rbp + 0x510], r14d
    jmp 0x140016c1a
    xor ebx, ebx
    mov r8d, r10d
    test r9d, r9d
    je 0x140016c07
    mov r11d, r10d
    neg r11d
    cmp r8d, 0x73
    je 0x140016bb3
    mov edi, r8d
    mov ecx, r11d
    cmp r8d, r14d
    jne 0x140016b70
    and dword ptr [rbp + rdi*4 + 0x514], 0
    lea eax, [r8 + 1]
    mov dword ptr [rbp + 0x510], eax
    mov eax, r8d
    add r8d, r15d
    add eax, ecx
    mov edx, dword ptr [rdx + rax*4]
    mov eax, dword ptr [rbp + rdi*4 + 0x514]
    imul rdx, rsi
    add rdx, rax
    mov eax, ebx
    add rdx, rax
    lea eax, [r11 + r8]
    mov rbx, rdx
    mov dword ptr [rbp + rdi*4 + 0x514], edx
    mov r14d, dword ptr [rbp + 0x510]
    shr rbx, 0x20
    cmp eax, r9d
    je 0x140016bb3
    mov rdx, qword ptr [rsp + 0x58]
    jmp 0x140016b4d
    test ebx, ebx
    je 0x140016c02
    cmp r8d, 0x73
    je 0x140016aab
    lea eax, [r8 + 1]
    mov edx, r8d
    cmp r8d, r14d
    mov r8d, eax
    jne 0x140016bde
    and dword ptr [rbp + rdx*4 + 0x514], 0
    mov dword ptr [rbp + 0x510], eax
    mov ecx, dword ptr [rbp + rdx*4 + 0x514]
    mov eax, ebx
    add rcx, rax
    mov dword ptr [rbp + rdx*4 + 0x514], ecx
    mov r14d, dword ptr [rbp + 0x510]
    shr rcx, 0x20
    mov ebx, ecx
    test ecx, ecx
    jne 0x140016bb7
    mov r11d, dword ptr [rsp + 0x38]
    cmp r8d, 0x73
    je 0x140016aab
    mov rcx, qword ptr [rbp - 0x70]
    mov rdx, qword ptr [rsp + 0x58]
    add r10d, r15d
    cmp r10d, r11d
    jne 0x140016b10
    mov r8d, r14d
    shl r8, 2
    mov dword ptr [rbp - 0x60], r14d
    test r8, r8
    je 0x140016c70
    mov eax, 0x1cc
    lea rcx, [rbp - 0x5c]
    cmp r8, rax
    ja 0x140016c52
    lea rdx, [rbp + 0x514]
    call 0x14001af90
    jmp 0x140016c6c
    mov r8, rax
    xor edx, edx
    call 0x14001b630
    call 0x14000f1b8
    mov dword ptr [rax], 0x22
    call 0x140009e6c
    mov r14d, dword ptr [rbp - 0x60]
    mov edx, dword ptr [rsp + 0x34]
    lea r8, [rip - 0x16c7b]
    sub edx, dword ptr [rsp + 0x50]
    mov ecx, 0x26
    mov dword ptr [rsp + 0x34], edx
    jne 0x140016906
    mov ecx, dword ptr [rsp + 0x48]
    mov eax, dword ptr [rsp + 0x40]
    lea eax, [rax + rax*4]
    add eax, eax
    sub ecx, eax
    je 0x1400165f5
    lea eax, [rcx - 1]
    mov eax, dword ptr [r8 + rax*4 + 0x23bb8]
    test eax, eax
    je 0x140016aab
    cmp eax, r15d
    je 0x1400165f5
    test r14d, r14d
    je 0x1400165f5
    xor r8d, r8d
    mov r10d, eax
    xor r9d, r9d
    mov ecx, dword ptr [rbp + r9*4 - 0x5c]
    mov eax, r8d
    imul rcx, r10
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r9*4 - 0x5c], ecx
    shr r8, 0x20
    add r9d, r15d
    cmp r9d, r14d
    jne 0x140016cd1
    test r8d, r8d
    je 0x140016d1b
    cmp dword ptr [rbp - 0x60], 0x73
    jae 0x140016aab
    mov eax, dword ptr [rbp - 0x60]
    mov dword ptr [rbp + rax*4 - 0x5c], r8d
    mov r14d, dword ptr [rbp - 0x60]
    add r14d, r15d
    mov dword ptr [rbp - 0x60], r14d
    jmp 0x1400165f5
    mov r14d, dword ptr [rbp - 0x60]
    jmp 0x1400165f5
    and dword ptr [rbp + 0x340], 0
    lea r8, [rbp + 0x344]
    and dword ptr [rbp - 0x60], 0
    lea rcx, [rbp - 0x5c]
    xor r9d, r9d
    mov edx, 0x1cc
    call 0x140016fac
    lea rdx, [rbp + 0x170]
    lea rcx, [rbp - 0x60]
    call 0x140015880
    mov edi, dword ptr [rsp + 0x30]
    cmp eax, 0xa
    jne 0x140016df4
    add edi, r15d
    mov byte ptr [rsi], 0x31
    lea rbx, [rsi + 1]
    test r12d, r12d
    je 0x140016e05
    xor r8d, r8d
    xor r9d, r9d
    mov eax, dword ptr [rbp + r9*4 + 0x174]
    lea rcx, [rax + rax*4]
    mov eax, r8d
    lea r8, [rax + rcx*2]
    mov dword ptr [rbp + r9*4 + 0x174], r8d
    add r9d, r15d
    shr r8, 0x20
    cmp r9d, r12d
    jne 0x140016d7d
    test r8d, r8d
    je 0x140016e05
    cmp dword ptr [rbp + 0x170], 0x73
    jae 0x140016dc9
    mov eax, dword ptr [rbp + 0x170]
    mov dword ptr [rbp + rax*4 + 0x174], r8d
    add dword ptr [rbp + 0x170], r15d
    jmp 0x140016e05
    and dword ptr [rbp + 0x340], 0
    lea r8, [rbp + 0x344]
    and dword ptr [rbp + 0x170], 0
    lea rcx, [rbp + 0x174]
    xor r9d, r9d
    mov edx, 0x1cc
    call 0x140016fac
    jmp 0x140016e05
    test eax, eax
    jne 0x140016dfd
    sub edi, r15d
    jmp 0x140016e05
    add al, 0x30
    lea rbx, [rsi + 1]
    mov byte ptr [rsi], al
    mov rax, qword ptr [rbp - 0x68]
    mov dword ptr [rax + 4], edi
    mov eax, dword ptr [rsp + 0x60]
    test edi, edi
    js 0x140016e24
    cmp eax, 0x7fffffff
    ja 0x140016e24
    cmp dword ptr [rsp + 0x64], 0
    jne 0x140016e24
    add eax, edi
    mov edi, eax
    mov rax, qword ptr [rbp + 0x758]
    dec rax
    cmp rax, rdi
    cmovb rdi, rax
    add rdi, rsi
    xor sil, sil
    cmp rbx, rdi
    je 0x140016f38
    mov r14d, 9
    mov r9d, dword ptr [rbp - 0x60]
    test r9d, r9d
    je 0x140016f3c
    xor r8d, r8d
    xor r10d, r10d
    mov eax, dword ptr [rbp + r10*4 - 0x5c]
    imul rcx, rax, 0x3b9aca00
    mov eax, r8d
    add rcx, rax
    mov r8, rcx
    mov dword ptr [rbp + r10*4 - 0x5c], ecx
    shr r8, 0x20
    add r10d, r15d
    cmp r10d, r9d
    jne 0x140016e5f
    test r8d, r8d
    je 0x140016ec1
    cmp dword ptr [rbp - 0x60], 0x73
    jae 0x140016e9e
    mov eax, dword ptr [rbp - 0x60]
    mov dword ptr [rbp + rax*4 - 0x5c], r8d
    add dword ptr [rbp - 0x60], r15d
    jmp 0x140016ec1
    and dword ptr [rbp + 0x340], 0
    lea r8, [rbp + 0x344]
    and dword ptr [rbp - 0x60], 0
    lea rcx, [rbp - 0x5c]
    xor r9d, r9d
    mov edx, 0x1cc
    call 0x140016fac
    lea rdx, [rbp + 0x170]
    lea rcx, [rbp - 0x60]
    call 0x140015880
    mov r10d, edi
    mov r8, rax
    sub r10d, ebx
    mov r9d, 8
    mov eax, 0xcccccccd
    mul r8d
    shr edx, 3
    mov cl, dl
    shl cl, 2
    lea eax, [rcx + rdx]
    add al, al
    sub r8b, al
    lea ecx, [r8 + 0x30]
    mov r8d, edx
    cmp r10d, r9d
    ja 0x140016f0e
    cmp cl, 0x30
    je 0x140016f14
    mov sil, r15b
    jmp 0x140016f14
    mov eax, r9d
    mov byte ptr [rax + rbx], cl
    or eax, 0xffffffff
    add r9d, eax
    cmp r9d, eax
    jne 0x140016ee0
    mov rax, rdi
    sub rax, rbx
    cmp rax, r14
    cmovg rax, r14
    add rbx, rax
    cmp rbx, rdi
    jne 0x140016e4c
    mov r9d, dword ptr [rbp - 0x60]
    mov byte ptr [rbx], 0
    test r9d, r9d
    jne 0x140016f49
    test sil, sil
    je 0x140016f4c
    xor r15d, r15d
    mov r8d, dword ptr [rsp + 0x6c]
    lea rcx, [rsp + 0x64]
    mov edx, dword ptr [rsp + 0x68]
    call 0x140018bf8
    cmp byte ptr [rsp + 0x78], 0
    je 0x140016f70
    lea rcx, [rsp + 0x70]
    call 0x140018c7c
    mov eax, r15d
    mov rcx, qword ptr [rbp + 0x6e0]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0x7f0
    pop r15
    pop r14
    pop r12
    pop rdi
    pop rsi
    pop rbx
    pop rbp
    ret
    and qword ptr [rsp + 0x20], 0
    xor r9d, r9d
    xor r8d, r8d
    xor edx, edx
    xor ecx, ecx
    call 0x140009ebc
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov rbx, r9
    mov rsi, r8
    mov rdi, rdx
    test r9, r9
    jne 0x140016fcd
    xor eax, eax
    jmp 0x140017023
    test rcx, rcx
    jne 0x140016fe7
    call 0x14000f1b8
    mov ebx, 0x16
    mov dword ptr [rax], ebx
    call 0x140009e6c
    mov eax, ebx
    jmp 0x140017023
    test rsi, rsi
    je 0x140016ffe
    cmp rdi, rbx
    jb 0x140016ffe
    mov r8, rbx
    mov rdx, rsi
    call 0x14001af90
    jmp 0x140016fc9
    mov r8, rdi
    xor edx, edx
    call 0x14001b630
    test rsi, rsi
    je 0x140016fd2
    cmp rdi, rbx
    jae 0x14001701e
    call 0x14000f1b8
    mov ebx, 0x22
    jmp 0x140016fdc
    mov eax, 0x16
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    sub rsp, 0x28
    call 0x1400193a8
    mov ecx, eax
    add rsp, 0x28
    jmp 0x14001939c
    xor eax, eax
    mov r10, rcx
    test rcx, rcx
    jne 0x14001705b
    mov qword ptr [r8], rax
    mov eax, 1
    ret
    test edx, edx
    jne 0x140017063
    mov byte ptr [rcx], al
    jmp 0x140017052
    test edx, 0xffffff80
    jne 0x14001706f
    mov byte ptr [rcx], dl
    jmp 0x140017055
    test edx, 0xfffff800
    jne 0x140017081
    mov ecx, 1
    mov r9b, 0xc0
    jmp 0x1400170b8
    test edx, 0xffff0000
    jne 0x1400170a0
    lea eax, [rdx - 0xd800]
    cmp eax, 0x7ff
    jbe 0x1400170df
    mov ecx, 2
    mov r9b, 0xe0
    jmp 0x1400170b8
    test edx, 0xffe00000
    jne 0x1400170df
    cmp edx, 0x10ffff
    ja 0x1400170df
    mov ecx, 3
    mov r9b, 0xf0
    mov r11, rcx
    mov al, dl
    shr edx, 6
    and al, 0x3f
    or al, 0x80
    mov byte ptr [r11 + r10], al
    sub r11, 1
    jne 0x1400170bb
    or dl, r9b
    mov byte ptr [r10], dl
    inc rcx
    mov rdx, r8
    jmp 0x140019690
    mov rdx, r9
    mov rcx, r8
    jmp 0x140019698
    int3 
    int3 
    push rbx
    sub rsp, 0x40
    mov rax, qword ptr [rsp + 0x70]
    mov rbx, rcx
    lea rcx, [rsp + 0x30]
    mov qword ptr [rsp + 0x20], rax
    call 0x1400196ac
    cmp rax, 4
    ja 0x140017129
    mov edx, dword ptr [rsp + 0x30]
    mov ecx, 0xfffd
    cmp edx, 0xffff
    cmova edx, ecx
    test rbx, rbx
    je 0x140017129
    mov word ptr [rbx], dx
    add rsp, 0x40
    pop rbx
    ret
    int3 
    mov qword ptr [rsp + 0x10], rbx
    mov qword ptr [rsp + 0x18], rbp
    push rdi
    push r12
    push r13
    push r14
    push r15
    sub rsp, 0x30
    mov rdi, qword ptr [rdx]
    xor eax, eax
    mov r12, r9
    mov rbp, r8
    mov r15, rdx
    mov r14, rcx
    test rcx, rcx
    je 0x140017248
    mov rbx, rcx
    test r8, r8
    je 0x14001721d
    mov r13, qword ptr [rsp + 0x80]
    cmp byte ptr [rdi], al
    jne 0x140017181
    mov r8d, 1
    jmp 0x14001719d
    cmp byte ptr [rdi + 1], al
    jne 0x14001718e
    mov r8d, 2
    jmp 0x14001719d
    mov al, byte ptr [rdi + 2]
    neg al
    sbb r8, r8
    neg r8
    add r8, 3
    mov r9, r12
    mov qword ptr [rsp + 0x20], r13
    mov rdx, rdi
    lea rcx, [rsp + 0x60]
    call 0x1400196ac
    mov rdx, rax
    cmp rax, -1
    je 0x140017236
    xor eax, eax
    test rdx, rdx
    je 0x14001722e
    mov ecx, dword ptr [rsp + 0x60]
    cmp ecx, 0xffff
    jbe 0x140017209
    cmp rbp, 1
    jbe 0x14001721d
    add ecx, 0xffff0000
    mov r8d, 0xd800
    mov eax, ecx
    mov dword ptr [rsp + 0x60], ecx
    shr eax, 0xa
    dec rbp
    or ax, r8w
    mov word ptr [rbx], ax
    mov eax, 0x3ff
    and cx, ax
    add rbx, 2
    mov eax, 0xdc00
    or cx, ax
    xor eax, eax
    mov word ptr [rbx], cx
    add rdi, rdx
    add rbx, 2
    sub rbp, 1
    jne 0x140017175
    sub rbx, r14
    mov qword ptr [r15], rdi
    sar rbx, 1
    mov rax, rbx
    jmp 0x1400172ba
    mov rdi, rax
    mov word ptr [rbx], ax
    jmp 0x14001721d
    mov qword ptr [r15], rdi
    mov byte ptr [r13 + 0x30], 1
    mov dword ptr [r13 + 0x2c], 0x2a
    jmp 0x1400172b6
    mov rbp, qword ptr [rsp + 0x80]
    mov rbx, rax
    cmp byte ptr [rdi], al
    jne 0x14001725f
    mov r8d, 1
    jmp 0x14001727b
    cmp byte ptr [rdi + 1], al
    jne 0x14001726c
    mov r8d, 2
    jmp 0x14001727b
    mov al, byte ptr [rdi + 2]
    neg al
    sbb r8, r8
    neg r8
    add r8, 3
    mov r9, r12
    mov qword ptr [rsp + 0x20], rbp
    mov rdx, rdi
    xor ecx, ecx
    call 0x1400196ac
    cmp rax, -1
    je 0x1400172ab
    test rax, rax
    je 0x140017226
    cmp rax, 4
    jne 0x1400172a1
    inc rbx
    add rdi, rax
    inc rbx
    xor eax, eax
    jmp 0x140017253
    mov byte ptr [rbp + 0x30], 1
    mov dword ptr [rbp + 0x2c], 0x2a
    or rax, 0xffffffffffffffff
    mov rbx, qword ptr [rsp + 0x68]
    mov rbp, qword ptr [rsp + 0x70]
    add rsp, 0x30
    pop r15
    pop r14
    pop r13
    pop r12
    pop rdi
    ret
    int3 
    int3 
    mov rax, rsp
    mov qword ptr [rax + 0x10], rbx
    mov qword ptr [rax + 0x18], rbp
    mov qword ptr [rax + 0x20], rsi
    mov byte ptr [rax + 8], cl
    push rdi
    sub rsp, 0x20
    mov rcx, rdx
    mov rsi, r8
    mov rbx, rdx
    call 0x14001144c
    mov ecx, dword ptr [rbx + 0x14]
    nop 
    movsxd r10, eax
    test cl, 0xc0
    je 0x14001739a
    mov edi, dword ptr [rbx]
    xor ebp, ebp
    mov rdx, qword ptr [rbx + 8]
    sub edi, dword ptr [rbx + 8]
    lea rax, [rdx + 1]
    mov qword ptr [rbx], rax
    mov eax, dword ptr [rbx + 0x20]
    dec eax
    mov dword ptr [rbx + 0x10], eax
    test edi, edi
    jle 0x140017345
    mov r9, rsi
    mov r8d, edi
    mov ecx, r10d
    call 0x140015278
    mov ebp, eax
    mov rcx, qword ptr [rbx + 8]
    cmp ebp, edi
    mov al, byte ptr [rsp + 0x30]
    mov byte ptr [rcx], al
    jmp 0x1400173b3
    lea eax, [r10 + 2]
    cmp eax, 1
    jbe 0x140017370
    mov rcx, r10
    lea rdx, [rip + 0x13358]
    mov rax, r10
    sar rax, 6
    and ecx, 0x3f
    mov rax, qword ptr [rdx + rax*8]
    lea rcx, [rcx + rcx*8]
    lea rdx, [rax + rcx*8]
    jmp 0x140017377
    lea rdx, [rip + 0x11fa9]
    test byte ptr [rdx + 0x38], 0x20
    je 0x140017337
    xor edx, edx
    mov ecx, r10d
    lea r8d, [rdx + 2]
    call 0x140018b18
    cmp rax, -1
    jne 0x140017337
    lock or dword ptr [rbx + 0x14], 0x10
    mov al, 1
    jmp 0x1400173b6
    mov r9, rsi
    lea rdx, [rsp + 0x30]
    mov r8d, 1
    mov ecx, r10d
    call 0x140015278
    cmp eax, 1
    sete al
    mov rbx, qword ptr [rsp + 0x38]
    mov rbp, qword ptr [rsp + 0x40]
    mov rsi, qword ptr [rsp + 0x48]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    push rbx
    sub rsp, 0x20
    mov edx, dword ptr [rcx + 0x14]
    nop 
    shr edx, 3
    test dl, 1
    je 0x1400173e2
    mov al, 1
    jmp 0x140017442
    mov eax, dword ptr [rcx + 0x14]
    nop 
    test al, 0xc0
    je 0x1400173f3
    mov rax, qword ptr [rcx + 8]
    cmp qword ptr [rcx], rax
    je 0x140017440
    mov ecx, dword ptr [rcx + 0x18]
    nop 
    call 0x14001395c
    mov rbx, rax
    cmp rax, -1
    je 0x140017440
    mov r9d, 1
    lea r8, [rsp + 0x38]
    xor edx, edx
    mov rcx, rax
    call qword ptr [rip + 0x5e15]
    test eax, eax
    je 0x140017440
    lea rdx, [rsp + 0x30]
    mov rcx, rbx
    call qword ptr [rip + 0x5dfb]
    test eax, eax
    je 0x140017440
    mov rax, qword ptr [rsp + 0x30]
    cmp qword ptr [rsp + 0x38], rax
    sete al
    jmp 0x140017442
    xor al, al
    add rsp, 0x20
    pop rbx
    ret
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    mov esi, ecx
    mov rdi, r8
    mov rcx, rdx
    mov rbx, rdx
    call 0x14001144c
    mov eax, dword ptr [rbx + 0x14]
    nop 
    test al, 6
    jne 0x140017484
    mov dword ptr [rdi + 0x2c], 9
    mov byte ptr [rdi + 0x30], 1
    lock or dword ptr [rbx + 0x14], 0x10
    or eax, 0xffffffff
    jmp 0x140017503
    mov eax, dword ptr [rbx + 0x14]
    nop 
    shr eax, 0xc
    test al, 1
    je 0x140017498
    mov dword ptr [rdi + 0x2c], 0x22
    jmp 0x140017476
    mov eax, dword ptr [rbx + 0x14]
    nop 
    test al, 1
    je 0x1400174bc
    mov rcx, rbx
    call 0x1400173cc
    and dword ptr [rbx + 0x10], 0
    test al, al
    je 0x14001747a
    mov rax, qword ptr [rbx + 8]
    mov qword ptr [rbx], rax
    lock and dword ptr [rbx + 0x14], 0xfffffffe
    lock or dword ptr [rbx + 0x14], 2
    lock and dword ptr [rbx + 0x14], 0xfffffff7
    and dword ptr [rbx + 0x10], 0
    mov eax, dword ptr [rbx + 0x14]
    nop 
    test eax, 0x4c0
    jne 0x1400174e9
    mov rcx, rbx
    call 0x1400114a4
    test al, al
    jne 0x1400174e9
    mov rcx, rbx
    call 0x140019888
    mov r8, rdi
    mov rdx, rbx
    mov cl, sil
    call 0x1400172d4
    test al, al
    je 0x14001747a
    movzx eax, sil
    mov rbx, qword ptr [rsp + 0x30]
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    int3 
    sub rsp, 0x28
    cmp ecx, -2
    jne 0x14001752a
    call 0x14000f1b8
    mov dword ptr [rax], 9
    jmp 0x14001756c
    test ecx, ecx
    js 0x14001755c
    cmp ecx, dword ptr [rip + 0x1357c]
    jae 0x14001755c
    movsxd rcx, ecx
    lea rdx, [rip + 0x13170]
    mov rax, rcx
    and ecx, 0x3f
    shr rax, 6
    lea rcx, [rcx + rcx*8]
    mov rax, qword ptr [rdx + rax*8]
    movzx eax, byte ptr [rax + rcx*8 + 0x38]
    and eax, 0x40
    jmp 0x14001756e
    call 0x14000f1b8
    mov dword ptr [rax], 9
    call 0x140009e6c
    xor eax, eax
    add rsp, 0x28
    ret
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    int3 
    push r12
    push r13
    push r14
    sub rsp, 0x450
    mov rax, qword ptr [rip + 0x11a6c]
    xor rax, rsp
    mov qword ptr [rsp + 0x410], rax
    mov r12, r9
    mov r14, r8
    mov r13, rcx
    test rcx, rcx
    jne 0x1400175c7
    test rdx, rdx
    je 0x1400175c7
    call 0x14000f1b8
    mov dword ptr [rax], 0x16
    call 0x140009e6c
    jmp 0x140017970
    test r14, r14
    je 0x1400175b2
    test r12, r12
    je 0x1400175b2
    cmp rdx, 2
    jb 0x140017970
    mov qword ptr [rsp + 0x448], rbx
    mov qword ptr [rsp + 0x440], rbp
    mov qword ptr [rsp + 0x438], rsi
    mov qword ptr [rsp + 0x430], rdi
    mov qword ptr [rsp + 0x428], r15
    lea r15, [rdx - 1]
    imul r15, r14
    add r15, rcx
    xor ecx, ecx
    mov qword ptr [rsp + 0x20], rcx
    nop word ptr [rax + rax]
    xor edx, edx
    mov rax, r15
    sub rax, r13
    div r14
    lea rbx, [rax + 1]
    cmp rbx, 8
    ja 0x1400176d4
    cmp r15, r13
    jbe 0x1400176b3
    lea rsi, [r14 + r13]
    mov rbx, r13
    mov rdi, rsi
    cmp rsi, r15
    ja 0x140017677
    nop dword ptr [rax]
    movabs r10, 0x9375b7955ede8970
    mov rdx, rbx
    mov rcx, rdi
    mov rax, r12
    call qword ptr [rip + 0x5c0f]
    test eax, eax
    cmovg rbx, rdi
    add rdi, r14
    cmp rdi, r15
    jbe 0x140017650
    mov r8, r14
    mov rdx, r15
    cmp rbx, r15
    je 0x1400176a6
    sub rbx, r15
    nop word ptr [rax + rax]
    movzx eax, byte ptr [rdx]
    movzx ecx, byte ptr [rbx + rdx]
    mov byte ptr [rbx + rdx], al
    mov byte ptr [rdx], cl
    lea rdx, [rdx + 1]
    sub r8, 1
    jne 0x140017690
    sub r15, r14
    cmp r15, r13
    ja 0x140017642
    mov rcx, qword ptr [rsp + 0x20]
    sub rcx, 1
    mov qword ptr [rsp + 0x20], rcx
    js 0x140017948
    mov r13, qword ptr [rsp + rcx*8 + 0x30]
    mov r15, qword ptr [rsp + rcx*8 + 0x220]
    jmp 0x140017620
    shr rbx, 1
    imul rbx, r14
    lea rsi, [rbx + r13]
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, r13
    mov rax, r12
    call qword ptr [rip + 0x5b80]
    test eax, eax
    jle 0x14001772b
    mov r9, r14
    mov r8, rsi
    cmp r13, rsi
    je 0x14001772b
    nop word ptr [rax + rax]
    movzx eax, byte ptr [r8]
    mov rdx, r8
    sub rdx, rbx
    movzx ecx, byte ptr [rdx]
    mov byte ptr [rdx], al
    mov byte ptr [r8], cl
    inc r8
    sub r9, 1
    jne 0x140017710
    movabs r10, 0x9375b7955ede8970
    mov rdx, r15
    mov rcx, r13
    mov rax, r12
    call qword ptr [rip + 0x5b34]
    test eax, eax
    jle 0x140017778
    mov r8, r14
    mov rdx, r15
    cmp r13, r15
    je 0x140017778
    mov r9, r13
    sub r9, r15
    nop dword ptr [rax]
    movzx eax, byte ptr [rdx]
    movzx ecx, byte ptr [r9 + rdx]
    mov byte ptr [r9 + rdx], al
    mov byte ptr [rdx], cl
    lea rdx, [rdx + 1]
    sub r8, 1
    jne 0x140017760
    movabs r10, 0x9375b7955ede8970
    mov rdx, r15
    mov rcx, rsi
    mov rax, r12
    call qword ptr [rip + 0x5ae7]
    test eax, eax
    jle 0x1400177c8
    mov r8, r14
    mov rdx, r15
    cmp rsi, r15
    je 0x1400177c8
    mov r9, rsi
    sub r9, r15
    nop word ptr [rax + rax]
    movzx eax, byte ptr [rdx]
    movzx ecx, byte ptr [r9 + rdx]
    mov byte ptr [r9 + rdx], al
    mov byte ptr [rdx], cl
    lea rdx, [rdx + 1]
    sub r8, 1
    jne 0x1400177b0
    mov rbx, r13
    mov rdi, r15
    nop 
    cmp rsi, rbx
    jbe 0x140017800
    add rbx, r14
    cmp rbx, rsi
    jae 0x140017800
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rbx
    mov rax, r12
    call qword ptr [rip + 0x5a82]
    test eax, eax
    jle 0x1400177d5
    jmp 0x140017825
    nop dword ptr [rax]
    add rbx, r14
    cmp rbx, r15
    ja 0x140017825
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rbx
    mov rax, r12
    call qword ptr [rip + 0x5a57]
    test eax, eax
    jle 0x140017800
    mov rbp, rdi
    sub rdi, r14
    cmp rdi, rsi
    jbe 0x14001784d
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rdi
    mov rax, r12
    call qword ptr [rip + 0x5a2f]
    test eax, eax
    jg 0x140017825
    cmp rdi, rbx
    jb 0x14001788a
    mov r8, r14
    mov rdx, rdi
    je 0x140017878
    mov r9, rbx
    sub r9, rdi
    movzx eax, byte ptr [rdx]
    movzx ecx, byte ptr [r9 + rdx]
    mov byte ptr [r9 + rdx], al
    mov byte ptr [rdx], cl
    lea rdx, [rdx + 1]
    sub r8, 1
    jne 0x140017860
    cmp rsi, rdi
    mov rax, rbx
    cmovne rax, rsi
    mov rsi, rax
    jmp 0x1400177d0
    cmp rsi, rbp
    jae 0x1400178b7
    nop 
    sub rbp, r14
    cmp rbp, rsi
    jbe 0x1400178b7
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rbp
    mov rax, r12
    call qword ptr [rip + 0x59c7]
    test eax, eax
    je 0x140017890
    jmp 0x1400178dc
    sub rbp, r14
    cmp rbp, r13
    jbe 0x1400178dc
    movabs r10, 0x9375b7955ede8970
    mov rdx, rsi
    mov rcx, rbp
    mov rax, r12
    call qword ptr [rip + 0x59a0]
    test eax, eax
    je 0x1400178b7
    mov rcx, r15
    mov rax, rbp
    sub rcx, rbx
    sub rax, r13
    cmp rax, rcx
    mov rcx, qword ptr [rsp + 0x20]
    jl 0x14001791d
    cmp r13, rbp
    jae 0x14001790c
    mov qword ptr [rsp + rcx*8 + 0x30], r13
    mov qword ptr [rsp + rcx*8 + 0x220], rbp
    inc rcx
    mov qword ptr [rsp + 0x20], rcx
    cmp rbx, r15
    jae 0x1400176b3
    mov r13, rbx
    jmp 0x140017620
    cmp rbx, r15
    jae 0x140017937
    mov qword ptr [rsp + rcx*8 + 0x30], rbx
    mov qword ptr [rsp + rcx*8 + 0x220], r15
    inc rcx
    mov qword ptr [rsp + 0x20], rcx
    cmp r13, rbp
    jae 0x1400176b3
    mov r15, rbp
    jmp 0x140017620
    mov rdi, qword ptr [rsp + 0x430]
    mov rsi, qword ptr [rsp + 0x438]
    mov rbp, qword ptr [rsp + 0x440]
    mov rbx, qword ptr [rsp + 0x448]
    mov r15, qword ptr [rsp + 0x428]
    mov rcx, qword ptr [rsp + 0x410]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0x450
    pop r14
    pop r13
    pop r12
    ret
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    sub rsp, 0x20
    xor r10d, r10d
    mov rbx, r8
    mov r11, rdx
    test r9, r9
    jne 0x1400179de
    test rcx, rcx
    jne 0x1400179e3
    test rdx, rdx
    je 0x1400179cb
    call 0x14000f1b8
    mov ebx, 0x16
    mov dword ptr [rax], ebx
    call 0x140009e6c
    mov r10d, ebx
    mov rbx, qword ptr [rsp + 0x30]
    mov eax, r10d
    mov rsi, qword ptr [rsp + 0x38]
    add rsp, 0x20
    pop rdi
    ret
    test rcx, rcx
    je 0x1400179b7
    test r11, r11
    je 0x1400179b7
    test r9, r9
    jne 0x1400179f2
    mov byte ptr [rcx], r10b
    jmp 0x1400179cb
    test rbx, rbx
    jne 0x1400179fc
    mov byte ptr [rcx], r10b
    jmp 0x1400179b7
    sub rbx, rcx
    mov rdx, rcx
    mov r8, r11
    mov rdi, r9
    cmp r9, -1
    jne 0x140017a22
    mov al, byte ptr [rbx + rdx]
    mov byte ptr [rdx], al
    inc rdx
    test al, al
    je 0x1400179cb
    sub r8, 1
    jne 0x140017a0e
    jmp 0x140017a50
    mov al, byte ptr [rbx + rdx]
    mov rsi, rdi
    mov byte ptr [rdx], al
    inc rdx
    test al, al
    je 0x1400179cb
    sub r8, 1
    je 0x140017a3d
    sub rdi, 1
    jne 0x140017a22
    test r8, r8
    lea rax, [rsi - 1]
    cmove rax, rsi
    test rax, rax
    jne 0x140017a50
    mov byte ptr [rdx], r10b
    test r8, r8
    jne 0x1400179cb
    cmp r9, -1
    jne 0x140017a6d
    mov byte ptr [rcx + r11 - 1], r10b
    lea r10d, [r8 + 0x50]
    jmp 0x1400179cb
    mov byte ptr [rcx], r10b
    call 0x14000f1b8
    mov ebx, 0x22
    jmp 0x1400179c1
    int3 
    sub rsp, 0x58
    mov rax, qword ptr [rip + 0x11575]
    xor rax, rsp
    mov qword ptr [rsp + 0x40], rax
    xor eax, eax
    mov r9, rdx
    cmp rax, 0x20
    mov r8, rcx
    jae 0x140017b18
    mov byte ptr [rsp + rax + 0x20], 0
    inc rax
    cmp rax, 0x20
    jl 0x140017a9f
    mov al, byte ptr [rdx]
    jmp 0x140017ad2
    movzx edx, al
    shr rdx, 3
    movzx eax, al
    and eax, 7
    movzx ecx, byte ptr [rsp + rdx + 0x20]
    bts ecx, eax
    inc r9
    mov byte ptr [rsp + rdx + 0x20], cl
    mov al, byte ptr [r9]
    test al, al
    jne 0x140017ab3
    jmp 0x140017af7
    movzx eax, r9b
    mov edx, 1
    movzx ecx, r9b
    and ecx, 7
    shr rax, 3
    shl edx, cl
    test byte ptr [rsp + rax + 0x20], dl
    jne 0x140017b13
    inc r8
    mov r9b, byte ptr [r8]
    test r9b, r9b
    jne 0x140017ad8
    xor eax, eax
    mov rcx, qword ptr [rsp + 0x40]
    xor rcx, rsp
    call 0x1400033b0
    add rsp, 0x58
    ret
    mov rax, r8
    jmp 0x140017b01
    call 0x14000378c
    int3 
    int3 
    int3 
    mov qword ptr [rsp + 8], rbx
    mov qword ptr [rsp + 0x10], rsi
    push rdi
    mov r10, rdx
    lea rsi, [rip - 0x17b35]
    and r10d, 0xf
    mov rdi, rdx
    sub rdi, r10
    mov rbx, rdx
    mov r8, rcx
    xorps xmm3, xmm3
    lea rax, [r10 - 1]
    movdqu xmm1, xmmword ptr [rdi]
    cmp rax, 0xe
    ja 0x140017bc9
    mov eax, dword ptr [rsi + rax*4 + 0x17e2c]
    add rax, rsi
    jmp rax
    psrldq xmm1, 1
    jmp 0x140017bc9
    psrldq xmm1, 2
    jmp 0x140017bc9
    psrldq xmm1, 3
    jmp 0x140017bc9
    psrldq xmm1, 4
    jmp 0x140017bc9
    psrldq xmm1, 5
    jmp 0x140017bc9
    psrldq xmm1, 6
    jmp 0x140017bc9
    psrldq xmm1, 7
    jmp 0x140017bc9
    psrldq xmm1, 8
    jmp 0x140017bc9
    psrldq xmm1, 9
    jmp 0x140017bc9
    psrldq xmm1, 0xa
    jmp 0x140017bc9
    psrldq xmm1, 0xb
    jmp 0x140017bc9
    psrldq xmm1, 0xc
    jmp 0x140017bc9
    psrldq xmm1, 0xd
    jmp 0x140017bc9
    psrldq xmm1, 0xe
    jmp 0x140017bc9
    psrldq xmm1, 0xf
    xorps xmm0, xmm0
    mov r9d, 0xf
    pcmpeqb xmm0, xmm1
    pmovmskb eax, xmm0
    test eax, eax
    je 0x140017d15
    bsf edx, eax
    test r10, r10
    jne 0x140017bf0
    lea r11d, [r9 - 0xe]
    jmp 0x140017c04
    xor r11d, r11d
    mov eax, edx
    mov ecx, 0x10
    sub rcx, r10
    cmp rax, rcx
    setb r11b
    mov eax, r9d
    sub eax, edx
    cmp eax, r9d
    ja 0x140017ce1
    mov ecx, dword ptr [rsi + rax*4 + 0x17e68]
    add rcx, rsi
    jmp rcx
    pslldq xmm1, 1
    psrldq xmm1, 1
    jmp 0x140017ce1
    pslldq xmm1, 2
    psrldq xmm1, 2
    jmp 0x140017ce1
    pslldq xmm1, 3
    psrldq xmm1, 3
    jmp 0x140017ce1
    pslldq xmm1, 4
    psrldq xmm1, 4
    jmp 0x140017ce1
    pslldq xmm1, 5
    psrldq xmm1, 5
    jmp 0x140017ce1
    pslldq xmm1, 6
    psrldq xmm1, 6
    jmp 0x140017ce1
    pslldq xmm1, 7
    psrldq xmm1, 7
    jmp 0x140017ce1
    pslldq xmm1, 8
    psrldq xmm1, 8
    jmp 0x140017ce1
    pslldq xmm1, 9
    psrldq xmm1, 9
    jmp 0x140017ce1
    pslldq xmm1, 0xa
    psrldq xmm1, 0xa
    jmp 0x140017ce1
    pslldq xmm1, 0xb
    psrldq xmm1, 0xb
    jmp 0x140017ce1
    pslldq xmm1, 0xc
    psrldq xmm1, 0xc
    jmp 0x140017ce1
    pslldq xmm1, 0xd
    psrldq xmm1, 0xd
    jmp 0x140017ce1
    pslldq xmm1, 0xe
    psrldq xmm1, 0xe
    jmp 0x140017ce1
    pslldq xmm1, 0xf
    psrldq xmm1, 0xf
    jmp 0x140017ce1
    xorps xmm1, xmm1
    test r11d, r11d
    jne 0x140017dcc
    movdqu xmm2, xmmword ptr [rdi + 0x10]
    movdqa xmm0, xmm2
    pcmpeqb xmm0, xmm3
    pmovmskb eax, xmm0
    test eax, eax
    jne 0x140017d34
    mov rdx, rbx
    mov rcx, r8
    mov rbx, qword ptr [rsp + 0x10]
    mov rsi, qword ptr [rsp + 0x18]
    pop rdi
    jmp 0x140017a80
    test r10, r10
    jne 0x140017cea
    cmp byte ptr [rdi + 1], r10b
    je 0x140017dcc
    mov rbx, qword ptr [rsp + 0x10]
    mov rsi, qword ptr [rsp + 0x18]
    pop rdi
    jmp 0x140017a80
    bsf ecx, eax
    mov eax, ecx
    sub rax, r10
    add rax, 0x10
    cmp rax, 0x10
    ja 0x140017cff
    sub r9d, ecx
    cmp r9d, 0xf
    ja 0x140017dc8
    mov ecx, dword ptr [rsi + r9*4 + 0x17ea8]
    add rcx, rsi
    jmp rcx
    pslldq xmm2, 1
    jmp 0x140017dc8
    pslldq xmm2, 2
    jmp 0x140017dc8
    pslldq xmm2, 3
    jmp 0x140017dc8
    pslldq xmm2, 4
    jmp 0x140017dc8
    pslldq xmm2, 5
    jmp 0x140017dc8
    pslldq xmm2, 6
    jmp 0x140017dc8
    pslldq xmm2, 7
    jmp 0x140017dc8
    pslldq xmm2, 8
    jmp 0x140017dc8
    pslldq xmm2, 9
    jmp 0x140017dc8
    pslldq xmm2, 0xa
    jmp 0x140017dc8
    pslldq xmm2, 0xb
    jmp 0x140017dc8
    pslldq xmm2, 0xc
    jmp 0x140017dc8
    pslldq xmm2, 0xd
    jmp 0x140017dc8
    pslldq xmm2, 0xe
    jmp 0x140017dc8
    pslldq xmm2, 0xf
    jmp 0x140017dc8
    xorps xmm2, xmm2
    por xmm1, xmm2
    movzx eax, byte ptr [r8]
    test al, al
    je 0x140017e0c
    nop dword ptr [rax]
    nop dword ptr [rax + rax]
    movsx eax, al
    movd xmm0, eax
    punpcklbw xmm0, xmm0
    punpcklbw xmm0, xmm0
    pshufd xmm0, xmm0, 0
    pcmpeqb xmm0, xmm1
    pmovmskb eax, xmm0
    test eax, eax
    jne 0x140017e1a
    movzx eax, byte ptr [r8 + 1]
    inc r8
    test al, al
    jne 0x140017de0
    xor eax, eax
    mov rbx, qword ptr [rsp + 0x10]
    mov rsi, qword ptr [rsp + 0x18]
    pop rdi
    ret
    mov rbx, qword ptr [rsp + 0x10]
    mov rax, r8
    mov rsi, qword ptr [rsp + 0x18]
    pop rdi
    ret
    nop dword ptr [rax]
    ; Ensure program exit
    push 0
    call ExitProcess@4

end start